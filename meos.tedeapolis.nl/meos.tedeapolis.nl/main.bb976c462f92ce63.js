"use strict";
(self.webpackChunkmeos_app = self.webpackChunkmeos_app || []).push([
    [179], {
        259: () => {
            function Qe(t) {
                return "function" == typeof t
            }

            function mc(t) {
                const e = t(i => {
                    Error.call(i), i.stack = (new Error).stack
                });
                return e.prototype = Object.create(Error.prototype), e.prototype.constructor = e, e
            }
            const Su = mc(t => function(e) {
                t(this), this.message = e ? `${e.length} errors occurred during unsubscription:\n${e.map((i,r)=>`${r+1}) ${i.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = e
            });

            function Ma(t, n) {
                if (t) {
                    const e = t.indexOf(n);
                    0 <= e && t.splice(e, 1)
                }
            }
            class Re {
                constructor(n) {
                    this.initialTeardown = n, this.closed = !1, this._parentage = null, this._finalizers = null
                }
                unsubscribe() {
                    let n;
                    if (!this.closed) {
                        this.closed = !0;
                        const {
                            _parentage: e
                        } = this;
                        if (e)
                            if (this._parentage = null, Array.isArray(e))
                                for (const s of e) s.remove(this);
                            else e.remove(this);
                        const {
                            initialTeardown: i
                        } = this;
                        if (Qe(i)) try {
                            i()
                        } catch (s) {
                            n = s instanceof Su ? s.errors : [s]
                        }
                        const {
                            _finalizers: r
                        } = this;
                        if (r) {
                            this._finalizers = null;
                            for (const s of r) try {
                                pC(s)
                            } catch (o) {
                                n = n ? ? [], o instanceof Su ? n = [...n, ...o.errors] : n.push(o)
                            }
                        }
                        if (n) throw new Su(n)
                    }
                }
                add(n) {
                    var e;
                    if (n && n !== this)
                        if (this.closed) pC(n);
                        else {
                            if (n instanceof Re) {
                                if (n.closed || n._hasParent(this)) return;
                                n._addParent(this)
                            }(this._finalizers = null !== (e = this._finalizers) && void 0 !== e ? e : []).push(n)
                        }
                }
                _hasParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    return e === n || Array.isArray(e) && e.includes(n)
                }
                _addParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n
                }
                _removeParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    e === n ? this._parentage = null : Array.isArray(e) && Ma(e, n)
                }
                remove(n) {
                    const {
                        _finalizers: e
                    } = this;
                    e && Ma(e, n), n instanceof Re && n._removeParent(this)
                }
            }
            Re.EMPTY = (() => {
                const t = new Re;
                return t.closed = !0, t
            })();
            const hC = Re.EMPTY;

            function fC(t) {
                return t instanceof Re || t && "closed" in t && Qe(t.remove) && Qe(t.add) && Qe(t.unsubscribe)
            }

            function pC(t) {
                Qe(t) ? t() : t.unsubscribe()
            }
            const Ao = {
                    onUnhandledError: null,
                    onStoppedNotification: null,
                    Promise: void 0,
                    useDeprecatedSynchronousErrorHandling: !1,
                    useDeprecatedNextContext: !1
                },
                ku = {
                    setTimeout(t, n, ...e) {
                        const {
                            delegate: i
                        } = ku;
                        return i ? .setTimeout ? i.setTimeout(t, n, ...e) : setTimeout(t, n, ...e)
                    },
                    clearTimeout(t) {
                        const {
                            delegate: n
                        } = ku;
                        return (n ? .clearTimeout || clearTimeout)(t)
                    },
                    delegate: void 0
                };

            function mC(t) {
                ku.setTimeout(() => {
                    const {
                        onUnhandledError: n
                    } = Ao;
                    if (!n) throw t;
                    n(t)
                })
            }

            function gc() {}
            const hP = Sm("C", void 0, void 0);

            function Sm(t, n, e) {
                return {
                    kind: t,
                    value: n,
                    error: e
                }
            }
            let Eo = null;

            function Au(t) {
                if (Ao.useDeprecatedSynchronousErrorHandling) {
                    const n = !Eo;
                    if (n && (Eo = {
                            errorThrown: !1,
                            error: null
                        }), t(), n) {
                        const {
                            errorThrown: e,
                            error: i
                        } = Eo;
                        if (Eo = null, e) throw i
                    }
                } else t()
            }
            class km extends Re {
                constructor(n) {
                    super(), this.isStopped = !1, n ? (this.destination = n, fC(n) && n.add(this)) : this.destination = bP
                }
                static create(n, e, i) {
                    return new Eu(n, e, i)
                }
                next(n) {
                    this.isStopped ? Em(function pP(t) {
                        return Sm("N", t, void 0)
                    }(n), this) : this._next(n)
                }
                error(n) {
                    this.isStopped ? Em(function fP(t) {
                        return Sm("E", void 0, t)
                    }(n), this) : (this.isStopped = !0, this._error(n))
                }
                complete() {
                    this.isStopped ? Em(hP, this) : (this.isStopped = !0, this._complete())
                }
                unsubscribe() {
                    this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null)
                }
                _next(n) {
                    this.destination.next(n)
                }
                _error(n) {
                    try {
                        this.destination.error(n)
                    } finally {
                        this.unsubscribe()
                    }
                }
                _complete() {
                    try {
                        this.destination.complete()
                    } finally {
                        this.unsubscribe()
                    }
                }
            }
            const gP = Function.prototype.bind;

            function Am(t, n) {
                return gP.call(t, n)
            }
            class _P {
                constructor(n) {
                    this.partialObserver = n
                }
                next(n) {
                    const {
                        partialObserver: e
                    } = this;
                    if (e.next) try {
                        e.next(n)
                    } catch (i) {
                        Tu(i)
                    }
                }
                error(n) {
                    const {
                        partialObserver: e
                    } = this;
                    if (e.error) try {
                        e.error(n)
                    } catch (i) {
                        Tu(i)
                    } else Tu(n)
                }
                complete() {
                    const {
                        partialObserver: n
                    } = this;
                    if (n.complete) try {
                        n.complete()
                    } catch (e) {
                        Tu(e)
                    }
                }
            }
            class Eu extends km {
                constructor(n, e, i) {
                    let r;
                    if (super(), Qe(n) || !n) r = {
                        next: n ? ? void 0,
                        error: e ? ? void 0,
                        complete: i ? ? void 0
                    };
                    else {
                        let s;
                        this && Ao.useDeprecatedNextContext ? (s = Object.create(n), s.unsubscribe = () => this.unsubscribe(), r = {
                            next: n.next && Am(n.next, s),
                            error: n.error && Am(n.error, s),
                            complete: n.complete && Am(n.complete, s)
                        }) : r = n
                    }
                    this.destination = new _P(r)
                }
            }

            function Tu(t) {
                Ao.useDeprecatedSynchronousErrorHandling ? function mP(t) {
                    Ao.useDeprecatedSynchronousErrorHandling && Eo && (Eo.errorThrown = !0, Eo.error = t)
                }(t) : mC(t)
            }

            function Em(t, n) {
                const {
                    onStoppedNotification: e
                } = Ao;
                e && ku.setTimeout(() => e(t, n))
            }
            const bP = {
                    closed: !0,
                    next: gc,
                    error: function yP(t) {
                        throw t
                    },
                    complete: gc
                },
                Tm = "function" == typeof Symbol && Symbol.observable || "@@observable";

            function Ps(t) {
                return t
            }

            function gC(t) {
                return 0 === t.length ? Ps : 1 === t.length ? t[0] : function(e) {
                    return t.reduce((i, r) => r(i), e)
                }
            }
            let Ze = (() => {
                class t {
                    constructor(e) {
                        e && (this._subscribe = e)
                    }
                    lift(e) {
                        const i = new t;
                        return i.source = this, i.operator = e, i
                    }
                    subscribe(e, i, r) {
                        const s = function CP(t) {
                            return t && t instanceof km || function wP(t) {
                                return t && Qe(t.next) && Qe(t.error) && Qe(t.complete)
                            }(t) && fC(t)
                        }(e) ? e : new Eu(e, i, r);
                        return Au(() => {
                            const {
                                operator: o,
                                source: a
                            } = this;
                            s.add(o ? o.call(s, a) : a ? this._subscribe(s) : this._trySubscribe(s))
                        }), s
                    }
                    _trySubscribe(e) {
                        try {
                            return this._subscribe(e)
                        } catch (i) {
                            e.error(i)
                        }
                    }
                    forEach(e, i) {
                        return new(i = _C(i))((r, s) => {
                            const o = new Eu({
                                next: a => {
                                    try {
                                        e(a)
                                    } catch (l) {
                                        s(l), o.unsubscribe()
                                    }
                                },
                                error: s,
                                complete: r
                            });
                            this.subscribe(o)
                        })
                    }
                    _subscribe(e) {
                        var i;
                        return null === (i = this.source) || void 0 === i ? void 0 : i.subscribe(e)
                    }[Tm]() {
                        return this
                    }
                    pipe(...e) {
                        return gC(e)(this)
                    }
                    toPromise(e) {
                        return new(e = _C(e))((i, r) => {
                            let s;
                            this.subscribe(o => s = o, o => r(o), () => i(s))
                        })
                    }
                }
                return t.create = n => new t(n), t
            })();

            function _C(t) {
                var n;
                return null !== (n = t ? ? Ao.Promise) && void 0 !== n ? n : Promise
            }
            const xP = mc(t => function() {
                t(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed"
            });
            let H = (() => {
                class t extends Ze {
                    constructor() {
                        super(), this.closed = !1, this.currentObservers = null, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null
                    }
                    lift(e) {
                        const i = new yC(this, this);
                        return i.operator = e, i
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new xP
                    }
                    next(e) {
                        Au(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.currentObservers || (this.currentObservers = Array.from(this.observers));
                                for (const i of this.currentObservers) i.next(e)
                            }
                        })
                    }
                    error(e) {
                        Au(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.hasError = this.isStopped = !0, this.thrownError = e;
                                const {
                                    observers: i
                                } = this;
                                for (; i.length;) i.shift().error(e)
                            }
                        })
                    }
                    complete() {
                        Au(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.isStopped = !0;
                                const {
                                    observers: e
                                } = this;
                                for (; e.length;) e.shift().complete()
                            }
                        })
                    }
                    unsubscribe() {
                        this.isStopped = this.closed = !0, this.observers = this.currentObservers = null
                    }
                    get observed() {
                        var e;
                        return (null === (e = this.observers) || void 0 === e ? void 0 : e.length) > 0
                    }
                    _trySubscribe(e) {
                        return this._throwIfClosed(), super._trySubscribe(e)
                    }
                    _subscribe(e) {
                        return this._throwIfClosed(), this._checkFinalizedStatuses(e), this._innerSubscribe(e)
                    }
                    _innerSubscribe(e) {
                        const {
                            hasError: i,
                            isStopped: r,
                            observers: s
                        } = this;
                        return i || r ? hC : (this.currentObservers = null, s.push(e), new Re(() => {
                            this.currentObservers = null, Ma(s, e)
                        }))
                    }
                    _checkFinalizedStatuses(e) {
                        const {
                            hasError: i,
                            thrownError: r,
                            isStopped: s
                        } = this;
                        i ? e.error(r) : s && e.complete()
                    }
                    asObservable() {
                        const e = new Ze;
                        return e.source = this, e
                    }
                }
                return t.create = (n, e) => new yC(n, e), t
            })();
            class yC extends H {
                constructor(n, e) {
                    super(), this.destination = n, this.source = e
                }
                next(n) {
                    var e, i;
                    null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.next) || void 0 === i || i.call(e, n)
                }
                error(n) {
                    var e, i;
                    null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.error) || void 0 === i || i.call(e, n)
                }
                complete() {
                    var n, e;
                    null === (e = null === (n = this.destination) || void 0 === n ? void 0 : n.complete) || void 0 === e || e.call(n)
                }
                _subscribe(n) {
                    var e, i;
                    return null !== (i = null === (e = this.source) || void 0 === e ? void 0 : e.subscribe(n)) && void 0 !== i ? i : hC
                }
            }

            function bC(t) {
                return Qe(t ? .lift)
            }

            function Pt(t) {
                return n => {
                    if (bC(n)) return n.lift(function(e) {
                        try {
                            return t(e, this)
                        } catch (i) {
                            this.error(i)
                        }
                    });
                    throw new TypeError("Unable to lift unknown Observable type")
                }
            }

            function kt(t, n, e, i, r) {
                return new DP(t, n, e, i, r)
            }
            class DP extends km {
                constructor(n, e, i, r, s, o) {
                    super(n), this.onFinalize = s, this.shouldUnsubscribe = o, this._next = e ? function(a) {
                        try {
                            e(a)
                        } catch (l) {
                            n.error(l)
                        }
                    } : super._next, this._error = r ? function(a) {
                        try {
                            r(a)
                        } catch (l) {
                            n.error(l)
                        } finally {
                            this.unsubscribe()
                        }
                    } : super._error, this._complete = i ? function() {
                        try {
                            i()
                        } catch (a) {
                            n.error(a)
                        } finally {
                            this.unsubscribe()
                        }
                    } : super._complete
                }
                unsubscribe() {
                    var n;
                    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
                        const {
                            closed: e
                        } = this;
                        super.unsubscribe(), !e && (null === (n = this.onFinalize) || void 0 === n || n.call(this))
                    }
                }
            }

            function Z(t, n) {
                return Pt((e, i) => {
                    let r = 0;
                    e.subscribe(kt(i, s => {
                        i.next(t.call(n, s, r++))
                    }))
                })
            }

            function To(t) {
                return this instanceof To ? (this.v = t, this) : new To(t)
            }

            function kP(t, n, e) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var r, i = e.apply(t, n || []),
                    s = [];
                return r = {}, o("next"), o("throw"), o("return"), r[Symbol.asyncIterator] = function() {
                    return this
                }, r;

                function o(m) {
                    i[m] && (r[m] = function(_) {
                        return new Promise(function(v, D) {
                            s.push([m, _, v, D]) > 1 || a(m, _)
                        })
                    })
                }

                function a(m, _) {
                    try {
                        ! function l(m) {
                            m.value instanceof To ? Promise.resolve(m.value.v).then(c, d) : h(s[0][2], m)
                        }(i[m](_))
                    } catch (v) {
                        h(s[0][3], v)
                    }
                }

                function c(m) {
                    a("next", m)
                }

                function d(m) {
                    a("throw", m)
                }

                function h(m, _) {
                    m(_), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function AP(t) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var e, n = t[Symbol.asyncIterator];
                return n ? n.call(t) : (t = function CC(t) {
                    var n = "function" == typeof Symbol && Symbol.iterator,
                        e = n && t[n],
                        i = 0;
                    if (e) return e.call(t);
                    if (t && "number" == typeof t.length) return {
                        next: function() {
                            return t && i >= t.length && (t = void 0), {
                                value: t && t[i++],
                                done: !t
                            }
                        }
                    };
                    throw new TypeError(n ? "Object is not iterable." : "Symbol.iterator is not defined.")
                }(t), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function i(s) {
                    e[s] = t[s] && function(o) {
                        return new Promise(function(a, l) {
                            ! function r(s, o, a, l) {
                                Promise.resolve(l).then(function(c) {
                                    s({
                                        value: c,
                                        done: a
                                    })
                                }, o)
                            }(a, l, (o = t[s](o)).done, o.value)
                        })
                    }
                }
            }
            const Rm = t => t && "number" == typeof t.length && "function" != typeof t;

            function xC(t) {
                return Qe(t ? .then)
            }

            function DC(t) {
                return Qe(t[Tm])
            }

            function MC(t) {
                return Symbol.asyncIterator && Qe(t ? .[Symbol.asyncIterator])
            }

            function SC(t) {
                return new TypeError(`You provided ${null!==t&&"object"==typeof t?"an invalid object":`'${t}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)
            }
            const kC = function TP() {
                return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
            }();

            function AC(t) {
                return Qe(t ? .[kC])
            }

            function EC(t) {
                return kP(this, arguments, function*() {
                    const e = t.getReader();
                    try {
                        for (;;) {
                            const {
                                value: i,
                                done: r
                            } = yield To(e.read());
                            if (r) return yield To(void 0);
                            yield yield To(i)
                        }
                    } finally {
                        e.releaseLock()
                    }
                })
            }

            function TC(t) {
                return Qe(t ? .getReader)
            }

            function $n(t) {
                if (t instanceof Ze) return t;
                if (null != t) {
                    if (DC(t)) return function IP(t) {
                        return new Ze(n => {
                            const e = t[Tm]();
                            if (Qe(e.subscribe)) return e.subscribe(n);
                            throw new TypeError("Provided object does not correctly implement Symbol.observable")
                        })
                    }(t);
                    if (Rm(t)) return function RP(t) {
                        return new Ze(n => {
                            for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                            n.complete()
                        })
                    }(t);
                    if (xC(t)) return function FP(t) {
                        return new Ze(n => {
                            t.then(e => {
                                n.closed || (n.next(e), n.complete())
                            }, e => n.error(e)).then(null, mC)
                        })
                    }(t);
                    if (MC(t)) return IC(t);
                    if (AC(t)) return function OP(t) {
                        return new Ze(n => {
                            for (const e of t)
                                if (n.next(e), n.closed) return;
                            n.complete()
                        })
                    }(t);
                    if (TC(t)) return function PP(t) {
                        return IC(EC(t))
                    }(t)
                }
                throw SC(t)
            }

            function IC(t) {
                return new Ze(n => {
                    (function LP(t, n) {
                        var e, i, r, s;
                        return function MP(t, n, e, i) {
                            return new(e || (e = Promise))(function(s, o) {
                                function a(d) {
                                    try {
                                        c(i.next(d))
                                    } catch (h) {
                                        o(h)
                                    }
                                }

                                function l(d) {
                                    try {
                                        c(i.throw(d))
                                    } catch (h) {
                                        o(h)
                                    }
                                }

                                function c(d) {
                                    d.done ? s(d.value) : function r(s) {
                                        return s instanceof e ? s : new e(function(o) {
                                            o(s)
                                        })
                                    }(d.value).then(a, l)
                                }
                                c((i = i.apply(t, n || [])).next())
                            })
                        }(this, void 0, void 0, function*() {
                            try {
                                for (e = AP(t); !(i = yield e.next()).done;)
                                    if (n.next(i.value), n.closed) return
                            } catch (o) {
                                r = {
                                    error: o
                                }
                            } finally {
                                try {
                                    i && !i.done && (s = e.return) && (yield s.call(e))
                                } finally {
                                    if (r) throw r.error
                                }
                            }
                            n.complete()
                        })
                    })(t, n).catch(e => n.error(e))
                })
            }

            function Xr(t, n, e, i = 0, r = !1) {
                const s = n.schedule(function() {
                    e(), r ? t.add(this.schedule(null, i)) : this.unsubscribe()
                }, i);
                if (t.add(s), !r) return s
            }

            function _t(t, n, e = 1 / 0) {
                return Qe(n) ? _t((i, r) => Z((s, o) => n(i, s, r, o))($n(t(i, r))), e) : ("number" == typeof n && (e = n), Pt((i, r) => function NP(t, n, e, i, r, s, o, a) {
                    const l = [];
                    let c = 0,
                        d = 0,
                        h = !1;
                    const m = () => {
                            h && !l.length && !c && n.complete()
                        },
                        _ = D => c < i ? v(D) : l.push(D),
                        v = D => {
                            s && n.next(D), c++;
                            let k = !1;
                            $n(e(D, d++)).subscribe(kt(n, S => {
                                r ? .(S), s ? _(S) : n.next(S)
                            }, () => {
                                k = !0
                            }, void 0, () => {
                                if (k) try {
                                    for (c--; l.length && c < i;) {
                                        const S = l.shift();
                                        o ? Xr(n, o, () => v(S)) : v(S)
                                    }
                                    m()
                                } catch (S) {
                                    n.error(S)
                                }
                            }))
                        };
                    return t.subscribe(kt(n, _, () => {
                        h = !0, m()
                    })), () => {
                        a ? .()
                    }
                }(i, r, t, e)))
            }

            function Sa(t = 1 / 0) {
                return _t(Ps, t)
            }
            const Ni = new Ze(t => t.complete());

            function RC(t) {
                return t && Qe(t.schedule)
            }

            function Fm(t) {
                return t[t.length - 1]
            }

            function FC(t) {
                return Qe(Fm(t)) ? t.pop() : void 0
            }

            function _c(t) {
                return RC(Fm(t)) ? t.pop() : void 0
            }

            function Om(t, n = 0) {
                return Pt((e, i) => {
                    e.subscribe(kt(i, r => Xr(i, t, () => i.next(r), n), () => Xr(i, t, () => i.complete(), n), r => Xr(i, t, () => i.error(r), n)))
                })
            }

            function OC(t, n = 0) {
                return Pt((e, i) => {
                    i.add(t.schedule(() => e.subscribe(i), n))
                })
            }

            function PC(t, n) {
                if (!t) throw new Error("Iterable cannot be null");
                return new Ze(e => {
                    Xr(e, n, () => {
                        const i = t[Symbol.asyncIterator]();
                        Xr(e, n, () => {
                            i.next().then(r => {
                                r.done ? e.complete() : e.next(r.value)
                            })
                        }, 0, !0)
                    })
                })
            }

            function Rt(t, n) {
                return n ? function GP(t, n) {
                    if (null != t) {
                        if (DC(t)) return function HP(t, n) {
                            return $n(t).pipe(OC(n), Om(n))
                        }(t, n);
                        if (Rm(t)) return function jP(t, n) {
                            return new Ze(e => {
                                let i = 0;
                                return n.schedule(function() {
                                    i === t.length ? e.complete() : (e.next(t[i++]), e.closed || this.schedule())
                                })
                            })
                        }(t, n);
                        if (xC(t)) return function $P(t, n) {
                            return $n(t).pipe(OC(n), Om(n))
                        }(t, n);
                        if (MC(t)) return PC(t, n);
                        if (AC(t)) return function zP(t, n) {
                            return new Ze(e => {
                                let i;
                                return Xr(e, n, () => {
                                    i = t[kC](), Xr(e, n, () => {
                                        let r, s;
                                        try {
                                            ({
                                                value: r,
                                                done: s
                                            } = i.next())
                                        } catch (o) {
                                            return void e.error(o)
                                        }
                                        s ? e.complete() : e.next(r)
                                    }, 0, !0)
                                }), () => Qe(i ? .return) && i.return()
                            })
                        }(t, n);
                        if (TC(t)) return function UP(t, n) {
                            return PC(EC(t), n)
                        }(t, n)
                    }
                    throw SC(t)
                }(t, n) : $n(t)
            }

            function tt(...t) {
                const n = _c(t),
                    e = function VP(t, n) {
                        return "number" == typeof Fm(t) ? t.pop() : n
                    }(t, 1 / 0),
                    i = t;
                return i.length ? 1 === i.length ? $n(i[0]) : Sa(e)(Rt(i, n)) : Ni
            }

            function Fe(t) {
                return t <= 0 ? () => Ni : Pt((n, e) => {
                    let i = 0;
                    n.subscribe(kt(e, r => {
                        ++i <= t && (e.next(r), t <= i && e.complete())
                    }))
                })
            }

            function Pm(t = {}) {
                const {
                    connector: n = (() => new H),
                    resetOnError: e = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: r = !0
                } = t;
                return s => {
                    let o = null,
                        a = null,
                        l = null,
                        c = 0,
                        d = !1,
                        h = !1;
                    const m = () => {
                            a ? .unsubscribe(), a = null
                        },
                        _ = () => {
                            m(), o = l = null, d = h = !1
                        },
                        v = () => {
                            const D = o;
                            _(), D ? .unsubscribe()
                        };
                    return Pt((D, k) => {
                        c++, !h && !d && m();
                        const S = l = l ? ? n();
                        k.add(() => {
                            c--, 0 === c && !h && !d && (a = Lm(v, r))
                        }), S.subscribe(k), o || (o = new Eu({
                            next: L => S.next(L),
                            error: L => {
                                h = !0, m(), a = Lm(_, e, L), S.error(L)
                            },
                            complete: () => {
                                d = !0, m(), a = Lm(_, i), S.complete()
                            }
                        }), Rt(D).subscribe(o))
                    })(s)
                }
            }

            function Lm(t, n, ...e) {
                return !0 === n ? (t(), null) : !1 === n ? null : n(...e).pipe(Fe(1)).subscribe(() => t())
            }

            function xt(t) {
                for (let n in t)
                    if (t[n] === xt) return n;
                throw Error("Could not find renamed property on target object.")
            }

            function Nm(t, n) {
                for (const e in n) n.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = n[e])
            }

            function Dt(t) {
                if ("string" == typeof t) return t;
                if (Array.isArray(t)) return "[" + t.map(Dt).join(", ") + "]";
                if (null == t) return "" + t;
                if (t.overriddenName) return `${t.overriddenName}`;
                if (t.name) return `${t.name}`;
                const n = t.toString();
                if (null == n) return "" + n;
                const e = n.indexOf("\n");
                return -1 === e ? n : n.substring(0, e)
            }

            function Bm(t, n) {
                return null == t || "" === t ? null === n ? "" : n : null == n || "" === n ? t : t + " " + n
            }
            const WP = xt({
                __forward_ref__: xt
            });

            function Ve(t) {
                return t.__forward_ref__ = Ve, t.toString = function() {
                    return Dt(this())
                }, t
            }

            function Ee(t) {
                return Vm(t) ? t() : t
            }

            function Vm(t) {
                return "function" == typeof t && t.hasOwnProperty(WP) && t.__forward_ref__ === Ve
            }
            class B extends Error {
                constructor(n, e) {
                    super(function Iu(t, n) {
                        return `NG0${Math.abs(t)}${n?": "+n.trim():""}`
                    }(n, e)), this.code = n
                }
            }

            function Ne(t) {
                return "string" == typeof t ? t : null == t ? "" : String(t)
            }

            function Ru(t, n) {
                throw new B(-201, !1)
            }

            function pi(t, n) {
                null == t && function ft(t, n, e, i) {
                    throw new Error(`ASSERTION ERROR: ${t}` + (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`))
                }(n, t, null, "!=")
            }

            function I(t) {
                return {
                    token: t.token,
                    providedIn: t.providedIn || null,
                    factory: t.factory,
                    value: void 0
                }
            }
            const LC = I;

            function W(t) {
                return {
                    providers: t.providers || [],
                    imports: t.imports || []
                }
            }

            function Fu(t) {
                return NC(t, Ou) || NC(t, VC)
            }

            function NC(t, n) {
                return t.hasOwnProperty(n) ? t[n] : null
            }

            function BC(t) {
                return t && (t.hasOwnProperty(Hm) || t.hasOwnProperty(tL)) ? t[Hm] : null
            }
            const Ou = xt({\
                    u0275prov: xt
                }),
                Hm = xt({\
                    u0275inj: xt
                }),
                VC = xt({
                    ngInjectableDef: xt
                }),
                tL = xt({
                    ngInjectorDef: xt
                });
            var xe = (() => ((xe = xe || {})[xe.Default = 0] = "Default", xe[xe.Host = 1] = "Host", xe[xe.Self = 2] = "Self", xe[xe.SkipSelf = 4] = "SkipSelf", xe[xe.Optional = 8] = "Optional", xe))();
            let $m;

            function Bi(t) {
                const n = $m;
                return $m = t, n
            }

            function HC(t, n, e) {
                const i = Fu(t);
                return i && "root" == i.providedIn ? void 0 === i.value ? i.value = i.factory() : i.value : e & xe.Optional ? null : void 0 !== n ? n : void Ru(Dt(t))
            }

            function Ls(t) {
                return {
                    toString: t
                }.toString()
            }
            var rr = (() => ((rr = rr || {})[rr.OnPush = 0] = "OnPush", rr[rr.Default = 1] = "Default", rr))(),
                sr = (() => {
                    return (t = sr || (sr = {}))[t.Emulated = 0] = "Emulated", t[t.None = 2] = "None", t[t.ShadowDom = 3] = "ShadowDom", sr;
                    var t
                })();
            const At = (() => typeof globalThis < "u" && globalThis || typeof global < "u" && global || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self)(),
                ka = {},
                dt = [],
                Pu = xt({\
                    u0275cmp: xt
                }),
                jm = xt({\
                    u0275dir: xt
                }),
                zm = xt({\
                    u0275pipe: xt
                }),
                $C = xt({\
                    u0275mod: xt
                }),
                es = xt({\
                    u0275fac: xt
                }),
                yc = xt({
                    __NG_ELEMENT_ID__: xt
                });
            let iL = 0;

            function j(t) {
                return Ls(() => {
                    const e = !0 === t.standalone,
                        i = {},
                        r = {
                            type: t.type,
                            providersResolver: null,
                            decls: t.decls,
                            vars: t.vars,
                            factory: null,
                            template: t.template || null,
                            consts: t.consts || null,
                            ngContentSelectors: t.ngContentSelectors,
                            hostBindings: t.hostBindings || null,
                            hostVars: t.hostVars || 0,
                            hostAttrs: t.hostAttrs || null,
                            contentQueries: t.contentQueries || null,
                            declaredInputs: i,
                            inputs: null,
                            outputs: null,
                            exportAs: t.exportAs || null,
                            onPush: t.changeDetection === rr.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            standalone: e,
                            dependencies: e && t.dependencies || null,
                            getStandaloneInjector: null,
                            selectors: t.selectors || dt,
                            viewQuery: t.viewQuery || null,
                            features: t.features || null,
                            data: t.data || {},
                            encapsulation: t.encapsulation || sr.Emulated,
                            id: "c" + iL++,
                            styles: t.styles || dt,
                            _: null,
                            setInput: null,
                            schemas: t.schemas || null,
                            tView: null
                        },
                        s = t.dependencies,
                        o = t.features;
                    return r.inputs = UC(t.inputs, i), r.outputs = UC(t.outputs), o && o.forEach(a => a(r)), r.directiveDefs = s ? () => ("function" == typeof s ? s() : s).map(jC).filter(zC) : null, r.pipeDefs = s ? () => ("function" == typeof s ? s() : s).map(zn).filter(zC) : null, r
                })
            }

            function jC(t) {
                return yt(t) || jn(t)
            }

            function zC(t) {
                return null !== t
            }

            function Y(t) {
                return Ls(() => ({
                    type: t.type,
                    bootstrap: t.bootstrap || dt,
                    declarations: t.declarations || dt,
                    imports: t.imports || dt,
                    exports: t.exports || dt,
                    transitiveCompileScopes: null,
                    schemas: t.schemas || null,
                    id: t.id || null
                }))
            }

            function UC(t, n) {
                if (null == t) return ka;
                const e = {};
                for (const i in t)
                    if (t.hasOwnProperty(i)) {
                        let r = t[i],
                            s = r;
                        Array.isArray(r) && (s = r[1], r = r[0]), e[r] = i, n && (n[r] = s)
                    }
                return e
            }
            const M = j;

            function Cn(t) {
                return {
                    type: t.type,
                    name: t.name,
                    factory: null,
                    pure: !1 !== t.pure,
                    standalone: !0 === t.standalone,
                    onDestroy: t.type.prototype.ngOnDestroy || null
                }
            }

            function yt(t) {
                return t[Pu] || null
            }

            function jn(t) {
                return t[jm] || null
            }

            function zn(t) {
                return t[zm] || null
            }

            function mi(t, n) {
                const e = t[$C] || null;
                if (!e && !0 === n) throw new Error(`Type ${Dt(t)} does not have '\u0275mod' property.`);
                return e
            }

            function ti(t) {
                return Array.isArray(t) && "object" == typeof t[1]
            }

            function ar(t) {
                return Array.isArray(t) && !0 === t[1]
            }

            function Wm(t) {
                return 0 != (8 & t.flags)
            }

            function Vu(t) {
                return 2 == (2 & t.flags)
            }

            function Hu(t) {
                return 1 == (1 & t.flags)
            }

            function lr(t) {
                return null !== t.template
            }

            function cL(t) {
                return 0 != (256 & t[2])
            }

            function Po(t, n) {
                return t.hasOwnProperty(es) ? t[es] : null
            }
            class hL {
                constructor(n, e, i) {
                    this.previousValue = n, this.currentValue = e, this.firstChange = i
                }
                isFirstChange() {
                    return this.firstChange
                }
            }

            function ze() {
                return qC
            }

            function qC(t) {
                return t.type.prototype.ngOnChanges && (t.setInput = pL), fL
            }

            function fL() {
                const t = QC(this),
                    n = t ? .current;
                if (n) {
                    const e = t.previous;
                    if (e === ka) t.previous = n;
                    else
                        for (let i in n) e[i] = n[i];
                    t.current = null, this.ngOnChanges(n)
                }
            }

            function pL(t, n, e, i) {
                const r = QC(t) || function mL(t, n) {
                        return t[YC] = n
                    }(t, {
                        previous: ka,
                        current: null
                    }),
                    s = r.current || (r.current = {}),
                    o = r.previous,
                    a = this.declaredInputs[e],
                    l = o[a];
                s[a] = new hL(l && l.currentValue, n, o === ka), t[i] = n
            }
            ze.ngInherit = !0;
            const YC = "__ngSimpleChanges__";

            function QC(t) {
                return t[YC] || null
            }

            function Jt(t) {
                for (; Array.isArray(t);) t = t[0];
                return t
            }

            function $u(t, n) {
                return Jt(n[t])
            }

            function _i(t, n) {
                return Jt(n[t.index])
            }

            function Zm(t, n) {
                return t.data[n]
            }

            function Ra(t, n) {
                return t[n]
            }

            function yi(t, n) {
                const e = n[t];
                return ti(e) ? e : e[0]
            }

            function ju(t) {
                return 64 == (64 & t[2])
            }

            function Ns(t, n) {
                return null == n ? null : t[n]
            }

            function KC(t) {
                t[18] = 0
            }

            function Xm(t, n) {
                t[5] += n;
                let e = t,
                    i = t[3];
                for (; null !== i && (1 === n && 1 === e[5] || -1 === n && 0 === e[5]);) i[5] += n, e = i, i = i[3]
            }
            const Le = {
                lFrame: a0(null),
                bindingsEnabled: !0
            };

            function XC() {
                return Le.bindingsEnabled
            }

            function $() {
                return Le.lFrame.lView
            }

            function nt() {
                return Le.lFrame.tView
            }

            function ne(t) {
                return Le.lFrame.contextLView = t, t[8]
            }

            function ie(t) {
                return Le.lFrame.contextLView = null, t
            }

            function on() {
                let t = JC();
                for (; null !== t && 64 === t.type;) t = t.parent;
                return t
            }

            function JC() {
                return Le.lFrame.currentTNode
            }

            function Ar(t, n) {
                const e = Le.lFrame;
                e.currentTNode = t, e.isParent = n
            }

            function Jm() {
                return Le.lFrame.isParent
            }

            function eg() {
                Le.lFrame.isParent = !1
            }

            function Un() {
                const t = Le.lFrame;
                let n = t.bindingRootIndex;
                return -1 === n && (n = t.bindingRootIndex = t.tView.bindingStartIndex), n
            }

            function ts() {
                return Le.lFrame.bindingIndex
            }

            function Fa() {
                return Le.lFrame.bindingIndex++
            }

            function ns(t) {
                const n = Le.lFrame,
                    e = n.bindingIndex;
                return n.bindingIndex = n.bindingIndex + t, e
            }

            function TL(t, n) {
                const e = Le.lFrame;
                e.bindingIndex = e.bindingRootIndex = t, tg(n)
            }

            function tg(t) {
                Le.lFrame.currentDirectiveIndex = t
            }

            function ng(t) {
                const n = Le.lFrame.currentDirectiveIndex;
                return -1 === n ? null : t[n]
            }

            function r0() {
                return Le.lFrame.currentQueryIndex
            }

            function ig(t) {
                Le.lFrame.currentQueryIndex = t
            }

            function RL(t) {
                const n = t[1];
                return 2 === n.type ? n.declTNode : 1 === n.type ? t[6] : null
            }

            function s0(t, n, e) {
                if (e & xe.SkipSelf) {
                    let r = n,
                        s = t;
                    for (; !(r = r.parent, null !== r || e & xe.Host || (r = RL(s), null === r || (s = s[15], 10 & r.type))););
                    if (null === r) return !1;
                    n = r, t = s
                }
                const i = Le.lFrame = o0();
                return i.currentTNode = n, i.lView = t, !0
            }

            function rg(t) {
                const n = o0(),
                    e = t[1];
                Le.lFrame = n, n.currentTNode = e.firstChild, n.lView = t, n.tView = e, n.contextLView = t, n.bindingIndex = e.bindingStartIndex, n.inI18n = !1
            }

            function o0() {
                const t = Le.lFrame,
                    n = null === t ? null : t.child;
                return null === n ? a0(t) : n
            }

            function a0(t) {
                const n = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: t,
                    child: null,
                    inI18n: !1
                };
                return null !== t && (t.child = n), n
            }

            function l0() {
                const t = Le.lFrame;
                return Le.lFrame = t.parent, t.currentTNode = null, t.lView = null, t
            }
            const c0 = l0;

            function sg() {
                const t = l0();
                t.isParent = !0, t.tView = null, t.selectedIndex = -1, t.contextLView = null, t.elementDepthCount = 0, t.currentDirectiveIndex = -1, t.currentNamespace = null, t.bindingRootIndex = -1, t.bindingIndex = -1, t.currentQueryIndex = 0
            }

            function Gn() {
                return Le.lFrame.selectedIndex
            }

            function Bs(t) {
                Le.lFrame.selectedIndex = t
            }

            function Vt() {
                const t = Le.lFrame;
                return Zm(t.tView, t.selectedIndex)
            }

            function ni() {
                Le.lFrame.currentNamespace = "svg"
            }

            function Oa() {
                ! function LL() {
                    Le.lFrame.currentNamespace = null
                }()
            }

            function zu(t, n) {
                for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
                    const s = t.data[e].type.prototype,
                        {
                            ngAfterContentInit: o,
                            ngAfterContentChecked: a,
                            ngAfterViewInit: l,
                            ngAfterViewChecked: c,
                            ngOnDestroy: d
                        } = s;
                    o && (t.contentHooks || (t.contentHooks = [])).push(-e, o), a && ((t.contentHooks || (t.contentHooks = [])).push(e, a), (t.contentCheckHooks || (t.contentCheckHooks = [])).push(e, a)), l && (t.viewHooks || (t.viewHooks = [])).push(-e, l), c && ((t.viewHooks || (t.viewHooks = [])).push(e, c), (t.viewCheckHooks || (t.viewCheckHooks = [])).push(e, c)), null != d && (t.destroyHooks || (t.destroyHooks = [])).push(e, d)
                }
            }

            function Uu(t, n, e) {
                d0(t, n, 3, e)
            }

            function Gu(t, n, e, i) {
                (3 & t[2]) === e && d0(t, n, e, i)
            }

            function og(t, n) {
                let e = t[2];
                (3 & e) === n && (e &= 2047, e += 1, t[2] = e)
            }

            function d0(t, n, e, i) {
                const s = i ? ? -1,
                    o = n.length - 1;
                let a = 0;
                for (let l = void 0 !== i ? 65535 & t[18] : 0; l < o; l++)
                    if ("number" == typeof n[l + 1]) {
                        if (a = n[l], null != i && a >= i) break
                    } else n[l] < 0 && (t[18] += 65536), (a < s || -1 == s) && (VL(t, e, n, l), t[18] = (4294901760 & t[18]) + l + 2), l++
            }

            function VL(t, n, e, i) {
                const r = e[i] < 0,
                    s = e[i + 1],
                    a = t[r ? -e[i] : e[i]];
                if (r) {
                    if (t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === n) {
                        t[2] += 2048;
                        try {
                            s.call(a)
                        } finally {}
                    }
                } else try {
                    s.call(a)
                } finally {}
            }
            class Dc {
                constructor(n, e, i) {
                    this.factory = n, this.resolving = !1, this.canSeeViewProviders = e, this.injectImpl = i
                }
            }

            function Wu(t, n, e) {
                let i = 0;
                for (; i < e.length;) {
                    const r = e[i];
                    if ("number" == typeof r) {
                        if (0 !== r) break;
                        i++;
                        const s = e[i++],
                            o = e[i++],
                            a = e[i++];
                        t.setAttribute(n, o, a, s)
                    } else {
                        const s = r,
                            o = e[++i];
                        h0(s) ? t.setProperty(n, s, o) : t.setAttribute(n, s, o), i++
                    }
                }
                return i
            }

            function u0(t) {
                return 3 === t || 4 === t || 6 === t
            }

            function h0(t) {
                return 64 === t.charCodeAt(0)
            }

            function qu(t, n) {
                if (null !== n && 0 !== n.length)
                    if (null === t || 0 === t.length) t = n.slice();
                    else {
                        let e = -1;
                        for (let i = 0; i < n.length; i++) {
                            const r = n[i];
                            "number" == typeof r ? e = r : 0 === e || f0(t, e, r, null, -1 === e || 2 === e ? n[++i] : null)
                        }
                    }
                return t
            }

            function f0(t, n, e, i, r) {
                let s = 0,
                    o = t.length;
                if (-1 === n) o = -1;
                else
                    for (; s < t.length;) {
                        const a = t[s++];
                        if ("number" == typeof a) {
                            if (a === n) {
                                o = -1;
                                break
                            }
                            if (a > n) {
                                o = s - 1;
                                break
                            }
                        }
                    }
                for (; s < t.length;) {
                    const a = t[s];
                    if ("number" == typeof a) break;
                    if (a === e) {
                        if (null === i) return void(null !== r && (t[s + 1] = r));
                        if (i === t[s + 1]) return void(t[s + 2] = r)
                    }
                    s++, null !== i && s++, null !== r && s++
                } - 1 !== o && (t.splice(o, 0, n), s = o + 1), t.splice(s++, 0, e), null !== i && t.splice(s++, 0, i), null !== r && t.splice(s++, 0, r)
            }

            function p0(t) {
                return -1 !== t
            }

            function Pa(t) {
                return 32767 & t
            }

            function La(t, n) {
                let e = function UL(t) {
                        return t >> 16
                    }(t),
                    i = n;
                for (; e > 0;) i = i[15], e--;
                return i
            }
            let lg = !0;

            function Yu(t) {
                const n = lg;
                return lg = t, n
            }
            let GL = 0;
            const Er = {};

            function Sc(t, n) {
                const e = dg(t, n);
                if (-1 !== e) return e;
                const i = n[1];
                i.firstCreatePass && (t.injectorIndex = n.length, cg(i.data, t), cg(n, null), cg(i.blueprint, null));
                const r = Qu(t, n),
                    s = t.injectorIndex;
                if (p0(r)) {
                    const o = Pa(r),
                        a = La(r, n),
                        l = a[1].data;
                    for (let c = 0; c < 8; c++) n[s + c] = a[o + c] | l[o + c]
                }
                return n[s + 8] = r, s
            }

            function cg(t, n) {
                t.push(0, 0, 0, 0, 0, 0, 0, 0, n)
            }

            function dg(t, n) {
                return -1 === t.injectorIndex || t.parent && t.parent.injectorIndex === t.injectorIndex || null === n[t.injectorIndex + 8] ? -1 : t.injectorIndex
            }

            function Qu(t, n) {
                if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
                let e = 0,
                    i = null,
                    r = n;
                for (; null !== r;) {
                    if (i = x0(r), null === i) return -1;
                    if (e++, r = r[15], -1 !== i.injectorIndex) return i.injectorIndex | e << 16
                }
                return -1
            }

            function Ku(t, n, e) {
                ! function WL(t, n, e) {
                    let i;
                    "string" == typeof e ? i = e.charCodeAt(0) || 0 : e.hasOwnProperty(yc) && (i = e[yc]), null == i && (i = e[yc] = GL++);
                    const r = 255 & i;
                    n.data[t + (r >> 5)] |= 1 << r
                }(t, n, e)
            }

            function _0(t, n, e) {
                if (e & xe.Optional || void 0 !== t) return t;
                Ru()
            }

            function y0(t, n, e, i) {
                if (e & xe.Optional && void 0 === i && (i = null), 0 == (e & (xe.Self | xe.Host))) {
                    const r = t[9],
                        s = Bi(void 0);
                    try {
                        return r ? r.get(n, i, e & xe.Optional) : HC(n, i, e & xe.Optional)
                    } finally {
                        Bi(s)
                    }
                }
                return _0(i, 0, e)
            }

            function b0(t, n, e, i = xe.Default, r) {
                if (null !== t) {
                    if (1024 & n[2]) {
                        const o = function ZL(t, n, e, i, r) {
                            let s = t,
                                o = n;
                            for (; null !== s && null !== o && 1024 & o[2] && !(256 & o[2]);) {
                                const a = v0(s, o, e, i | xe.Self, Er);
                                if (a !== Er) return a;
                                let l = s.parent;
                                if (!l) {
                                    const c = o[21];
                                    if (c) {
                                        const d = c.get(e, Er, i);
                                        if (d !== Er) return d
                                    }
                                    l = x0(o), o = o[15]
                                }
                                s = l
                            }
                            return r
                        }(t, n, e, i, Er);
                        if (o !== Er) return o
                    }
                    const s = v0(t, n, e, i, Er);
                    if (s !== Er) return s
                }
                return y0(n, e, i, r)
            }

            function v0(t, n, e, i, r) {
                const s = function QL(t) {
                    if ("string" == typeof t) return t.charCodeAt(0) || 0;
                    const n = t.hasOwnProperty(yc) ? t[yc] : void 0;
                    return "number" == typeof n ? n >= 0 ? 255 & n : KL : n
                }(e);
                if ("function" == typeof s) {
                    if (!s0(n, t, i)) return i & xe.Host ? _0(r, 0, i) : y0(n, e, i, r);
                    try {
                        const o = s(i);
                        if (null != o || i & xe.Optional) return o;
                        Ru()
                    } finally {
                        c0()
                    }
                } else if ("number" == typeof s) {
                    let o = null,
                        a = dg(t, n),
                        l = -1,
                        c = i & xe.Host ? n[16][6] : null;
                    for ((-1 === a || i & xe.SkipSelf) && (l = -1 === a ? Qu(t, n) : n[a + 8], -1 !== l && C0(i, !1) ? (o = n[1], a = Pa(l), n = La(l, n)) : a = -1); - 1 !== a;) {
                        const d = n[1];
                        if (w0(s, a, d.data)) {
                            const h = YL(a, n, e, o, i, c);
                            if (h !== Er) return h
                        }
                        l = n[a + 8], -1 !== l && C0(i, n[1].data[a + 8] === c) && w0(s, a, n) ? (o = d, a = Pa(l), n = La(l, n)) : a = -1
                    }
                }
                return r
            }

            function YL(t, n, e, i, r, s) {
                const o = n[1],
                    a = o.data[t + 8],
                    d = Zu(a, o, e, null == i ? Vu(a) && lg : i != o && 0 != (3 & a.type), r & xe.Host && s === a);
                return null !== d ? kc(n, o, d, a) : Er
            }

            function Zu(t, n, e, i, r) {
                const s = t.providerIndexes,
                    o = n.data,
                    a = 1048575 & s,
                    l = t.directiveStart,
                    d = s >> 20,
                    m = r ? a + d : t.directiveEnd;
                for (let _ = i ? a : a + d; _ < m; _++) {
                    const v = o[_];
                    if (_ < l && e === v || _ >= l && v.type === e) return _
                }
                if (r) {
                    const _ = o[l];
                    if (_ && lr(_) && _.type === e) return l
                }
                return null
            }

            function kc(t, n, e, i) {
                let r = t[e];
                const s = n.data;
                if (function HL(t) {
                        return t instanceof Dc
                    }(r)) {
                    const o = r;
                    o.resolving && function qP(t, n) {
                        const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
                        throw new B(-200, `Circular dependency in DI detected for ${t}${e}`)
                    }(function ct(t) {
                        return "function" == typeof t ? t.name || t.toString() : "object" == typeof t && null != t && "function" == typeof t.type ? t.type.name || t.type.toString() : Ne(t)
                    }(s[e]));
                    const a = Yu(o.canSeeViewProviders);
                    o.resolving = !0;
                    const l = o.injectImpl ? Bi(o.injectImpl) : null;
                    s0(t, i, xe.Default);
                    try {
                        r = t[e] = o.factory(void 0, s, t, i), n.firstCreatePass && e >= i.directiveStart && function BL(t, n, e) {
                            const {
                                ngOnChanges: i,
                                ngOnInit: r,
                                ngDoCheck: s
                            } = n.type.prototype;
                            if (i) {
                                const o = qC(n);
                                (e.preOrderHooks || (e.preOrderHooks = [])).push(t, o), (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(t, o)
                            }
                            r && (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - t, r), s && ((e.preOrderHooks || (e.preOrderHooks = [])).push(t, s), (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(t, s))
                        }(e, s[e], n)
                    } finally {
                        null !== l && Bi(l), Yu(a), o.resolving = !1, c0()
                    }
                }
                return r
            }

            function w0(t, n, e) {
                return !!(e[n + (t >> 5)] & 1 << t)
            }

            function C0(t, n) {
                return !(t & xe.Self || t & xe.Host && n)
            }
            class Na {
                constructor(n, e) {
                    this._tNode = n, this._lView = e
                }
                get(n, e, i) {
                    return b0(this._tNode, this._lView, n, i, e)
                }
            }

            function KL() {
                return new Na(on(), $())
            }

            function U(t) {
                return Ls(() => {
                    const n = t.prototype.constructor,
                        e = n[es] || ug(n),
                        i = Object.prototype;
                    let r = Object.getPrototypeOf(t.prototype).constructor;
                    for (; r && r !== i;) {
                        const s = r[es] || ug(r);
                        if (s && s !== e) return s;
                        r = Object.getPrototypeOf(r)
                    }
                    return s => new s
                })
            }

            function ug(t) {
                return Vm(t) ? () => {
                    const n = ug(Ee(t));
                    return n && n()
                } : Po(t)
            }

            function x0(t) {
                const n = t[1],
                    e = n.type;
                return 2 === e ? n.declTNode : 1 === e ? t[6] : null
            }

            function Qt(t) {
                return function qL(t, n) {
                    if ("class" === n) return t.classes;
                    if ("style" === n) return t.styles;
                    const e = t.attrs;
                    if (e) {
                        const i = e.length;
                        let r = 0;
                        for (; r < i;) {
                            const s = e[r];
                            if (u0(s)) break;
                            if (0 === s) r += 2;
                            else if ("number" == typeof s)
                                for (r++; r < i && "string" == typeof e[r];) r++;
                            else {
                                if (s === n) return e[r + 1];
                                r += 2
                            }
                        }
                    }
                    return null
                }(on(), t)
            }
            const Va = "__parameters__";

            function $a(t, n, e) {
                return Ls(() => {
                    const i = function hg(t) {
                        return function(...e) {
                            if (t) {
                                const i = t(...e);
                                for (const r in i) this[r] = i[r]
                            }
                        }
                    }(n);

                    function r(...s) {
                        if (this instanceof r) return i.apply(this, s), this;
                        const o = new r(...s);
                        return a.annotation = o, a;

                        function a(l, c, d) {
                            const h = l.hasOwnProperty(Va) ? l[Va] : Object.defineProperty(l, Va, {
                                value: []
                            })[Va];
                            for (; h.length <= d;) h.push(null);
                            return (h[d] = h[d] || []).push(o), l
                        }
                    }
                    return e && (r.prototype = Object.create(e.prototype)), r.prototype.ngMetadataName = t, r.annotationCls = r, r
                })
            }
            class R {
                constructor(n, e) {
                    this._desc = n, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof e ? this.__NG_ELEMENT_ID__ = e : void 0 !== e && (this.\u0275prov = I({
                        token: this,
                        providedIn: e.providedIn || "root",
                        factory: e.factory
                    }))
                }
                get multi() {
                    return this
                }
                toString() {
                    return `InjectionToken ${this._desc}`
                }
            }
            const M0 = new R("AnalyzeForEntryComponents"),
                Xu = Function;

            function bi(t, n) {
                void 0 === n && (n = t);
                for (let e = 0; e < t.length; e++) {
                    let i = t[e];
                    Array.isArray(i) ? (n === t && (n = t.slice(0, e)), bi(i, n)) : n !== t && n.push(i)
                }
                return n
            }

            function is(t, n) {
                t.forEach(e => Array.isArray(e) ? is(e, n) : n(e))
            }

            function S0(t, n, e) {
                n >= t.length ? t.push(e) : t.splice(n, 0, e)
            }

            function Ju(t, n) {
                return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0]
            }

            function Tc(t, n) {
                const e = [];
                for (let i = 0; i < t; i++) e.push(n);
                return e
            }

            function vi(t, n, e) {
                let i = ja(t, n);
                return i >= 0 ? t[1 | i] = e : (i = ~i, function t2(t, n, e, i) {
                    let r = t.length;
                    if (r == n) t.push(e, i);
                    else if (1 === r) t.push(i, t[0]), t[0] = e;
                    else {
                        for (r--, t.push(t[r - 1], t[r]); r > n;) t[r] = t[r - 2], r--;
                        t[n] = e, t[n + 1] = i
                    }
                }(t, i, n, e)), i
            }

            function fg(t, n) {
                const e = ja(t, n);
                if (e >= 0) return t[1 | e]
            }

            function ja(t, n) {
                return function E0(t, n, e) {
                    let i = 0,
                        r = t.length >> e;
                    for (; r !== i;) {
                        const s = i + (r - i >> 1),
                            o = t[s << e];
                        if (n === o) return s << e;
                        o > n ? r = s : i = s + 1
                    }
                    return ~(r << e)
                }(t, n, 1)
            }
            const Ic = {},
                mg = "__NG_DI_FLAG__",
                th = "ngTempTokenPath",
                d2 = /\n/gm,
                T0 = "__source";
            let Rc;

            function za(t) {
                const n = Rc;
                return Rc = t, n
            }

            function h2(t, n = xe.Default) {
                if (void 0 === Rc) throw new B(-203, !1);
                return null === Rc ? HC(t, void 0, n) : Rc.get(t, n & xe.Optional ? null : void 0, n)
            }

            function C(t, n = xe.Default) {
                return (function nL() {
                    return $m
                }() || h2)(Ee(t), n)
            }

            function st(t, n = xe.Default) {
                return "number" != typeof n && (n = 0 | (n.optional && 8) | (n.host && 1) | (n.self && 2) | (n.skipSelf && 4)), C(t, n)
            }

            function gg(t) {
                const n = [];
                for (let e = 0; e < t.length; e++) {
                    const i = Ee(t[e]);
                    if (Array.isArray(i)) {
                        if (0 === i.length) throw new B(900, !1);
                        let r, s = xe.Default;
                        for (let o = 0; o < i.length; o++) {
                            const a = i[o],
                                l = f2(a);
                            "number" == typeof l ? -1 === l ? r = a.token : s |= l : r = a
                        }
                        n.push(C(r, s))
                    } else n.push(C(i))
                }
                return n
            }

            function Fc(t, n) {
                return t[mg] = n, t.prototype[mg] = n, t
            }

            function f2(t) {
                return t[mg]
            }
            const ii = Fc($a("Optional"), 8),
                $i = Fc($a("SkipSelf"), 4);
            var ri = (() => ((ri = ri || {})[ri.Important = 1] = "Important", ri[ri.DashCase = 2] = "DashCase", ri))();
            const wg = new Map;
            let I2 = 0;
            const xg = "__ngContext__";

            function In(t, n) {
                ti(n) ? (t[xg] = n[20], function F2(t) {
                    wg.set(t[20], t)
                }(n)) : t[xg] = n
            }

            function Mg(t, n) {
                return undefined(t, n)
            }

            function Nc(t) {
                const n = t[3];
                return ar(n) ? n[3] : n
            }

            function Sg(t) {
                return Z0(t[13])
            }

            function kg(t) {
                return Z0(t[4])
            }

            function Z0(t) {
                for (; null !== t && !ar(t);) t = t[4];
                return t
            }

            function Ga(t, n, e, i, r) {
                if (null != i) {
                    let s, o = !1;
                    ar(i) ? s = i : ti(i) && (o = !0, i = i[0]);
                    const a = Jt(i);
                    0 === t && null !== e ? null == r ? ix(n, e, a) : Lo(n, e, a, r || null, !0) : 1 === t && null !== e ? Lo(n, e, a, r || null, !0) : 2 === t ? function Og(t, n, e) {
                        const i = rh(t, n);
                        i && function tN(t, n, e, i) {
                            t.removeChild(n, e, i)
                        }(t, i, n, e)
                    }(n, a, o) : 3 === t && n.destroyNode(a), null != s && function rN(t, n, e, i, r) {
                        const s = e[7];
                        s !== Jt(e) && Ga(n, t, i, s, r);
                        for (let a = 10; a < e.length; a++) {
                            const l = e[a];
                            Bc(l[1], l, t, n, i, s)
                        }
                    }(n, t, s, e, r)
                }
            }

            function Eg(t, n, e) {
                return t.createElement(n, e)
            }

            function J0(t, n) {
                const e = t[9],
                    i = e.indexOf(n),
                    r = n[3];
                512 & n[2] && (n[2] &= -513, Xm(r, -1)), e.splice(i, 1)
            }

            function Tg(t, n) {
                if (t.length <= 10) return;
                const e = 10 + n,
                    i = t[e];
                if (i) {
                    const r = i[17];
                    null !== r && r !== t && J0(r, i), n > 0 && (t[e - 1][4] = i[4]);
                    const s = Ju(t, 10 + n);
                    ! function q2(t, n) {
                        Bc(t, n, n[11], 2, null, null), n[0] = null, n[6] = null
                    }(i[1], i);
                    const o = s[19];
                    null !== o && o.detachView(s[1]), i[3] = null, i[4] = null, i[2] &= -65
                }
                return i
            }

            function ex(t, n) {
                if (!(128 & n[2])) {
                    const e = n[11];
                    e.destroyNode && Bc(t, n, e, 3, null, null),
                        function K2(t) {
                            let n = t[13];
                            if (!n) return Ig(t[1], t);
                            for (; n;) {
                                let e = null;
                                if (ti(n)) e = n[13];
                                else {
                                    const i = n[10];
                                    i && (e = i)
                                }
                                if (!e) {
                                    for (; n && !n[4] && n !== t;) ti(n) && Ig(n[1], n), n = n[3];
                                    null === n && (n = t), ti(n) && Ig(n[1], n), e = n && n[4]
                                }
                                n = e
                            }
                        }(n)
                }
            }

            function Ig(t, n) {
                if (!(128 & n[2])) {
                    n[2] &= -65, n[2] |= 128,
                        function eN(t, n) {
                            let e;
                            if (null != t && null != (e = t.destroyHooks))
                                for (let i = 0; i < e.length; i += 2) {
                                    const r = n[e[i]];
                                    if (!(r instanceof Dc)) {
                                        const s = e[i + 1];
                                        if (Array.isArray(s))
                                            for (let o = 0; o < s.length; o += 2) {
                                                const a = r[s[o]],
                                                    l = s[o + 1];
                                                try {
                                                    l.call(a)
                                                } finally {}
                                            } else try {
                                                s.call(r)
                                            } finally {}
                                    }
                                }
                        }(t, n),
                        function J2(t, n) {
                            const e = t.cleanup,
                                i = n[7];
                            let r = -1;
                            if (null !== e)
                                for (let s = 0; s < e.length - 1; s += 2)
                                    if ("string" == typeof e[s]) {
                                        const o = e[s + 1],
                                            a = "function" == typeof o ? o(n) : Jt(n[o]),
                                            l = i[r = e[s + 2]],
                                            c = e[s + 3];
                                        "boolean" == typeof c ? a.removeEventListener(e[s], l, c) : c >= 0 ? i[r = c]() : i[r = -c].unsubscribe(), s += 2
                                    } else {
                                        const o = i[r = e[s + 1]];
                                        e[s].call(o)
                                    }
                            if (null !== i) {
                                for (let s = r + 1; s < i.length; s++)(0, i[s])();
                                n[7] = null
                            }
                        }(t, n), 1 === n[1].type && n[11].destroy();
                    const e = n[17];
                    if (null !== e && ar(n[3])) {
                        e !== n[3] && J0(e, n);
                        const i = n[19];
                        null !== i && i.detachView(t)
                    }! function O2(t) {
                        wg.delete(t[20])
                    }(n)
                }
            }

            function tx(t, n, e) {
                return function nx(t, n, e) {
                    let i = n;
                    for (; null !== i && 40 & i.type;) i = (n = i).parent;
                    if (null === i) return e[0];
                    if (2 & i.flags) {
                        const r = t.data[i.directiveStart].encapsulation;
                        if (r === sr.None || r === sr.Emulated) return null
                    }
                    return _i(i, e)
                }(t, n.parent, e)
            }

            function Lo(t, n, e, i, r) {
                t.insertBefore(n, e, i, r)
            }

            function ix(t, n, e) {
                t.appendChild(n, e)
            }

            function rx(t, n, e, i, r) {
                null !== i ? Lo(t, n, e, i, r) : ix(t, n, e)
            }

            function rh(t, n) {
                return t.parentNode(n)
            }

            function sx(t, n, e) {
                return ax(t, n, e)
            }
            let ah, Bg, lh, ax = function ox(t, n, e) {
                return 40 & t.type ? _i(t, e) : null
            };

            function sh(t, n, e, i) {
                const r = tx(t, i, n),
                    s = n[11],
                    a = sx(i.parent || n[6], i, n);
                if (null != r)
                    if (Array.isArray(e))
                        for (let l = 0; l < e.length; l++) rx(s, r, e[l], a, !1);
                    else rx(s, r, e, a, !1)
            }

            function oh(t, n) {
                if (null !== n) {
                    const e = n.type;
                    if (3 & e) return _i(n, t);
                    if (4 & e) return Fg(-1, t[n.index]);
                    if (8 & e) {
                        const i = n.child;
                        if (null !== i) return oh(t, i); {
                            const r = t[n.index];
                            return ar(r) ? Fg(-1, r) : Jt(r)
                        }
                    }
                    if (32 & e) return Mg(n, t)() || Jt(t[n.index]); {
                        const i = cx(t, n);
                        return null !== i ? Array.isArray(i) ? i[0] : oh(Nc(t[16]), i) : oh(t, n.next)
                    }
                }
                return null
            }

            function cx(t, n) {
                return null !== n ? t[16][6].projection[n.projection] : null
            }

            function Fg(t, n) {
                const e = 10 + t + 1;
                if (e < n.length) {
                    const i = n[e],
                        r = i[1].firstChild;
                    if (null !== r) return oh(i, r)
                }
                return n[7]
            }

            function Pg(t, n, e, i, r, s, o) {
                for (; null != e;) {
                    const a = i[e.index],
                        l = e.type;
                    if (o && 0 === n && (a && In(Jt(a), i), e.flags |= 4), 64 != (64 & e.flags))
                        if (8 & l) Pg(t, n, e.child, i, r, s, !1), Ga(n, t, r, a, s);
                        else if (32 & l) {
                        const c = Mg(e, i);
                        let d;
                        for (; d = c();) Ga(n, t, r, d, s);
                        Ga(n, t, r, a, s)
                    } else 16 & l ? dx(t, n, i, e, r, s) : Ga(n, t, r, a, s);
                    e = o ? e.projectionNext : e.next
                }
            }

            function Bc(t, n, e, i, r, s) {
                Pg(e, i, t.firstChild, n, r, s, !1)
            }

            function dx(t, n, e, i, r, s) {
                const o = e[16],
                    l = o[6].projection[i.projection];
                if (Array.isArray(l))
                    for (let c = 0; c < l.length; c++) Ga(n, t, r, l[c], s);
                else Pg(t, n, l, o[3], r, s, !0)
            }

            function ux(t, n, e) {
                t.setAttribute(n, "style", e)
            }

            function Lg(t, n, e) {
                "" === e ? t.removeAttribute(n, "class") : t.setAttribute(n, "class", e)
            }

            function No(t) {
                return function Ng() {
                    if (void 0 === ah && (ah = null, At.trustedTypes)) try {
                        ah = At.trustedTypes.createPolicy("angular", {
                            createHTML: t => t,
                            createScript: t => t,
                            createScriptURL: t => t
                        })
                    } catch {}
                    return ah
                }() ? .createHTML(t) || t
            }

            function fx(t) {
                return function Vg() {
                    if (void 0 === lh && (lh = null, At.trustedTypes)) try {
                        lh = At.trustedTypes.createPolicy("angular#unsafe-bypass", {
                            createHTML: t => t,
                            createScript: t => t,
                            createScriptURL: t => t
                        })
                    } catch {}
                    return lh
                }() ? .createHTML(t) || t
            }
            class Bo {
                constructor(n) {
                    this.changingThisBreaksApplicationSecurity = n
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`
                }
            }
            class dN extends Bo {
                getTypeName() {
                    return "HTML"
                }
            }
            class uN extends Bo {
                getTypeName() {
                    return "Style"
                }
            }
            class hN extends Bo {
                getTypeName() {
                    return "Script"
                }
            }
            class fN extends Bo {
                getTypeName() {
                    return "URL"
                }
            }
            class pN extends Bo {
                getTypeName() {
                    return "ResourceURL"
                }
            }

            function wi(t) {
                return t instanceof Bo ? t.changingThisBreaksApplicationSecurity : t
            }

            function Tr(t, n) {
                const e = function mN(t) {
                    return t instanceof Bo && t.getTypeName() || null
                }(t);
                if (null != e && e !== n) {
                    if ("ResourceURL" === e && "URL" === n) return !0;
                    throw new Error(`Required a safe ${n}, got a ${e} (see https://g.co/ng/security#xss)`)
                }
                return e === n
            }
            class wN {
                constructor(n) {
                    this.inertDocumentHelper = n
                }
                getInertBodyElement(n) {
                    n = "<body><remove></remove>" + n;
                    try {
                        const e = (new window.DOMParser).parseFromString(No(n), "text/html").body;
                        return null === e ? this.inertDocumentHelper.getInertBodyElement(n) : (e.removeChild(e.firstChild), e)
                    } catch {
                        return null
                    }
                }
            }
            class CN {
                constructor(n) {
                    if (this.defaultDoc = n, this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"), null == this.inertDocument.body) {
                        const e = this.inertDocument.createElement("html");
                        this.inertDocument.appendChild(e);
                        const i = this.inertDocument.createElement("body");
                        e.appendChild(i)
                    }
                }
                getInertBodyElement(n) {
                    const e = this.inertDocument.createElement("template");
                    if ("content" in e) return e.innerHTML = No(n), e;
                    const i = this.inertDocument.createElement("body");
                    return i.innerHTML = No(n), this.defaultDoc.documentMode && this.stripCustomNsAttrs(i), i
                }
                stripCustomNsAttrs(n) {
                    const e = n.attributes;
                    for (let r = e.length - 1; 0 < r; r--) {
                        const o = e.item(r).name;
                        ("xmlns:ns1" === o || 0 === o.indexOf("ns1:")) && n.removeAttribute(o)
                    }
                    let i = n.firstChild;
                    for (; i;) i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i), i = i.nextSibling
                }
            }
            const DN = /^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;

            function ch(t) {
                return (t = String(t)).match(DN) ? t : "unsafe:" + t
            }

            function rs(t) {
                const n = {};
                for (const e of t.split(",")) n[e] = !0;
                return n
            }

            function Vc(...t) {
                const n = {};
                for (const e of t)
                    for (const i in e) e.hasOwnProperty(i) && (n[i] = !0);
                return n
            }
            const _x = rs("area,br,col,hr,img,wbr"),
                yx = rs("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
                bx = rs("rp,rt"),
                Hg = Vc(_x, Vc(yx, rs("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), Vc(bx, rs("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), Vc(bx, yx)),
                $g = rs("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
                vx = Vc($g, rs("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), rs("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),
                MN = rs("script,style,template");
            class SN {
                constructor() {
                    this.sanitizedSomething = !1, this.buf = []
                }
                sanitizeChildren(n) {
                    let e = n.firstChild,
                        i = !0;
                    for (; e;)
                        if (e.nodeType === Node.ELEMENT_NODE ? i = this.startElement(e) : e.nodeType === Node.TEXT_NODE ? this.chars(e.nodeValue) : this.sanitizedSomething = !0, i && e.firstChild) e = e.firstChild;
                        else
                            for (; e;) {
                                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                                let r = this.checkClobberedElement(e, e.nextSibling);
                                if (r) {
                                    e = r;
                                    break
                                }
                                e = this.checkClobberedElement(e, e.parentNode)
                            }
                    return this.buf.join("")
                }
                startElement(n) {
                    const e = n.nodeName.toLowerCase();
                    if (!Hg.hasOwnProperty(e)) return this.sanitizedSomething = !0, !MN.hasOwnProperty(e);
                    this.buf.push("<"), this.buf.push(e);
                    const i = n.attributes;
                    for (let r = 0; r < i.length; r++) {
                        const s = i.item(r),
                            o = s.name,
                            a = o.toLowerCase();
                        if (!vx.hasOwnProperty(a)) {
                            this.sanitizedSomething = !0;
                            continue
                        }
                        let l = s.value;
                        $g[a] && (l = ch(l)), this.buf.push(" ", o, '="', wx(l), '"')
                    }
                    return this.buf.push(">"), !0
                }
                endElement(n) {
                    const e = n.nodeName.toLowerCase();
                    Hg.hasOwnProperty(e) && !_x.hasOwnProperty(e) && (this.buf.push("</"), this.buf.push(e), this.buf.push(">"))
                }
                chars(n) {
                    this.buf.push(wx(n))
                }
                checkClobberedElement(n, e) {
                    if (e && (n.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) throw new Error(`Failed to sanitize html because the element is clobbered: ${n.outerHTML}`);
                    return e
                }
            }
            const kN = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                AN = /([^\#-~ |!])/g;

            function wx(t) {
                return t.replace(/&/g, "&amp;").replace(kN, function(n) {
                    return "&#" + (1024 * (n.charCodeAt(0) - 55296) + (n.charCodeAt(1) - 56320) + 65536) + ";"
                }).replace(AN, function(n) {
                    return "&#" + n.charCodeAt(0) + ";"
                }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }
            let dh;

            function Cx(t, n) {
                let e = null;
                try {
                    dh = dh || function gx(t) {
                        const n = new CN(t);
                        return function xN() {
                            try {
                                return !!(new window.DOMParser).parseFromString(No(""), "text/html")
                            } catch {
                                return !1
                            }
                        }() ? new wN(n) : n
                    }(t);
                    let i = n ? String(n) : "";
                    e = dh.getInertBodyElement(i);
                    let r = 5,
                        s = i;
                    do {
                        if (0 === r) throw new Error("Failed to sanitize html because the input is unstable");
                        r--, i = s, s = e.innerHTML, e = dh.getInertBodyElement(i)
                    } while (i !== s);
                    return No((new SN).sanitizeChildren(jg(e) || e))
                } finally {
                    if (e) {
                        const i = jg(e) || e;
                        for (; i.firstChild;) i.removeChild(i.firstChild)
                    }
                }
            }

            function jg(t) {
                return "content" in t && function EN(t) {
                    return t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
                }(t) ? t.content : null
            }
            var it = (() => ((it = it || {})[it.NONE = 0] = "NONE", it[it.HTML = 1] = "HTML", it[it.STYLE = 2] = "STYLE", it[it.SCRIPT = 3] = "SCRIPT", it[it.URL = 4] = "URL", it[it.RESOURCE_URL = 5] = "RESOURCE_URL", it))();

            function uh(t) {
                const n = function Hc() {
                    const t = $();
                    return t && t[12]
                }();
                return n ? fx(n.sanitize(it.HTML, t) || "") : Tr(t, "HTML") ? fx(wi(t)) : Cx(function hx() {
                    return void 0 !== Bg ? Bg : typeof document < "u" ? document : void 0
                }(), Ne(t))
            }
            const Ug = new R("ENVIRONMENT_INITIALIZER"),
                Gg = new R("INJECTOR", -1),
                Dx = new R("INJECTOR_DEF_TYPES");
            class Mx {
                get(n, e = Ic) {
                    if (e === Ic) {
                        const i = new Error(`NullInjectorError: No provider for ${Dt(n)}!`);
                        throw i.name = "NullInjectorError", i
                    }
                    return e
                }
            }

            function LN(...t) {
                return {\
                    u0275providers: Sx(0, t)
                }
            }

            function Sx(t, ...n) {
                const e = [],
                    i = new Set;
                let r;
                return is(n, s => {
                    const o = s;
                    Wg(o, e, [], i) && (r || (r = []), r.push(o))
                }), void 0 !== r && kx(r, e), e
            }

            function kx(t, n) {
                for (let e = 0; e < t.length; e++) {
                    const {
                        providers: r
                    } = t[e];
                    is(r, s => {
                        n.push(s)
                    })
                }
            }

            function Wg(t, n, e, i) {
                if (!(t = Ee(t))) return !1;
                let r = null,
                    s = BC(t);
                const o = !s && yt(t);
                if (s || o) {
                    if (o && !o.standalone) return !1;
                    r = t
                } else {
                    const l = t.ngModule;
                    if (s = BC(l), !s) return !1;
                    r = l
                }
                const a = i.has(r);
                if (o) {
                    if (a) return !1;
                    if (i.add(r), o.dependencies) {
                        const l = "function" == typeof o.dependencies ? o.dependencies() : o.dependencies;
                        for (const c of l) Wg(c, n, e, i)
                    }
                } else {
                    if (!s) return !1; {
                        if (null != s.imports && !a) {
                            let c;
                            i.add(r);
                            try {
                                is(s.imports, d => {
                                    Wg(d, n, e, i) && (c || (c = []), c.push(d))
                                })
                            } finally {}
                            void 0 !== c && kx(c, n)
                        }
                        if (!a) {
                            const c = Po(r) || (() => new r);
                            n.push({
                                provide: r,
                                useFactory: c,
                                deps: dt
                            }, {
                                provide: Dx,
                                useValue: r,
                                multi: !0
                            }, {
                                provide: Ug,
                                useValue: () => C(r),
                                multi: !0
                            })
                        }
                        const l = s.providers;
                        null == l || a || is(l, d => {
                            n.push(d)
                        })
                    }
                }
                return r !== t && void 0 !== t.providers
            }
            const NN = xt({
                provide: String,
                useValue: xt
            });

            function qg(t) {
                return null !== t && "object" == typeof t && NN in t
            }

            function Vo(t) {
                return "function" == typeof t
            }
            const Yg = new R("Set Injector scope."),
                hh = {},
                VN = {};
            let Qg;

            function fh() {
                return void 0 === Qg && (Qg = new Mx), Qg
            }
            class Hs {}
            class Tx extends Hs {
                constructor(n, e, i, r) {
                    super(), this.parent = e, this.source = i, this.scopes = r, this.records = new Map, this._ngOnDestroyHooks = new Set, this._onDestroyHooks = [], this._destroyed = !1, Zg(n, o => this.processProvider(o)), this.records.set(Gg, Wa(void 0, this)), r.has("environment") && this.records.set(Hs, Wa(void 0, this));
                    const s = this.records.get(Yg);
                    null != s && "string" == typeof s.value && this.scopes.add(s.value), this.injectorDefTypes = new Set(this.get(Dx.multi, dt, xe.Self))
                }
                get destroyed() {
                    return this._destroyed
                }
                destroy() {
                    this.assertNotDestroyed(), this._destroyed = !0;
                    try {
                        for (const n of this._ngOnDestroyHooks) n.ngOnDestroy();
                        for (const n of this._onDestroyHooks) n()
                    } finally {
                        this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear(), this._onDestroyHooks.length = 0
                    }
                }
                onDestroy(n) {
                    this._onDestroyHooks.push(n)
                }
                runInContext(n) {
                    this.assertNotDestroyed();
                    const e = za(this),
                        i = Bi(void 0);
                    try {
                        return n()
                    } finally {
                        za(e), Bi(i)
                    }
                }
                get(n, e = Ic, i = xe.Default) {
                    this.assertNotDestroyed();
                    const r = za(this),
                        s = Bi(void 0);
                    try {
                        if (!(i & xe.SkipSelf)) {
                            let a = this.records.get(n);
                            if (void 0 === a) {
                                const l = function UN(t) {
                                    return "function" == typeof t || "object" == typeof t && t instanceof R
                                }(n) && Fu(n);
                                a = l && this.injectableDefInScope(l) ? Wa(Kg(n), hh) : null, this.records.set(n, a)
                            }
                            if (null != a) return this.hydrate(n, a)
                        }
                        return (i & xe.Self ? fh() : this.parent).get(n, e = i & xe.Optional && e === Ic ? null : e)
                    } catch (o) {
                        if ("NullInjectorError" === o.name) {
                            if ((o[th] = o[th] || []).unshift(Dt(n)), r) throw o;
                            return function p2(t, n, e, i) {
                                const r = t[th];
                                throw n[T0] && r.unshift(n[T0]), t.message = function m2(t, n, e, i = null) {
                                    t = t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1) ? t.slice(2) : t;
                                    let r = Dt(n);
                                    if (Array.isArray(n)) r = n.map(Dt).join(" -> ");
                                    else if ("object" == typeof n) {
                                        let s = [];
                                        for (let o in n)
                                            if (n.hasOwnProperty(o)) {
                                                let a = n[o];
                                                s.push(o + ":" + ("string" == typeof a ? JSON.stringify(a) : Dt(a)))
                                            }
                                        r = `{${s.join(", ")}}`
                                    }
                                    return `${e}${i?"("+i+")":""}[${r}]: ${t.replace(d2,"\n  ")}`
                                }("\n" + t.message, r, e, i), t.ngTokenPath = r, t[th] = null, t
                            }(o, n, "R3InjectorError", this.source)
                        }
                        throw o
                    } finally {
                        Bi(s), za(r)
                    }
                }
                resolveInjectorInitializers() {
                    const n = za(this),
                        e = Bi(void 0);
                    try {
                        const i = this.get(Ug.multi, dt, xe.Self);
                        for (const r of i) r()
                    } finally {
                        za(n), Bi(e)
                    }
                }
                toString() {
                    const n = [],
                        e = this.records;
                    for (const i of e.keys()) n.push(Dt(i));
                    return `R3Injector[${n.join(", ")}]`
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new B(205, !1)
                }
                processProvider(n) {
                    let e = Vo(n = Ee(n)) ? n : Ee(n && n.provide);
                    const i = function $N(t) {
                        return qg(t) ? Wa(void 0, t.useValue) : Wa(Ix(t), hh)
                    }(n);
                    if (Vo(n) || !0 !== n.multi) this.records.get(e);
                    else {
                        let r = this.records.get(e);
                        r || (r = Wa(void 0, hh, !0), r.factory = () => gg(r.multi), this.records.set(e, r)), e = n, r.multi.push(n)
                    }
                    this.records.set(e, i)
                }
                hydrate(n, e) {
                    return e.value === hh && (e.value = VN, e.value = e.factory()), "object" == typeof e.value && e.value && function zN(t) {
                        return null !== t && "object" == typeof t && "function" == typeof t.ngOnDestroy
                    }(e.value) && this._ngOnDestroyHooks.add(e.value), e.value
                }
                injectableDefInScope(n) {
                    if (!n.providedIn) return !1;
                    const e = Ee(n.providedIn);
                    return "string" == typeof e ? "any" === e || this.scopes.has(e) : this.injectorDefTypes.has(e)
                }
            }

            function Kg(t) {
                const n = Fu(t),
                    e = null !== n ? n.factory : Po(t);
                if (null !== e) return e;
                if (t instanceof R) throw new B(204, !1);
                if (t instanceof Function) return function HN(t) {
                    const n = t.length;
                    if (n > 0) throw Tc(n, "?"), new B(204, !1);
                    const e = function JP(t) {
                        const n = t && (t[Ou] || t[VC]);
                        if (n) {
                            const e = function eL(t) {
                                if (t.hasOwnProperty("name")) return t.name;
                                const n = ("" + t).match(/^function\s*([^\s(]+)/);
                                return null === n ? "" : n[1]
                            }(t);
                            return console.warn(`DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`), n
                        }
                        return null
                    }(t);
                    return null !== e ? () => e.factory(t) : () => new t
                }(t);
                throw new B(204, !1)
            }

            function Ix(t, n, e) {
                let i;
                if (Vo(t)) {
                    const r = Ee(t);
                    return Po(r) || Kg(r)
                }
                if (qg(t)) i = () => Ee(t.useValue);
                else if (function Ex(t) {
                        return !(!t || !t.useFactory)
                    }(t)) i = () => t.useFactory(...gg(t.deps || []));
                else if (function Ax(t) {
                        return !(!t || !t.useExisting)
                    }(t)) i = () => C(Ee(t.useExisting));
                else {
                    const r = Ee(t && (t.useClass || t.provide));
                    if (! function jN(t) {
                            return !!t.deps
                        }(t)) return Po(r) || Kg(r);
                    i = () => new r(...gg(t.deps))
                }
                return i
            }

            function Wa(t, n, e = !1) {
                return {
                    factory: t,
                    value: n,
                    multi: e ? [] : void 0
                }
            }

            function GN(t) {
                return !!t.\u0275providers
            }

            function Zg(t, n) {
                for (const e of t) Array.isArray(e) ? Zg(e, n) : GN(e) ? Zg(e.\u0275providers, n) : n(e)
            }
            class Rx {}
            class YN {
                resolveComponentFactory(n) {
                    throw function qN(t) {
                        const n = Error(`No component factory found for ${Dt(t)}. Did you add it to @NgModule.entryComponents?`);
                        return n.ngComponent = t, n
                    }(n)
                }
            }
            let Ci = (() => {
                class t {}
                return t.NULL = new YN, t
            })();

            function QN() {
                return qa(on(), $())
            }

            function qa(t, n) {
                return new N(_i(t, n))
            }
            let N = (() => {
                class t {
                    constructor(e) {
                        this.nativeElement = e
                    }
                }
                return t.__NG_ELEMENT_ID__ = QN, t
            })();

            function KN(t) {
                return t instanceof N ? t.nativeElement : t
            }
            class $c {}
            let qn = (() => {
                    class t {}
                    return t.__NG_ELEMENT_ID__ = () => function ZN() {
                        const t = $(),
                            e = yi(on().index, t);
                        return (ti(e) ? e : t)[11]
                    }(), t
                })(),
                XN = (() => {
                    class t {}
                    return t.\u0275prov = I({
                        token: t,
                        providedIn: "root",
                        factory: () => null
                    }), t
                })();
            class $s {
                constructor(n) {
                    this.full = n, this.major = n.split(".")[0], this.minor = n.split(".")[1], this.patch = n.split(".").slice(2).join(".")
                }
            }
            const JN = new $s("14.2.12"),
                Xg = {};

            function e_(t) {
                return t.ngOriginalError
            }
            class ss {
                constructor() {
                    this._console = console
                }
                handleError(n) {
                    const e = this._findOriginalError(n);
                    this._console.error("ERROR", n), e && this._console.error("ORIGINAL ERROR", e)
                }
                _findOriginalError(n) {
                    let e = n && e_(n);
                    for (; e && e_(e);) e = e_(e);
                    return e || null
                }
            }

            function Ox(t) {
                return t.ownerDocument.defaultView
            }

            function os(t) {
                return t instanceof Function ? t() : t
            }

            function Lx(t, n, e) {
                let i = t.length;
                for (;;) {
                    const r = t.indexOf(n, e);
                    if (-1 === r) return r;
                    if (0 === r || t.charCodeAt(r - 1) <= 32) {
                        const s = n.length;
                        if (r + s === i || t.charCodeAt(r + s) <= 32) return r
                    }
                    e = r + 1
                }
            }
            const Nx = "ng-template";

            function cB(t, n, e) {
                let i = 0;
                for (; i < t.length;) {
                    let r = t[i++];
                    if (e && "class" === r) {
                        if (r = t[i], -1 !== Lx(r.toLowerCase(), n, 0)) return !0
                    } else if (1 === r) {
                        for (; i < t.length && "string" == typeof(r = t[i++]);)
                            if (r.toLowerCase() === n) return !0;
                        return !1
                    }
                }
                return !1
            }

            function Bx(t) {
                return 4 === t.type && t.value !== Nx
            }

            function dB(t, n, e) {
                return n === (4 !== t.type || e ? t.value : Nx)
            }

            function uB(t, n, e) {
                let i = 4;
                const r = t.attrs || [],
                    s = function pB(t) {
                        for (let n = 0; n < t.length; n++)
                            if (u0(t[n])) return n;
                        return t.length
                    }(r);
                let o = !1;
                for (let a = 0; a < n.length; a++) {
                    const l = n[a];
                    if ("number" != typeof l) {
                        if (!o)
                            if (4 & i) {
                                if (i = 2 | 1 & i, "" !== l && !dB(t, l, e) || "" === l && 1 === n.length) {
                                    if (cr(i)) return !1;
                                    o = !0
                                }
                            } else {
                                const c = 8 & i ? l : n[++a];
                                if (8 & i && null !== t.attrs) {
                                    if (!cB(t.attrs, c, e)) {
                                        if (cr(i)) return !1;
                                        o = !0
                                    }
                                    continue
                                }
                                const h = hB(8 & i ? "class" : l, r, Bx(t), e);
                                if (-1 === h) {
                                    if (cr(i)) return !1;
                                    o = !0;
                                    continue
                                }
                                if ("" !== c) {
                                    let m;
                                    m = h > s ? "" : r[h + 1].toLowerCase();
                                    const _ = 8 & i ? m : null;
                                    if (_ && -1 !== Lx(_, c, 0) || 2 & i && c !== m) {
                                        if (cr(i)) return !1;
                                        o = !0
                                    }
                                }
                            }
                    } else {
                        if (!o && !cr(i) && !cr(l)) return !1;
                        if (o && cr(l)) continue;
                        o = !1, i = l | 1 & i
                    }
                }
                return cr(i) || o
            }

            function cr(t) {
                return 0 == (1 & t)
            }

            function hB(t, n, e, i) {
                if (null === n) return -1;
                let r = 0;
                if (i || !e) {
                    let s = !1;
                    for (; r < n.length;) {
                        const o = n[r];
                        if (o === t) return r;
                        if (3 === o || 6 === o) s = !0;
                        else {
                            if (1 === o || 2 === o) {
                                let a = n[++r];
                                for (;
                                    "string" == typeof a;) a = n[++r];
                                continue
                            }
                            if (4 === o) break;
                            if (0 === o) {
                                r += 4;
                                continue
                            }
                        }
                        r += s ? 1 : 2
                    }
                    return -1
                }
                return function mB(t, n) {
                    let e = t.indexOf(4);
                    if (e > -1)
                        for (e++; e < t.length;) {
                            const i = t[e];
                            if ("number" == typeof i) return -1;
                            if (i === n) return e;
                            e++
                        }
                    return -1
                }(n, t)
            }

            function Vx(t, n, e = !1) {
                for (let i = 0; i < n.length; i++)
                    if (uB(t, n[i], e)) return !0;
                return !1
            }

            function gB(t, n) {
                e: for (let e = 0; e < n.length; e++) {
                    const i = n[e];
                    if (t.length === i.length) {
                        for (let r = 0; r < t.length; r++)
                            if (t[r] !== i[r]) continue e;
                        return !0
                    }
                }
                return !1
            }

            function Hx(t, n) {
                return t ? ":not(" + n.trim() + ")" : n
            }

            function _B(t) {
                let n = t[0],
                    e = 1,
                    i = 2,
                    r = "",
                    s = !1;
                for (; e < t.length;) {
                    let o = t[e];
                    if ("string" == typeof o)
                        if (2 & i) {
                            const a = t[++e];
                            r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]"
                        } else 8 & i ? r += "." + o : 4 & i && (r += " " + o);
                    else "" !== r && !cr(o) && (n += Hx(s, r), r = ""), i = o, s = s || !cr(i);
                    e++
                }
                return "" !== r && (n += Hx(s, r)), n
            }
            const Be = {};

            function p(t) {
                $x(nt(), $(), Gn() + t, !1)
            }

            function $x(t, n, e, i) {
                if (!i)
                    if (3 == (3 & n[2])) {
                        const s = t.preOrderCheckHooks;
                        null !== s && Uu(n, s, e)
                    } else {
                        const s = t.preOrderHooks;
                        null !== s && Gu(n, s, 0, e)
                    }
                Bs(e)
            }

            function Gx(t, n = null, e = null, i) {
                const r = Wx(t, n, e, i);
                return r.resolveInjectorInitializers(), r
            }

            function Wx(t, n = null, e = null, i, r = new Set) {
                const s = [e || dt, LN(t)];
                return i = i || ("object" == typeof t ? void 0 : Dt(t)), new Tx(s, n || fh(), i || null, r)
            }
            let Ct = (() => {
                class t {
                    static create(e, i) {
                        if (Array.isArray(e)) return Gx({
                            name: ""
                        }, i, e, ""); {
                            const r = e.name ? ? "";
                            return Gx({
                                name: r
                            }, e.parent, e.providers, r)
                        }
                    }
                }
                return t.THROW_IF_NOT_FOUND = Ic, t.NULL = new Mx, t.\u0275prov = I({
                    token: t,
                    providedIn: "any",
                    factory: () => C(Gg)
                }), t.__NG_ELEMENT_ID__ = -1, t
            })();

            function u(t, n = xe.Default) {
                const e = $();
                return null === e ? C(t, n) : b0(on(), e, Ee(t), n)
            }

            function dr() {
                throw new Error("invalid")
            }

            function mh(t, n) {
                return t << 17 | n << 2
            }

            function ur(t) {
                return t >> 17 & 32767
            }

            function s_(t) {
                return 2 | t
            }

            function as(t) {
                return (131068 & t) >> 2
            }

            function o_(t, n) {
                return -131069 & t | n << 2
            }

            function a_(t) {
                return 1 | t
            }

            function cD(t, n) {
                const e = t.contentQueries;
                if (null !== e)
                    for (let i = 0; i < e.length; i += 2) {
                        const r = e[i],
                            s = e[i + 1];
                        if (-1 !== s) {
                            const o = t.data[s];
                            ig(r), o.contentQueries(2, n[s], s)
                        }
                    }
            }

            function yh(t, n, e, i, r, s, o, a, l, c, d) {
                const h = n.blueprint.slice();
                return h[0] = r, h[2] = 76 | i, (null !== d || t && 1024 & t[2]) && (h[2] |= 1024), KC(h), h[3] = h[15] = t, h[8] = e, h[10] = o || t && t[10], h[11] = a || t && t[11], h[12] = l || t && t[12] || null, h[9] = c || t && t[9] || null, h[6] = s, h[20] = function R2() {
                    return I2++
                }(), h[21] = d, h[16] = 2 == n.type ? t[16] : h, h
            }

            function Ka(t, n, e, i, r) {
                let s = t.data[n];
                if (null === s) s = function m_(t, n, e, i, r) {
                        const s = JC(),
                            o = Jm(),
                            l = t.data[n] = function JB(t, n, e, i, r, s) {
                                return {
                                    type: e,
                                    index: i,
                                    insertBeforeIndex: null,
                                    injectorIndex: n ? n.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: r,
                                    attrs: s,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: n,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0
                                }
                            }(0, o ? s : s && s.parent, e, n, i, r);
                        return null === t.firstChild && (t.firstChild = l), null !== s && (o ? null == s.child && null !== l.parent && (s.child = l) : null === s.next && (s.next = l)), l
                    }(t, n, e, i, r),
                    function EL() {
                        return Le.lFrame.inI18n
                    }() && (s.flags |= 64);
                else if (64 & s.type) {
                    s.type = e, s.value = i, s.attrs = r;
                    const o = function xc() {
                        const t = Le.lFrame,
                            n = t.currentTNode;
                        return t.isParent ? n : n.parent
                    }();
                    s.injectorIndex = null === o ? -1 : o.injectorIndex
                }
                return Ar(s, !0), s
            }

            function Za(t, n, e, i) {
                if (0 === e) return -1;
                const r = n.length;
                for (let s = 0; s < e; s++) n.push(i), t.blueprint.push(i), t.data.push(null);
                return r
            }

            function g_(t, n, e) {
                rg(n);
                try {
                    const i = t.viewQuery;
                    null !== i && D_(1, i, e);
                    const r = t.template;
                    null !== r && dD(t, n, r, 1, e), t.firstCreatePass && (t.firstCreatePass = !1), t.staticContentQueries && cD(t, n), t.staticViewQueries && D_(2, t.viewQuery, e);
                    const s = t.components;
                    null !== s && function KB(t, n) {
                        for (let e = 0; e < n.length; e++) mV(t, n[e])
                    }(n, s)
                } catch (i) {
                    throw t.firstCreatePass && (t.incompleteFirstPass = !0, t.firstCreatePass = !1), i
                } finally {
                    n[2] &= -5, sg()
                }
            }

            function bh(t, n, e, i) {
                const r = n[2];
                if (128 != (128 & r)) {
                    rg(n);
                    try {
                        KC(n),
                            function t0(t) {
                                return Le.lFrame.bindingIndex = t
                            }(t.bindingStartIndex), null !== e && dD(t, n, e, 2, i);
                        const o = 3 == (3 & r);
                        if (o) {
                            const c = t.preOrderCheckHooks;
                            null !== c && Uu(n, c, null)
                        } else {
                            const c = t.preOrderHooks;
                            null !== c && Gu(n, c, 0, null), og(n, 0)
                        }
                        if (function fV(t) {
                                for (let n = Sg(t); null !== n; n = kg(n)) {
                                    if (!n[2]) continue;
                                    const e = n[9];
                                    for (let i = 0; i < e.length; i++) {
                                        const r = e[i],
                                            s = r[3];
                                        0 == (512 & r[2]) && Xm(s, 1), r[2] |= 512
                                    }
                                }
                            }(n), function hV(t) {
                                for (let n = Sg(t); null !== n; n = kg(n))
                                    for (let e = 10; e < n.length; e++) {
                                        const i = n[e],
                                            r = i[1];
                                        ju(i) && bh(r, i, r.template, i[8])
                                    }
                            }(n), null !== t.contentQueries && cD(t, n), o) {
                            const c = t.contentCheckHooks;
                            null !== c && Uu(n, c)
                        } else {
                            const c = t.contentHooks;
                            null !== c && Gu(n, c, 1), og(n, 1)
                        }! function YB(t, n) {
                            const e = t.hostBindingOpCodes;
                            if (null !== e) try {
                                for (let i = 0; i < e.length; i++) {
                                    const r = e[i];
                                    if (r < 0) Bs(~r);
                                    else {
                                        const s = r,
                                            o = e[++i],
                                            a = e[++i];
                                        TL(o, s), a(2, n[s])
                                    }
                                }
                            } finally {
                                Bs(-1)
                            }
                        }(t, n);
                        const a = t.components;
                        null !== a && function QB(t, n) {
                            for (let e = 0; e < n.length; e++) pV(t, n[e])
                        }(n, a);
                        const l = t.viewQuery;
                        if (null !== l && D_(2, l, i), o) {
                            const c = t.viewCheckHooks;
                            null !== c && Uu(n, c)
                        } else {
                            const c = t.viewHooks;
                            null !== c && Gu(n, c, 2), og(n, 2)
                        }!0 === t.firstUpdatePass && (t.firstUpdatePass = !1), n[2] &= -41, 512 & n[2] && (n[2] &= -513, Xm(n[3], -1))
                    } finally {
                        sg()
                    }
                }
            }

            function dD(t, n, e, i, r) {
                const s = Gn(),
                    o = 2 & i;
                try {
                    Bs(-1), o && n.length > 22 && $x(t, n, 22, !1), e(i, r)
                } finally {
                    Bs(s)
                }
            }

            function uD(t, n, e) {
                if (Wm(n)) {
                    const r = n.directiveEnd;
                    for (let s = n.directiveStart; s < r; s++) {
                        const o = t.data[s];
                        o.contentQueries && o.contentQueries(1, e[s], s)
                    }
                }
            }

            function __(t, n, e) {
                !XC() || (function rV(t, n, e, i) {
                    const r = e.directiveStart,
                        s = e.directiveEnd;
                    t.firstCreatePass || Sc(e, n), In(i, n);
                    const o = e.initialInputs;
                    for (let a = r; a < s; a++) {
                        const l = t.data[a],
                            c = lr(l);
                        c && cV(n, e, l);
                        const d = kc(n, t, a, e);
                        In(d, n), null !== o && dV(0, a - r, d, l, 0, o), c && (yi(e.index, n)[8] = d)
                    }
                }(t, n, e, _i(e, n)), 128 == (128 & e.flags) && function sV(t, n, e) {
                    const i = e.directiveStart,
                        r = e.directiveEnd,
                        s = e.index,
                        o = function IL() {
                            return Le.lFrame.currentDirectiveIndex
                        }();
                    try {
                        Bs(s);
                        for (let a = i; a < r; a++) {
                            const l = t.data[a],
                                c = n[a];
                            tg(a), (null !== l.hostBindings || 0 !== l.hostVars || null !== l.hostAttrs) && yD(l, c)
                        }
                    } finally {
                        Bs(-1), tg(o)
                    }
                }(t, n, e))
            }

            function y_(t, n, e = _i) {
                const i = n.localNames;
                if (null !== i) {
                    let r = n.index + 1;
                    for (let s = 0; s < i.length; s += 2) {
                        const o = i[s + 1],
                            a = -1 === o ? e(n, t) : t[o];
                        t[r++] = a
                    }
                }
            }

            function hD(t) {
                const n = t.tView;
                return null === n || n.incompleteFirstPass ? t.tView = b_(1, null, t.template, t.decls, t.vars, t.directiveDefs, t.pipeDefs, t.viewQuery, t.schemas, t.consts) : n
            }

            function b_(t, n, e, i, r, s, o, a, l, c) {
                const d = 22 + i,
                    h = d + r,
                    m = function ZB(t, n) {
                        const e = [];
                        for (let i = 0; i < n; i++) e.push(i < t ? null : Be);
                        return e
                    }(d, h),
                    _ = "function" == typeof c ? c() : c;
                return m[1] = {
                    type: t,
                    blueprint: m,
                    template: e,
                    queries: null,
                    viewQuery: a,
                    declTNode: n,
                    data: m.slice().fill(null, d),
                    bindingStartIndex: d,
                    expandoStartIndex: h,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: "function" == typeof s ? s() : s,
                    pipeRegistry: "function" == typeof o ? o() : o,
                    firstChild: null,
                    schemas: l,
                    consts: _,
                    incompleteFirstPass: !1
                }
            }

            function fD(t, n, e, i) {
                const r = xD(n);
                null === e ? r.push(i) : (r.push(e), t.firstCreatePass && DD(t).push(i, r.length - 1))
            }

            function pD(t, n, e) {
                for (let i in t)
                    if (t.hasOwnProperty(i)) {
                        const r = t[i];
                        (e = null === e ? {} : e).hasOwnProperty(i) ? e[i].push(n, r) : e[i] = [n, r]
                    }
                return e
            }

            function mD(t, n) {
                const i = n.directiveEnd,
                    r = t.data,
                    s = n.attrs,
                    o = [];
                let a = null,
                    l = null;
                for (let c = n.directiveStart; c < i; c++) {
                    const d = r[c],
                        h = d.inputs,
                        m = null === s || Bx(n) ? null : uV(h, s);
                    o.push(m), a = pD(h, c, a), l = pD(d.outputs, c, l)
                }
                null !== a && (a.hasOwnProperty("class") && (n.flags |= 16), a.hasOwnProperty("style") && (n.flags |= 32)), n.initialInputs = o, n.inputs = a, n.outputs = l
            }

            function xi(t, n, e, i, r, s, o, a) {
                const l = _i(n, e);
                let d, c = n.inputs;
                !a && null != c && (d = c[i]) ? (M_(t, e, d, i, r), Vu(n) && gD(e, n.index)) : 3 & n.type && (i = function eV(t) {
                    return "class" === t ? "className" : "for" === t ? "htmlFor" : "formaction" === t ? "formAction" : "innerHtml" === t ? "innerHTML" : "readonly" === t ? "readOnly" : "tabindex" === t ? "tabIndex" : t
                }(i), r = null != o ? o(r, n.value || "", i) : r, s.setProperty(l, i, r))
            }

            function gD(t, n) {
                const e = yi(n, t);
                16 & e[2] || (e[2] |= 32)
            }

            function v_(t, n, e, i) {
                let r = !1;
                if (XC()) {
                    const s = function oV(t, n, e) {
                            const i = t.directiveRegistry;
                            let r = null;
                            if (i)
                                for (let s = 0; s < i.length; s++) {
                                    const o = i[s];
                                    Vx(e, o.selectors, !1) && (r || (r = []), Ku(Sc(e, n), t, o.type), lr(o) ? (bD(t, e), r.unshift(o)) : r.push(o))
                                }
                            return r
                        }(t, n, e),
                        o = null === i ? null : {
                            "": -1
                        };
                    if (null !== s) {
                        r = !0, vD(e, t.data.length, s.length);
                        for (let d = 0; d < s.length; d++) {
                            const h = s[d];
                            h.providersResolver && h.providersResolver(h)
                        }
                        let a = !1,
                            l = !1,
                            c = Za(t, n, s.length, null);
                        for (let d = 0; d < s.length; d++) {
                            const h = s[d];
                            e.mergedAttrs = qu(e.mergedAttrs, h.hostAttrs), wD(t, e, n, c, h), lV(c, h, o), null !== h.contentQueries && (e.flags |= 8), (null !== h.hostBindings || null !== h.hostAttrs || 0 !== h.hostVars) && (e.flags |= 128);
                            const m = h.type.prototype;
                            !a && (m.ngOnChanges || m.ngOnInit || m.ngDoCheck) && ((t.preOrderHooks || (t.preOrderHooks = [])).push(e.index), a = !0), !l && (m.ngOnChanges || m.ngDoCheck) && ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(e.index), l = !0), c++
                        }
                        mD(t, e)
                    }
                    o && function aV(t, n, e) {
                        if (n) {
                            const i = t.localNames = [];
                            for (let r = 0; r < n.length; r += 2) {
                                const s = e[n[r + 1]];
                                if (null == s) throw new B(-301, !1);
                                i.push(n[r], s)
                            }
                        }
                    }(e, i, o)
                }
                return e.mergedAttrs = qu(e.mergedAttrs, e.attrs), r
            }

            function _D(t, n, e, i, r, s) {
                const o = s.hostBindings;
                if (o) {
                    let a = t.hostBindingOpCodes;
                    null === a && (a = t.hostBindingOpCodes = []);
                    const l = ~n.index;
                    (function iV(t) {
                        let n = t.length;
                        for (; n > 0;) {
                            const e = t[--n];
                            if ("number" == typeof e && e < 0) return e
                        }
                        return 0
                    })(a) != l && a.push(l), a.push(i, r, o)
                }
            }

            function yD(t, n) {
                null !== t.hostBindings && t.hostBindings(1, n)
            }

            function bD(t, n) {
                n.flags |= 2, (t.components || (t.components = [])).push(n.index)
            }

            function lV(t, n, e) {
                if (e) {
                    if (n.exportAs)
                        for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
                    lr(n) && (e[""] = t)
                }
            }

            function vD(t, n, e) {
                t.flags |= 1, t.directiveStart = n, t.directiveEnd = n + e, t.providerIndexes = n
            }

            function wD(t, n, e, i, r) {
                t.data[i] = r;
                const s = r.factory || (r.factory = Po(r.type)),
                    o = new Dc(s, lr(r), u);
                t.blueprint[i] = o, e[i] = o, _D(t, n, 0, i, Za(t, e, r.hostVars, Be), r)
            }

            function cV(t, n, e) {
                const i = _i(n, t),
                    r = hD(e),
                    s = t[10],
                    o = vh(t, yh(t, r, null, e.onPush ? 32 : 16, i, n, s, s.createRenderer(i, e), null, null, null));
                t[n.index] = o
            }

            function Ir(t, n, e, i, r, s) {
                const o = _i(t, n);
                ! function w_(t, n, e, i, r, s, o) {
                    if (null == s) t.removeAttribute(n, r, e);
                    else {
                        const a = null == o ? Ne(s) : o(s, i || "", r);
                        t.setAttribute(n, r, a, e)
                    }
                }(n[11], o, s, t.value, e, i, r)
            }

            function dV(t, n, e, i, r, s) {
                const o = s[n];
                if (null !== o) {
                    const a = i.setInput;
                    for (let l = 0; l < o.length;) {
                        const c = o[l++],
                            d = o[l++],
                            h = o[l++];
                        null !== a ? i.setInput(e, h, c, d) : e[d] = h
                    }
                }
            }

            function uV(t, n) {
                let e = null,
                    i = 0;
                for (; i < n.length;) {
                    const r = n[i];
                    if (0 !== r)
                        if (5 !== r) {
                            if ("number" == typeof r) break;
                            t.hasOwnProperty(r) && (null === e && (e = []), e.push(r, t[r], n[i + 1])), i += 2
                        } else i += 2;
                    else i += 4
                }
                return e
            }

            function CD(t, n, e, i) {
                return new Array(t, !0, !1, n, null, 0, i, e, null, null)
            }

            function pV(t, n) {
                const e = yi(n, t);
                if (ju(e)) {
                    const i = e[1];
                    48 & e[2] ? bh(i, e, i.template, e[8]) : e[5] > 0 && C_(e)
                }
            }

            function C_(t) {
                for (let i = Sg(t); null !== i; i = kg(i))
                    for (let r = 10; r < i.length; r++) {
                        const s = i[r];
                        if (ju(s))
                            if (512 & s[2]) {
                                const o = s[1];
                                bh(o, s, o.template, s[8])
                            } else s[5] > 0 && C_(s)
                    }
                const e = t[1].components;
                if (null !== e)
                    for (let i = 0; i < e.length; i++) {
                        const r = yi(e[i], t);
                        ju(r) && r[5] > 0 && C_(r)
                    }
            }

            function mV(t, n) {
                const e = yi(n, t),
                    i = e[1];
                (function gV(t, n) {
                    for (let e = n.length; e < t.blueprint.length; e++) n.push(t.blueprint[e])
                })(i, e), g_(i, e, e[8])
            }

            function vh(t, n) {
                return t[13] ? t[14][4] = n : t[13] = n, t[14] = n, n
            }

            function x_(t) {
                for (; t;) {
                    t[2] |= 32;
                    const n = Nc(t);
                    if (cL(t) && !n) return t;
                    t = n
                }
                return null
            }

            function wh(t, n, e, i = !0) {
                const r = n[10];
                r.begin && r.begin();
                try {
                    bh(t, n, t.template, e)
                } catch (o) {
                    throw i && SD(n, o), o
                } finally {
                    r.end && r.end()
                }
            }

            function D_(t, n, e) {
                ig(0), n(t, e)
            }

            function xD(t) {
                return t[7] || (t[7] = [])
            }

            function DD(t) {
                return t.cleanup || (t.cleanup = [])
            }

            function MD(t, n, e) {
                return (null === t || lr(t)) && (e = function bL(t) {
                    for (; Array.isArray(t);) {
                        if ("object" == typeof t[1]) return t;
                        t = t[0]
                    }
                    return null
                }(e[n.index])), e[11]
            }

            function SD(t, n) {
                const e = t[9],
                    i = e ? e.get(ss, null) : null;
                i && i.handleError(n)
            }

            function M_(t, n, e, i, r) {
                for (let s = 0; s < e.length;) {
                    const o = e[s++],
                        a = e[s++],
                        l = n[o],
                        c = t.data[o];
                    null !== c.setInput ? c.setInput(l, r, i, a) : l[a] = r
                }
            }

            function ls(t, n, e) {
                const i = $u(n, t);
                ! function X0(t, n, e) {
                    t.setValue(n, e)
                }(t[11], i, e)
            }

            function Ch(t, n, e) {
                let i = e ? t.styles : null,
                    r = e ? t.classes : null,
                    s = 0;
                if (null !== n)
                    for (let o = 0; o < n.length; o++) {
                        const a = n[o];
                        "number" == typeof a ? s = a : 1 == s ? r = Bm(r, a) : 2 == s && (i = Bm(i, a + ": " + n[++o] + ";"))
                    }
                e ? t.styles = i : t.stylesWithoutHost = i, e ? t.classes = r : t.classesWithoutHost = r
            }

            function xh(t, n, e, i, r = !1) {
                for (; null !== e;) {
                    const s = n[e.index];
                    if (null !== s && i.push(Jt(s)), ar(s))
                        for (let a = 10; a < s.length; a++) {
                            const l = s[a],
                                c = l[1].firstChild;
                            null !== c && xh(l[1], l, c, i)
                        }
                    const o = e.type;
                    if (8 & o) xh(t, n, e.child, i);
                    else if (32 & o) {
                        const a = Mg(e, n);
                        let l;
                        for (; l = a();) i.push(l)
                    } else if (16 & o) {
                        const a = cx(n, e);
                        if (Array.isArray(a)) i.push(...a);
                        else {
                            const l = Nc(n[16]);
                            xh(l[1], l, a, i, !0)
                        }
                    }
                    e = r ? e.projectionNext : e.next
                }
                return i
            }
            class jc {
                constructor(n, e) {
                    this._lView = n, this._cdRefInjectingView = e, this._appRef = null, this._attachedToViewContainer = !1
                }
                get rootNodes() {
                    const n = this._lView,
                        e = n[1];
                    return xh(e, n, e.firstChild, [])
                }
                get context() {
                    return this._lView[8]
                }
                set context(n) {
                    this._lView[8] = n
                }
                get destroyed() {
                    return 128 == (128 & this._lView[2])
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const n = this._lView[3];
                        if (ar(n)) {
                            const e = n[8],
                                i = e ? e.indexOf(this) : -1;
                            i > -1 && (Tg(n, i), Ju(e, i))
                        }
                        this._attachedToViewContainer = !1
                    }
                    ex(this._lView[1], this._lView)
                }
                onDestroy(n) {
                    fD(this._lView[1], this._lView, null, n)
                }
                markForCheck() {
                    x_(this._cdRefInjectingView || this._lView)
                }
                detach() {
                    this._lView[2] &= -65
                }
                reattach() {
                    this._lView[2] |= 64
                }
                detectChanges() {
                    wh(this._lView[1], this._lView, this.context)
                }
                checkNoChanges() {}
                attachToViewContainerRef() {
                    if (this._appRef) throw new B(902, !1);
                    this._attachedToViewContainer = !0
                }
                detachFromAppRef() {
                    this._appRef = null,
                        function Q2(t, n) {
                            Bc(t, n, n[11], 2, null, null)
                        }(this._lView[1], this._lView)
                }
                attachToAppRef(n) {
                    if (this._attachedToViewContainer) throw new B(902, !1);
                    this._appRef = n
                }
            }
            class _V extends jc {
                constructor(n) {
                    super(n), this._view = n
                }
                detectChanges() {
                    const n = this._view;
                    wh(n[1], n, n[8], !1)
                }
                checkNoChanges() {}
                get context() {
                    return null
                }
            }
            class S_ extends Ci {
                constructor(n) {
                    super(), this.ngModule = n
                }
                resolveComponentFactory(n) {
                    const e = yt(n);
                    return new zc(e, this.ngModule)
                }
            }

            function kD(t) {
                const n = [];
                for (let e in t) t.hasOwnProperty(e) && n.push({
                    propName: t[e],
                    templateName: e
                });
                return n
            }
            class bV {
                constructor(n, e) {
                    this.injector = n, this.parentInjector = e
                }
                get(n, e, i) {
                    const r = this.injector.get(n, Xg, i);
                    return r !== Xg || e === Xg ? r : this.parentInjector.get(n, e, i)
                }
            }
            class zc extends Rx {
                constructor(n, e) {
                    super(), this.componentDef = n, this.ngModule = e, this.componentType = n.type, this.selector = function yB(t) {
                        return t.map(_B).join(",")
                    }(n.selectors), this.ngContentSelectors = n.ngContentSelectors ? n.ngContentSelectors : [], this.isBoundToModule = !!e
                }
                get inputs() {
                    return kD(this.componentDef.inputs)
                }
                get outputs() {
                    return kD(this.componentDef.outputs)
                }
                create(n, e, i, r) {
                    let s = (r = r || this.ngModule) instanceof Hs ? r : r ? .injector;
                    s && null !== this.componentDef.getStandaloneInjector && (s = this.componentDef.getStandaloneInjector(s) || s);
                    const o = s ? new bV(n, s) : n,
                        a = o.get($c, null);
                    if (null === a) throw new B(407, !1);
                    const l = o.get(XN, null),
                        c = a.createRenderer(null, this.componentDef),
                        d = this.componentDef.selectors[0][0] || "div",
                        h = i ? function XB(t, n, e) {
                            return t.selectRootElement(n, e === sr.ShadowDom)
                        }(c, i, this.componentDef.encapsulation) : Eg(c, d, function yV(t) {
                            const n = t.toLowerCase();
                            return "svg" === n ? "svg" : "math" === n ? "math" : null
                        }(d)),
                        m = this.componentDef.onPush ? 288 : 272,
                        _ = b_(0, null, null, 1, 0, null, null, null, null, null),
                        v = yh(null, _, null, m, null, null, a, c, l, o, null);
                    let D, k;
                    rg(v);
                    try {
                        const S = function CV(t, n, e, i, r, s) {
                            const o = e[1];
                            e[22] = t;
                            const l = Ka(o, 22, 2, "#host", null),
                                c = l.mergedAttrs = n.hostAttrs;
                            null !== c && (Ch(l, c, !0), null !== t && (Wu(r, t, c), null !== l.classes && Lg(r, t, l.classes), null !== l.styles && ux(r, t, l.styles)));
                            const d = i.createRenderer(t, n),
                                h = yh(e, hD(n), null, n.onPush ? 32 : 16, e[22], l, i, d, s || null, null, null);
                            return o.firstCreatePass && (Ku(Sc(l, e), o, n.type), bD(o, l), vD(l, e.length, 1)), vh(e, h), e[22] = h
                        }(h, this.componentDef, v, a, c);
                        if (h)
                            if (i) Wu(c, h, ["ng-version", JN.full]);
                            else {
                                const {
                                    attrs: L,
                                    classes: F
                                } = function bB(t) {
                                    const n = [],
                                        e = [];
                                    let i = 1,
                                        r = 2;
                                    for (; i < t.length;) {
                                        let s = t[i];
                                        if ("string" == typeof s) 2 === r ? "" !== s && n.push(s, t[++i]) : 8 === r && e.push(s);
                                        else {
                                            if (!cr(r)) break;
                                            r = s
                                        }
                                        i++
                                    }
                                    return {
                                        attrs: n,
                                        classes: e
                                    }
                                }(this.componentDef.selectors[0]);
                                L && Wu(c, h, L), F && F.length > 0 && Lg(c, h, F.join(" "))
                            }
                        if (k = Zm(_, 22), void 0 !== e) {
                            const L = k.projection = [];
                            for (let F = 0; F < this.ngContentSelectors.length; F++) {
                                const K = e[F];
                                L.push(null != K ? Array.from(K) : null)
                            }
                        }
                        D = function xV(t, n, e, i) {
                            const r = e[1],
                                s = function nV(t, n, e) {
                                    const i = on();
                                    t.firstCreatePass && (e.providersResolver && e.providersResolver(e), wD(t, i, n, Za(t, n, 1, null), e), mD(t, i));
                                    const r = kc(n, t, i.directiveStart, i);
                                    In(r, n);
                                    const s = _i(i, n);
                                    return s && In(s, n), r
                                }(r, e, n);
                            if (t[8] = e[8] = s, null !== i)
                                for (const a of i) a(s, n);
                            if (n.contentQueries) {
                                const a = on();
                                n.contentQueries(1, s, a.directiveStart)
                            }
                            const o = on();
                            return !r.firstCreatePass || null === n.hostBindings && null === n.hostAttrs || (Bs(o.index), _D(e[1], o, 0, o.directiveStart, o.directiveEnd, n), yD(n, s)), s
                        }(S, this.componentDef, v, [DV]), g_(_, v, null)
                    } finally {
                        sg()
                    }
                    return new wV(this.componentType, D, qa(k, v), v, k)
                }
            }
            class wV extends class WN {} {
                constructor(n, e, i, r, s) {
                    super(), this.location = i, this._rootLView = r, this._tNode = s, this.instance = e, this.hostView = this.changeDetectorRef = new _V(r), this.componentType = n
                }
                setInput(n, e) {
                    const i = this._tNode.inputs;
                    let r;
                    if (null !== i && (r = i[n])) {
                        const s = this._rootLView;
                        M_(s[1], s, r, n, e), gD(s, this._tNode.index)
                    }
                }
                get injector() {
                    return new Na(this._tNode, this._rootLView)
                }
                destroy() {
                    this.hostView.destroy()
                }
                onDestroy(n) {
                    this.hostView.onDestroy(n)
                }
            }

            function DV() {
                const t = on();
                zu($()[1], t)
            }

            function A(t) {
                let n = function AD(t) {
                        return Object.getPrototypeOf(t.prototype).constructor
                    }(t.type),
                    e = !0;
                const i = [t];
                for (; n;) {
                    let r;
                    if (lr(t)) r = n.\u0275cmp || n.\u0275dir;
                    else {
                        if (n.\u0275cmp) throw new B(903, !1);
                        r = n.\u0275dir
                    }
                    if (r) {
                        if (e) {
                            i.push(r);
                            const o = t;
                            o.inputs = k_(t.inputs), o.declaredInputs = k_(t.declaredInputs), o.outputs = k_(t.outputs);
                            const a = r.hostBindings;
                            a && AV(t, a);
                            const l = r.viewQuery,
                                c = r.contentQueries;
                            if (l && SV(t, l), c && kV(t, c), Nm(t.inputs, r.inputs), Nm(t.declaredInputs, r.declaredInputs), Nm(t.outputs, r.outputs), lr(r) && r.data.animation) {
                                const d = t.data;
                                d.animation = (d.animation || []).concat(r.data.animation)
                            }
                        }
                        const s = r.features;
                        if (s)
                            for (let o = 0; o < s.length; o++) {
                                const a = s[o];
                                a && a.ngInherit && a(t), a === A && (e = !1)
                            }
                    }
                    n = Object.getPrototypeOf(n)
                }! function MV(t) {
                    let n = 0,
                        e = null;
                    for (let i = t.length - 1; i >= 0; i--) {
                        const r = t[i];
                        r.hostVars = n += r.hostVars, r.hostAttrs = qu(r.hostAttrs, e = qu(e, r.hostAttrs))
                    }
                }(i)
            }

            function k_(t) {
                return t === ka ? {} : t === dt ? [] : t
            }

            function SV(t, n) {
                const e = t.viewQuery;
                t.viewQuery = e ? (i, r) => {
                    n(i, r), e(i, r)
                } : n
            }

            function kV(t, n) {
                const e = t.contentQueries;
                t.contentQueries = e ? (i, r, s) => {
                    n(i, r, s), e(i, r, s)
                } : n
            }

            function AV(t, n) {
                const e = t.hostBindings;
                t.hostBindings = e ? (i, r) => {
                    n(i, r), e(i, r)
                } : n
            }
            let Dh = null;

            function Ho() {
                if (!Dh) {
                    const t = At.Symbol;
                    if (t && t.iterator) Dh = t.iterator;
                    else {
                        const n = Object.getOwnPropertyNames(Map.prototype);
                        for (let e = 0; e < n.length; ++e) {
                            const i = n[e];
                            "entries" !== i && "size" !== i && Map.prototype[i] === Map.prototype.entries && (Dh = i)
                        }
                    }
                }
                return Dh
            }

            function Uc(t) {
                return !!A_(t) && (Array.isArray(t) || !(t instanceof Map) && Ho() in t)
            }

            function A_(t) {
                return null !== t && ("function" == typeof t || "object" == typeof t)
            }

            function Rr(t, n, e) {
                return t[n] = e
            }

            function Rn(t, n, e) {
                return !Object.is(t[n], e) && (t[n] = e, !0)
            }

            function $o(t, n, e, i) {
                const r = Rn(t, n, e);
                return Rn(t, n + 1, i) || r
            }

            function q(t, n, e, i) {
                const r = $();
                return Rn(r, Fa(), n) && (nt(), Ir(Vt(), r, t, n, e, i)), q
            }

            function Ja(t, n, e, i) {
                return Rn(t, Fa(), e) ? n + Ne(e) + i : Be
            }

            function el(t, n, e, i, r, s) {
                const a = $o(t, ts(), e, r);
                return ns(2), a ? n + Ne(e) + i + Ne(r) + s : Be
            }

            function tl(t, n, e, i, r, s, o, a) {
                const c = function Mh(t, n, e, i, r) {
                    const s = $o(t, n, e, i);
                    return Rn(t, n + 2, r) || s
                }(t, ts(), e, r, o);
                return ns(3), c ? n + Ne(e) + i + Ne(r) + s + Ne(o) + a : Be
            }

            function b(t, n, e, i, r, s, o, a) {
                const l = $(),
                    c = nt(),
                    d = t + 22,
                    h = c.firstCreatePass ? function LV(t, n, e, i, r, s, o, a, l) {
                        const c = n.consts,
                            d = Ka(n, t, 4, o || null, Ns(c, a));
                        v_(n, e, d, Ns(c, l)), zu(n, d);
                        const h = d.tViews = b_(2, d, i, r, s, n.directiveRegistry, n.pipeRegistry, null, n.schemas, c);
                        return null !== n.queries && (n.queries.template(n, d), h.queries = n.queries.embeddedTView(d)), d
                    }(d, c, l, n, e, i, r, s, o) : c.data[d];
                Ar(h, !1);
                const m = l[11].createComment("");
                sh(c, l, m, h), In(m, l), vh(l, l[d] = CD(m, l, m, h)), Hu(h) && __(c, l, h), null != o && y_(l, h, a)
            }

            function bt(t) {
                return Ra(function AL() {
                    return Le.lFrame.contextLView
                }(), 22 + t)
            }

            function y(t, n, e) {
                const i = $();
                return Rn(i, Fa(), n) && xi(nt(), Vt(), i, t, n, i[11], e, !1), y
            }

            function E_(t, n, e, i, r) {
                const o = r ? "class" : "style";
                M_(t, e, n.inputs[o], o, i)
            }

            function f(t, n, e, i) {
                const r = $(),
                    s = nt(),
                    o = 22 + t,
                    a = r[11],
                    l = r[o] = Eg(a, n, function NL() {
                        return Le.lFrame.currentNamespace
                    }()),
                    c = s.firstCreatePass ? function BV(t, n, e, i, r, s, o) {
                        const a = n.consts,
                            c = Ka(n, t, 2, r, Ns(a, s));
                        return v_(n, e, c, Ns(a, o)), null !== c.attrs && Ch(c, c.attrs, !1), null !== c.mergedAttrs && Ch(c, c.mergedAttrs, !0), null !== n.queries && n.queries.elementStart(n, c), c
                    }(o, s, r, 0, n, e, i) : s.data[o];
                Ar(c, !0);
                const d = c.mergedAttrs;
                null !== d && Wu(a, l, d);
                const h = c.classes;
                null !== h && Lg(a, l, h);
                const m = c.styles;
                return null !== m && ux(a, l, m), 64 != (64 & c.flags) && sh(s, r, l, c), 0 === function xL() {
                        return Le.lFrame.elementDepthCount
                    }() && In(l, r),
                    function DL() {
                        Le.lFrame.elementDepthCount++
                    }(), Hu(c) && (__(s, r, c), uD(s, c, r)), null !== i && y_(r, c), f
            }

            function g() {
                let t = on();
                Jm() ? eg() : (t = t.parent, Ar(t, !1));
                const n = t;
                ! function ML() {
                    Le.lFrame.elementDepthCount--
                }();
                const e = nt();
                return e.firstCreatePass && (zu(e, t), Wm(t) && e.queries.elementEnd(t)), null != n.classesWithoutHost && function jL(t) {
                    return 0 != (16 & t.flags)
                }(n) && E_(e, n, $(), n.classesWithoutHost, !0), null != n.stylesWithoutHost && function zL(t) {
                    return 0 != (32 & t.flags)
                }(n) && E_(e, n, $(), n.stylesWithoutHost, !1), g
            }

            function E(t, n, e, i) {
                return f(t, n, e, i), g(), E
            }

            function oe(t, n, e) {
                const i = $(),
                    r = nt(),
                    s = t + 22,
                    o = r.firstCreatePass ? function VV(t, n, e, i, r) {
                        const s = n.consts,
                            o = Ns(s, i),
                            a = Ka(n, t, 8, "ng-container", o);
                        return null !== o && Ch(a, o, !0), v_(n, e, a, Ns(s, r)), null !== n.queries && n.queries.elementStart(n, a), a
                    }(s, r, i, n, e) : r.data[s];
                Ar(o, !0);
                const a = i[s] = i[11].createComment("");
                return sh(r, i, a, o), In(a, i), Hu(o) && (__(r, i, o), uD(r, o, i)), null != e && y_(i, o), oe
            }

            function ae() {
                let t = on();
                const n = nt();
                return Jm() ? eg() : (t = t.parent, Ar(t, !1)), n.firstCreatePass && (zu(n, t), Wm(t) && n.queries.elementEnd(t)), ae
            }

            function Wt(t, n, e) {
                return oe(t, n, e), ae(), Wt
            }

            function ye() {
                return $()
            }

            function Wc(t) {
                return !!t && "function" == typeof t.then
            }

            function BD(t) {
                return !!t && "function" == typeof t.subscribe
            }
            const T_ = BD;

            function T(t, n, e, i) {
                const r = $(),
                    s = nt(),
                    o = on();
                return VD(s, r, r[11], o, t, n, 0, i), T
            }

            function qc(t, n) {
                const e = on(),
                    i = $(),
                    r = nt();
                return VD(r, i, MD(ng(r.data), e, i), e, t, n), qc
            }

            function VD(t, n, e, i, r, s, o, a) {
                const l = Hu(i),
                    d = t.firstCreatePass && DD(t),
                    h = n[8],
                    m = xD(n);
                let _ = !0;
                if (3 & i.type || a) {
                    const k = _i(i, n),
                        S = a ? a(k) : k,
                        L = m.length,
                        F = a ? Ce => a(Jt(Ce[i.index])) : i.index;
                    let K = null;
                    if (!a && l && (K = function HV(t, n, e, i) {
                            const r = t.cleanup;
                            if (null != r)
                                for (let s = 0; s < r.length - 1; s += 2) {
                                    const o = r[s];
                                    if (o === e && r[s + 1] === i) {
                                        const a = n[7],
                                            l = r[s + 2];
                                        return a.length > l ? a[l] : null
                                    }
                                    "string" == typeof o && (s += 2)
                                }
                            return null
                        }(t, n, r, i.index)), null !== K)(K.__ngLastListenerFn__ || K).__ngNextListenerFn__ = s, K.__ngLastListenerFn__ = s, _ = !1;
                    else {
                        s = $D(i, n, h, s, !1);
                        const Ce = e.listen(S, r, s);
                        m.push(s, Ce), d && d.push(r, F, L, L + 1)
                    }
                } else s = $D(i, n, h, s, !1);
                const v = i.outputs;
                let D;
                if (_ && null !== v && (D = v[r])) {
                    const k = D.length;
                    if (k)
                        for (let S = 0; S < k; S += 2) {
                            const Pe = n[D[S]][D[S + 1]].subscribe(s),
                                wt = m.length;
                            m.push(s, Pe), d && d.push(r, i.index, wt, -(wt + 1))
                        }
                }
            }

            function HD(t, n, e, i) {
                try {
                    return !1 !== e(i)
                } catch (r) {
                    return SD(t, r), !1
                }
            }

            function $D(t, n, e, i, r) {
                return function s(o) {
                    if (o === Function) return i;
                    x_(2 & t.flags ? yi(t.index, n) : n);
                    let l = HD(n, 0, i, o),
                        c = s.__ngNextListenerFn__;
                    for (; c;) l = HD(n, 0, c, o) && l, c = c.__ngNextListenerFn__;
                    return r && !1 === l && (o.preventDefault(), o.returnValue = !1), l
                }
            }

            function x(t = 1) {
                return function FL(t) {
                    return (Le.lFrame.contextLView = function OL(t, n) {
                        for (; t > 0;) n = n[15], t--;
                        return n
                    }(t, Le.lFrame.contextLView))[8]
                }(t)
            }

            function $V(t, n) {
                let e = null;
                const i = function fB(t) {
                    const n = t.attrs;
                    if (null != n) {
                        const e = n.indexOf(5);
                        if (0 == (1 & e)) return n[e + 1]
                    }
                    return null
                }(t);
                for (let r = 0; r < n.length; r++) {
                    const s = n[r];
                    if ("*" !== s) {
                        if (null === i ? Vx(t, s, !0) : gB(i, s)) return r
                    } else e = r
                }
                return e
            }

            function Xe(t) {
                const n = $()[16][6];
                if (!n.projection) {
                    const i = n.projection = Tc(t ? t.length : 1, null),
                        r = i.slice();
                    let s = n.child;
                    for (; null !== s;) {
                        const o = t ? $V(s, t) : 0;
                        null !== o && (r[o] ? r[o].projectionNext = s : i[o] = s, r[o] = s), s = s.next
                    }
                }
            }

            function me(t, n = 0, e) {
                const i = $(),
                    r = nt(),
                    s = Ka(r, 22 + t, 16, null, e || null);
                null === s.projection && (s.projection = n), eg(), 64 != (64 & s.flags) && function iN(t, n, e) {
                    dx(n[11], 0, n, e, tx(t, e, n), sx(e.parent || n[6], e, n))
                }(r, i, s)
            }

            function Ge(t, n, e) {
                return Yc(t, "", n, "", e), Ge
            }

            function Yc(t, n, e, i, r) {
                const s = $(),
                    o = Ja(s, n, e, i);
                return o !== Be && xi(nt(), Vt(), s, t, o, s[11], r, !1), Yc
            }

            function Sh(t, n, e, i, r, s, o) {
                const a = $(),
                    l = el(a, n, e, i, r, s);
                return l !== Be && xi(nt(), Vt(), a, t, l, a[11], o, !1), Sh
            }

            function QD(t, n, e, i, r) {
                const s = t[e + 1],
                    o = null === n;
                let a = i ? ur(s) : as(s),
                    l = !1;
                for (; 0 !== a && (!1 === l || o);) {
                    const d = t[a + 1];
                    UV(t[a], n) && (l = !0, t[a + 1] = i ? a_(d) : s_(d)), a = i ? ur(d) : as(d)
                }
                l && (t[e + 1] = i ? s_(s) : a_(s))
            }

            function UV(t, n) {
                return null === t || null == n || (Array.isArray(t) ? t[1] : t) === n || !(!Array.isArray(t) || "string" != typeof n) && ja(t, n) >= 0
            }
            const ln = {
                textEnd: 0,
                key: 0,
                keyEnd: 0,
                value: 0,
                valueEnd: 0
            };

            function KD(t) {
                return t.substring(ln.key, ln.keyEnd)
            }

            function GV(t) {
                return t.substring(ln.value, ln.valueEnd)
            }

            function ZD(t, n) {
                const e = ln.textEnd;
                return e === n ? -1 : (n = ln.keyEnd = function YV(t, n, e) {
                    for (; n < e && t.charCodeAt(n) > 32;) n++;
                    return n
                }(t, ln.key = n, e), al(t, n, e))
            }

            function XD(t, n) {
                const e = ln.textEnd;
                let i = ln.key = al(t, n, e);
                return e === i ? -1 : (i = ln.keyEnd = function QV(t, n, e) {
                    let i;
                    for (; n < e && (45 === (i = t.charCodeAt(n)) || 95 === i || (-33 & i) >= 65 && (-33 & i) <= 90 || i >= 48 && i <= 57);) n++;
                    return n
                }(t, i, e), i = eM(t, i, e), i = ln.value = al(t, i, e), i = ln.valueEnd = function KV(t, n, e) {
                    let i = -1,
                        r = -1,
                        s = -1,
                        o = n,
                        a = o;
                    for (; o < e;) {
                        const l = t.charCodeAt(o++);
                        if (59 === l) return a;
                        34 === l || 39 === l ? a = o = tM(t, l, o, e) : n === o - 4 && 85 === s && 82 === r && 76 === i && 40 === l ? a = o = tM(t, 41, o, e) : l > 32 && (a = o), s = r, r = i, i = -33 & l
                    }
                    return a
                }(t, i, e), eM(t, i, e))
            }

            function JD(t) {
                ln.key = 0, ln.keyEnd = 0, ln.value = 0, ln.valueEnd = 0, ln.textEnd = t.length
            }

            function al(t, n, e) {
                for (; n < e && t.charCodeAt(n) <= 32;) n++;
                return n
            }

            function eM(t, n, e, i) {
                return (n = al(t, n, e)) < e && n++, n
            }

            function tM(t, n, e, i) {
                let r = -1,
                    s = e;
                for (; s < i;) {
                    const o = t.charCodeAt(s++);
                    if (o == n && 92 !== r) return s;
                    r = 92 == o && 92 === r ? 0 : o
                }
                throw new Error
            }

            function Kt(t, n, e) {
                return hr(t, n, e, !1), Kt
            }

            function re(t, n) {
                return hr(t, n, null, !0), re
            }

            function Fn(t) {
                fr(rM, ZV, t, !1)
            }

            function ZV(t, n) {
                for (let e = function qV(t) {
                        return JD(t), XD(t, al(t, 0, ln.textEnd))
                    }(n); e >= 0; e = XD(n, e)) rM(t, KD(n), GV(n))
            }

            function Fr(t) {
                fr(vi, Or, t, !0)
            }

            function Or(t, n) {
                for (let e = function WV(t) {
                        return JD(t), ZD(t, al(t, 0, ln.textEnd))
                    }(n); e >= 0; e = ZD(n, e)) vi(t, KD(n), !0)
            }

            function hr(t, n, e, i) {
                const r = $(),
                    s = nt(),
                    o = ns(2);
                s.firstUpdatePass && iM(s, t, o, i), n !== Be && Rn(r, o, n) && sM(s, s.data[Gn()], r, r[11], t, r[o + 1] = function s3(t, n) {
                    return null == t || ("string" == typeof n ? t += n : "object" == typeof t && (t = Dt(wi(t)))), t
                }(n, e), i, o)
            }

            function fr(t, n, e, i) {
                const r = nt(),
                    s = ns(2);
                r.firstUpdatePass && iM(r, null, s, i);
                const o = $();
                if (e !== Be && Rn(o, s, e)) {
                    const a = r.data[Gn()];
                    if (aM(a, i) && !nM(r, s)) {
                        let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
                        null !== l && (e = Bm(l, e || "")), E_(r, a, o, e, i)
                    } else ! function r3(t, n, e, i, r, s, o, a) {
                        r === Be && (r = dt);
                        let l = 0,
                            c = 0,
                            d = 0 < r.length ? r[0] : null,
                            h = 0 < s.length ? s[0] : null;
                        for (; null !== d || null !== h;) {
                            const m = l < r.length ? r[l + 1] : void 0,
                                _ = c < s.length ? s[c + 1] : void 0;
                            let D, v = null;
                            d === h ? (l += 2, c += 2, m !== _ && (v = h, D = _)) : null === h || null !== d && d < h ? (l += 2, v = d) : (c += 2, v = h, D = _), null !== v && sM(t, n, e, i, v, D, o, a), d = l < r.length ? r[l] : null, h = c < s.length ? s[c] : null
                        }
                    }(r, a, o, o[11], o[s + 1], o[s + 1] = function n3(t, n, e) {
                        if (null == e || "" === e) return dt;
                        const i = [],
                            r = wi(e);
                        if (Array.isArray(r))
                            for (let s = 0; s < r.length; s++) t(i, r[s], !0);
                        else if ("object" == typeof r)
                            for (const s in r) r.hasOwnProperty(s) && t(i, s, r[s]);
                        else "string" == typeof r && n(i, r);
                        return i
                    }(t, n, e), i, s)
                }
            }

            function nM(t, n) {
                return n >= t.expandoStartIndex
            }

            function iM(t, n, e, i) {
                const r = t.data;
                if (null === r[e + 1]) {
                    const s = r[Gn()],
                        o = nM(t, e);
                    aM(s, i) && null === n && !o && (n = !1), n = function XV(t, n, e, i) {
                            const r = ng(t);
                            let s = i ? n.residualClasses : n.residualStyles;
                            if (null === r) 0 === (i ? n.classBindings : n.styleBindings) && (e = Qc(e = I_(null, t, n, e, i), n.attrs, i), s = null);
                            else {
                                const o = n.directiveStylingLast;
                                if (-1 === o || t[o] !== r)
                                    if (e = I_(r, t, n, e, i), null === s) {
                                        let l = function JV(t, n, e) {
                                            const i = e ? n.classBindings : n.styleBindings;
                                            if (0 !== as(i)) return t[ur(i)]
                                        }(t, n, i);
                                        void 0 !== l && Array.isArray(l) && (l = I_(null, t, n, l[1], i), l = Qc(l, n.attrs, i), function e3(t, n, e, i) {
                                            t[ur(e ? n.classBindings : n.styleBindings)] = i
                                        }(t, n, i, l))
                                    } else s = function t3(t, n, e) {
                                        let i;
                                        const r = n.directiveEnd;
                                        for (let s = 1 + n.directiveStylingLast; s < r; s++) i = Qc(i, t[s].hostAttrs, e);
                                        return Qc(i, n.attrs, e)
                                    }(t, n, i)
                            }
                            return void 0 !== s && (i ? n.residualClasses = s : n.residualStyles = s), e
                        }(r, s, n, i),
                        function jV(t, n, e, i, r, s) {
                            let o = s ? n.classBindings : n.styleBindings,
                                a = ur(o),
                                l = as(o);
                            t[i] = e;
                            let d, c = !1;
                            if (Array.isArray(e)) {
                                const h = e;
                                d = h[1], (null === d || ja(h, d) > 0) && (c = !0)
                            } else d = e;
                            if (r)
                                if (0 !== l) {
                                    const m = ur(t[a + 1]);
                                    t[i + 1] = mh(m, a), 0 !== m && (t[m + 1] = o_(t[m + 1], i)), t[a + 1] = function BB(t, n) {
                                        return 131071 & t | n << 17
                                    }(t[a + 1], i)
                                } else t[i + 1] = mh(a, 0), 0 !== a && (t[a + 1] = o_(t[a + 1], i)), a = i;
                            else t[i + 1] = mh(l, 0), 0 === a ? a = i : t[l + 1] = o_(t[l + 1], i), l = i;
                            c && (t[i + 1] = s_(t[i + 1])), QD(t, d, i, !0), QD(t, d, i, !1),
                                function zV(t, n, e, i, r) {
                                    const s = r ? t.residualClasses : t.residualStyles;
                                    null != s && "string" == typeof n && ja(s, n) >= 0 && (e[i + 1] = a_(e[i + 1]))
                                }(n, d, t, i, s), o = mh(a, l), s ? n.classBindings = o : n.styleBindings = o
                        }(r, s, n, e, o, i)
                }
            }

            function I_(t, n, e, i, r) {
                let s = null;
                const o = e.directiveEnd;
                let a = e.directiveStylingLast;
                for (-1 === a ? a = e.directiveStart : a++; a < o && (s = n[a], i = Qc(i, s.hostAttrs, r), s !== t);) a++;
                return null !== t && (e.directiveStylingLast = a), i
            }

            function Qc(t, n, e) {
                const i = e ? 1 : 2;
                let r = -1;
                if (null !== n)
                    for (let s = 0; s < n.length; s++) {
                        const o = n[s];
                        "number" == typeof o ? r = o : r === i && (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]), vi(t, o, !!e || n[++s]))
                    }
                return void 0 === t ? null : t
            }

            function rM(t, n, e) {
                vi(t, n, wi(e))
            }

            function sM(t, n, e, i, r, s, o, a) {
                if (!(3 & n.type)) return;
                const l = t.data,
                    c = l[a + 1];
                kh(function tD(t) {
                    return 1 == (1 & t)
                }(c) ? oM(l, n, e, r, as(c), o) : void 0) || (kh(s) || function eD(t) {
                    return 2 == (2 & t)
                }(c) && (s = oM(l, null, e, r, a, o)), function sN(t, n, e, i, r) {
                    if (n) r ? t.addClass(e, i) : t.removeClass(e, i);
                    else {
                        let s = -1 === i.indexOf("-") ? void 0 : ri.DashCase;
                        null == r ? t.removeStyle(e, i, s) : ("string" == typeof r && r.endsWith("!important") && (r = r.slice(0, -10), s |= ri.Important), t.setStyle(e, i, r, s))
                    }
                }(i, o, $u(Gn(), e), r, s))
            }

            function oM(t, n, e, i, r, s) {
                const o = null === n;
                let a;
                for (; r > 0;) {
                    const l = t[r],
                        c = Array.isArray(l),
                        d = c ? l[1] : l,
                        h = null === d;
                    let m = e[r + 1];
                    m === Be && (m = h ? dt : void 0);
                    let _ = h ? fg(m, i) : d === i ? m : void 0;
                    if (c && !kh(_) && (_ = fg(l, i)), kh(_) && (a = _, o)) return a;
                    const v = t[r + 1];
                    r = o ? ur(v) : as(v)
                }
                if (null !== n) {
                    let l = s ? n.residualClasses : n.residualStyles;
                    null != l && (a = fg(l, i))
                }
                return a
            }

            function kh(t) {
                return void 0 !== t
            }

            function aM(t, n) {
                return 0 != (t.flags & (n ? 16 : 32))
            }

            function w(t, n = "") {
                const e = $(),
                    i = nt(),
                    r = t + 22,
                    s = i.firstCreatePass ? Ka(i, r, 1, n, null) : i.data[r],
                    o = e[r] = function Ag(t, n) {
                        return t.createText(n)
                    }(e[11], n);
                sh(i, e, o, s), Ar(s, !1)
            }

            function ve(t) {
                return X("", t, ""), ve
            }

            function X(t, n, e) {
                const i = $(),
                    r = Ja(i, t, n, e);
                return r !== Be && ls(i, Gn(), r), X
            }

            function cs(t, n, e, i, r) {
                const s = $(),
                    o = el(s, t, n, e, i, r);
                return o !== Be && ls(s, Gn(), o), cs
            }

            function R_(t, n, e, i, r, s, o) {
                const a = $(),
                    l = tl(a, t, n, e, i, r, s, o);
                return l !== Be && ls(a, Gn(), l), R_
            }

            function F_(t, n, e) {
                fr(vi, Or, Ja($(), t, n, e), !0)
            }

            function xn(t, n, e) {
                const i = $();
                return Rn(i, Fa(), n) && xi(nt(), Vt(), i, t, n, i[11], e, !0), xn
            }

            function ll(t, n, e) {
                const i = $();
                if (Rn(i, Fa(), n)) {
                    const s = nt(),
                        o = Vt();
                    xi(s, o, i, t, n, MD(ng(s.data), o, i), e, !0)
                }
                return ll
            }
            const jo = void 0;
            var D3 = ["en", [
                    ["a", "p"],
                    ["AM", "PM"], jo
                ],
                [
                    ["AM", "PM"], jo, jo
                ],
                [
                    ["S", "M", "T", "W", "T", "F", "S"],
                    ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                ], jo, [
                    ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                ], jo, [
                    ["B", "A"],
                    ["BC", "AD"],
                    ["Before Christ", "Anno Domini"]
                ], 0, [6, 0],
                ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
                ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
                ["{1}, {0}", jo, "{1} 'at' {0}", jo],
                [".", ",", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"],
                ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"], "USD", "$", "US Dollar", {}, "ltr",
                function x3(t) {
                    const e = Math.floor(Math.abs(t)),
                        i = t.toString().replace(/^[^.]*\.?/, "").length;
                    return 1 === e && 0 === i ? 1 : 5
                }
            ];
            let cl = {};

            function Yn(t) {
                const n = function S3(t) {
                    return t.toLowerCase().replace(/_/g, "-")
                }(t);
                let e = DM(n);
                if (e) return e;
                const i = n.split("-")[0];
                if (e = DM(i), e) return e;
                if ("en" === i) return D3;
                throw new B(701, !1)
            }

            function DM(t) {
                return t in cl || (cl[t] = At.ng && At.ng.common && At.ng.common.locales && At.ng.common.locales[t]), cl[t]
            }
            var se = (() => ((se = se || {})[se.LocaleId = 0] = "LocaleId", se[se.DayPeriodsFormat = 1] = "DayPeriodsFormat", se[se.DayPeriodsStandalone = 2] = "DayPeriodsStandalone", se[se.DaysFormat = 3] = "DaysFormat", se[se.DaysStandalone = 4] = "DaysStandalone", se[se.MonthsFormat = 5] = "MonthsFormat", se[se.MonthsStandalone = 6] = "MonthsStandalone", se[se.Eras = 7] = "Eras", se[se.FirstDayOfWeek = 8] = "FirstDayOfWeek", se[se.WeekendRange = 9] = "WeekendRange", se[se.DateFormat = 10] = "DateFormat", se[se.TimeFormat = 11] = "TimeFormat", se[se.DateTimeFormat = 12] = "DateTimeFormat", se[se.NumberSymbols = 13] = "NumberSymbols", se[se.NumberFormats = 14] = "NumberFormats", se[se.CurrencyCode = 15] = "CurrencyCode", se[se.CurrencySymbol = 16] = "CurrencySymbol", se[se.CurrencyName = 17] = "CurrencyName", se[se.Currencies = 18] = "Currencies", se[se.Directionality = 19] = "Directionality", se[se.PluralCase = 20] = "PluralCase", se[se.ExtraData = 21] = "ExtraData", se))();
            const dl = "en-US";
            let MM = dl;

            function L_(t, n, e, i, r) {
                if (t = Ee(t), Array.isArray(t))
                    for (let s = 0; s < t.length; s++) L_(t[s], n, e, i, r);
                else {
                    const s = nt(),
                        o = $();
                    let a = Vo(t) ? t : Ee(t.provide),
                        l = Ix(t);
                    const c = on(),
                        d = 1048575 & c.providerIndexes,
                        h = c.directiveStart,
                        m = c.providerIndexes >> 20;
                    if (Vo(t) || !t.multi) {
                        const _ = new Dc(l, r, u),
                            v = B_(a, n, r ? d : d + m, h); - 1 === v ? (Ku(Sc(c, o), s, a), N_(s, t, n.length), n.push(a), c.directiveStart++, c.directiveEnd++, r && (c.providerIndexes += 1048576), e.push(_), o.push(_)) : (e[v] = _, o[v] = _)
                    } else {
                        const _ = B_(a, n, d + m, h),
                            v = B_(a, n, d, d + m),
                            D = _ >= 0 && e[_],
                            k = v >= 0 && e[v];
                        if (r && !k || !r && !D) {
                            Ku(Sc(c, o), s, a);
                            const S = function xH(t, n, e, i, r) {
                                const s = new Dc(t, e, u);
                                return s.multi = [], s.index = n, s.componentProviders = 0, KM(s, r, i && !e), s
                            }(r ? CH : wH, e.length, r, i, l);
                            !r && k && (e[v].providerFactory = S), N_(s, t, n.length, 0), n.push(a), c.directiveStart++, c.directiveEnd++, r && (c.providerIndexes += 1048576), e.push(S), o.push(S)
                        } else N_(s, t, _ > -1 ? _ : v, KM(e[r ? v : _], l, !r && i));
                        !r && i && k && e[v].componentProviders++
                    }
                }
            }

            function N_(t, n, e, i) {
                const r = Vo(n),
                    s = function BN(t) {
                        return !!t.useClass
                    }(n);
                if (r || s) {
                    const l = (s ? Ee(n.useClass) : n).prototype.ngOnDestroy;
                    if (l) {
                        const c = t.destroyHooks || (t.destroyHooks = []);
                        if (!r && n.multi) {
                            const d = c.indexOf(e); - 1 === d ? c.push(e, [i, l]) : c[d + 1].push(i, l)
                        } else c.push(e, l)
                    }
                }
            }

            function KM(t, n, e) {
                return e && t.componentProviders++, t.multi.push(n) - 1
            }

            function B_(t, n, e, i) {
                for (let r = e; r < i; r++)
                    if (n[r] === t) return r;
                return -1
            }

            function wH(t, n, e, i) {
                return V_(this.multi, [])
            }

            function CH(t, n, e, i) {
                const r = this.multi;
                let s;
                if (this.providerFactory) {
                    const o = this.providerFactory.componentProviders,
                        a = kc(e, e[1], this.providerFactory.index, i);
                    s = a.slice(0, o), V_(r, s);
                    for (let l = o; l < a.length; l++) s.push(a[l])
                } else s = [], V_(r, s);
                return s
            }

            function V_(t, n) {
                for (let e = 0; e < t.length; e++) n.push((0, t[e])());
                return n
            }

            function Q(t, n = []) {
                return e => {
                    e.providersResolver = (i, r) => function vH(t, n, e) {
                        const i = nt();
                        if (i.firstCreatePass) {
                            const r = lr(t);
                            L_(e, i.data, i.blueprint, r, !0), L_(n, i.data, i.blueprint, r, !1)
                        }
                    }(i, r ? r(t) : t, n)
                }
            }
            class zo {}
            class ZM {}
            class XM extends zo {
                constructor(n, e) {
                    super(), this._parent = e, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new S_(this);
                    const i = mi(n);
                    this._bootstrapComponents = os(i.bootstrap), this._r3Injector = Wx(n, e, [{
                        provide: zo,
                        useValue: this
                    }, {
                        provide: Ci,
                        useValue: this.componentFactoryResolver
                    }], Dt(n), new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(n)
                }
                get injector() {
                    return this._r3Injector
                }
                destroy() {
                    const n = this._r3Injector;
                    !n.destroyed && n.destroy(), this.destroyCbs.forEach(e => e()), this.destroyCbs = null
                }
                onDestroy(n) {
                    this.destroyCbs.push(n)
                }
            }
            class H_ extends ZM {
                constructor(n) {
                    super(), this.moduleType = n
                }
                create(n) {
                    return new XM(this.moduleType, n)
                }
            }
            class MH extends zo {
                constructor(n, e, i) {
                    super(), this.componentFactoryResolver = new S_(this), this.instance = null;
                    const r = new Tx([...n, {
                        provide: zo,
                        useValue: this
                    }, {
                        provide: Ci,
                        useValue: this.componentFactoryResolver
                    }], e || fh(), i, new Set(["environment"]));
                    this.injector = r, r.resolveInjectorInitializers()
                }
                destroy() {
                    this.injector.destroy()
                }
                onDestroy(n) {
                    this.injector.onDestroy(n)
                }
            }

            function Rh(t, n, e = null) {
                return new MH(t, n, e).injector
            }
            let SH = (() => {
                class t {
                    constructor(e) {
                        this._injector = e, this.cachedInjectors = new Map
                    }
                    getOrCreateStandaloneInjector(e) {
                        if (!e.standalone) return null;
                        if (!this.cachedInjectors.has(e.id)) {
                            const i = Sx(0, e.type),
                                r = i.length > 0 ? Rh([i], this._injector, `Standalone[${e.type.name}]`) : null;
                            this.cachedInjectors.set(e.id, r)
                        }
                        return this.cachedInjectors.get(e.id)
                    }
                    ngOnDestroy() {
                        try {
                            for (const e of this.cachedInjectors.values()) null !== e && e.destroy()
                        } finally {
                            this.cachedInjectors.clear()
                        }
                    }
                }
                return t.\u0275prov = I({
                    token: t,
                    providedIn: "environment",
                    factory: () => new t(C(Hs))
                }), t
            })();

            function JM(t) {
                t.getStandaloneInjector = n => n.get(SH).getOrCreateStandaloneInjector(t)
            }

            function td(t, n, e) {
                const i = Un() + t,
                    r = $();
                return r[i] === Be ? Rr(r, i, e ? n.call(e) : n()) : function Gc(t, n) {
                    return t[n]
                }(r, i)
            }

            function gn(t, n, e, i) {
                return oS($(), Un(), t, n, e, i)
            }

            function Uo(t, n, e, i, r) {
                return aS($(), Un(), t, n, e, i, r)
            }

            function nd(t, n) {
                const e = t[n];
                return e === Be ? void 0 : e
            }

            function oS(t, n, e, i, r, s) {
                const o = n + e;
                return Rn(t, o, r) ? Rr(t, o + 1, s ? i.call(s, r) : i(r)) : nd(t, o + 1)
            }

            function aS(t, n, e, i, r, s, o) {
                const a = n + e;
                return $o(t, a, r, s) ? Rr(t, a + 2, o ? i.call(o, r, s) : i(r, s)) : nd(t, a + 2)
            }

            function cS(t, n, e, i, r, s, o, a, l) {
                const c = n + e;
                return function ji(t, n, e, i, r, s) {
                    const o = $o(t, n, e, i);
                    return $o(t, n + 2, r, s) || o
                }(t, c, r, s, o, a) ? Rr(t, c + 4, l ? i.call(l, r, s, o, a) : i(r, s, o, a)) : nd(t, c + 4)
            }

            function ue(t, n) {
                const e = nt();
                let i;
                const r = t + 22;
                e.firstCreatePass ? (i = function jH(t, n) {
                    if (n)
                        for (let e = n.length - 1; e >= 0; e--) {
                            const i = n[e];
                            if (t === i.name) return i
                        }
                }(n, e.pipeRegistry), e.data[r] = i, i.onDestroy && (e.destroyHooks || (e.destroyHooks = [])).push(r, i.onDestroy)) : i = e.data[r];
                const s = i.factory || (i.factory = Po(i.type)),
                    o = Bi(u);
                try {
                    const a = Yu(!1),
                        l = s();
                    return Yu(a),
                        function NV(t, n, e, i) {
                            e >= t.data.length && (t.data[e] = null, t.blueprint[e] = null), n[e] = i
                        }(e, $(), r, l), l
                } finally {
                    Bi(o)
                }
            }

            function De(t, n, e) {
                const i = t + 22,
                    r = $(),
                    s = Ra(r, i);
                return id(r, i) ? oS(r, Un(), n, s.transform, e, s) : s.transform(e)
            }

            function ul(t, n, e, i) {
                const r = t + 22,
                    s = $(),
                    o = Ra(s, r);
                return id(s, r) ? aS(s, Un(), n, o.transform, e, i, o) : o.transform(e, i)
            }

            function zi(t, n, e, i, r, s) {
                const o = t + 22,
                    a = $(),
                    l = Ra(a, o);
                return id(a, o) ? cS(a, Un(), n, l.transform, e, i, r, s, l) : l.transform(e, i, r, s)
            }

            function id(t, n) {
                return t[1].data[n].pure
            }

            function j_(t) {
                return n => {
                    setTimeout(t, void 0, n)
                }
            }
            const V = class GH extends H {
                constructor(n = !1) {
                    super(), this.__isAsync = n
                }
                emit(n) {
                    super.next(n)
                }
                subscribe(n, e, i) {
                    let r = n,
                        s = e || (() => null),
                        o = i;
                    if (n && "object" == typeof n) {
                        const l = n;
                        r = l.next ? .bind(l), s = l.error ? .bind(l), o = l.complete ? .bind(l)
                    }
                    this.__isAsync && (s = j_(s), r && (r = j_(r)), o && (o = j_(o)));
                    const a = super.subscribe({
                        next: r,
                        error: s,
                        complete: o
                    });
                    return n instanceof Re && n.add(a), a
                }
            };

            function WH() {
                return this._results[Ho()]()
            }
            class Pr {
                constructor(n = !1) {
                    this._emitDistinctChangesOnly = n, this.dirty = !0, this._results = [], this._changesDetected = !1, this._changes = null, this.length = 0, this.first = void 0, this.last = void 0;
                    const e = Ho(),
                        i = Pr.prototype;
                    i[e] || (i[e] = WH)
                }
                get changes() {
                    return this._changes || (this._changes = new V)
                }
                get(n) {
                    return this._results[n]
                }
                map(n) {
                    return this._results.map(n)
                }
                filter(n) {
                    return this._results.filter(n)
                }
                find(n) {
                    return this._results.find(n)
                }
                reduce(n, e) {
                    return this._results.reduce(n, e)
                }
                forEach(n) {
                    this._results.forEach(n)
                }
                some(n) {
                    return this._results.some(n)
                }
                toArray() {
                    return this._results.slice()
                }
                toString() {
                    return this._results.toString()
                }
                reset(n, e) {
                    const i = this;
                    i.dirty = !1;
                    const r = bi(n);
                    (this._changesDetected = ! function JL(t, n, e) {
                        if (t.length !== n.length) return !1;
                        for (let i = 0; i < t.length; i++) {
                            let r = t[i],
                                s = n[i];
                            if (e && (r = e(r), s = e(s)), s !== r) return !1
                        }
                        return !0
                    }(i._results, r, e)) && (i._results = r, i.length = r.length, i.last = r[this.length - 1], i.first = r[0])
                }
                notifyOnChanges() {
                    this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this)
                }
                setDirty() {
                    this.dirty = !0
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe()
                }
            }
            let rt = (() => {
                class t {}
                return t.__NG_ELEMENT_ID__ = QH, t
            })();
            const qH = rt,
                YH = class extends qH {
                    constructor(n, e, i) {
                        super(), this._declarationLView = n, this._declarationTContainer = e, this.elementRef = i
                    }
                    createEmbeddedView(n, e) {
                        const i = this._declarationTContainer.tViews,
                            r = yh(this._declarationLView, i, n, 16, null, i.declTNode, null, null, null, null, e || null);
                        r[17] = this._declarationLView[this._declarationTContainer.index];
                        const o = this._declarationLView[19];
                        return null !== o && (r[19] = o.createEmbeddedView(i)), g_(i, r, n), new jc(r)
                    }
                };

            function QH() {
                return Fh(on(), $())
            }

            function Fh(t, n) {
                return 4 & t.type ? new YH(n, t, qa(t, n)) : null
            }
            let Je = (() => {
                class t {}
                return t.__NG_ELEMENT_ID__ = KH, t
            })();

            function KH() {
                return fS(on(), $())
            }
            const ZH = Je,
                uS = class extends ZH {
                    constructor(n, e, i) {
                        super(), this._lContainer = n, this._hostTNode = e, this._hostLView = i
                    }
                    get element() {
                        return qa(this._hostTNode, this._hostLView)
                    }
                    get injector() {
                        return new Na(this._hostTNode, this._hostLView)
                    }
                    get parentInjector() {
                        const n = Qu(this._hostTNode, this._hostLView);
                        if (p0(n)) {
                            const e = La(n, this._hostLView),
                                i = Pa(n);
                            return new Na(e[1].data[i + 8], e)
                        }
                        return new Na(null, this._hostLView)
                    }
                    clear() {
                        for (; this.length > 0;) this.remove(this.length - 1)
                    }
                    get(n) {
                        const e = hS(this._lContainer);
                        return null !== e && e[n] || null
                    }
                    get length() {
                        return this._lContainer.length - 10
                    }
                    createEmbeddedView(n, e, i) {
                        let r, s;
                        "number" == typeof i ? r = i : null != i && (r = i.index, s = i.injector);
                        const o = n.createEmbeddedView(e || {}, s);
                        return this.insert(o, r), o
                    }
                    createComponent(n, e, i, r, s) {
                        const o = n && ! function Ec(t) {
                            return "function" == typeof t
                        }(n);
                        let a;
                        if (o) a = e;
                        else {
                            const h = e || {};
                            a = h.index, i = h.injector, r = h.projectableNodes, s = h.environmentInjector || h.ngModuleRef
                        }
                        const l = o ? n : new zc(yt(n)),
                            c = i || this.parentInjector;
                        if (!s && null == l.ngModule) {
                            const m = (o ? c : this.parentInjector).get(Hs, null);
                            m && (s = m)
                        }
                        const d = l.create(c, r, void 0, s);
                        return this.insert(d.hostView, a), d
                    }
                    insert(n, e) {
                        const i = n._lView,
                            r = i[1];
                        if (function CL(t) {
                                return ar(t[3])
                            }(i)) {
                            const d = this.indexOf(n);
                            if (-1 !== d) this.detach(d);
                            else {
                                const h = i[3],
                                    m = new uS(h, h[6], h[3]);
                                m.detach(m.indexOf(n))
                            }
                        }
                        const s = this._adjustIndex(e),
                            o = this._lContainer;
                        ! function Z2(t, n, e, i) {
                            const r = 10 + i,
                                s = e.length;
                            i > 0 && (e[r - 1][4] = n), i < s - 10 ? (n[4] = e[r], S0(e, 10 + i, n)) : (e.push(n), n[4] = null), n[3] = e;
                            const o = n[17];
                            null !== o && e !== o && function X2(t, n) {
                                const e = t[9];
                                n[16] !== n[3][3][16] && (t[2] = !0), null === e ? t[9] = [n] : e.push(n)
                            }(o, n);
                            const a = n[19];
                            null !== a && a.insertView(t), n[2] |= 64
                        }(r, i, o, s);
                        const a = Fg(s, o),
                            l = i[11],
                            c = rh(l, o[7]);
                        return null !== c && function Y2(t, n, e, i, r, s) {
                            i[0] = r, i[6] = n, Bc(t, i, e, 1, r, s)
                        }(r, o[6], l, i, c, a), n.attachToViewContainerRef(), S0(z_(o), s, n), n
                    }
                    move(n, e) {
                        return this.insert(n, e)
                    }
                    indexOf(n) {
                        const e = hS(this._lContainer);
                        return null !== e ? e.indexOf(n) : -1
                    }
                    remove(n) {
                        const e = this._adjustIndex(n, -1),
                            i = Tg(this._lContainer, e);
                        i && (Ju(z_(this._lContainer), e), ex(i[1], i))
                    }
                    detach(n) {
                        const e = this._adjustIndex(n, -1),
                            i = Tg(this._lContainer, e);
                        return i && null != Ju(z_(this._lContainer), e) ? new jc(i) : null
                    }
                    _adjustIndex(n, e = 0) {
                        return n ? ? this.length + e
                    }
                };

            function hS(t) {
                return t[8]
            }

            function z_(t) {
                return t[8] || (t[8] = [])
            }

            function fS(t, n) {
                let e;
                const i = n[t.index];
                if (ar(i)) e = i;
                else {
                    let r;
                    if (8 & t.type) r = Jt(i);
                    else {
                        const s = n[11];
                        r = s.createComment("");
                        const o = _i(t, n);
                        Lo(s, rh(s, o), r, function nN(t, n) {
                            return t.nextSibling(n)
                        }(s, o), !1)
                    }
                    n[t.index] = e = CD(i, n, r, t), vh(n, e)
                }
                return new uS(e, t, n)
            }
            class U_ {
                constructor(n) {
                    this.queryList = n, this.matches = null
                }
                clone() {
                    return new U_(this.queryList)
                }
                setDirty() {
                    this.queryList.setDirty()
                }
            }
            class G_ {
                constructor(n = []) {
                    this.queries = n
                }
                createEmbeddedView(n) {
                    const e = n.queries;
                    if (null !== e) {
                        const i = null !== n.contentQueries ? n.contentQueries[0] : e.length,
                            r = [];
                        for (let s = 0; s < i; s++) {
                            const o = e.getByIndex(s);
                            r.push(this.queries[o.indexInDeclarationView].clone())
                        }
                        return new G_(r)
                    }
                    return null
                }
                insertView(n) {
                    this.dirtyQueriesWithMatches(n)
                }
                detachView(n) {
                    this.dirtyQueriesWithMatches(n)
                }
                dirtyQueriesWithMatches(n) {
                    for (let e = 0; e < this.queries.length; e++) null !== yS(n, e).matches && this.queries[e].setDirty()
                }
            }
            class pS {
                constructor(n, e, i = null) {
                    this.predicate = n, this.flags = e, this.read = i
                }
            }
            class W_ {
                constructor(n = []) {
                    this.queries = n
                }
                elementStart(n, e) {
                    for (let i = 0; i < this.queries.length; i++) this.queries[i].elementStart(n, e)
                }
                elementEnd(n) {
                    for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(n)
                }
                embeddedTView(n) {
                    let e = null;
                    for (let i = 0; i < this.length; i++) {
                        const r = null !== e ? e.length : 0,
                            s = this.getByIndex(i).embeddedTView(n, r);
                        s && (s.indexInDeclarationView = i, null !== e ? e.push(s) : e = [s])
                    }
                    return null !== e ? new W_(e) : null
                }
                template(n, e) {
                    for (let i = 0; i < this.queries.length; i++) this.queries[i].template(n, e)
                }
                getByIndex(n) {
                    return this.queries[n]
                }
                get length() {
                    return this.queries.length
                }
                track(n) {
                    this.queries.push(n)
                }
            }
            class q_ {
                constructor(n, e = -1) {
                    this.metadata = n, this.matches = null, this.indexInDeclarationView = -1, this.crossesNgTemplate = !1, this._appliesToNextNode = !0, this._declarationNodeIndex = e
                }
                elementStart(n, e) {
                    this.isApplyingToNode(e) && this.matchTNode(n, e)
                }
                elementEnd(n) {
                    this._declarationNodeIndex === n.index && (this._appliesToNextNode = !1)
                }
                template(n, e) {
                    this.elementStart(n, e)
                }
                embeddedTView(n, e) {
                    return this.isApplyingToNode(n) ? (this.crossesNgTemplate = !0, this.addMatch(-n.index, e), new q_(this.metadata)) : null
                }
                isApplyingToNode(n) {
                    if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                        const e = this._declarationNodeIndex;
                        let i = n.parent;
                        for (; null !== i && 8 & i.type && i.index !== e;) i = i.parent;
                        return e === (null !== i ? i.index : -1)
                    }
                    return this._appliesToNextNode
                }
                matchTNode(n, e) {
                    const i = this.metadata.predicate;
                    if (Array.isArray(i))
                        for (let r = 0; r < i.length; r++) {
                            const s = i[r];
                            this.matchTNodeWithReadOption(n, e, e$(e, s)), this.matchTNodeWithReadOption(n, e, Zu(e, n, s, !1, !1))
                        } else i === rt ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1) : this.matchTNodeWithReadOption(n, e, Zu(e, n, i, !1, !1))
                }
                matchTNodeWithReadOption(n, e, i) {
                    if (null !== i) {
                        const r = this.metadata.read;
                        if (null !== r)
                            if (r === N || r === Je || r === rt && 4 & e.type) this.addMatch(e.index, -2);
                            else {
                                const s = Zu(e, n, r, !1, !1);
                                null !== s && this.addMatch(e.index, s)
                            }
                        else this.addMatch(e.index, i)
                    }
                }
                addMatch(n, e) {
                    null === this.matches ? this.matches = [n, e] : this.matches.push(n, e)
                }
            }

            function e$(t, n) {
                const e = t.localNames;
                if (null !== e)
                    for (let i = 0; i < e.length; i += 2)
                        if (e[i] === n) return e[i + 1];
                return null
            }

            function n$(t, n, e, i) {
                return -1 === e ? function t$(t, n) {
                    return 11 & t.type ? qa(t, n) : 4 & t.type ? Fh(t, n) : null
                }(n, t) : -2 === e ? function i$(t, n, e) {
                    return e === N ? qa(n, t) : e === rt ? Fh(n, t) : e === Je ? fS(n, t) : void 0
                }(t, n, i) : kc(t, t[1], e, n)
            }

            function mS(t, n, e, i) {
                const r = n[19].queries[i];
                if (null === r.matches) {
                    const s = t.data,
                        o = e.matches,
                        a = [];
                    for (let l = 0; l < o.length; l += 2) {
                        const c = o[l];
                        a.push(c < 0 ? null : n$(n, s[c], o[l + 1], e.metadata.read))
                    }
                    r.matches = a
                }
                return r.matches
            }

            function Y_(t, n, e, i) {
                const r = t.queries.getByIndex(e),
                    s = r.matches;
                if (null !== s) {
                    const o = mS(t, n, r, e);
                    for (let a = 0; a < s.length; a += 2) {
                        const l = s[a];
                        if (l > 0) i.push(o[a / 2]);
                        else {
                            const c = s[a + 1],
                                d = n[-l];
                            for (let h = 10; h < d.length; h++) {
                                const m = d[h];
                                m[17] === m[3] && Y_(m[1], m, c, i)
                            }
                            if (null !== d[9]) {
                                const h = d[9];
                                for (let m = 0; m < h.length; m++) {
                                    const _ = h[m];
                                    Y_(_[1], _, c, i)
                                }
                            }
                        }
                    }
                }
                return i
            }

            function O(t) {
                const n = $(),
                    e = nt(),
                    i = r0();
                ig(i + 1);
                const r = yS(e, i);
                if (t.dirty && function wL(t) {
                        return 4 == (4 & t[2])
                    }(n) === (2 == (2 & r.metadata.flags))) {
                    if (null === r.matches) t.reset([]);
                    else {
                        const s = r.crossesNgTemplate ? Y_(e, n, i, []) : mS(e, n, r, i);
                        t.reset(s, KN), t.notifyOnChanges()
                    }
                    return !0
                }
                return !1
            }

            function J(t, n, e) {
                const i = nt();
                i.firstCreatePass && (_S(i, new pS(t, n, e), -1), 2 == (2 & n) && (i.staticViewQueries = !0)), gS(i, $(), n)
            }

            function _e(t, n, e, i) {
                const r = nt();
                if (r.firstCreatePass) {
                    const s = on();
                    _S(r, new pS(n, e, i), s.index),
                        function s$(t, n) {
                            const e = t.contentQueries || (t.contentQueries = []);
                            n !== (e.length ? e[e.length - 1] : -1) && e.push(t.queries.length - 1, n)
                        }(r, t), 2 == (2 & e) && (r.staticContentQueries = !0)
                }
                gS(r, $(), e)
            }

            function P() {
                return function r$(t, n) {
                    return t[19].queries[n].queryList
                }($(), r0())
            }

            function gS(t, n, e) {
                const i = new Pr(4 == (4 & e));
                fD(t, n, i, i.destroy), null === n[19] && (n[19] = new G_), n[19].queries.push(new U_(i))
            }

            function _S(t, n, e) {
                null === t.queries && (t.queries = new W_), t.queries.track(new q_(n, e))
            }

            function yS(t, n) {
                return t.queries.getByIndex(n)
            }

            function Ui(t, n) {
                return Fh(t, n)
            }

            function Ph(...t) {}
            const sd = new R("Application Initializer");
            let Lh = (() => {
                class t {
                    constructor(e) {
                        this.appInits = e, this.resolve = Ph, this.reject = Ph, this.initialized = !1, this.done = !1, this.donePromise = new Promise((i, r) => {
                            this.resolve = i, this.reject = r
                        })
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const e = [],
                            i = () => {
                                this.done = !0, this.resolve()
                            };
                        if (this.appInits)
                            for (let r = 0; r < this.appInits.length; r++) {
                                const s = this.appInits[r]();
                                if (Wc(s)) e.push(s);
                                else if (T_(s)) {
                                    const o = new Promise((a, l) => {
                                        s.subscribe({
                                            complete: a,
                                            error: l
                                        })
                                    });
                                    e.push(o)
                                }
                            }
                        Promise.all(e).then(() => {
                            i()
                        }).catch(r => {
                            this.reject(r)
                        }), 0 === e.length && i(), this.initialized = !0
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(sd, 8))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const pl = new R("AppId", {
                providedIn: "root",
                factory: function NS() {
                    return `${J_()}${J_()}${J_()}`
                }
            });

            function J_() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()))
            }
            const BS = new R("Platform Initializer"),
                On = new R("Platform ID", {
                    providedIn: "platform",
                    factory: () => "unknown"
                }),
                ey = new R("appBootstrapListener"),
                Tt = new R("AnimationModuleType");
            let M$ = (() => {
                class t {
                    log(e) {
                        console.log(e)
                    }
                    warn(e) {
                        console.warn(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "platform"
                }), t
            })();
            const Gi = new R("LocaleId", {
                    providedIn: "root",
                    factory: () => st(Gi, xe.Optional | xe.SkipSelf) || function S$() {
                        return typeof $localize < "u" && $localize.locale || dl
                    }()
                }),
                k$ = new R("DefaultCurrencyCode", {
                    providedIn: "root",
                    factory: () => "USD"
                });
            class A$ {
                constructor(n, e) {
                    this.ngModuleFactory = n, this.componentFactories = e
                }
            }
            let ty = (() => {
                class t {
                    compileModuleSync(e) {
                        return new H_(e)
                    }
                    compileModuleAsync(e) {
                        return Promise.resolve(this.compileModuleSync(e))
                    }
                    compileModuleAndAllComponentsSync(e) {
                        const i = this.compileModuleSync(e),
                            s = os(mi(e).declarations).reduce((o, a) => {
                                const l = yt(a);
                                return l && o.push(new zc(l)), o
                            }, []);
                        return new A$(i, s)
                    }
                    compileModuleAndAllComponentsAsync(e) {
                        return Promise.resolve(this.compileModuleAndAllComponentsSync(e))
                    }
                    clearCache() {}
                    clearCacheFor(e) {}
                    getModuleId(e) {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const I$ = (() => Promise.resolve(0))();

            function ny(t) {
                typeof Zone > "u" ? I$.then(() => {
                    t && t.apply(null, null)
                }) : Zone.current.scheduleMicroTask("scheduleMicrotask", t)
            }
            class ce {
                constructor({
                    enableLongStackTrace: n = !1,
                    shouldCoalesceEventChangeDetection: e = !1,
                    shouldCoalesceRunChangeDetection: i = !1
                }) {
                    if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new V(!1), this.onMicrotaskEmpty = new V(!1), this.onStable = new V(!1), this.onError = new V(!1), typeof Zone > "u") throw new B(908, !1);
                    Zone.assertZonePatched();
                    const r = this;
                    if (r._nesting = 0, r._outer = r._inner = Zone.current, Zone.AsyncStackTaggingZoneSpec) {
                        const s = Zone.AsyncStackTaggingZoneSpec;
                        r._inner = r._inner.fork(new s("Angular"))
                    }
                    Zone.TaskTrackingZoneSpec && (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec)), n && Zone.longStackTraceZoneSpec && (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)), r.shouldCoalesceEventChangeDetection = !i && e, r.shouldCoalesceRunChangeDetection = i, r.lastRequestAnimationFrameId = -1, r.nativeRequestAnimationFrame = function R$() {
                            let t = At.requestAnimationFrame,
                                n = At.cancelAnimationFrame;
                            if (typeof Zone < "u" && t && n) {
                                const e = t[Zone.__symbol__("OriginalDelegate")];
                                e && (t = e);
                                const i = n[Zone.__symbol__("OriginalDelegate")];
                                i && (n = i)
                            }
                            return {
                                nativeRequestAnimationFrame: t,
                                nativeCancelAnimationFrame: n
                            }
                        }().nativeRequestAnimationFrame,
                        function P$(t) {
                            const n = () => {
                                ! function O$(t) {
                                    t.isCheckStableRunning || -1 !== t.lastRequestAnimationFrameId || (t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call(At, () => {
                                        t.fakeTopEventTask || (t.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                                            t.lastRequestAnimationFrameId = -1, ry(t), t.isCheckStableRunning = !0, iy(t), t.isCheckStableRunning = !1
                                        }, void 0, () => {}, () => {})), t.fakeTopEventTask.invoke()
                                    }), ry(t))
                                }(t)
                            };
                            t._inner = t._inner.fork({
                                name: "angular",
                                properties: {
                                    isAngularZone: !0
                                },
                                onInvokeTask: (e, i, r, s, o, a) => {
                                    try {
                                        return $S(t), e.invokeTask(r, s, o, a)
                                    } finally {
                                        (t.shouldCoalesceEventChangeDetection && "eventTask" === s.type || t.shouldCoalesceRunChangeDetection) && n(), jS(t)
                                    }
                                },
                                onInvoke: (e, i, r, s, o, a, l) => {
                                    try {
                                        return $S(t), e.invoke(r, s, o, a, l)
                                    } finally {
                                        t.shouldCoalesceRunChangeDetection && n(), jS(t)
                                    }
                                },
                                onHasTask: (e, i, r, s) => {
                                    e.hasTask(r, s), i === r && ("microTask" == s.change ? (t._hasPendingMicrotasks = s.microTask, ry(t), iy(t)) : "macroTask" == s.change && (t.hasPendingMacrotasks = s.macroTask))
                                },
                                onHandleError: (e, i, r, s) => (e.handleError(r, s), t.runOutsideAngular(() => t.onError.emit(s)), !1)
                            })
                        }(r)
                }
                static isInAngularZone() {
                    return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone")
                }
                static assertInAngularZone() {
                    if (!ce.isInAngularZone()) throw new B(909, !1)
                }
                static assertNotInAngularZone() {
                    if (ce.isInAngularZone()) throw new B(909, !1)
                }
                run(n, e, i) {
                    return this._inner.run(n, e, i)
                }
                runTask(n, e, i, r) {
                    const s = this._inner,
                        o = s.scheduleEventTask("NgZoneEvent: " + r, n, F$, Ph, Ph);
                    try {
                        return s.runTask(o, e, i)
                    } finally {
                        s.cancelTask(o)
                    }
                }
                runGuarded(n, e, i) {
                    return this._inner.runGuarded(n, e, i)
                }
                runOutsideAngular(n) {
                    return this._outer.run(n)
                }
            }
            const F$ = {};

            function iy(t) {
                if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable) try {
                    t._nesting++, t.onMicrotaskEmpty.emit(null)
                } finally {
                    if (t._nesting--, !t.hasPendingMicrotasks) try {
                        t.runOutsideAngular(() => t.onStable.emit(null))
                    } finally {
                        t.isStable = !0
                    }
                }
            }

            function ry(t) {
                t.hasPendingMicrotasks = !!(t._hasPendingMicrotasks || (t.shouldCoalesceEventChangeDetection || t.shouldCoalesceRunChangeDetection) && -1 !== t.lastRequestAnimationFrameId)
            }

            function $S(t) {
                t._nesting++, t.isStable && (t.isStable = !1, t.onUnstable.emit(null))
            }

            function jS(t) {
                t._nesting--, iy(t)
            }
            class L$ {
                constructor() {
                    this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new V, this.onMicrotaskEmpty = new V, this.onStable = new V, this.onError = new V
                }
                run(n, e, i) {
                    return n.apply(e, i)
                }
                runGuarded(n, e, i) {
                    return n.apply(e, i)
                }
                runOutsideAngular(n) {
                    return n()
                }
                runTask(n, e, i, r) {
                    return n.apply(e, i)
                }
            }
            const zS = new R(""),
                Nh = new R("");
            let ay, sy = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._ngZone = e, this.registry = i, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, ay || (function N$(t) {
                                ay = t
                            }(r), r.addToWindow(i)), this._watchAngularEvents(), e.run(() => {
                                this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone")
                            })
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    this._didWork = !0, this._isZoneStable = !1
                                }
                            }), this._ngZone.runOutsideAngular(() => {
                                this._ngZone.onStable.subscribe({
                                    next: () => {
                                        ce.assertNotInAngularZone(), ny(() => {
                                            this._isZoneStable = !0, this._runCallbacksIfReady()
                                        })
                                    }
                                })
                            })
                        }
                        increasePendingRequestCount() {
                            return this._pendingCount += 1, this._didWork = !0, this._pendingCount
                        }
                        decreasePendingRequestCount() {
                            if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero");
                            return this._runCallbacksIfReady(), this._pendingCount
                        }
                        isStable() {
                            return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable()) ny(() => {
                                for (; 0 !== this._callbacks.length;) {
                                    let e = this._callbacks.pop();
                                    clearTimeout(e.timeoutId), e.doneCb(this._didWork)
                                }
                                this._didWork = !1
                            });
                            else {
                                let e = this.getPendingTasks();
                                this._callbacks = this._callbacks.filter(i => !i.updateCb || !i.updateCb(e) || (clearTimeout(i.timeoutId), !1)), this._didWork = !0
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(e => ({
                                source: e.source,
                                creationLocation: e.creationLocation,
                                data: e.data
                            })) : []
                        }
                        addCallback(e, i, r) {
                            let s = -1;
                            i && i > 0 && (s = setTimeout(() => {
                                this._callbacks = this._callbacks.filter(o => o.timeoutId !== s), e(this._didWork, this.getPendingTasks())
                            }, i)), this._callbacks.push({
                                doneCb: e,
                                timeoutId: s,
                                updateCb: r
                            })
                        }
                        whenStable(e, i, r) {
                            if (r && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
                            this.addCallback(e, i, r), this._runCallbacksIfReady()
                        }
                        getPendingRequestCount() {
                            return this._pendingCount
                        }
                        registerApplication(e) {
                            this.registry.registerApplication(e, this)
                        }
                        unregisterApplication(e) {
                            this.registry.unregisterApplication(e)
                        }
                        findProviders(e, i, r) {
                            return []
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(ce), C(oy), C(Nh))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                oy = (() => {
                    class t {
                        constructor() {
                            this._applications = new Map
                        }
                        registerApplication(e, i) {
                            this._applications.set(e, i)
                        }
                        unregisterApplication(e) {
                            this._applications.delete(e)
                        }
                        unregisterAllApplications() {
                            this._applications.clear()
                        }
                        getTestability(e) {
                            return this._applications.get(e) || null
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values())
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys())
                        }
                        findTestabilityInTree(e, i = !0) {
                            return ay ? .findTestabilityInTree(this, e, i) ? ? null
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    }), t
                })(),
                Us = null;
            const US = new R("AllowMultipleToken"),
                ly = new R("PlatformDestroyListeners");
            class GS {
                constructor(n, e) {
                    this.name = n, this.token = e
                }
            }

            function qS(t, n, e = []) {
                const i = `Platform: ${n}`,
                    r = new R(i);
                return (s = []) => {
                    let o = cy();
                    if (!o || o.injector.get(US, !1)) {
                        const a = [...e, ...s, {
                            provide: r,
                            useValue: !0
                        }];
                        t ? t(a) : function H$(t) {
                            if (Us && !Us.get(US, !1)) throw new B(400, !1);
                            Us = t;
                            const n = t.get(QS);
                            (function WS(t) {
                                const n = t.get(BS, null);
                                n && n.forEach(e => e())
                            })(t)
                        }(function YS(t = [], n) {
                            return Ct.create({
                                name: n,
                                providers: [{
                                    provide: Yg,
                                    useValue: "platform"
                                }, {
                                    provide: ly,
                                    useValue: new Set([() => Us = null])
                                }, ...t]
                            })
                        }(a, i))
                    }
                    return function j$(t) {
                        const n = cy();
                        if (!n) throw new B(401, !1);
                        return n
                    }()
                }
            }

            function cy() {
                return Us ? .get(QS) ? ? null
            }
            let QS = (() => {
                class t {
                    constructor(e) {
                        this._injector = e, this._modules = [], this._destroyListeners = [], this._destroyed = !1
                    }
                    bootstrapModuleFactory(e, i) {
                        const r = function ZS(t, n) {
                                let e;
                                return e = "noop" === t ? new L$ : ("zone.js" === t ? void 0 : t) || new ce(n), e
                            }(i ? .ngZone, function KS(t) {
                                return {
                                    enableLongStackTrace: !1,
                                    shouldCoalesceEventChangeDetection: !(!t || !t.ngZoneEventCoalescing) || !1,
                                    shouldCoalesceRunChangeDetection: !(!t || !t.ngZoneRunCoalescing) || !1
                                }
                            }(i)),
                            s = [{
                                provide: ce,
                                useValue: r
                            }];
                        return r.run(() => {
                            const o = Ct.create({
                                    providers: s,
                                    parent: this.injector,
                                    name: e.moduleType.name
                                }),
                                a = e.create(o),
                                l = a.injector.get(ss, null);
                            if (!l) throw new B(402, !1);
                            return r.runOutsideAngular(() => {
                                    const c = r.onError.subscribe({
                                        next: d => {
                                            l.handleError(d)
                                        }
                                    });
                                    a.onDestroy(() => {
                                        Bh(this._modules, a), c.unsubscribe()
                                    })
                                }),
                                function XS(t, n, e) {
                                    try {
                                        const i = e();
                                        return Wc(i) ? i.catch(r => {
                                            throw n.runOutsideAngular(() => t.handleError(r)), r
                                        }) : i
                                    } catch (i) {
                                        throw n.runOutsideAngular(() => t.handleError(i)), i
                                    }
                                }(l, r, () => {
                                    const c = a.injector.get(Lh);
                                    return c.runInitializers(), c.donePromise.then(() => (function SM(t) {
                                        pi(t, "Expected localeId to be defined"), "string" == typeof t && (MM = t.toLowerCase().replace(/_/g, "-"))
                                    }(a.injector.get(Gi, dl) || dl), this._moduleDoBootstrap(a), a))
                                })
                        })
                    }
                    bootstrapModule(e, i = []) {
                        const r = JS({}, i);
                        return function B$(t, n, e) {
                            const i = new H_(e);
                            return Promise.resolve(i)
                        }(0, 0, e).then(s => this.bootstrapModuleFactory(s, r))
                    }
                    _moduleDoBootstrap(e) {
                        const i = e.injector.get(Lr);
                        if (e._bootstrapComponents.length > 0) e._bootstrapComponents.forEach(r => i.bootstrap(r));
                        else {
                            if (!e.instance.ngDoBootstrap) throw new B(403, !1);
                            e.instance.ngDoBootstrap(i)
                        }
                        this._modules.push(e)
                    }
                    onDestroy(e) {
                        this._destroyListeners.push(e)
                    }
                    get injector() {
                        return this._injector
                    }
                    destroy() {
                        if (this._destroyed) throw new B(404, !1);
                        this._modules.slice().forEach(i => i.destroy()), this._destroyListeners.forEach(i => i());
                        const e = this._injector.get(ly, null);
                        e && (e.forEach(i => i()), e.clear()), this._destroyed = !0
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ct))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "platform"
                }), t
            })();

            function JS(t, n) {
                return Array.isArray(n) ? n.reduce(JS, t) : { ...t,
                    ...n
                }
            }
            let Lr = (() => {
                class t {
                    constructor(e, i, r) {
                        this._zone = e, this._injector = i, this._exceptionHandler = r, this._bootstrapListeners = [], this._views = [], this._runningTick = !1, this._stable = !0, this._destroyed = !1, this._destroyListeners = [], this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                            next: () => {
                                this._zone.run(() => {
                                    this.tick()
                                })
                            }
                        });
                        const s = new Ze(a => {
                                this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => {
                                    a.next(this._stable), a.complete()
                                })
                            }),
                            o = new Ze(a => {
                                let l;
                                this._zone.runOutsideAngular(() => {
                                    l = this._zone.onStable.subscribe(() => {
                                        ce.assertNotInAngularZone(), ny(() => {
                                            !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0, a.next(!0))
                                        })
                                    })
                                });
                                const c = this._zone.onUnstable.subscribe(() => {
                                    ce.assertInAngularZone(), this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => {
                                        a.next(!1)
                                    }))
                                });
                                return () => {
                                    l.unsubscribe(), c.unsubscribe()
                                }
                            });
                        this.isStable = tt(s, o.pipe(Pm()))
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                    get injector() {
                        return this._injector
                    }
                    bootstrap(e, i) {
                        const r = e instanceof Rx;
                        if (!this._injector.get(Lh).done) throw !r && function Aa(t) {
                            const n = yt(t) || jn(t) || zn(t);
                            return null !== n && n.standalone
                        }(e), new B(405, false);
                        let o;
                        o = r ? e : this._injector.get(Ci).resolveComponentFactory(e), this.componentTypes.push(o.componentType);
                        const a = function V$(t) {
                                return t.isBoundToModule
                            }(o) ? void 0 : this._injector.get(zo),
                            c = o.create(Ct.NULL, [], i || o.selector, a),
                            d = c.location.nativeElement,
                            h = c.injector.get(zS, null);
                        return h ? .registerApplication(d), c.onDestroy(() => {
                            this.detachView(c.hostView), Bh(this.components, c), h ? .unregisterApplication(d)
                        }), this._loadComponent(c), c
                    }
                    tick() {
                        if (this._runningTick) throw new B(101, !1);
                        try {
                            this._runningTick = !0;
                            for (let e of this._views) e.detectChanges()
                        } catch (e) {
                            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e))
                        } finally {
                            this._runningTick = !1
                        }
                    }
                    attachView(e) {
                        const i = e;
                        this._views.push(i), i.attachToAppRef(this)
                    }
                    detachView(e) {
                        const i = e;
                        Bh(this._views, i), i.detachFromAppRef()
                    }
                    _loadComponent(e) {
                        this.attachView(e.hostView), this.tick(), this.components.push(e), this._injector.get(ey, []).concat(this._bootstrapListeners).forEach(r => r(e))
                    }
                    ngOnDestroy() {
                        if (!this._destroyed) try {
                            this._destroyListeners.forEach(e => e()), this._views.slice().forEach(e => e.destroy()), this._onMicrotaskEmptySubscription.unsubscribe()
                        } finally {
                            this._destroyed = !0, this._views = [], this._bootstrapListeners = [], this._destroyListeners = []
                        }
                    }
                    onDestroy(e) {
                        return this._destroyListeners.push(e), () => Bh(this._destroyListeners, e)
                    }
                    destroy() {
                        if (this._destroyed) throw new B(406, !1);
                        const e = this._injector;
                        e.destroy && !e.destroyed && e.destroy()
                    }
                    get viewCount() {
                        return this._views.length
                    }
                    warnIfDestroyed() {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(ce), C(Hs), C(ss))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function Bh(t, n) {
                const e = t.indexOf(n);
                e > -1 && t.splice(e, 1)
            }
            let tk = !0,
                ge = (() => {
                    class t {}
                    return t.__NG_ELEMENT_ID__ = G$, t
                })();

            function G$(t) {
                return function W$(t, n, e) {
                    if (Vu(t) && !e) {
                        const i = yi(t.index, n);
                        return new jc(i, i)
                    }
                    return 47 & t.type ? new jc(n[16], n) : null
                }(on(), $(), 16 == (16 & t))
            }
            class ok {
                constructor() {}
                supports(n) {
                    return Uc(n)
                }
                create(n) {
                    return new X$(n)
                }
            }
            const Z$ = (t, n) => n;
            class X$ {
                constructor(n) {
                    this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = n || Z$
                }
                forEachItem(n) {
                    let e;
                    for (e = this._itHead; null !== e; e = e._next) n(e)
                }
                forEachOperation(n) {
                    let e = this._itHead,
                        i = this._removalsHead,
                        r = 0,
                        s = null;
                    for (; e || i;) {
                        const o = !i || e && e.currentIndex < lk(i, r, s) ? e : i,
                            a = lk(o, r, s),
                            l = o.currentIndex;
                        if (o === i) r--, i = i._nextRemoved;
                        else if (e = e._next, null == o.previousIndex) r++;
                        else {
                            s || (s = []);
                            const c = a - r,
                                d = l - r;
                            if (c != d) {
                                for (let m = 0; m < c; m++) {
                                    const _ = m < s.length ? s[m] : s[m] = 0,
                                        v = _ + m;
                                    d <= v && v < c && (s[m] = _ + 1)
                                }
                                s[o.previousIndex] = d - c
                            }
                        }
                        a !== l && n(o, a, l)
                    }
                }
                forEachPreviousItem(n) {
                    let e;
                    for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e)
                }
                forEachAddedItem(n) {
                    let e;
                    for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                }
                forEachMovedItem(n) {
                    let e;
                    for (e = this._movesHead; null !== e; e = e._nextMoved) n(e)
                }
                forEachRemovedItem(n) {
                    let e;
                    for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                }
                forEachIdentityChange(n) {
                    let e;
                    for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) n(e)
                }
                diff(n) {
                    if (null == n && (n = []), !Uc(n)) throw new B(900, !1);
                    return this.check(n) ? this : null
                }
                onDestroy() {}
                check(n) {
                    this._reset();
                    let r, s, o, e = this._itHead,
                        i = !1;
                    if (Array.isArray(n)) {
                        this.length = n.length;
                        for (let a = 0; a < this.length; a++) s = n[a], o = this._trackByFn(a, s), null !== e && Object.is(e.trackById, o) ? (i && (e = this._verifyReinsertion(e, s, o, a)), Object.is(e.item, s) || this._addIdentityChange(e, s)) : (e = this._mismatch(e, s, o, a), i = !0), e = e._next
                    } else r = 0,
                        function FV(t, n) {
                            if (Array.isArray(t))
                                for (let e = 0; e < t.length; e++) n(t[e]);
                            else {
                                const e = t[Ho()]();
                                let i;
                                for (; !(i = e.next()).done;) n(i.value)
                            }
                        }(n, a => {
                            o = this._trackByFn(r, a), null !== e && Object.is(e.trackById, o) ? (i && (e = this._verifyReinsertion(e, a, o, r)), Object.is(e.item, a) || this._addIdentityChange(e, a)) : (e = this._mismatch(e, a, o, r), i = !0), e = e._next, r++
                        }), this.length = r;
                    return this._truncate(e), this.collection = n, this.isDirty
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
                }
                _reset() {
                    if (this.isDirty) {
                        let n;
                        for (n = this._previousItHead = this._itHead; null !== n; n = n._next) n._nextPrevious = n._next;
                        for (n = this._additionsHead; null !== n; n = n._nextAdded) n.previousIndex = n.currentIndex;
                        for (this._additionsHead = this._additionsTail = null, n = this._movesHead; null !== n; n = n._nextMoved) n.previousIndex = n.currentIndex;
                        this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null
                    }
                }
                _mismatch(n, e, i, r) {
                    let s;
                    return null === n ? s = this._itTail : (s = n._prev, this._remove(n)), null !== (n = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._reinsertAfter(n, s, r)) : null !== (n = null === this._linkedRecords ? null : this._linkedRecords.get(i, r)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._moveAfter(n, s, r)) : n = this._addAfter(new J$(e, i), s, r), n
                }
                _verifyReinsertion(n, e, i, r) {
                    let s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null);
                    return null !== s ? n = this._reinsertAfter(s, n._prev, r) : n.currentIndex != r && (n.currentIndex = r, this._addToMoves(n, r)), n
                }
                _truncate(n) {
                    for (; null !== n;) {
                        const e = n._next;
                        this._addToRemovals(this._unlink(n)), n = e
                    }
                    null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
                }
                _reinsertAfter(n, e, i) {
                    null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
                    const r = n._prevRemoved,
                        s = n._nextRemoved;
                    return null === r ? this._removalsHead = s : r._nextRemoved = s, null === s ? this._removalsTail = r : s._prevRemoved = r, this._insertAfter(n, e, i), this._addToMoves(n, i), n
                }
                _moveAfter(n, e, i) {
                    return this._unlink(n), this._insertAfter(n, e, i), this._addToMoves(n, i), n
                }
                _addAfter(n, e, i) {
                    return this._insertAfter(n, e, i), this._additionsTail = null === this._additionsTail ? this._additionsHead = n : this._additionsTail._nextAdded = n, n
                }
                _insertAfter(n, e, i) {
                    const r = null === e ? this._itHead : e._next;
                    return n._next = r, n._prev = e, null === r ? this._itTail = n : r._prev = n, null === e ? this._itHead = n : e._next = n, null === this._linkedRecords && (this._linkedRecords = new ak), this._linkedRecords.put(n), n.currentIndex = i, n
                }
                _remove(n) {
                    return this._addToRemovals(this._unlink(n))
                }
                _unlink(n) {
                    null !== this._linkedRecords && this._linkedRecords.remove(n);
                    const e = n._prev,
                        i = n._next;
                    return null === e ? this._itHead = i : e._next = i, null === i ? this._itTail = e : i._prev = e, n
                }
                _addToMoves(n, e) {
                    return n.previousIndex === e || (this._movesTail = null === this._movesTail ? this._movesHead = n : this._movesTail._nextMoved = n), n
                }
                _addToRemovals(n) {
                    return null === this._unlinkedRecords && (this._unlinkedRecords = new ak), this._unlinkedRecords.put(n), n.currentIndex = null, n._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = n, n._prevRemoved = null) : (n._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = n), n
                }
                _addIdentityChange(n, e) {
                    return n.item = e, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = n : this._identityChangesTail._nextIdentityChange = n, n
                }
            }
            class J$ {
                constructor(n, e) {
                    this.item = n, this.trackById = e, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null
                }
            }
            class e4 {
                constructor() {
                    this._head = null, this._tail = null
                }
                add(n) {
                    null === this._head ? (this._head = this._tail = n, n._nextDup = null, n._prevDup = null) : (this._tail._nextDup = n, n._prevDup = this._tail, n._nextDup = null, this._tail = n)
                }
                get(n, e) {
                    let i;
                    for (i = this._head; null !== i; i = i._nextDup)
                        if ((null === e || e <= i.currentIndex) && Object.is(i.trackById, n)) return i;
                    return null
                }
                remove(n) {
                    const e = n._prevDup,
                        i = n._nextDup;
                    return null === e ? this._head = i : e._nextDup = i, null === i ? this._tail = e : i._prevDup = e, null === this._head
                }
            }
            class ak {
                constructor() {
                    this.map = new Map
                }
                put(n) {
                    const e = n.trackById;
                    let i = this.map.get(e);
                    i || (i = new e4, this.map.set(e, i)), i.add(n)
                }
                get(n, e) {
                    const r = this.map.get(n);
                    return r ? r.get(n, e) : null
                }
                remove(n) {
                    const e = n.trackById;
                    return this.map.get(e).remove(n) && this.map.delete(e), n
                }
                get isEmpty() {
                    return 0 === this.map.size
                }
                clear() {
                    this.map.clear()
                }
            }

            function lk(t, n, e) {
                const i = t.previousIndex;
                if (null === i) return i;
                let r = 0;
                return e && i < e.length && (r = e[i]), i + n + r
            }
            class ck {
                constructor() {}
                supports(n) {
                    return n instanceof Map || A_(n)
                }
                create() {
                    return new t4
                }
            }
            class t4 {
                constructor() {
                    this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
                }
                forEachItem(n) {
                    let e;
                    for (e = this._mapHead; null !== e; e = e._next) n(e)
                }
                forEachPreviousItem(n) {
                    let e;
                    for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e)
                }
                forEachChangedItem(n) {
                    let e;
                    for (e = this._changesHead; null !== e; e = e._nextChanged) n(e)
                }
                forEachAddedItem(n) {
                    let e;
                    for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                }
                forEachRemovedItem(n) {
                    let e;
                    for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                }
                diff(n) {
                    if (n) {
                        if (!(n instanceof Map || A_(n))) throw new B(900, !1)
                    } else n = new Map;
                    return this.check(n) ? this : null
                }
                onDestroy() {}
                check(n) {
                    this._reset();
                    let e = this._mapHead;
                    if (this._appendAfter = null, this._forEach(n, (i, r) => {
                            if (e && e.key === r) this._maybeAddToChanges(e, i), this._appendAfter = e, e = e._next;
                            else {
                                const s = this._getOrCreateRecordForKey(r, i);
                                e = this._insertBeforeOrAppend(e, s)
                            }
                        }), e) {
                        e._prev && (e._prev._next = null), this._removalsHead = e;
                        for (let i = e; null !== i; i = i._nextRemoved) i === this._mapHead && (this._mapHead = null), this._records.delete(i.key), i._nextRemoved = i._next, i.previousValue = i.currentValue, i.currentValue = null, i._prev = null, i._next = null
                    }
                    return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty
                }
                _insertBeforeOrAppend(n, e) {
                    if (n) {
                        const i = n._prev;
                        return e._next = n, e._prev = i, n._prev = e, i && (i._next = e), n === this._mapHead && (this._mapHead = e), this._appendAfter = n, n
                    }
                    return this._appendAfter ? (this._appendAfter._next = e, e._prev = this._appendAfter) : this._mapHead = e, this._appendAfter = e, null
                }
                _getOrCreateRecordForKey(n, e) {
                    if (this._records.has(n)) {
                        const r = this._records.get(n);
                        this._maybeAddToChanges(r, e);
                        const s = r._prev,
                            o = r._next;
                        return s && (s._next = o), o && (o._prev = s), r._next = null, r._prev = null, r
                    }
                    const i = new n4(n);
                    return this._records.set(n, i), i.currentValue = e, this._addToAdditions(i), i
                }
                _reset() {
                    if (this.isDirty) {
                        let n;
                        for (this._previousMapHead = this._mapHead, n = this._previousMapHead; null !== n; n = n._next) n._nextPrevious = n._next;
                        for (n = this._changesHead; null !== n; n = n._nextChanged) n.previousValue = n.currentValue;
                        for (n = this._additionsHead; null != n; n = n._nextAdded) n.previousValue = n.currentValue;
                        this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null
                    }
                }
                _maybeAddToChanges(n, e) {
                    Object.is(e, n.currentValue) || (n.previousValue = n.currentValue, n.currentValue = e, this._addToChanges(n))
                }
                _addToAdditions(n) {
                    null === this._additionsHead ? this._additionsHead = this._additionsTail = n : (this._additionsTail._nextAdded = n, this._additionsTail = n)
                }
                _addToChanges(n) {
                    null === this._changesHead ? this._changesHead = this._changesTail = n : (this._changesTail._nextChanged = n, this._changesTail = n)
                }
                _forEach(n, e) {
                    n instanceof Map ? n.forEach(e) : Object.keys(n).forEach(i => e(n[i], i))
                }
            }
            class n4 {
                constructor(n) {
                    this.key = n, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null
                }
            }

            function dk() {
                return new Di([new ok])
            }
            let Di = (() => {
                class t {
                    constructor(e) {
                        this.factories = e
                    }
                    static create(e, i) {
                        if (null != i) {
                            const r = i.factories.slice();
                            e = e.concat(r)
                        }
                        return new t(e)
                    }
                    static extend(e) {
                        return {
                            provide: t,
                            useFactory: i => t.create(e, i || dk()),
                            deps: [
                                [t, new $i, new ii]
                            ]
                        }
                    }
                    find(e) {
                        const i = this.factories.find(r => r.supports(e));
                        if (null != i) return i;
                        throw new B(901, !1)
                    }
                }
                return t.\u0275prov = I({
                    token: t,
                    providedIn: "root",
                    factory: dk
                }), t
            })();

            function uk() {
                return new Wo([new ck])
            }
            let Wo = (() => {
                class t {
                    constructor(e) {
                        this.factories = e
                    }
                    static create(e, i) {
                        if (i) {
                            const r = i.factories.slice();
                            e = e.concat(r)
                        }
                        return new t(e)
                    }
                    static extend(e) {
                        return {
                            provide: t,
                            useFactory: i => t.create(e, i || uk()),
                            deps: [
                                [t, new $i, new ii]
                            ]
                        }
                    }
                    find(e) {
                        const i = this.factories.find(r => r.supports(e));
                        if (i) return i;
                        throw new B(901, !1)
                    }
                }
                return t.\u0275prov = I({
                    token: t,
                    providedIn: "root",
                    factory: uk
                }), t
            })();
            const o4 = qS(null, "core", []);
            let a4 = (() => {
                class t {
                    constructor(e) {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Lr))
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({}), t
            })();

            function us(t) {
                return "boolean" == typeof t ? t : null != t && "false" !== t
            }
            let $h = null;

            function Nr() {
                return $h
            }
            const pe = new R("DocumentToken");
            let py = (() => {
                class t {
                    historyGo(e) {
                        throw new Error("Not implemented")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: function() {
                        return function u4() {
                            return C(hk)
                        }()
                    },
                    providedIn: "platform"
                }), t
            })();
            const h4 = new R("Location Initialized");
            let hk = (() => {
                class t extends py {
                    constructor(e) {
                        super(), this._doc = e, this._init()
                    }
                    _init() {
                        this.location = window.location, this._history = window.history
                    }
                    getBaseHrefFromDOM() {
                        return Nr().getBaseHref(this._doc)
                    }
                    onPopState(e) {
                        const i = Nr().getGlobalEventTarget(this._doc, "window");
                        return i.addEventListener("popstate", e, !1), () => i.removeEventListener("popstate", e)
                    }
                    onHashChange(e) {
                        const i = Nr().getGlobalEventTarget(this._doc, "window");
                        return i.addEventListener("hashchange", e, !1), () => i.removeEventListener("hashchange", e)
                    }
                    get href() {
                        return this.location.href
                    }
                    get protocol() {
                        return this.location.protocol
                    }
                    get hostname() {
                        return this.location.hostname
                    }
                    get port() {
                        return this.location.port
                    }
                    get pathname() {
                        return this.location.pathname
                    }
                    get search() {
                        return this.location.search
                    }
                    get hash() {
                        return this.location.hash
                    }
                    set pathname(e) {
                        this.location.pathname = e
                    }
                    pushState(e, i, r) {
                        fk() ? this._history.pushState(e, i, r) : this.location.hash = r
                    }
                    replaceState(e, i, r) {
                        fk() ? this._history.replaceState(e, i, r) : this.location.hash = r
                    }
                    forward() {
                        this._history.forward()
                    }
                    back() {
                        this._history.back()
                    }
                    historyGo(e = 0) {
                        this._history.go(e)
                    }
                    getState() {
                        return this._history.state
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: function() {
                        return function f4() {
                            return new hk(C(pe))
                        }()
                    },
                    providedIn: "platform"
                }), t
            })();

            function fk() {
                return !!window.history.pushState
            }

            function my(t, n) {
                if (0 == t.length) return n;
                if (0 == n.length) return t;
                let e = 0;
                return t.endsWith("/") && e++, n.startsWith("/") && e++, 2 == e ? t + n.substring(1) : 1 == e ? t + n : t + "/" + n
            }

            function pk(t) {
                const n = t.match(/#|\?|$/),
                    e = n && n.index || t.length;
                return t.slice(0, e - ("/" === t[e - 1] ? 1 : 0)) + t.slice(e)
            }

            function hs(t) {
                return t && "?" !== t[0] ? "?" + t : t
            }
            let qo = (() => {
                class t {
                    historyGo(e) {
                        throw new Error("Not implemented")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: function() {
                        return st(gk)
                    },
                    providedIn: "root"
                }), t
            })();
            const mk = new R("appBaseHref");
            let gk = (() => {
                    class t extends qo {
                        constructor(e, i) {
                            super(), this._platformLocation = e, this._removeListenerFns = [], this._baseHref = i ? ? this._platformLocation.getBaseHrefFromDOM() ? ? st(pe).location ? .origin ? ? ""
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length;) this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        prepareExternalUrl(e) {
                            return my(this._baseHref, e)
                        }
                        path(e = !1) {
                            const i = this._platformLocation.pathname + hs(this._platformLocation.search),
                                r = this._platformLocation.hash;
                            return r && e ? `${i}${r}` : i
                        }
                        pushState(e, i, r, s) {
                            const o = this.prepareExternalUrl(r + hs(s));
                            this._platformLocation.pushState(e, i, o)
                        }
                        replaceState(e, i, r, s) {
                            const o = this.prepareExternalUrl(r + hs(s));
                            this._platformLocation.replaceState(e, i, o)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo ? .(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(py), C(mk, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                p4 = (() => {
                    class t extends qo {
                        constructor(e, i) {
                            super(), this._platformLocation = e, this._baseHref = "", this._removeListenerFns = [], null != i && (this._baseHref = i)
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length;) this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        path(e = !1) {
                            let i = this._platformLocation.hash;
                            return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i
                        }
                        prepareExternalUrl(e) {
                            const i = my(this._baseHref, e);
                            return i.length > 0 ? "#" + i : i
                        }
                        pushState(e, i, r, s) {
                            let o = this.prepareExternalUrl(r + hs(s));
                            0 == o.length && (o = this._platformLocation.pathname), this._platformLocation.pushState(e, i, o)
                        }
                        replaceState(e, i, r, s) {
                            let o = this.prepareExternalUrl(r + hs(s));
                            0 == o.length && (o = this._platformLocation.pathname), this._platformLocation.replaceState(e, i, o)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo ? .(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(py), C(mk, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                od = (() => {
                    class t {
                        constructor(e) {
                            this._subject = new V, this._urlChangeListeners = [], this._urlChangeSubscription = null, this._locationStrategy = e;
                            const i = this._locationStrategy.getBaseHref();
                            this._baseHref = pk(_k(i)), this._locationStrategy.onPopState(r => {
                                this._subject.emit({
                                    url: this.path(!0),
                                    pop: !0,
                                    state: r.state,
                                    type: r.type
                                })
                            })
                        }
                        ngOnDestroy() {
                            this._urlChangeSubscription ? .unsubscribe(), this._urlChangeListeners = []
                        }
                        path(e = !1) {
                            return this.normalize(this._locationStrategy.path(e))
                        }
                        getState() {
                            return this._locationStrategy.getState()
                        }
                        isCurrentPathEqualTo(e, i = "") {
                            return this.path() == this.normalize(e + hs(i))
                        }
                        normalize(e) {
                            return t.stripTrailingSlash(function g4(t, n) {
                                return t && n.startsWith(t) ? n.substring(t.length) : n
                            }(this._baseHref, _k(e)))
                        }
                        prepareExternalUrl(e) {
                            return e && "/" !== e[0] && (e = "/" + e), this._locationStrategy.prepareExternalUrl(e)
                        }
                        go(e, i = "", r = null) {
                            this._locationStrategy.pushState(r, "", e, i), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + hs(i)), r)
                        }
                        replaceState(e, i = "", r = null) {
                            this._locationStrategy.replaceState(r, "", e, i), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + hs(i)), r)
                        }
                        forward() {
                            this._locationStrategy.forward()
                        }
                        back() {
                            this._locationStrategy.back()
                        }
                        historyGo(e = 0) {
                            this._locationStrategy.historyGo ? .(e)
                        }
                        onUrlChange(e) {
                            return this._urlChangeListeners.push(e), this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(i => {
                                this._notifyUrlChangeListeners(i.url, i.state)
                            })), () => {
                                const i = this._urlChangeListeners.indexOf(e);
                                this._urlChangeListeners.splice(i, 1), 0 === this._urlChangeListeners.length && (this._urlChangeSubscription ? .unsubscribe(), this._urlChangeSubscription = null)
                            }
                        }
                        _notifyUrlChangeListeners(e = "", i) {
                            this._urlChangeListeners.forEach(r => r(e, i))
                        }
                        subscribe(e, i, r) {
                            return this._subject.subscribe({
                                next: e,
                                error: i,
                                complete: r
                            })
                        }
                    }
                    return t.normalizeQueryParams = hs, t.joinWithSlash = my, t.stripTrailingSlash = pk, t.\u0275fac = function(e) {
                        return new(e || t)(C(qo))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function() {
                            return function m4() {
                                return new od(C(qo))
                            }()
                        },
                        providedIn: "root"
                    }), t
                })();

            function _k(t) {
                return t.replace(/\/index.html$/, "")
            }
            const yk = {
                ADP: [void 0, void 0, 0],
                AFN: [void 0, "\u060b", 0],
                ALL: [void 0, void 0, 0],
                AMD: [void 0, "\u058f", 2],
                AOA: [void 0, "Kz"],
                ARS: [void 0, "$"],
                AUD: ["A$", "$"],
                AZN: [void 0, "\u20bc"],
                BAM: [void 0, "KM"],
                BBD: [void 0, "$"],
                BDT: [void 0, "\u09f3"],
                BHD: [void 0, void 0, 3],
                BIF: [void 0, void 0, 0],
                BMD: [void 0, "$"],
                BND: [void 0, "$"],
                BOB: [void 0, "Bs"],
                BRL: ["R$"],
                BSD: [void 0, "$"],
                BWP: [void 0, "P"],
                BYN: [void 0, void 0, 2],
                BYR: [void 0, void 0, 0],
                BZD: [void 0, "$"],
                CAD: ["CA$", "$", 2],
                CHF: [void 0, void 0, 2],
                CLF: [void 0, void 0, 4],
                CLP: [void 0, "$", 0],
                CNY: ["CN\xa5", "\xa5"],
                COP: [void 0, "$", 2],
                CRC: [void 0, "\u20a1", 2],
                CUC: [void 0, "$"],
                CUP: [void 0, "$"],
                CZK: [void 0, "K\u010d", 2],
                DJF: [void 0, void 0, 0],
                DKK: [void 0, "kr", 2],
                DOP: [void 0, "$"],
                EGP: [void 0, "E\xa3"],
                ESP: [void 0, "\u20a7", 0],
                EUR: ["\u20ac"],
                FJD: [void 0, "$"],
                FKP: [void 0, "\xa3"],
                GBP: ["\xa3"],
                GEL: [void 0, "\u20be"],
                GHS: [void 0, "GH\u20b5"],
                GIP: [void 0, "\xa3"],
                GNF: [void 0, "FG", 0],
                GTQ: [void 0, "Q"],
                GYD: [void 0, "$", 2],
                HKD: ["HK$", "$"],
                HNL: [void 0, "L"],
                HRK: [void 0, "kn"],
                HUF: [void 0, "Ft", 2],
                IDR: [void 0, "Rp", 2],
                ILS: ["\u20aa"],
                INR: ["\u20b9"],
                IQD: [void 0, void 0, 0],
                IRR: [void 0, void 0, 0],
                ISK: [void 0, "kr", 0],
                ITL: [void 0, void 0, 0],
                JMD: [void 0, "$"],
                JOD: [void 0, void 0, 3],
                JPY: ["\xa5", void 0, 0],
                KHR: [void 0, "\u17db"],
                KMF: [void 0, "CF", 0],
                KPW: [void 0, "\u20a9", 0],
                KRW: ["\u20a9", void 0, 0],
                KWD: [void 0, void 0, 3],
                KYD: [void 0, "$"],
                KZT: [void 0, "\u20b8"],
                LAK: [void 0, "\u20ad", 0],
                LBP: [void 0, "L\xa3", 0],
                LKR: [void 0, "Rs"],
                LRD: [void 0, "$"],
                LTL: [void 0, "Lt"],
                LUF: [void 0, void 0, 0],
                LVL: [void 0, "Ls"],
                LYD: [void 0, void 0, 3],
                MGA: [void 0, "Ar", 0],
                MGF: [void 0, void 0, 0],
                MMK: [void 0, "K", 0],
                MNT: [void 0, "\u20ae", 2],
                MRO: [void 0, void 0, 0],
                MUR: [void 0, "Rs", 2],
                MXN: ["MX$", "$"],
                MYR: [void 0, "RM"],
                NAD: [void 0, "$"],
                NGN: [void 0, "\u20a6"],
                NIO: [void 0, "C$"],
                NOK: [void 0, "kr", 2],
                NPR: [void 0, "Rs"],
                NZD: ["NZ$", "$"],
                OMR: [void 0, void 0, 3],
                PHP: ["\u20b1"],
                PKR: [void 0, "Rs", 2],
                PLN: [void 0, "z\u0142"],
                PYG: [void 0, "\u20b2", 0],
                RON: [void 0, "lei"],
                RSD: [void 0, void 0, 0],
                RUB: [void 0, "\u20bd"],
                RWF: [void 0, "RF", 0],
                SBD: [void 0, "$"],
                SEK: [void 0, "kr", 2],
                SGD: [void 0, "$"],
                SHP: [void 0, "\xa3"],
                SLE: [void 0, void 0, 2],
                SLL: [void 0, void 0, 0],
                SOS: [void 0, void 0, 0],
                SRD: [void 0, "$"],
                SSP: [void 0, "\xa3"],
                STD: [void 0, void 0, 0],
                STN: [void 0, "Db"],
                SYP: [void 0, "\xa3", 0],
                THB: [void 0, "\u0e3f"],
                TMM: [void 0, void 0, 0],
                TND: [void 0, void 0, 3],
                TOP: [void 0, "T$"],
                TRL: [void 0, void 0, 0],
                TRY: [void 0, "\u20ba"],
                TTD: [void 0, "$"],
                TWD: ["NT$", "$", 2],
                TZS: [void 0, void 0, 2],
                UAH: [void 0, "\u20b4"],
                UGX: [void 0, void 0, 0],
                USD: ["$"],
                UYI: [void 0, void 0, 0],
                UYU: [void 0, "$"],
                UYW: [void 0, void 0, 4],
                UZS: [void 0, void 0, 2],
                VEF: [void 0, "Bs", 2],
                VND: ["\u20ab", void 0, 0],
                VUV: [void 0, void 0, 0],
                XAF: ["FCFA", void 0, 0],
                XCD: ["EC$", "$"],
                XOF: ["F\u202fCFA", void 0, 0],
                XPF: ["CFPF", void 0, 0],
                XXX: ["\xa4"],
                YER: [void 0, void 0, 0],
                ZAR: [void 0, "R"],
                ZMK: [void 0, void 0, 0],
                ZMW: [void 0, "ZK"],
                ZWD: [void 0, void 0, 0]
            };
            var si = (() => ((si = si || {})[si.Decimal = 0] = "Decimal", si[si.Percent = 1] = "Percent", si[si.Currency = 2] = "Currency", si[si.Scientific = 3] = "Scientific", si))(),
                Zt = (() => ((Zt = Zt || {})[Zt.Format = 0] = "Format", Zt[Zt.Standalone = 1] = "Standalone", Zt))(),
                Ke = (() => ((Ke = Ke || {})[Ke.Narrow = 0] = "Narrow", Ke[Ke.Abbreviated = 1] = "Abbreviated", Ke[Ke.Wide = 2] = "Wide", Ke[Ke.Short = 3] = "Short", Ke))(),
                Ht = (() => ((Ht = Ht || {})[Ht.Short = 0] = "Short", Ht[Ht.Medium = 1] = "Medium", Ht[Ht.Long = 2] = "Long", Ht[Ht.Full = 3] = "Full", Ht))(),
                Me = (() => ((Me = Me || {})[Me.Decimal = 0] = "Decimal", Me[Me.Group = 1] = "Group", Me[Me.List = 2] = "List", Me[Me.PercentSign = 3] = "PercentSign", Me[Me.PlusSign = 4] = "PlusSign", Me[Me.MinusSign = 5] = "MinusSign", Me[Me.Exponential = 6] = "Exponential", Me[Me.SuperscriptingExponent = 7] = "SuperscriptingExponent", Me[Me.PerMille = 8] = "PerMille", Me[Me.Infinity = 9] = "Infinity", Me[Me.NaN = 10] = "NaN", Me[Me.TimeSeparator = 11] = "TimeSeparator", Me[Me.CurrencyDecimal = 12] = "CurrencyDecimal", Me[Me.CurrencyGroup = 13] = "CurrencyGroup", Me))();

            function jh(t, n) {
                return qi(Yn(t)[se.DateFormat], n)
            }

            function zh(t, n) {
                return qi(Yn(t)[se.TimeFormat], n)
            }

            function Uh(t, n) {
                return qi(Yn(t)[se.DateTimeFormat], n)
            }

            function Wi(t, n) {
                const e = Yn(t),
                    i = e[se.NumberSymbols][n];
                if (typeof i > "u") {
                    if (n === Me.CurrencyDecimal) return e[se.NumberSymbols][Me.Decimal];
                    if (n === Me.CurrencyGroup) return e[se.NumberSymbols][Me.Group]
                }
                return i
            }

            function bk(t) {
                if (!t[se.ExtraData]) throw new Error(`Missing extra locale data for the locale "${t[se.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)
            }

            function qi(t, n) {
                for (let e = n; e > -1; e--)
                    if (typeof t[e] < "u") return t[e];
                throw new Error("Locale data API: locale data undefined")
            }

            function _y(t) {
                const [n, e] = t.split(":");
                return {
                    hours: +n,
                    minutes: +e
                }
            }
            const E4 = /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
                ad = {},
                T4 = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
            var cn = (() => ((cn = cn || {})[cn.Short = 0] = "Short", cn[cn.ShortGMT = 1] = "ShortGMT", cn[cn.Long = 2] = "Long", cn[cn.Extended = 3] = "Extended", cn))(),
                ke = (() => ((ke = ke || {})[ke.FullYear = 0] = "FullYear", ke[ke.Month = 1] = "Month", ke[ke.Date = 2] = "Date", ke[ke.Hours = 3] = "Hours", ke[ke.Minutes = 4] = "Minutes", ke[ke.Seconds = 5] = "Seconds", ke[ke.FractionalSeconds = 6] = "FractionalSeconds", ke[ke.Day = 7] = "Day", ke))(),
                je = (() => ((je = je || {})[je.DayPeriods = 0] = "DayPeriods", je[je.Days = 1] = "Days", je[je.Months = 2] = "Months", je[je.Eras = 3] = "Eras", je))();

            function I4(t, n, e, i) {
                let r = function H4(t) {
                    if (Ck(t)) return t;
                    if ("number" == typeof t && !isNaN(t)) return new Date(t);
                    if ("string" == typeof t) {
                        if (t = t.trim(), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)) {
                            const [r, s = 1, o = 1] = t.split("-").map(a => +a);
                            return Gh(r, s - 1, o)
                        }
                        const e = parseFloat(t);
                        if (!isNaN(t - e)) return new Date(e);
                        let i;
                        if (i = t.match(E4)) return function $4(t) {
                            const n = new Date(0);
                            let e = 0,
                                i = 0;
                            const r = t[8] ? n.setUTCFullYear : n.setFullYear,
                                s = t[8] ? n.setUTCHours : n.setHours;
                            t[9] && (e = Number(t[9] + t[10]), i = Number(t[9] + t[11])), r.call(n, Number(t[1]), Number(t[2]) - 1, Number(t[3]));
                            const o = Number(t[4] || 0) - e,
                                a = Number(t[5] || 0) - i,
                                l = Number(t[6] || 0),
                                c = Math.floor(1e3 * parseFloat("0." + (t[7] || 0)));
                            return s.call(n, o, a, l, c), n
                        }(i)
                    }
                    const n = new Date(t);
                    if (!Ck(n)) throw new Error(`Unable to convert "${t}" into a date`);
                    return n
                }(t);
                n = fs(e, n) || n;
                let a, o = [];
                for (; n;) {
                    if (a = T4.exec(n), !a) {
                        o.push(n);
                        break
                    } {
                        o = o.concat(a.slice(1));
                        const d = o.pop();
                        if (!d) break;
                        n = d
                    }
                }
                let l = r.getTimezoneOffset();
                i && (l = wk(i, l), r = function V4(t, n, e) {
                    const i = e ? -1 : 1,
                        r = t.getTimezoneOffset();
                    return function B4(t, n) {
                        return (t = new Date(t.getTime())).setMinutes(t.getMinutes() + n), t
                    }(t, i * (wk(n, r) - r))
                }(r, i, !0));
                let c = "";
                return o.forEach(d => {
                    const h = function N4(t) {
                        if (by[t]) return by[t];
                        let n;
                        switch (t) {
                            case "G":
                            case "GG":
                            case "GGG":
                                n = It(je.Eras, Ke.Abbreviated);
                                break;
                            case "GGGG":
                                n = It(je.Eras, Ke.Wide);
                                break;
                            case "GGGGG":
                                n = It(je.Eras, Ke.Narrow);
                                break;
                            case "y":
                                n = tn(ke.FullYear, 1, 0, !1, !0);
                                break;
                            case "yy":
                                n = tn(ke.FullYear, 2, 0, !0, !0);
                                break;
                            case "yyy":
                                n = tn(ke.FullYear, 3, 0, !1, !0);
                                break;
                            case "yyyy":
                                n = tn(ke.FullYear, 4, 0, !1, !0);
                                break;
                            case "Y":
                                n = Qh(1);
                                break;
                            case "YY":
                                n = Qh(2, !0);
                                break;
                            case "YYY":
                                n = Qh(3);
                                break;
                            case "YYYY":
                                n = Qh(4);
                                break;
                            case "M":
                            case "L":
                                n = tn(ke.Month, 1, 1);
                                break;
                            case "MM":
                            case "LL":
                                n = tn(ke.Month, 2, 1);
                                break;
                            case "MMM":
                                n = It(je.Months, Ke.Abbreviated);
                                break;
                            case "MMMM":
                                n = It(je.Months, Ke.Wide);
                                break;
                            case "MMMMM":
                                n = It(je.Months, Ke.Narrow);
                                break;
                            case "LLL":
                                n = It(je.Months, Ke.Abbreviated, Zt.Standalone);
                                break;
                            case "LLLL":
                                n = It(je.Months, Ke.Wide, Zt.Standalone);
                                break;
                            case "LLLLL":
                                n = It(je.Months, Ke.Narrow, Zt.Standalone);
                                break;
                            case "w":
                                n = yy(1);
                                break;
                            case "ww":
                                n = yy(2);
                                break;
                            case "W":
                                n = yy(1, !0);
                                break;
                            case "d":
                                n = tn(ke.Date, 1);
                                break;
                            case "dd":
                                n = tn(ke.Date, 2);
                                break;
                            case "c":
                            case "cc":
                                n = tn(ke.Day, 1);
                                break;
                            case "ccc":
                                n = It(je.Days, Ke.Abbreviated, Zt.Standalone);
                                break;
                            case "cccc":
                                n = It(je.Days, Ke.Wide, Zt.Standalone);
                                break;
                            case "ccccc":
                                n = It(je.Days, Ke.Narrow, Zt.Standalone);
                                break;
                            case "cccccc":
                                n = It(je.Days, Ke.Short, Zt.Standalone);
                                break;
                            case "E":
                            case "EE":
                            case "EEE":
                                n = It(je.Days, Ke.Abbreviated);
                                break;
                            case "EEEE":
                                n = It(je.Days, Ke.Wide);
                                break;
                            case "EEEEE":
                                n = It(je.Days, Ke.Narrow);
                                break;
                            case "EEEEEE":
                                n = It(je.Days, Ke.Short);
                                break;
                            case "a":
                            case "aa":
                            case "aaa":
                                n = It(je.DayPeriods, Ke.Abbreviated);
                                break;
                            case "aaaa":
                                n = It(je.DayPeriods, Ke.Wide);
                                break;
                            case "aaaaa":
                                n = It(je.DayPeriods, Ke.Narrow);
                                break;
                            case "b":
                            case "bb":
                            case "bbb":
                                n = It(je.DayPeriods, Ke.Abbreviated, Zt.Standalone, !0);
                                break;
                            case "bbbb":
                                n = It(je.DayPeriods, Ke.Wide, Zt.Standalone, !0);
                                break;
                            case "bbbbb":
                                n = It(je.DayPeriods, Ke.Narrow, Zt.Standalone, !0);
                                break;
                            case "B":
                            case "BB":
                            case "BBB":
                                n = It(je.DayPeriods, Ke.Abbreviated, Zt.Format, !0);
                                break;
                            case "BBBB":
                                n = It(je.DayPeriods, Ke.Wide, Zt.Format, !0);
                                break;
                            case "BBBBB":
                                n = It(je.DayPeriods, Ke.Narrow, Zt.Format, !0);
                                break;
                            case "h":
                                n = tn(ke.Hours, 1, -12);
                                break;
                            case "hh":
                                n = tn(ke.Hours, 2, -12);
                                break;
                            case "H":
                                n = tn(ke.Hours, 1);
                                break;
                            case "HH":
                                n = tn(ke.Hours, 2);
                                break;
                            case "m":
                                n = tn(ke.Minutes, 1);
                                break;
                            case "mm":
                                n = tn(ke.Minutes, 2);
                                break;
                            case "s":
                                n = tn(ke.Seconds, 1);
                                break;
                            case "ss":
                                n = tn(ke.Seconds, 2);
                                break;
                            case "S":
                                n = tn(ke.FractionalSeconds, 1);
                                break;
                            case "SS":
                                n = tn(ke.FractionalSeconds, 2);
                                break;
                            case "SSS":
                                n = tn(ke.FractionalSeconds, 3);
                                break;
                            case "Z":
                            case "ZZ":
                            case "ZZZ":
                                n = qh(cn.Short);
                                break;
                            case "ZZZZZ":
                                n = qh(cn.Extended);
                                break;
                            case "O":
                            case "OO":
                            case "OOO":
                            case "z":
                            case "zz":
                            case "zzz":
                                n = qh(cn.ShortGMT);
                                break;
                            case "OOOO":
                            case "ZZZZ":
                            case "zzzz":
                                n = qh(cn.Long);
                                break;
                            default:
                                return null
                        }
                        return by[t] = n, n
                    }(d);
                    c += h ? h(r, e, l) : "''" === d ? "'" : d.replace(/(^'|'$)/g, "").replace(/''/g, "'")
                }), c
            }

            function Gh(t, n, e) {
                const i = new Date(0);
                return i.setFullYear(t, n, e), i.setHours(0, 0, 0), i
            }

            function fs(t, n) {
                const e = function _4(t) {
                    return Yn(t)[se.LocaleId]
                }(t);
                if (ad[e] = ad[e] || {}, ad[e][n]) return ad[e][n];
                let i = "";
                switch (n) {
                    case "shortDate":
                        i = jh(t, Ht.Short);
                        break;
                    case "mediumDate":
                        i = jh(t, Ht.Medium);
                        break;
                    case "longDate":
                        i = jh(t, Ht.Long);
                        break;
                    case "fullDate":
                        i = jh(t, Ht.Full);
                        break;
                    case "shortTime":
                        i = zh(t, Ht.Short);
                        break;
                    case "mediumTime":
                        i = zh(t, Ht.Medium);
                        break;
                    case "longTime":
                        i = zh(t, Ht.Long);
                        break;
                    case "fullTime":
                        i = zh(t, Ht.Full);
                        break;
                    case "short":
                        const r = fs(t, "shortTime"),
                            s = fs(t, "shortDate");
                        i = Wh(Uh(t, Ht.Short), [r, s]);
                        break;
                    case "medium":
                        const o = fs(t, "mediumTime"),
                            a = fs(t, "mediumDate");
                        i = Wh(Uh(t, Ht.Medium), [o, a]);
                        break;
                    case "long":
                        const l = fs(t, "longTime"),
                            c = fs(t, "longDate");
                        i = Wh(Uh(t, Ht.Long), [l, c]);
                        break;
                    case "full":
                        const d = fs(t, "fullTime"),
                            h = fs(t, "fullDate");
                        i = Wh(Uh(t, Ht.Full), [d, h])
                }
                return i && (ad[e][n] = i), i
            }

            function Wh(t, n) {
                return n && (t = t.replace(/\{([^}]+)}/g, function(e, i) {
                    return null != n && i in n ? n[i] : e
                })), t
            }

            function mr(t, n, e = "-", i, r) {
                let s = "";
                (t < 0 || r && t <= 0) && (r ? t = 1 - t : (t = -t, s = e));
                let o = String(t);
                for (; o.length < n;) o = "0" + o;
                return i && (o = o.slice(o.length - n)), s + o
            }

            function tn(t, n, e = 0, i = !1, r = !1) {
                return function(s, o) {
                    let a = function F4(t, n) {
                        switch (t) {
                            case ke.FullYear:
                                return n.getFullYear();
                            case ke.Month:
                                return n.getMonth();
                            case ke.Date:
                                return n.getDate();
                            case ke.Hours:
                                return n.getHours();
                            case ke.Minutes:
                                return n.getMinutes();
                            case ke.Seconds:
                                return n.getSeconds();
                            case ke.FractionalSeconds:
                                return n.getMilliseconds();
                            case ke.Day:
                                return n.getDay();
                            default:
                                throw new Error(`Unknown DateType value "${t}".`)
                        }
                    }(t, s);
                    if ((e > 0 || a > -e) && (a += e), t === ke.Hours) 0 === a && -12 === e && (a = 12);
                    else if (t === ke.FractionalSeconds) return function R4(t, n) {
                        return mr(t, 3).substring(0, n)
                    }(a, n);
                    const l = Wi(o, Me.MinusSign);
                    return mr(a, n, l, i, r)
                }
            }

            function It(t, n, e = Zt.Format, i = !1) {
                return function(r, s) {
                    return function O4(t, n, e, i, r, s) {
                        switch (e) {
                            case je.Months:
                                return function v4(t, n, e) {
                                    const i = Yn(t),
                                        s = qi([i[se.MonthsFormat], i[se.MonthsStandalone]], n);
                                    return qi(s, e)
                                }(n, r, i)[t.getMonth()];
                            case je.Days:
                                return function b4(t, n, e) {
                                    const i = Yn(t),
                                        s = qi([i[se.DaysFormat], i[se.DaysStandalone]], n);
                                    return qi(s, e)
                                }(n, r, i)[t.getDay()];
                            case je.DayPeriods:
                                const o = t.getHours(),
                                    a = t.getMinutes();
                                if (s) {
                                    const c = function D4(t) {
                                            const n = Yn(t);
                                            return bk(n), (n[se.ExtraData][2] || []).map(i => "string" == typeof i ? _y(i) : [_y(i[0]), _y(i[1])])
                                        }(n),
                                        d = function M4(t, n, e) {
                                            const i = Yn(t);
                                            bk(i);
                                            const s = qi([i[se.ExtraData][0], i[se.ExtraData][1]], n) || [];
                                            return qi(s, e) || []
                                        }(n, r, i),
                                        h = c.findIndex(m => {
                                            if (Array.isArray(m)) {
                                                const [_, v] = m, D = o >= _.hours && a >= _.minutes, k = o < v.hours || o === v.hours && a < v.minutes;
                                                if (_.hours < v.hours) {
                                                    if (D && k) return !0
                                                } else if (D || k) return !0
                                            } else if (m.hours === o && m.minutes === a) return !0;
                                            return !1
                                        });
                                    if (-1 !== h) return d[h]
                                }
                                return function y4(t, n, e) {
                                    const i = Yn(t),
                                        s = qi([i[se.DayPeriodsFormat], i[se.DayPeriodsStandalone]], n);
                                    return qi(s, e)
                                }(n, r, i)[o < 12 ? 0 : 1];
                            case je.Eras:
                                return function w4(t, n) {
                                    return qi(Yn(t)[se.Eras], n)
                                }(n, i)[t.getFullYear() <= 0 ? 0 : 1];
                            default:
                                throw new Error(`unexpected translation type ${e}`)
                        }
                    }(r, s, t, n, e, i)
                }
            }

            function qh(t) {
                return function(n, e, i) {
                    const r = -1 * i,
                        s = Wi(e, Me.MinusSign),
                        o = r > 0 ? Math.floor(r / 60) : Math.ceil(r / 60);
                    switch (t) {
                        case cn.Short:
                            return (r >= 0 ? "+" : "") + mr(o, 2, s) + mr(Math.abs(r % 60), 2, s);
                        case cn.ShortGMT:
                            return "GMT" + (r >= 0 ? "+" : "") + mr(o, 1, s);
                        case cn.Long:
                            return "GMT" + (r >= 0 ? "+" : "") + mr(o, 2, s) + ":" + mr(Math.abs(r % 60), 2, s);
                        case cn.Extended:
                            return 0 === i ? "Z" : (r >= 0 ? "+" : "") + mr(o, 2, s) + ":" + mr(Math.abs(r % 60), 2, s);
                        default:
                            throw new Error(`Unknown zone width "${t}"`)
                    }
                }
            }

            function vk(t) {
                return Gh(t.getFullYear(), t.getMonth(), t.getDate() + (4 - t.getDay()))
            }

            function yy(t, n = !1) {
                return function(e, i) {
                    let r;
                    if (n) {
                        const s = new Date(e.getFullYear(), e.getMonth(), 1).getDay() - 1,
                            o = e.getDate();
                        r = 1 + Math.floor((o + s) / 7)
                    } else {
                        const s = vk(e),
                            o = function L4(t) {
                                const n = Gh(t, 0, 1).getDay();
                                return Gh(t, 0, 1 + (n <= 4 ? 4 : 11) - n)
                            }(s.getFullYear()),
                            a = s.getTime() - o.getTime();
                        r = 1 + Math.round(a / 6048e5)
                    }
                    return mr(r, t, Wi(i, Me.MinusSign))
                }
            }

            function Qh(t, n = !1) {
                return function(e, i) {
                    return mr(vk(e).getFullYear(), t, Wi(i, Me.MinusSign), n)
                }
            }
            const by = {};

            function wk(t, n) {
                t = t.replace(/:/g, "");
                const e = Date.parse("Jan 01, 1970 00:00:00 " + t) / 6e4;
                return isNaN(e) ? n : e
            }

            function Ck(t) {
                return t instanceof Date && !isNaN(t.valueOf())
            }
            const j4 = /^(\d+)?\.((\d+)(-(\d+))?)?$/;

            function W4(t, n, e, i, r) {
                const o = function Cy(t, n = "-") {
                    const e = {
                            minInt: 1,
                            minFrac: 0,
                            maxFrac: 0,
                            posPre: "",
                            posSuf: "",
                            negPre: "",
                            negSuf: "",
                            gSize: 0,
                            lgSize: 0
                        },
                        i = t.split(";"),
                        r = i[0],
                        s = i[1],
                        o = -1 !== r.indexOf(".") ? r.split(".") : [r.substring(0, r.lastIndexOf("0") + 1), r.substring(r.lastIndexOf("0") + 1)],
                        a = o[0],
                        l = o[1] || "";
                    e.posPre = a.substring(0, a.indexOf("#"));
                    for (let d = 0; d < l.length; d++) {
                        const h = l.charAt(d);
                        "0" === h ? e.minFrac = e.maxFrac = d + 1 : "#" === h ? e.maxFrac = d + 1 : e.posSuf += h
                    }
                    const c = a.split(",");
                    if (e.gSize = c[1] ? c[1].length : 0, e.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0, s) {
                        const d = r.length - e.posPre.length - e.posSuf.length,
                            h = s.indexOf("#");
                        e.negPre = s.substring(0, h).replace(/'/g, ""), e.negSuf = s.slice(h + d).replace(/'/g, "")
                    } else e.negPre = n + e.posPre, e.negSuf = e.posSuf;
                    return e
                }(function gy(t, n) {
                    return Yn(t)[se.NumberFormats][n]
                }(n, si.Currency), Wi(n, Me.MinusSign));
                return o.minFrac = function A4(t) {
                        let n;
                        const e = yk[t];
                        return e && (n = e[2]), "number" == typeof n ? n : 2
                    }(i), o.maxFrac = o.minFrac,
                    function wy(t, n, e, i, r, s, o = !1) {
                        let a = "",
                            l = !1;
                        if (isFinite(t)) {
                            let c = function K4(t) {
                                let i, r, s, o, a, n = Math.abs(t) + "",
                                    e = 0;
                                for ((r = n.indexOf(".")) > -1 && (n = n.replace(".", "")), (s = n.search(/e/i)) > 0 ? (r < 0 && (r = s), r += +n.slice(s + 1), n = n.substring(0, s)) : r < 0 && (r = n.length), s = 0;
                                    "0" === n.charAt(s); s++);
                                if (s === (a = n.length)) i = [0], r = 1;
                                else {
                                    for (a--;
                                        "0" === n.charAt(a);) a--;
                                    for (r -= s, i = [], o = 0; s <= a; s++, o++) i[o] = Number(n.charAt(s))
                                }
                                return r > 22 && (i = i.splice(0, 21), e = r - 1, r = 1), {
                                    digits: i,
                                    exponent: e,
                                    integerLen: r
                                }
                            }(t);
                            o && (c = function Q4(t) {
                                if (0 === t.digits[0]) return t;
                                const n = t.digits.length - t.integerLen;
                                return t.exponent ? t.exponent += 2 : (0 === n ? t.digits.push(0, 0) : 1 === n && t.digits.push(0), t.integerLen += 2), t
                            }(c));
                            let d = n.minInt,
                                h = n.minFrac,
                                m = n.maxFrac;
                            if (s) {
                                const L = s.match(j4);
                                if (null === L) throw new Error(`${s} is not a valid digit info`);
                                const F = L[1],
                                    K = L[3],
                                    Ce = L[5];
                                null != F && (d = xy(F)), null != K && (h = xy(K)), null != Ce ? m = xy(Ce) : null != K && h > m && (m = h)
                            }! function Z4(t, n, e) {
                                if (n > e) throw new Error(`The minimum number of digits after fraction (${n}) is higher than the maximum (${e}).`);
                                let i = t.digits,
                                    r = i.length - t.integerLen;
                                const s = Math.min(Math.max(n, r), e);
                                let o = s + t.integerLen,
                                    a = i[o];
                                if (o > 0) {
                                    i.splice(Math.max(t.integerLen, o));
                                    for (let h = o; h < i.length; h++) i[h] = 0
                                } else {
                                    r = Math.max(0, r), t.integerLen = 1, i.length = Math.max(1, o = s + 1), i[0] = 0;
                                    for (let h = 1; h < o; h++) i[h] = 0
                                }
                                if (a >= 5)
                                    if (o - 1 < 0) {
                                        for (let h = 0; h > o; h--) i.unshift(0), t.integerLen++;
                                        i.unshift(1), t.integerLen++
                                    } else i[o - 1]++;
                                for (; r < Math.max(0, s); r++) i.push(0);
                                let l = 0 !== s;
                                const c = n + t.integerLen,
                                    d = i.reduceRight(function(h, m, _, v) {
                                        return v[_] = (m += h) < 10 ? m : m - 10, l && (0 === v[_] && _ >= c ? v.pop() : l = !1), m >= 10 ? 1 : 0
                                    }, 0);
                                d && (i.unshift(d), t.integerLen++)
                            }(c, h, m);
                            let _ = c.digits,
                                v = c.integerLen;
                            const D = c.exponent;
                            let k = [];
                            for (l = _.every(L => !L); v < d; v++) _.unshift(0);
                            for (; v < 0; v++) _.unshift(0);
                            v > 0 ? k = _.splice(v, _.length) : (k = _, _ = [0]);
                            const S = [];
                            for (_.length >= n.lgSize && S.unshift(_.splice(-n.lgSize, _.length).join("")); _.length > n.gSize;) S.unshift(_.splice(-n.gSize, _.length).join(""));
                            _.length && S.unshift(_.join("")), a = S.join(Wi(e, i)), k.length && (a += Wi(e, r) + k.join("")), D && (a += Wi(e, Me.Exponential) + "+" + D)
                        } else a = Wi(e, Me.Infinity);
                        return a = t < 0 && !l ? n.negPre + a + n.negSuf : n.posPre + a + n.posSuf, a
                    }(t, o, n, Me.CurrencyGroup, Me.CurrencyDecimal, r).replace("\xa4", e).replace("\xa4", "").trim()
            }

            function xy(t) {
                const n = parseInt(t);
                if (isNaN(n)) throw new Error("Invalid integer literal when parsing " + t);
                return n
            }

            function Sk(t, n) {
                n = encodeURIComponent(n);
                for (const e of t.split(";")) {
                    const i = e.indexOf("="),
                        [r, s] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
                    if (r.trim() === n) return decodeURIComponent(s)
                }
                return null
            }
            let gr = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._iterableDiffers = e, this._keyValueDiffers = i, this._ngEl = r, this._renderer = s, this._iterableDiffer = null, this._keyValueDiffer = null, this._initialClasses = [], this._rawClass = null
                    }
                    set klass(e) {
                        this._removeClasses(this._initialClasses), this._initialClasses = "string" == typeof e ? e.split(/\s+/) : [], this._applyClasses(this._initialClasses), this._applyClasses(this._rawClass)
                    }
                    set ngClass(e) {
                        this._removeClasses(this._rawClass), this._applyClasses(this._initialClasses), this._iterableDiffer = null, this._keyValueDiffer = null, this._rawClass = "string" == typeof e ? e.split(/\s+/) : e, this._rawClass && (Uc(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create())
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const e = this._iterableDiffer.diff(this._rawClass);
                            e && this._applyIterableChanges(e)
                        } else if (this._keyValueDiffer) {
                            const e = this._keyValueDiffer.diff(this._rawClass);
                            e && this._applyKeyValueChanges(e)
                        }
                    }
                    _applyKeyValueChanges(e) {
                        e.forEachAddedItem(i => this._toggleClass(i.key, i.currentValue)), e.forEachChangedItem(i => this._toggleClass(i.key, i.currentValue)), e.forEachRemovedItem(i => {
                            i.previousValue && this._toggleClass(i.key, !1)
                        })
                    }
                    _applyIterableChanges(e) {
                        e.forEachAddedItem(i => {
                            if ("string" != typeof i.item) throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${Dt(i.item)}`);
                            this._toggleClass(i.item, !0)
                        }), e.forEachRemovedItem(i => this._toggleClass(i.item, !1))
                    }
                    _applyClasses(e) {
                        e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !0)) : Object.keys(e).forEach(i => this._toggleClass(i, !!e[i])))
                    }
                    _removeClasses(e) {
                        e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !1)) : Object.keys(e).forEach(i => this._toggleClass(i, !1)))
                    }
                    _toggleClass(e, i) {
                        (e = e.trim()) && e.split(/\s+/g).forEach(r => {
                            i ? this._renderer.addClass(this._ngEl.nativeElement, r) : this._renderer.removeClass(this._ngEl.nativeElement, r)
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Di), u(Wo), u(N), u(qn))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngClass", ""]
                    ],
                    inputs: {
                        klass: ["class", "klass"],
                        ngClass: "ngClass"
                    },
                    standalone: !0
                }), t
            })();
            class tj {
                constructor(n, e, i, r) {
                    this.$implicit = n, this.ngForOf = e, this.index = i, this.count = r
                }
                get first() {
                    return 0 === this.index
                }
                get last() {
                    return this.index === this.count - 1
                }
                get even() {
                    return this.index % 2 == 0
                }
                get odd() {
                    return !this.even
                }
            }
            let Dn = (() => {
                class t {
                    constructor(e, i, r) {
                        this._viewContainer = e, this._template = i, this._differs = r, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null
                    }
                    set ngForOf(e) {
                        this._ngForOf = e, this._ngForOfDirty = !0
                    }
                    set ngForTrackBy(e) {
                        this._trackByFn = e
                    }
                    get ngForTrackBy() {
                        return this._trackByFn
                    }
                    set ngForTemplate(e) {
                        e && (this._template = e)
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const e = this._ngForOf;
                            !this._differ && e && (this._differ = this._differs.find(e).create(this.ngForTrackBy))
                        }
                        if (this._differ) {
                            const e = this._differ.diff(this._ngForOf);
                            e && this._applyChanges(e)
                        }
                    }
                    _applyChanges(e) {
                        const i = this._viewContainer;
                        e.forEachOperation((r, s, o) => {
                            if (null == r.previousIndex) i.createEmbeddedView(this._template, new tj(r.item, this._ngForOf, -1, -1), null === o ? void 0 : o);
                            else if (null == o) i.remove(null === s ? void 0 : s);
                            else if (null !== s) {
                                const a = i.get(s);
                                i.move(a, o), Ek(a, r)
                            }
                        });
                        for (let r = 0, s = i.length; r < s; r++) {
                            const a = i.get(r).context;
                            a.index = r, a.count = s, a.ngForOf = this._ngForOf
                        }
                        e.forEachIdentityChange(r => {
                            Ek(i.get(r.currentIndex), r)
                        })
                    }
                    static ngTemplateContextGuard(e, i) {
                        return !0
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Je), u(rt), u(Di))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngFor", "", "ngForOf", ""]
                    ],
                    inputs: {
                        ngForOf: "ngForOf",
                        ngForTrackBy: "ngForTrackBy",
                        ngForTemplate: "ngForTemplate"
                    },
                    standalone: !0
                }), t
            })();

            function Ek(t, n) {
                t.context.$implicit = n.item
            }
            let at = (() => {
                class t {
                    constructor(e, i) {
                        this._viewContainer = e, this._context = new ij, this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = i
                    }
                    set ngIf(e) {
                        this._context.$implicit = this._context.ngIf = e, this._updateView()
                    }
                    set ngIfThen(e) {
                        Tk("ngIfThen", e), this._thenTemplateRef = e, this._thenViewRef = null, this._updateView()
                    }
                    set ngIfElse(e) {
                        Tk("ngIfElse", e), this._elseTemplateRef = e, this._elseViewRef = null, this._updateView()
                    }
                    _updateView() {
                        this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                    }
                    static ngTemplateContextGuard(e, i) {
                        return !0
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Je), u(rt))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngIf", ""]
                    ],
                    inputs: {
                        ngIf: "ngIf",
                        ngIfThen: "ngIfThen",
                        ngIfElse: "ngIfElse"
                    },
                    standalone: !0
                }), t
            })();
            class ij {
                constructor() {
                    this.$implicit = null, this.ngIf = null
                }
            }

            function Tk(t, n) {
                if (n && !n.createEmbeddedView) throw new Error(`${t} must be a TemplateRef, but received '${Dt(n)}'.`)
            }
            class My {
                constructor(n, e) {
                    this._viewContainerRef = n, this._templateRef = e, this._created = !1
                }
                create() {
                    this._created = !0, this._viewContainerRef.createEmbeddedView(this._templateRef)
                }
                destroy() {
                    this._created = !1, this._viewContainerRef.clear()
                }
                enforceState(n) {
                    n && !this._created ? this.create() : !n && this._created && this.destroy()
                }
            }
            let ps = (() => {
                    class t {
                        constructor() {
                            this._defaultUsed = !1, this._caseCount = 0, this._lastCaseCheckIndex = 0, this._lastCasesMatched = !1
                        }
                        set ngSwitch(e) {
                            this._ngSwitch = e, 0 === this._caseCount && this._updateDefaultCases(!0)
                        }
                        _addCase() {
                            return this._caseCount++
                        }
                        _addDefault(e) {
                            this._defaultViews || (this._defaultViews = []), this._defaultViews.push(e)
                        }
                        _matchCase(e) {
                            const i = e == this._ngSwitch;
                            return this._lastCasesMatched = this._lastCasesMatched || i, this._lastCaseCheckIndex++, this._lastCaseCheckIndex === this._caseCount && (this._updateDefaultCases(!this._lastCasesMatched), this._lastCaseCheckIndex = 0, this._lastCasesMatched = !1), i
                        }
                        _updateDefaultCases(e) {
                            if (this._defaultViews && e !== this._defaultUsed) {
                                this._defaultUsed = e;
                                for (let i = 0; i < this._defaultViews.length; i++) this._defaultViews[i].enforceState(e)
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngSwitch", ""]
                        ],
                        inputs: {
                            ngSwitch: "ngSwitch"
                        },
                        standalone: !0
                    }), t
                })(),
                Yo = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.ngSwitch = r, r._addCase(), this._view = new My(e, i)
                        }
                        ngDoCheck() {
                            this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(rt), u(ps, 9))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngSwitchCase", ""]
                        ],
                        inputs: {
                            ngSwitchCase: "ngSwitchCase"
                        },
                        standalone: !0
                    }), t
                })(),
                Sy = (() => {
                    class t {
                        constructor(e, i, r) {
                            r._addDefault(new My(e, i))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(rt), u(ps, 9))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngSwitchDefault", ""]
                        ],
                        standalone: !0
                    }), t
                })(),
                Gs = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._ngEl = e, this._differs = i, this._renderer = r, this._ngStyle = null, this._differ = null
                        }
                        set ngStyle(e) {
                            this._ngStyle = e, !this._differ && e && (this._differ = this._differs.find(e).create())
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const e = this._differ.diff(this._ngStyle);
                                e && this._applyChanges(e)
                            }
                        }
                        _setStyle(e, i) {
                            const [r, s] = e.split("."), o = -1 === r.indexOf("-") ? void 0 : ri.DashCase;
                            null != i ? this._renderer.setStyle(this._ngEl.nativeElement, r, s ? `${i}${s}` : i, o) : this._renderer.removeStyle(this._ngEl.nativeElement, r, o)
                        }
                        _applyChanges(e) {
                            e.forEachRemovedItem(i => this._setStyle(i.key, null)), e.forEachAddedItem(i => this._setStyle(i.key, i.currentValue)), e.forEachChangedItem(i => this._setStyle(i.key, i.currentValue))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Wo), u(qn))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngStyle", ""]
                        ],
                        inputs: {
                            ngStyle: "ngStyle"
                        },
                        standalone: !0
                    }), t
                })(),
                cd = (() => {
                    class t {
                        constructor(e) {
                            this._viewContainerRef = e, this._viewRef = null, this.ngTemplateOutletContext = null, this.ngTemplateOutlet = null, this.ngTemplateOutletInjector = null
                        }
                        ngOnChanges(e) {
                            if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                                const i = this._viewContainerRef;
                                if (this._viewRef && i.remove(i.indexOf(this._viewRef)), this.ngTemplateOutlet) {
                                    const {
                                        ngTemplateOutlet: r,
                                        ngTemplateOutletContext: s,
                                        ngTemplateOutletInjector: o
                                    } = this;
                                    this._viewRef = i.createEmbeddedView(r, s, o ? {
                                        injector: o
                                    } : void 0)
                                } else this._viewRef = null
                            } else this._viewRef && e.ngTemplateOutletContext && this.ngTemplateOutletContext && (this._viewRef.context = this.ngTemplateOutletContext)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngTemplateOutlet", ""]
                        ],
                        inputs: {
                            ngTemplateOutletContext: "ngTemplateOutletContext",
                            ngTemplateOutlet: "ngTemplateOutlet",
                            ngTemplateOutletInjector: "ngTemplateOutletInjector"
                        },
                        standalone: !0,
                        features: [ze]
                    }), t
                })();

            function _r(t, n) {
                return new B(2100, !1)
            }
            class sj {
                createSubscription(n, e) {
                    return n.subscribe({
                        next: e,
                        error: i => {
                            throw i
                        }
                    })
                }
                dispose(n) {
                    n.unsubscribe()
                }
            }
            class oj {
                createSubscription(n, e) {
                    return n.then(e, i => {
                        throw i
                    })
                }
                dispose(n) {}
            }
            const aj = new oj,
                lj = new sj;
            let Kn = (() => {
                class t {
                    constructor(e) {
                        this._latestValue = null, this._subscription = null, this._obj = null, this._strategy = null, this._ref = e
                    }
                    ngOnDestroy() {
                        this._subscription && this._dispose(), this._ref = null
                    }
                    transform(e) {
                        return this._obj ? e !== this._obj ? (this._dispose(), this.transform(e)) : this._latestValue : (e && this._subscribe(e), this._latestValue)
                    }
                    _subscribe(e) {
                        this._obj = e, this._strategy = this._selectStrategy(e), this._subscription = this._strategy.createSubscription(e, i => this._updateLatestValue(e, i))
                    }
                    _selectStrategy(e) {
                        if (Wc(e)) return aj;
                        if (BD(e)) return lj;
                        throw _r()
                    }
                    _dispose() {
                        this._strategy.dispose(this._subscription), this._latestValue = null, this._subscription = null, this._obj = null
                    }
                    _updateLatestValue(e, i) {
                        e === this._obj && (this._latestValue = i, this._ref.markForCheck())
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(ge, 16))
                }, t.\u0275pipe = Cn({
                    name: "async",
                    type: t,
                    pure: !1,
                    standalone: !0
                }), t
            })();
            const fj = new R("DATE_PIPE_DEFAULT_TIMEZONE");
            let ky = (() => {
                    class t {
                        constructor(e, i) {
                            this.locale = e, this.defaultTimezone = i
                        }
                        transform(e, i = "mediumDate", r, s) {
                            if (null == e || "" === e || e != e) return null;
                            try {
                                return I4(e, i, s || this.locale, r ? ? this.defaultTimezone ? ? void 0)
                            } catch (o) {
                                throw _r()
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Gi, 16), u(fj, 24))
                    }, t.\u0275pipe = Cn({
                        name: "date",
                        type: t,
                        pure: !0,
                        standalone: !0
                    }), t
                })(),
                Ay = (() => {
                    class t {
                        constructor(e) {
                            this.differs = e, this.keyValues = [], this.compareFn = Rk
                        }
                        transform(e, i = Rk) {
                            if (!e || !(e instanceof Map) && "object" != typeof e) return null;
                            this.differ || (this.differ = this.differs.find(e).create());
                            const r = this.differ.diff(e),
                                s = i !== this.compareFn;
                            return r && (this.keyValues = [], r.forEachItem(o => {
                                this.keyValues.push(function yj(t, n) {
                                    return {
                                        key: t,
                                        value: n
                                    }
                                }(o.key, o.currentValue))
                            })), (r || s) && (this.keyValues.sort(i), this.compareFn = i), this.keyValues
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Wo, 16))
                    }, t.\u0275pipe = Cn({
                        name: "keyvalue",
                        type: t,
                        pure: !1,
                        standalone: !0
                    }), t
                })();

            function Rk(t, n) {
                const e = t.key,
                    i = n.key;
                if (e === i) return 0;
                if (void 0 === e) return 1;
                if (void 0 === i) return -1;
                if (null === e) return 1;
                if (null === i) return -1;
                if ("string" == typeof e && "string" == typeof i) return e < i ? -1 : 1;
                if ("number" == typeof e && "number" == typeof i) return e - i;
                if ("boolean" == typeof e && "boolean" == typeof i) return e < i ? -1 : 1;
                const r = String(e),
                    s = String(i);
                return r == s ? 0 : r < s ? -1 : 1
            }
            let Ey = (() => {
                class t {
                    constructor(e, i = "USD") {
                        this._locale = e, this._defaultCurrencyCode = i
                    }
                    transform(e, i = this._defaultCurrencyCode, r = "symbol", s, o) {
                        if (! function Ty(t) {
                                return !(null == t || "" === t || t != t)
                            }(e)) return null;
                        o = o || this._locale, "boolean" == typeof r && (r = r ? "symbol" : "code");
                        let a = i || this._defaultCurrencyCode;
                        "code" !== r && (a = "symbol" === r || "symbol-narrow" === r ? function S4(t, n, e = "en") {
                            const i = function C4(t) {
                                    return Yn(t)[se.Currencies]
                                }(e)[t] || yk[t] || [],
                                r = i[1];
                            return "narrow" === n && "string" == typeof r ? r : i[0] || t
                        }(a, "symbol" === r ? "wide" : "narrow", o) : r);
                        try {
                            return W4(function Iy(t) {
                                if ("string" == typeof t && !isNaN(Number(t) - parseFloat(t))) return Number(t);
                                if ("number" != typeof t) throw new Error(`${t} is not a number`);
                                return t
                            }(e), o, a, i, s)
                        } catch (l) {
                            throw _r()
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Gi, 16), u(k$, 16))
                }, t.\u0275pipe = Cn({
                    name: "currency",
                    type: t,
                    pure: !0,
                    standalone: !0
                }), t
            })();
            let ut = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({}), t
            })();
            const Fk = "browser";

            function _n(t) {
                return t === Fk
            }

            function ml(t) {
                return "server" === t
            }
            let Mj = (() => {
                class t {}
                return t.\u0275prov = I({
                    token: t,
                    providedIn: "root",
                    factory: () => new Sj(C(pe), window)
                }), t
            })();
            class Sj {
                constructor(n, e) {
                    this.document = n, this.window = e, this.offset = () => [0, 0]
                }
                setOffset(n) {
                    this.offset = Array.isArray(n) ? () => n : n
                }
                getScrollPosition() {
                    return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0]
                }
                scrollToPosition(n) {
                    this.supportsScrolling() && this.window.scrollTo(n[0], n[1])
                }
                scrollToAnchor(n) {
                    if (!this.supportsScrolling()) return;
                    const e = function kj(t, n) {
                        const e = t.getElementById(n) || t.getElementsByName(n)[0];
                        if (e) return e;
                        if ("function" == typeof t.createTreeWalker && t.body && (t.body.createShadowRoot || t.body.attachShadow)) {
                            const i = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
                            let r = i.currentNode;
                            for (; r;) {
                                const s = r.shadowRoot;
                                if (s) {
                                    const o = s.getElementById(n) || s.querySelector(`[name="${n}"]`);
                                    if (o) return o
                                }
                                r = i.nextNode()
                            }
                        }
                        return null
                    }(this.document, n);
                    e && (this.scrollToElement(e), e.focus())
                }
                setHistoryScrollRestoration(n) {
                    if (this.supportScrollRestoration()) {
                        const e = this.window.history;
                        e && e.scrollRestoration && (e.scrollRestoration = n)
                    }
                }
                scrollToElement(n) {
                    const e = n.getBoundingClientRect(),
                        i = e.left + this.window.pageXOffset,
                        r = e.top + this.window.pageYOffset,
                        s = this.offset();
                    this.window.scrollTo(i - s[0], r - s[1])
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const n = Ok(this.window.history) || Ok(Object.getPrototypeOf(this.window.history));
                        return !(!n || !n.writable && !n.set)
                    } catch {
                        return !1
                    }
                }
                supportsScrolling() {
                    try {
                        return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window
                    } catch {
                        return !1
                    }
                }
            }

            function Ok(t) {
                return Object.getOwnPropertyDescriptor(t, "scrollRestoration")
            }
            class Pk {}
            class Oy extends class Gj extends class d4 {} {
                constructor() {
                    super(...arguments), this.supportsDOMEvents = !0
                }
            } {
                static makeCurrent() {
                    ! function c4(t) {
                        $h || ($h = t)
                    }(new Oy)
                }
                onAndCancel(n, e, i) {
                    return n.addEventListener(e, i, !1), () => {
                        n.removeEventListener(e, i, !1)
                    }
                }
                dispatchEvent(n, e) {
                    n.dispatchEvent(e)
                }
                remove(n) {
                    n.parentNode && n.parentNode.removeChild(n)
                }
                createElement(n, e) {
                    return (e = e || this.getDefaultDocument()).createElement(n)
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument("fakeTitle")
                }
                getDefaultDocument() {
                    return document
                }
                isElementNode(n) {
                    return n.nodeType === Node.ELEMENT_NODE
                }
                isShadowRoot(n) {
                    return n instanceof DocumentFragment
                }
                getGlobalEventTarget(n, e) {
                    return "window" === e ? window : "document" === e ? n : "body" === e ? n.body : null
                }
                getBaseHref(n) {
                    const e = function Wj() {
                        return ud = ud || document.querySelector("base"), ud ? ud.getAttribute("href") : null
                    }();
                    return null == e ? null : function qj(t) {
                        Xh = Xh || document.createElement("a"), Xh.setAttribute("href", t);
                        const n = Xh.pathname;
                        return "/" === n.charAt(0) ? n : `/${n}`
                    }(e)
                }
                resetBaseElement() {
                    ud = null
                }
                getUserAgent() {
                    return window.navigator.userAgent
                }
                getCookie(n) {
                    return Sk(document.cookie, n)
                }
            }
            let Xh, ud = null;
            const Vk = new R("TRANSITION_ID"),
                Qj = [{
                    provide: sd,
                    useFactory: function Yj(t, n, e) {
                        return () => {
                            e.get(Lh).donePromise.then(() => {
                                const i = Nr(),
                                    r = n.querySelectorAll(`style[ng-transition="${t}"]`);
                                for (let s = 0; s < r.length; s++) i.remove(r[s])
                            })
                        }
                    },
                    deps: [Vk, pe, Ct],
                    multi: !0
                }];
            let Zj = (() => {
                class t {
                    build() {
                        return new XMLHttpRequest
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const Jh = new R("EventManagerPlugins");
            let ef = (() => {
                class t {
                    constructor(e, i) {
                        this._zone = i, this._eventNameToPlugin = new Map, e.forEach(r => r.manager = this), this._plugins = e.slice().reverse()
                    }
                    addEventListener(e, i, r) {
                        return this._findPluginFor(i).addEventListener(e, i, r)
                    }
                    addGlobalEventListener(e, i, r) {
                        return this._findPluginFor(i).addGlobalEventListener(e, i, r)
                    }
                    getZone() {
                        return this._zone
                    }
                    _findPluginFor(e) {
                        const i = this._eventNameToPlugin.get(e);
                        if (i) return i;
                        const r = this._plugins;
                        for (let s = 0; s < r.length; s++) {
                            const o = r[s];
                            if (o.supports(e)) return this._eventNameToPlugin.set(e, o), o
                        }
                        throw new Error(`No event manager plugin found for event ${e}`)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Jh), C(ce))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class Hk {
                constructor(n) {
                    this._doc = n
                }
                addGlobalEventListener(n, e, i) {
                    const r = Nr().getGlobalEventTarget(this._doc, n);
                    if (!r) throw new Error(`Unsupported event target ${r} for event ${e}`);
                    return this.addEventListener(r, e, i)
                }
            }
            let $k = (() => {
                    class t {
                        constructor() {
                            this._stylesSet = new Set
                        }
                        addStyles(e) {
                            const i = new Set;
                            e.forEach(r => {
                                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r))
                            }), this.onStylesAdded(i)
                        }
                        onStylesAdded(e) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                hd = (() => {
                    class t extends $k {
                        constructor(e) {
                            super(), this._doc = e, this._hostNodes = new Map, this._hostNodes.set(e.head, [])
                        }
                        _addStylesToHost(e, i, r) {
                            e.forEach(s => {
                                const o = this._doc.createElement("style");
                                o.textContent = s, r.push(i.appendChild(o))
                            })
                        }
                        addHost(e) {
                            const i = [];
                            this._addStylesToHost(this._stylesSet, e, i), this._hostNodes.set(e, i)
                        }
                        removeHost(e) {
                            const i = this._hostNodes.get(e);
                            i && i.forEach(jk), this._hostNodes.delete(e)
                        }
                        onStylesAdded(e) {
                            this._hostNodes.forEach((i, r) => {
                                this._addStylesToHost(e, r, i)
                            })
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach(e => e.forEach(jk))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();

            function jk(t) {
                Nr().remove(t)
            }
            const Py = {
                    svg: "http://www.w3.org/2000/svg",
                    xhtml: "http://www.w3.org/1999/xhtml",
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace",
                    xmlns: "http://www.w3.org/2000/xmlns/",
                    math: "http://www.w3.org/1998/MathML/"
                },
                Ly = /%COMP%/g;

            function tf(t, n, e) {
                for (let i = 0; i < n.length; i++) {
                    let r = n[i];
                    Array.isArray(r) ? tf(t, r, e) : (r = r.replace(Ly, t), e.push(r))
                }
                return e
            }

            function Gk(t) {
                return n => {
                    if ("__ngUnwrap__" === n) return t;
                    !1 === t(n) && (n.preventDefault(), n.returnValue = !1)
                }
            }
            let nf = (() => {
                class t {
                    constructor(e, i, r) {
                        this.eventManager = e, this.sharedStylesHost = i, this.appId = r, this.rendererByCompId = new Map, this.defaultRenderer = new Ny(e)
                    }
                    createRenderer(e, i) {
                        if (!e || !i) return this.defaultRenderer;
                        switch (i.encapsulation) {
                            case sr.Emulated:
                                {
                                    let r = this.rendererByCompId.get(i.id);
                                    return r || (r = new r5(this.eventManager, this.sharedStylesHost, i, this.appId), this.rendererByCompId.set(i.id, r)),
                                    r.applyToHost(e),
                                    r
                                }
                            case 1:
                            case sr.ShadowDom:
                                return new s5(this.eventManager, this.sharedStylesHost, e, i);
                            default:
                                if (!this.rendererByCompId.has(i.id)) {
                                    const r = tf(i.id, i.styles, []);
                                    this.sharedStylesHost.addStyles(r), this.rendererByCompId.set(i.id, this.defaultRenderer)
                                }
                                return this.defaultRenderer
                        }
                    }
                    begin() {}
                    end() {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(ef), C(hd), C(pl))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class Ny {
                constructor(n) {
                    this.eventManager = n, this.data = Object.create(null), this.destroyNode = null
                }
                destroy() {}
                createElement(n, e) {
                    return e ? document.createElementNS(Py[e] || e, n) : document.createElement(n)
                }
                createComment(n) {
                    return document.createComment(n)
                }
                createText(n) {
                    return document.createTextNode(n)
                }
                appendChild(n, e) {
                    (qk(n) ? n.content : n).appendChild(e)
                }
                insertBefore(n, e, i) {
                    n && (qk(n) ? n.content : n).insertBefore(e, i)
                }
                removeChild(n, e) {
                    n && n.removeChild(e)
                }
                selectRootElement(n, e) {
                    let i = "string" == typeof n ? document.querySelector(n) : n;
                    if (!i) throw new Error(`The selector "${n}" did not match any elements`);
                    return e || (i.textContent = ""), i
                }
                parentNode(n) {
                    return n.parentNode
                }
                nextSibling(n) {
                    return n.nextSibling
                }
                setAttribute(n, e, i, r) {
                    if (r) {
                        e = r + ":" + e;
                        const s = Py[r];
                        s ? n.setAttributeNS(s, e, i) : n.setAttribute(e, i)
                    } else n.setAttribute(e, i)
                }
                removeAttribute(n, e, i) {
                    if (i) {
                        const r = Py[i];
                        r ? n.removeAttributeNS(r, e) : n.removeAttribute(`${i}:${e}`)
                    } else n.removeAttribute(e)
                }
                addClass(n, e) {
                    n.classList.add(e)
                }
                removeClass(n, e) {
                    n.classList.remove(e)
                }
                setStyle(n, e, i, r) {
                    r & (ri.DashCase | ri.Important) ? n.style.setProperty(e, i, r & ri.Important ? "important" : "") : n.style[e] = i
                }
                removeStyle(n, e, i) {
                    i & ri.DashCase ? n.style.removeProperty(e) : n.style[e] = ""
                }
                setProperty(n, e, i) {
                    n[e] = i
                }
                setValue(n, e) {
                    n.nodeValue = e
                }
                listen(n, e, i) {
                    return "string" == typeof n ? this.eventManager.addGlobalEventListener(n, e, Gk(i)) : this.eventManager.addEventListener(n, e, Gk(i))
                }
            }

            function qk(t) {
                return "TEMPLATE" === t.tagName && void 0 !== t.content
            }
            class r5 extends Ny {
                constructor(n, e, i, r) {
                    super(n), this.component = i;
                    const s = tf(r + "-" + i.id, i.styles, []);
                    e.addStyles(s), this.contentAttr = function e5(t) {
                        return "_ngcontent-%COMP%".replace(Ly, t)
                    }(r + "-" + i.id), this.hostAttr = function t5(t) {
                        return "_nghost-%COMP%".replace(Ly, t)
                    }(r + "-" + i.id)
                }
                applyToHost(n) {
                    super.setAttribute(n, this.hostAttr, "")
                }
                createElement(n, e) {
                    const i = super.createElement(n, e);
                    return super.setAttribute(i, this.contentAttr, ""), i
                }
            }
            class s5 extends Ny {
                constructor(n, e, i, r) {
                    super(n), this.sharedStylesHost = e, this.hostEl = i, this.shadowRoot = i.attachShadow({
                        mode: "open"
                    }), this.sharedStylesHost.addHost(this.shadowRoot);
                    const s = tf(r.id, r.styles, []);
                    for (let o = 0; o < s.length; o++) {
                        const a = document.createElement("style");
                        a.textContent = s[o], this.shadowRoot.appendChild(a)
                    }
                }
                nodeOrShadowRoot(n) {
                    return n === this.hostEl ? this.shadowRoot : n
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot)
                }
                appendChild(n, e) {
                    return super.appendChild(this.nodeOrShadowRoot(n), e)
                }
                insertBefore(n, e, i) {
                    return super.insertBefore(this.nodeOrShadowRoot(n), e, i)
                }
                removeChild(n, e) {
                    return super.removeChild(this.nodeOrShadowRoot(n), e)
                }
                parentNode(n) {
                    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(n)))
                }
            }
            let o5 = (() => {
                class t extends Hk {
                    constructor(e) {
                        super(e)
                    }
                    supports(e) {
                        return !0
                    }
                    addEventListener(e, i, r) {
                        return e.addEventListener(i, r, !1), () => this.removeEventListener(e, i, r)
                    }
                    removeEventListener(e, i, r) {
                        return e.removeEventListener(i, r)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const Yk = ["alt", "control", "meta", "shift"],
                a5 = {
                    "\b": "Backspace",
                    "\t": "Tab",
                    "\x7f": "Delete",
                    "\x1b": "Escape",
                    Del: "Delete",
                    Esc: "Escape",
                    Left: "ArrowLeft",
                    Right: "ArrowRight",
                    Up: "ArrowUp",
                    Down: "ArrowDown",
                    Menu: "ContextMenu",
                    Scroll: "ScrollLock",
                    Win: "OS"
                },
                l5 = {
                    alt: t => t.altKey,
                    control: t => t.ctrlKey,
                    meta: t => t.metaKey,
                    shift: t => t.shiftKey
                };
            let c5 = (() => {
                class t extends Hk {
                    constructor(e) {
                        super(e)
                    }
                    supports(e) {
                        return null != t.parseEventName(e)
                    }
                    addEventListener(e, i, r) {
                        const s = t.parseEventName(i),
                            o = t.eventCallback(s.fullKey, r, this.manager.getZone());
                        return this.manager.getZone().runOutsideAngular(() => Nr().onAndCancel(e, s.domEventName, o))
                    }
                    static parseEventName(e) {
                        const i = e.toLowerCase().split("."),
                            r = i.shift();
                        if (0 === i.length || "keydown" !== r && "keyup" !== r) return null;
                        const s = t._normalizeKey(i.pop());
                        let o = "",
                            a = i.indexOf("code");
                        if (a > -1 && (i.splice(a, 1), o = "code."), Yk.forEach(c => {
                                const d = i.indexOf(c);
                                d > -1 && (i.splice(d, 1), o += c + ".")
                            }), o += s, 0 != i.length || 0 === s.length) return null;
                        const l = {};
                        return l.domEventName = r, l.fullKey = o, l
                    }
                    static matchEventFullKeyCode(e, i) {
                        let r = a5[e.key] || e.key,
                            s = "";
                        return i.indexOf("code.") > -1 && (r = e.code, s = "code."), !(null == r || !r) && (r = r.toLowerCase(), " " === r ? r = "space" : "." === r && (r = "dot"), Yk.forEach(o => {
                            o !== r && (0, l5[o])(e) && (s += o + ".")
                        }), s += r, s === i)
                    }
                    static eventCallback(e, i, r) {
                        return s => {
                            t.matchEventFullKeyCode(s, e) && r.runGuarded(() => i(s))
                        }
                    }
                    static _normalizeKey(e) {
                        return "esc" === e ? "escape" : e
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const f5 = qS(o4, "browser", [{
                    provide: On,
                    useValue: Fk
                }, {
                    provide: BS,
                    useValue: function d5() {
                        Oy.makeCurrent()
                    },
                    multi: !0
                }, {
                    provide: pe,
                    useFactory: function h5() {
                        return function cN(t) {
                            Bg = t
                        }(document), document
                    },
                    deps: []
                }]),
                Zk = new R(""),
                Xk = [{
                    provide: Nh,
                    useClass: class Kj {
                        addToWindow(n) {
                            At.getAngularTestability = (i, r = !0) => {
                                const s = n.findTestabilityInTree(i, r);
                                if (null == s) throw new Error("Could not find testability for element.");
                                return s
                            }, At.getAllAngularTestabilities = () => n.getAllTestabilities(), At.getAllAngularRootElements = () => n.getAllRootElements(), At.frameworkStabilizers || (At.frameworkStabilizers = []), At.frameworkStabilizers.push(i => {
                                const r = At.getAllAngularTestabilities();
                                let s = r.length,
                                    o = !1;
                                const a = function(l) {
                                    o = o || l, s--, 0 == s && i(o)
                                };
                                r.forEach(function(l) {
                                    l.whenStable(a)
                                })
                            })
                        }
                        findTestabilityInTree(n, e, i) {
                            return null == e ? null : n.getTestability(e) ? ? (i ? Nr().isShadowRoot(e) ? this.findTestabilityInTree(n, e.host, !0) : this.findTestabilityInTree(n, e.parentElement, !0) : null)
                        }
                    },
                    deps: []
                }, {
                    provide: zS,
                    useClass: sy,
                    deps: [ce, oy, Nh]
                }, {
                    provide: sy,
                    useClass: sy,
                    deps: [ce, oy, Nh]
                }],
                Jk = [{
                        provide: Yg,
                        useValue: "root"
                    }, {
                        provide: ss,
                        useFactory: function u5() {
                            return new ss
                        },
                        deps: []
                    }, {
                        provide: Jh,
                        useClass: o5,
                        multi: !0,
                        deps: [pe, ce, On]
                    }, {
                        provide: Jh,
                        useClass: c5,
                        multi: !0,
                        deps: [pe]
                    }, {
                        provide: nf,
                        useClass: nf,
                        deps: [ef, hd, pl]
                    }, {
                        provide: $c,
                        useExisting: nf
                    }, {
                        provide: $k,
                        useExisting: hd
                    }, {
                        provide: hd,
                        useClass: hd,
                        deps: [pe]
                    }, {
                        provide: ef,
                        useClass: ef,
                        deps: [Jh, ce]
                    }, {
                        provide: Pk,
                        useClass: Zj,
                        deps: []
                    },
                    []
                ];
            let eA = (() => {
                    class t {
                        constructor(e) {}
                        static withServerTransition(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: pl,
                                    useValue: e.appId
                                }, {
                                    provide: Vk,
                                    useExisting: pl
                                }, Qj]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Zk, 12))
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [...Jk, ...Xk],
                        imports: [ut, a4]
                    }), t
                })(),
                tA = (() => {
                    class t {
                        constructor(e) {
                            this._doc = e
                        }
                        getTitle() {
                            return this._doc.title
                        }
                        setTitle(e) {
                            this._doc.title = e || ""
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function(e) {
                            let i = null;
                            return i = e ? new e : function m5() {
                                return new tA(C(pe))
                            }(), i
                        },
                        providedIn: "root"
                    }), t
                })();
            typeof window < "u" && window;
            let qs = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function(e) {
                            let i = null;
                            return i = e ? new(e || t) : C(rA), i
                        },
                        providedIn: "root"
                    }), t
                })(),
                rA = (() => {
                    class t extends qs {
                        constructor(e) {
                            super(), this._doc = e
                        }
                        sanitize(e, i) {
                            if (null == i) return null;
                            switch (e) {
                                case it.NONE:
                                    return i;
                                case it.HTML:
                                    return Tr(i, "HTML") ? wi(i) : Cx(this._doc, String(i)).toString();
                                case it.STYLE:
                                    return Tr(i, "Style") ? wi(i) : i;
                                case it.SCRIPT:
                                    if (Tr(i, "Script")) return wi(i);
                                    throw new Error("unsafe value used in a script context");
                                case it.URL:
                                    return Tr(i, "URL") ? wi(i) : ch(String(i));
                                case it.RESOURCE_URL:
                                    if (Tr(i, "ResourceURL")) return wi(i);
                                    throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");
                                default:
                                    throw new Error(`Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`)
                            }
                        }
                        bypassSecurityTrustHtml(e) {
                            return function gN(t) {
                                return new dN(t)
                            }(e)
                        }
                        bypassSecurityTrustStyle(e) {
                            return function _N(t) {
                                return new uN(t)
                            }(e)
                        }
                        bypassSecurityTrustScript(e) {
                            return function yN(t) {
                                return new hN(t)
                            }(e)
                        }
                        bypassSecurityTrustUrl(e) {
                            return function bN(t) {
                                return new fN(t)
                            }(e)
                        }
                        bypassSecurityTrustResourceUrl(e) {
                            return function vN(t) {
                                return new pN(t)
                            }(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function(e) {
                            let i = null;
                            return i = e ? new e : function C5(t) {
                                return new rA(t.get(pe))
                            }(C(Ct)), i
                        },
                        providedIn: "root"
                    }), t
                })();

            function z(...t) {
                return Rt(t, _c(t))
            }
            class Te extends H {
                constructor(n) {
                    super(), this._value = n
                }
                get value() {
                    return this.getValue()
                }
                _subscribe(n) {
                    const e = super._subscribe(n);
                    return !e.closed && n.next(this._value), e
                }
                getValue() {
                    const {
                        hasError: n,
                        thrownError: e,
                        _value: i
                    } = this;
                    if (n) throw e;
                    return this._throwIfClosed(), i
                }
                next(n) {
                    super.next(this._value = n)
                }
            }
            const fd = mc(t => function() {
                    t(this), this.name = "EmptyError", this.message = "no elements in sequence"
                }),
                {
                    isArray: x5
                } = Array,
                {
                    getPrototypeOf: D5,
                    prototype: M5,
                    keys: S5
                } = Object;

            function sA(t) {
                if (1 === t.length) {
                    const n = t[0];
                    if (x5(n)) return {
                        args: n,
                        keys: null
                    };
                    if (function k5(t) {
                            return t && "object" == typeof t && D5(t) === M5
                        }(n)) {
                        const e = S5(n);
                        return {
                            args: e.map(i => n[i]),
                            keys: e
                        }
                    }
                }
                return {
                    args: t,
                    keys: null
                }
            }
            const {
                isArray: A5
            } = Array;

            function Hy(t) {
                return Z(n => function E5(t, n) {
                    return A5(n) ? t(...n) : t(n)
                }(t, n))
            }

            function oA(t, n) {
                return t.reduce((e, i, r) => (e[i] = n[r], e), {})
            }

            function Qo(...t) {
                const n = _c(t),
                    e = FC(t),
                    {
                        args: i,
                        keys: r
                    } = sA(t);
                if (0 === i.length) return Rt([], n);
                const s = new Ze(function T5(t, n, e = Ps) {
                    return i => {
                        aA(n, () => {
                            const {
                                length: r
                            } = t, s = new Array(r);
                            let o = r,
                                a = r;
                            for (let l = 0; l < r; l++) aA(n, () => {
                                const c = Rt(t[l], n);
                                let d = !1;
                                c.subscribe(kt(i, h => {
                                    s[l] = h, d || (d = !0, a--), a || i.next(e(s.slice()))
                                }, () => {
                                    --o || i.complete()
                                }))
                            }, i)
                        }, i)
                    }
                }(i, n, r ? o => oA(r, o) : Ps));
                return e ? s.pipe(Hy(e)) : s
            }

            function aA(t, n, e) {
                t ? Xr(e, t, n) : n()
            }

            function gl(...t) {
                return function I5() {
                    return Sa(1)
                }()(Rt(t, _c(t)))
            }

            function Ys(t) {
                return new Ze(n => {
                    $n(t()).subscribe(n)
                })
            }

            function Ln(t, n) {
                const e = Qe(t) ? t : () => t,
                    i = r => r.error(e());
                return new Ze(n ? r => n.schedule(i, 0, r) : i)
            }

            function $y() {
                return Pt((t, n) => {
                    let e = null;
                    t._refCount++;
                    const i = kt(n, void 0, void 0, void 0, () => {
                        if (!t || t._refCount <= 0 || 0 < --t._refCount) return void(e = null);
                        const r = t._connection,
                            s = e;
                        e = null, r && (!s || r === s) && r.unsubscribe(), n.unsubscribe()
                    });
                    t.subscribe(i), i.closed || (e = t.connect())
                })
            }
            class rf extends Ze {
                constructor(n, e) {
                    super(), this.source = n, this.subjectFactory = e, this._subject = null, this._refCount = 0, this._connection = null, bC(n) && (this.lift = n.lift)
                }
                _subscribe(n) {
                    return this.getSubject().subscribe(n)
                }
                getSubject() {
                    const n = this._subject;
                    return (!n || n.isStopped) && (this._subject = this.subjectFactory()), this._subject
                }
                _teardown() {
                    this._refCount = 0;
                    const {
                        _connection: n
                    } = this;
                    this._subject = this._connection = null, n ? .unsubscribe()
                }
                connect() {
                    let n = this._connection;
                    if (!n) {
                        n = this._connection = new Re;
                        const e = this.getSubject();
                        n.add(this.source.subscribe(kt(e, void 0, () => {
                            this._teardown(), e.complete()
                        }, i => {
                            this._teardown(), e.error(i)
                        }, () => this._teardown()))), n.closed && (this._connection = null, n = Re.EMPTY)
                    }
                    return n
                }
                refCount() {
                    return $y()(this)
                }
            }

            function vt(t, n) {
                return Pt((e, i) => {
                    let r = null,
                        s = 0,
                        o = !1;
                    const a = () => o && !r && i.complete();
                    e.subscribe(kt(i, l => {
                        r ? .unsubscribe();
                        let c = 0;
                        const d = s++;
                        $n(t(l, d)).subscribe(r = kt(i, h => i.next(n ? n(l, h, d, c++) : h), () => {
                            r = null, a()
                        }))
                    }, () => {
                        o = !0, a()
                    }))
                })
            }

            function pt(...t) {
                const n = _c(t);
                return Pt((e, i) => {
                    (n ? gl(t, e, n) : gl(t, e)).subscribe(i)
                })
            }

            function Ie(t, n) {
                return Pt((e, i) => {
                    let r = 0;
                    e.subscribe(kt(i, s => t.call(n, s, r++) && i.next(s)))
                })
            }

            function sf(t) {
                return Pt((n, e) => {
                    let i = !1;
                    n.subscribe(kt(e, r => {
                        i = !0, e.next(r)
                    }, () => {
                        i || e.next(t), e.complete()
                    }))
                })
            }

            function lA(t = R5) {
                return Pt((n, e) => {
                    let i = !1;
                    n.subscribe(kt(e, r => {
                        i = !0, e.next(r)
                    }, () => i ? e.complete() : e.error(t())))
                })
            }

            function R5() {
                return new fd
            }

            function yn(t, n) {
                const e = arguments.length >= 2;
                return i => i.pipe(t ? Ie((r, s) => t(r, s, i)) : Ps, Fe(1), e ? sf(n) : lA(() => new fd))
            }

            function Qs(t, n) {
                return Qe(n) ? _t(t, n, 1) : _t(t, 1)
            }

            function mt(t, n, e) {
                const i = Qe(t) || n || e ? {
                    next: t,
                    error: n,
                    complete: e
                } : t;
                return i ? Pt((r, s) => {
                    var o;
                    null === (o = i.subscribe) || void 0 === o || o.call(i);
                    let a = !0;
                    r.subscribe(kt(s, l => {
                        var c;
                        null === (c = i.next) || void 0 === c || c.call(i, l), s.next(l)
                    }, () => {
                        var l;
                        a = !1, null === (l = i.complete) || void 0 === l || l.call(i), s.complete()
                    }, l => {
                        var c;
                        a = !1, null === (c = i.error) || void 0 === c || c.call(i, l), s.error(l)
                    }, () => {
                        var l, c;
                        a && (null === (l = i.unsubscribe) || void 0 === l || l.call(i)), null === (c = i.finalize) || void 0 === c || c.call(i)
                    }))
                }) : Ps
            }

            function oi(t) {
                return Pt((n, e) => {
                    let s, i = null,
                        r = !1;
                    i = n.subscribe(kt(e, void 0, void 0, o => {
                        s = $n(t(o, oi(t)(n))), i ? (i.unsubscribe(), i = null, s.subscribe(e)) : r = !0
                    })), r && (i.unsubscribe(), i = null, s.subscribe(e))
                })
            }

            function F5(t, n, e, i, r) {
                return (s, o) => {
                    let a = e,
                        l = n,
                        c = 0;
                    s.subscribe(kt(o, d => {
                        const h = c++;
                        l = a ? t(l, d, h) : (a = !0, d), i && o.next(l)
                    }, r && (() => {
                        a && o.next(l), o.complete()
                    })))
                }
            }

            function cA(t, n) {
                return Pt(F5(t, n, arguments.length >= 2, !0))
            }

            function jy(t) {
                return t <= 0 ? () => Ni : Pt((n, e) => {
                    let i = [];
                    n.subscribe(kt(e, r => {
                        i.push(r), t < i.length && i.shift()
                    }, () => {
                        for (const r of i) e.next(r);
                        e.complete()
                    }, void 0, () => {
                        i = null
                    }))
                })
            }

            function dA(t, n) {
                const e = arguments.length >= 2;
                return i => i.pipe(t ? Ie((r, s) => t(r, s, i)) : Ps, jy(1), e ? sf(n) : lA(() => new fd))
            }

            function zy(t, n = !1) {
                return Pt((e, i) => {
                    let r = 0;
                    e.subscribe(kt(i, s => {
                        const o = t(s, r++);
                        (o || n) && i.next(s), !o && i.complete()
                    }))
                })
            }

            function _l(t) {
                return Z(() => t)
            }

            function yl(t) {
                return Pt((n, e) => {
                    try {
                        n.subscribe(e)
                    } finally {
                        e.add(t)
                    }
                })
            }
            const We = "primary",
                pd = Symbol("RouteTitle");
            class O5 {
                constructor(n) {
                    this.params = n || {}
                }
                has(n) {
                    return Object.prototype.hasOwnProperty.call(this.params, n)
                }
                get(n) {
                    if (this.has(n)) {
                        const e = this.params[n];
                        return Array.isArray(e) ? e[0] : e
                    }
                    return null
                }
                getAll(n) {
                    if (this.has(n)) {
                        const e = this.params[n];
                        return Array.isArray(e) ? e : [e]
                    }
                    return []
                }
                get keys() {
                    return Object.keys(this.params)
                }
            }

            function bl(t) {
                return new O5(t)
            }

            function P5(t, n, e) {
                const i = e.path.split("/");
                if (i.length > t.length || "full" === e.pathMatch && (n.hasChildren() || i.length < t.length)) return null;
                const r = {};
                for (let s = 0; s < i.length; s++) {
                    const o = i[s],
                        a = t[s];
                    if (o.startsWith(":")) r[o.substring(1)] = a;
                    else if (o !== a.path) return null
                }
                return {
                    consumed: t.slice(0, i.length),
                    posParams: r
                }
            }

            function Br(t, n) {
                const e = t ? Object.keys(t) : void 0,
                    i = n ? Object.keys(n) : void 0;
                if (!e || !i || e.length != i.length) return !1;
                let r;
                for (let s = 0; s < e.length; s++)
                    if (r = e[s], !uA(t[r], n[r])) return !1;
                return !0
            }

            function uA(t, n) {
                if (Array.isArray(t) && Array.isArray(n)) {
                    if (t.length !== n.length) return !1;
                    const e = [...t].sort(),
                        i = [...n].sort();
                    return e.every((r, s) => i[s] === r)
                }
                return t === n
            }

            function hA(t) {
                return Array.prototype.concat.apply([], t)
            }

            function fA(t) {
                return t.length > 0 ? t[t.length - 1] : null
            }

            function Mn(t, n) {
                for (const e in t) t.hasOwnProperty(e) && n(t[e], e)
            }

            function Ks(t) {
                return T_(t) ? t : Wc(t) ? Rt(Promise.resolve(t)) : z(t)
            }
            const B5 = {
                    exact: function gA(t, n, e) {
                        if (!Zo(t.segments, n.segments) || !af(t.segments, n.segments, e) || t.numberOfChildren !== n.numberOfChildren) return !1;
                        for (const i in n.children)
                            if (!t.children[i] || !gA(t.children[i], n.children[i], e)) return !1;
                        return !0
                    },
                    subset: _A
                },
                pA = {
                    exact: function V5(t, n) {
                        return Br(t, n)
                    },
                    subset: function H5(t, n) {
                        return Object.keys(n).length <= Object.keys(t).length && Object.keys(n).every(e => uA(t[e], n[e]))
                    },
                    ignored: () => !0
                };

            function mA(t, n, e) {
                return B5[e.paths](t.root, n.root, e.matrixParams) && pA[e.queryParams](t.queryParams, n.queryParams) && !("exact" === e.fragment && t.fragment !== n.fragment)
            }

            function _A(t, n, e) {
                return yA(t, n, n.segments, e)
            }

            function yA(t, n, e, i) {
                if (t.segments.length > e.length) {
                    const r = t.segments.slice(0, e.length);
                    return !(!Zo(r, e) || n.hasChildren() || !af(r, e, i))
                }
                if (t.segments.length === e.length) {
                    if (!Zo(t.segments, e) || !af(t.segments, e, i)) return !1;
                    for (const r in n.children)
                        if (!t.children[r] || !_A(t.children[r], n.children[r], i)) return !1;
                    return !0
                } {
                    const r = e.slice(0, t.segments.length),
                        s = e.slice(t.segments.length);
                    return !!(Zo(t.segments, r) && af(t.segments, r, i) && t.children[We]) && yA(t.children[We], n, s, i)
                }
            }

            function af(t, n, e) {
                return n.every((i, r) => pA[e](t[r].parameters, i.parameters))
            }
            class Ko {
                constructor(n, e, i) {
                    this.root = n, this.queryParams = e, this.fragment = i
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = bl(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return z5.serialize(this)
                }
            }
            class qe {
                constructor(n, e) {
                    this.segments = n, this.children = e, this.parent = null, Mn(e, (i, r) => i.parent = this)
                }
                hasChildren() {
                    return this.numberOfChildren > 0
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length
                }
                toString() {
                    return lf(this)
                }
            }
            class md {
                constructor(n, e) {
                    this.path = n, this.parameters = e
                }
                get parameterMap() {
                    return this._parameterMap || (this._parameterMap = bl(this.parameters)), this._parameterMap
                }
                toString() {
                    return CA(this)
                }
            }

            function Zo(t, n) {
                return t.length === n.length && t.every((e, i) => e.path === n[i].path)
            }
            let bA = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: function() {
                        return new Gy
                    },
                    providedIn: "root"
                }), t
            })();
            class Gy {
                parse(n) {
                    const e = new X5(n);
                    return new Ko(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment())
                }
                serialize(n) {
                    const e = `/${gd(n.root,!0)}`,
                        i = function W5(t) {
                            const n = Object.keys(t).map(e => {
                                const i = t[e];
                                return Array.isArray(i) ? i.map(r => `${cf(e)}=${cf(r)}`).join("&") : `${cf(e)}=${cf(i)}`
                            }).filter(e => !!e);
                            return n.length ? `?${n.join("&")}` : ""
                        }(n.queryParams);
                    return `${e}${i}${"string"==typeof n.fragment?`#${function U5(t){return encodeURI(t)}(n.fragment)}`:""}`
                }
            }
            const z5 = new Gy;

            function lf(t) {
                return t.segments.map(n => CA(n)).join("/")
            }

            function gd(t, n) {
                if (!t.hasChildren()) return lf(t);
                if (n) {
                    const e = t.children[We] ? gd(t.children[We], !1) : "",
                        i = [];
                    return Mn(t.children, (r, s) => {
                        s !== We && i.push(`${s}:${gd(r,!1)}`)
                    }), i.length > 0 ? `${e}(${i.join("//")})` : e
                } {
                    const e = function j5(t, n) {
                        let e = [];
                        return Mn(t.children, (i, r) => {
                            r === We && (e = e.concat(n(i, r)))
                        }), Mn(t.children, (i, r) => {
                            r !== We && (e = e.concat(n(i, r)))
                        }), e
                    }(t, (i, r) => r === We ? [gd(t.children[We], !1)] : [`${r}:${gd(i,!1)}`]);
                    return 1 === Object.keys(t.children).length && null != t.children[We] ? `${lf(t)}/${e[0]}` : `${lf(t)}/(${e.join("//")})`
                }
            }

            function vA(t) {
                return encodeURIComponent(t).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",")
            }

            function cf(t) {
                return vA(t).replace(/%3B/gi, ";")
            }

            function Wy(t) {
                return vA(t).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&")
            }

            function df(t) {
                return decodeURIComponent(t)
            }

            function wA(t) {
                return df(t.replace(/\+/g, "%20"))
            }

            function CA(t) {
                return `${Wy(t.path)}${function G5(t){return Object.keys(t).map(n=>`;${Wy(n)}=${Wy(t[n])}`).join("")}(t.parameters)}`
            }
            const q5 = /^[^\/()?;=#]+/;

            function uf(t) {
                const n = t.match(q5);
                return n ? n[0] : ""
            }
            const Y5 = /^[^=?&#]+/,
                K5 = /^[^&#]+/;
            class X5 {
                constructor(n) {
                    this.url = n, this.remaining = n
                }
                parseRootSegment() {
                    return this.consumeOptional("/"), "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new qe([], {}) : new qe([], this.parseChildren())
                }
                parseQueryParams() {
                    const n = {};
                    if (this.consumeOptional("?"))
                        do {
                            this.parseQueryParam(n)
                        } while (this.consumeOptional("&"));
                    return n
                }
                parseFragment() {
                    return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null
                }
                parseChildren() {
                    if ("" === this.remaining) return {};
                    this.consumeOptional("/");
                    const n = [];
                    for (this.peekStartsWith("(") || n.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/(");) this.capture("/"), n.push(this.parseSegment());
                    let e = {};
                    this.peekStartsWith("/(") && (this.capture("/"), e = this.parseParens(!0));
                    let i = {};
                    return this.peekStartsWith("(") && (i = this.parseParens(!1)), (n.length > 0 || Object.keys(e).length > 0) && (i[We] = new qe(n, e)), i
                }
                parseSegment() {
                    const n = uf(this.remaining);
                    if ("" === n && this.peekStartsWith(";")) throw new B(4009, !1);
                    return this.capture(n), new md(df(n), this.parseMatrixParams())
                }
                parseMatrixParams() {
                    const n = {};
                    for (; this.consumeOptional(";");) this.parseParam(n);
                    return n
                }
                parseParam(n) {
                    const e = uf(this.remaining);
                    if (!e) return;
                    this.capture(e);
                    let i = "";
                    if (this.consumeOptional("=")) {
                        const r = uf(this.remaining);
                        r && (i = r, this.capture(i))
                    }
                    n[df(e)] = df(i)
                }
                parseQueryParam(n) {
                    const e = function Q5(t) {
                        const n = t.match(Y5);
                        return n ? n[0] : ""
                    }(this.remaining);
                    if (!e) return;
                    this.capture(e);
                    let i = "";
                    if (this.consumeOptional("=")) {
                        const o = function Z5(t) {
                            const n = t.match(K5);
                            return n ? n[0] : ""
                        }(this.remaining);
                        o && (i = o, this.capture(i))
                    }
                    const r = wA(e),
                        s = wA(i);
                    if (n.hasOwnProperty(r)) {
                        let o = n[r];
                        Array.isArray(o) || (o = [o], n[r] = o), o.push(s)
                    } else n[r] = s
                }
                parseParens(n) {
                    const e = {};
                    for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0;) {
                        const i = uf(this.remaining),
                            r = this.remaining[i.length];
                        if ("/" !== r && ")" !== r && ";" !== r) throw new B(4010, !1);
                        let s;
                        i.indexOf(":") > -1 ? (s = i.slice(0, i.indexOf(":")), this.capture(s), this.capture(":")) : n && (s = We);
                        const o = this.parseChildren();
                        e[s] = 1 === Object.keys(o).length ? o[We] : new qe([], o), this.consumeOptional("//")
                    }
                    return e
                }
                peekStartsWith(n) {
                    return this.remaining.startsWith(n)
                }
                consumeOptional(n) {
                    return !!this.peekStartsWith(n) && (this.remaining = this.remaining.substring(n.length), !0)
                }
                capture(n) {
                    if (!this.consumeOptional(n)) throw new B(4011, !1)
                }
            }

            function qy(t) {
                return t.segments.length > 0 ? new qe([], {
                    [We]: t
                }) : t
            }

            function hf(t) {
                const n = {};
                for (const i of Object.keys(t.children)) {
                    const s = hf(t.children[i]);
                    (s.segments.length > 0 || s.hasChildren()) && (n[i] = s)
                }
                return function J5(t) {
                    if (1 === t.numberOfChildren && t.children[We]) {
                        const n = t.children[We];
                        return new qe(t.segments.concat(n.segments), n.children)
                    }
                    return t
                }(new qe(t.segments, n))
            }

            function Xo(t) {
                return t instanceof Ko
            }

            function nz(t, n, e, i, r) {
                if (0 === e.length) return vl(n.root, n.root, n.root, i, r);
                const s = function MA(t) {
                    if ("string" == typeof t[0] && 1 === t.length && "/" === t[0]) return new DA(!0, 0, t);
                    let n = 0,
                        e = !1;
                    const i = t.reduce((r, s, o) => {
                        if ("object" == typeof s && null != s) {
                            if (s.outlets) {
                                const a = {};
                                return Mn(s.outlets, (l, c) => {
                                    a[c] = "string" == typeof l ? l.split("/") : l
                                }), [...r, {
                                    outlets: a
                                }]
                            }
                            if (s.segmentPath) return [...r, s.segmentPath]
                        }
                        return "string" != typeof s ? [...r, s] : 0 === o ? (s.split("/").forEach((a, l) => {
                            0 == l && "." === a || (0 == l && "" === a ? e = !0 : ".." === a ? n++ : "" != a && r.push(a))
                        }), r) : [...r, s]
                    }, []);
                    return new DA(e, n, i)
                }(e);
                return s.toRoot() ? vl(n.root, n.root, new qe([], {}), i, r) : function o(l) {
                    const c = function rz(t, n, e, i) {
                            if (t.isAbsolute) return new wl(n.root, !0, 0);
                            if (-1 === i) return new wl(e, e === n.root, 0);
                            return function SA(t, n, e) {
                                let i = t,
                                    r = n,
                                    s = e;
                                for (; s > r;) {
                                    if (s -= r, i = i.parent, !i) throw new B(4005, !1);
                                    r = i.segments.length
                                }
                                return new wl(i, !1, r - s)
                            }(e, i + (_d(t.commands[0]) ? 0 : 1), t.numberOfDoubleDots)
                        }(s, n, t.snapshot ? ._urlSegment, l),
                        d = c.processChildren ? bd(c.segmentGroup, c.index, s.commands) : Qy(c.segmentGroup, c.index, s.commands);
                    return vl(n.root, c.segmentGroup, d, i, r)
                }(t.snapshot ? ._lastPathIndex)
            }

            function _d(t) {
                return "object" == typeof t && null != t && !t.outlets && !t.segmentPath
            }

            function yd(t) {
                return "object" == typeof t && null != t && t.outlets
            }

            function vl(t, n, e, i, r) {
                let o, s = {};
                i && Mn(i, (l, c) => {
                    s[c] = Array.isArray(l) ? l.map(d => `${d}`) : `${l}`
                }), o = t === n ? e : xA(t, n, e);
                const a = qy(hf(o));
                return new Ko(a, s, r)
            }

            function xA(t, n, e) {
                const i = {};
                return Mn(t.children, (r, s) => {
                    i[s] = r === n ? e : xA(r, n, e)
                }), new qe(t.segments, i)
            }
            class DA {
                constructor(n, e, i) {
                    if (this.isAbsolute = n, this.numberOfDoubleDots = e, this.commands = i, n && i.length > 0 && _d(i[0])) throw new B(4003, !1);
                    const r = i.find(yd);
                    if (r && r !== fA(i)) throw new B(4004, !1)
                }
                toRoot() {
                    return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0]
                }
            }
            class wl {
                constructor(n, e, i) {
                    this.segmentGroup = n, this.processChildren = e, this.index = i
                }
            }

            function Qy(t, n, e) {
                if (t || (t = new qe([], {})), 0 === t.segments.length && t.hasChildren()) return bd(t, n, e);
                const i = function oz(t, n, e) {
                        let i = 0,
                            r = n;
                        const s = {
                            match: !1,
                            pathIndex: 0,
                            commandIndex: 0
                        };
                        for (; r < t.segments.length;) {
                            if (i >= e.length) return s;
                            const o = t.segments[r],
                                a = e[i];
                            if (yd(a)) break;
                            const l = `${a}`,
                                c = i < e.length - 1 ? e[i + 1] : null;
                            if (r > 0 && void 0 === l) break;
                            if (l && c && "object" == typeof c && void 0 === c.outlets) {
                                if (!AA(l, c, o)) return s;
                                i += 2
                            } else {
                                if (!AA(l, {}, o)) return s;
                                i++
                            }
                            r++
                        }
                        return {
                            match: !0,
                            pathIndex: r,
                            commandIndex: i
                        }
                    }(t, n, e),
                    r = e.slice(i.commandIndex);
                if (i.match && i.pathIndex < t.segments.length) {
                    const s = new qe(t.segments.slice(0, i.pathIndex), {});
                    return s.children[We] = new qe(t.segments.slice(i.pathIndex), t.children), bd(s, 0, r)
                }
                return i.match && 0 === r.length ? new qe(t.segments, {}) : i.match && !t.hasChildren() ? Ky(t, n, e) : i.match ? bd(t, 0, r) : Ky(t, n, e)
            }

            function bd(t, n, e) {
                if (0 === e.length) return new qe(t.segments, {}); {
                    const i = function sz(t) {
                            return yd(t[0]) ? t[0].outlets : {
                                [We]: t
                            }
                        }(e),
                        r = {};
                    return Mn(i, (s, o) => {
                        "string" == typeof s && (s = [s]), null !== s && (r[o] = Qy(t.children[o], n, s))
                    }), Mn(t.children, (s, o) => {
                        void 0 === i[o] && (r[o] = s)
                    }), new qe(t.segments, r)
                }
            }

            function Ky(t, n, e) {
                const i = t.segments.slice(0, n);
                let r = 0;
                for (; r < e.length;) {
                    const s = e[r];
                    if (yd(s)) {
                        const l = az(s.outlets);
                        return new qe(i, l)
                    }
                    if (0 === r && _d(e[0])) {
                        i.push(new md(t.segments[n].path, kA(e[0]))), r++;
                        continue
                    }
                    const o = yd(s) ? s.outlets[We] : `${s}`,
                        a = r < e.length - 1 ? e[r + 1] : null;
                    o && a && _d(a) ? (i.push(new md(o, kA(a))), r += 2) : (i.push(new md(o, {})), r++)
                }
                return new qe(i, {})
            }

            function az(t) {
                const n = {};
                return Mn(t, (e, i) => {
                    "string" == typeof e && (e = [e]), null !== e && (n[i] = Ky(new qe([], {}), 0, e))
                }), n
            }

            function kA(t) {
                const n = {};
                return Mn(t, (e, i) => n[i] = `${e}`), n
            }

            function AA(t, n, e) {
                return t == e.path && Br(n, e.parameters)
            }
            class ms {
                constructor(n, e) {
                    this.id = n, this.url = e
                }
            }
            class Zy extends ms {
                constructor(n, e, i = "imperative", r = null) {
                    super(n, e), this.type = 0, this.navigationTrigger = i, this.restoredState = r
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`
                }
            }
            class Jo extends ms {
                constructor(n, e, i) {
                    super(n, e), this.urlAfterRedirects = i, this.type = 1
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`
                }
            }
            class ff extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.reason = i, this.code = r, this.type = 2
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`
                }
            }
            class EA extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.error = i, this.target = r, this.type = 3
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`
                }
            }
            class lz extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.urlAfterRedirects = i, this.state = r, this.type = 4
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class cz extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.urlAfterRedirects = i, this.state = r, this.type = 7
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class dz extends ms {
                constructor(n, e, i, r, s) {
                    super(n, e), this.urlAfterRedirects = i, this.state = r, this.shouldActivate = s, this.type = 8
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`
                }
            }
            class uz extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.urlAfterRedirects = i, this.state = r, this.type = 5
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class hz extends ms {
                constructor(n, e, i, r) {
                    super(n, e), this.urlAfterRedirects = i, this.state = r, this.type = 6
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class fz {
                constructor(n) {
                    this.route = n, this.type = 9
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`
                }
            }
            class pz {
                constructor(n) {
                    this.route = n, this.type = 10
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`
                }
            }
            class mz {
                constructor(n) {
                    this.snapshot = n, this.type = 11
                }
                toString() {
                    return `ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class gz {
                constructor(n) {
                    this.snapshot = n, this.type = 12
                }
                toString() {
                    return `ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class _z {
                constructor(n) {
                    this.snapshot = n, this.type = 13
                }
                toString() {
                    return `ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class yz {
                constructor(n) {
                    this.snapshot = n, this.type = 14
                }
                toString() {
                    return `ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class TA {
                constructor(n, e, i) {
                    this.routerEvent = n, this.position = e, this.anchor = i, this.type = 15
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`
                }
            }
            class IA {
                constructor(n) {
                    this._root = n
                }
                get root() {
                    return this._root.value
                }
                parent(n) {
                    const e = this.pathFromRoot(n);
                    return e.length > 1 ? e[e.length - 2] : null
                }
                children(n) {
                    const e = Xy(n, this._root);
                    return e ? e.children.map(i => i.value) : []
                }
                firstChild(n) {
                    const e = Xy(n, this._root);
                    return e && e.children.length > 0 ? e.children[0].value : null
                }
                siblings(n) {
                    const e = Jy(n, this._root);
                    return e.length < 2 ? [] : e[e.length - 2].children.map(r => r.value).filter(r => r !== n)
                }
                pathFromRoot(n) {
                    return Jy(n, this._root).map(e => e.value)
                }
            }

            function Xy(t, n) {
                if (t === n.value) return n;
                for (const e of n.children) {
                    const i = Xy(t, e);
                    if (i) return i
                }
                return null
            }

            function Jy(t, n) {
                if (t === n.value) return [n];
                for (const e of n.children) {
                    const i = Jy(t, e);
                    if (i.length) return i.unshift(n), i
                }
                return []
            }
            class gs {
                constructor(n, e) {
                    this.value = n, this.children = e
                }
                toString() {
                    return `TreeNode(${this.value})`
                }
            }

            function Cl(t) {
                const n = {};
                return t && t.children.forEach(e => n[e.value.outlet] = e), n
            }
            class RA extends IA {
                constructor(n, e) {
                    super(n), this.snapshot = e, eb(this, n)
                }
                toString() {
                    return this.snapshot.toString()
                }
            }

            function FA(t, n) {
                const e = function vz(t, n) {
                        const o = new pf([], {}, {}, "", {}, We, n, null, t.root, -1, {});
                        return new PA("", new gs(o, []))
                    }(t, n),
                    i = new Te([new md("", {})]),
                    r = new Te({}),
                    s = new Te({}),
                    o = new Te({}),
                    a = new Te(""),
                    l = new Yi(i, r, o, a, s, We, n, e.root);
                return l.snapshot = e.root, new RA(new gs(l, []), e)
            }
            class Yi {
                constructor(n, e, i, r, s, o, a, l) {
                    this.url = n, this.params = e, this.queryParams = i, this.fragment = r, this.data = s, this.outlet = o, this.component = a, this.title = this.data ? .pipe(Z(c => c[pd])) ? ? z(void 0), this._futureSnapshot = l
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = this.params.pipe(Z(n => bl(n)))), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(Z(n => bl(n)))), this._queryParamMap
                }
                toString() {
                    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`
                }
            }

            function OA(t, n = "emptyOnly") {
                const e = t.pathFromRoot;
                let i = 0;
                if ("always" !== n)
                    for (i = e.length - 1; i >= 1;) {
                        const r = e[i],
                            s = e[i - 1];
                        if (r.routeConfig && "" === r.routeConfig.path) i--;
                        else {
                            if (s.component) break;
                            i--
                        }
                    }
                return function wz(t) {
                    return t.reduce((n, e) => ({
                        params: { ...n.params,
                            ...e.params
                        },
                        data: { ...n.data,
                            ...e.data
                        },
                        resolve: { ...e.data,
                            ...n.resolve,
                            ...e.routeConfig ? .data,
                            ...e._resolvedData
                        }
                    }), {
                        params: {},
                        data: {},
                        resolve: {}
                    })
                }(e.slice(i))
            }
            class pf {
                constructor(n, e, i, r, s, o, a, l, c, d, h, m) {
                    this.url = n, this.params = e, this.queryParams = i, this.fragment = r, this.data = s, this.outlet = o, this.component = a, this.title = this.data ? .[pd], this.routeConfig = l, this._urlSegment = c, this._lastPathIndex = d, this._correctedLastPathIndex = m ? ? d, this._resolve = h
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = bl(this.params)), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = bl(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return `Route(url:'${this.url.map(i=>i.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`
                }
            }
            class PA extends IA {
                constructor(n, e) {
                    super(e), this.url = n, eb(this, e)
                }
                toString() {
                    return LA(this._root)
                }
            }

            function eb(t, n) {
                n.value._routerState = t, n.children.forEach(e => eb(t, e))
            }

            function LA(t) {
                const n = t.children.length > 0 ? ` { ${t.children.map(LA).join(", ")} } ` : "";
                return `${t.value}${n}`
            }

            function tb(t) {
                if (t.snapshot) {
                    const n = t.snapshot,
                        e = t._futureSnapshot;
                    t.snapshot = e, Br(n.queryParams, e.queryParams) || t.queryParams.next(e.queryParams), n.fragment !== e.fragment && t.fragment.next(e.fragment), Br(n.params, e.params) || t.params.next(e.params),
                        function L5(t, n) {
                            if (t.length !== n.length) return !1;
                            for (let e = 0; e < t.length; ++e)
                                if (!Br(t[e], n[e])) return !1;
                            return !0
                        }(n.url, e.url) || t.url.next(e.url), Br(n.data, e.data) || t.data.next(e.data)
                } else t.snapshot = t._futureSnapshot, t.data.next(t._futureSnapshot.data)
            }

            function nb(t, n) {
                const e = Br(t.params, n.params) && function $5(t, n) {
                    return Zo(t, n) && t.every((e, i) => Br(e.parameters, n[i].parameters))
                }(t.url, n.url);
                return e && !(!t.parent != !n.parent) && (!t.parent || nb(t.parent, n.parent))
            }

            function vd(t, n, e) {
                if (e && t.shouldReuseRoute(n.value, e.value.snapshot)) {
                    const i = e.value;
                    i._futureSnapshot = n.value;
                    const r = function xz(t, n, e) {
                        return n.children.map(i => {
                            for (const r of e.children)
                                if (t.shouldReuseRoute(i.value, r.value.snapshot)) return vd(t, i, r);
                            return vd(t, i)
                        })
                    }(t, n, e);
                    return new gs(i, r)
                } {
                    if (t.shouldAttach(n.value)) {
                        const s = t.retrieve(n.value);
                        if (null !== s) {
                            const o = s.route;
                            return o.value._futureSnapshot = n.value, o.children = n.children.map(a => vd(t, a)), o
                        }
                    }
                    const i = function Dz(t) {
                            return new Yi(new Te(t.url), new Te(t.params), new Te(t.queryParams), new Te(t.fragment), new Te(t.data), t.outlet, t.component, t)
                        }(n.value),
                        r = n.children.map(s => vd(t, s));
                    return new gs(i, r)
                }
            }
            const ib = "ngNavigationCancelingError";

            function NA(t, n) {
                const {
                    redirectTo: e,
                    navigationBehaviorOptions: i
                } = Xo(n) ? {
                    redirectTo: n,
                    navigationBehaviorOptions: void 0
                } : n, r = BA(!1, 0, n);
                return r.url = e, r.navigationBehaviorOptions = i, r
            }

            function BA(t, n, e) {
                const i = new Error("NavigationCancelingError: " + (t || ""));
                return i[ib] = !0, i.cancellationCode = n, e && (i.url = e), i
            }

            function VA(t) {
                return HA(t) && Xo(t.url)
            }

            function HA(t) {
                return t && t[ib]
            }
            class Mz {
                constructor() {
                    this.outlet = null, this.route = null, this.resolver = null, this.injector = null, this.children = new wd, this.attachRef = null
                }
            }
            let wd = (() => {
                class t {
                    constructor() {
                        this.contexts = new Map
                    }
                    onChildOutletCreated(e, i) {
                        const r = this.getOrCreateContext(e);
                        r.outlet = i, this.contexts.set(e, r)
                    }
                    onChildOutletDestroyed(e) {
                        const i = this.getContext(e);
                        i && (i.outlet = null, i.attachRef = null)
                    }
                    onOutletDeactivated() {
                        const e = this.contexts;
                        return this.contexts = new Map, e
                    }
                    onOutletReAttached(e) {
                        this.contexts = e
                    }
                    getOrCreateContext(e) {
                        let i = this.getContext(e);
                        return i || (i = new Mz, this.contexts.set(e, i)), i
                    }
                    getContext(e) {
                        return this.contexts.get(e) || null
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const mf = !1;
            let gf = (() => {
                class t {
                    constructor(e, i, r, s, o) {
                        this.parentContexts = e, this.location = i, this.changeDetector = s, this.environmentInjector = o, this.activated = null, this._activatedRoute = null, this.activateEvents = new V, this.deactivateEvents = new V, this.attachEvents = new V, this.detachEvents = new V, this.name = r || We, e.onChildOutletCreated(this.name, this)
                    }
                    ngOnDestroy() {
                        this.parentContexts.getContext(this.name) ? .outlet === this && this.parentContexts.onChildOutletDestroyed(this.name)
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const e = this.parentContexts.getContext(this.name);
                            e && e.route && (e.attachRef ? this.attach(e.attachRef, e.route) : this.activateWith(e.route, e.injector))
                        }
                    }
                    get isActivated() {
                        return !!this.activated
                    }
                    get component() {
                        if (!this.activated) throw new B(4012, mf);
                        return this.activated.instance
                    }
                    get activatedRoute() {
                        if (!this.activated) throw new B(4012, mf);
                        return this._activatedRoute
                    }
                    get activatedRouteData() {
                        return this._activatedRoute ? this._activatedRoute.snapshot.data : {}
                    }
                    detach() {
                        if (!this.activated) throw new B(4012, mf);
                        this.location.detach();
                        const e = this.activated;
                        return this.activated = null, this._activatedRoute = null, this.detachEvents.emit(e.instance), e
                    }
                    attach(e, i) {
                        this.activated = e, this._activatedRoute = i, this.location.insert(e.hostView), this.attachEvents.emit(e.instance)
                    }
                    deactivate() {
                        if (this.activated) {
                            const e = this.component;
                            this.activated.destroy(), this.activated = null, this._activatedRoute = null, this.deactivateEvents.emit(e)
                        }
                    }
                    activateWith(e, i) {
                        if (this.isActivated) throw new B(4013, mf);
                        this._activatedRoute = e;
                        const r = this.location,
                            o = e._futureSnapshot.component,
                            a = this.parentContexts.getOrCreateContext(this.name).children,
                            l = new Sz(e, a, r.injector);
                        if (i && function kz(t) {
                                return !!t.resolveComponentFactory
                            }(i)) {
                            const c = i.resolveComponentFactory(o);
                            this.activated = r.createComponent(c, r.length, l)
                        } else this.activated = r.createComponent(o, {
                            index: r.length,
                            injector: l,
                            environmentInjector: i ? ? this.environmentInjector
                        });
                        this.changeDetector.markForCheck(), this.activateEvents.emit(this.activated.instance)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(wd), u(Je), Qt("name"), u(ge), u(Hs))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["router-outlet"]
                    ],
                    outputs: {
                        activateEvents: "activate",
                        deactivateEvents: "deactivate",
                        attachEvents: "attach",
                        detachEvents: "detach"
                    },
                    exportAs: ["outlet"],
                    standalone: !0
                }), t
            })();
            class Sz {
                constructor(n, e, i) {
                    this.route = n, this.childContexts = e, this.parent = i
                }
                get(n, e) {
                    return n === Yi ? this.route : n === wd ? this.childContexts : this.parent.get(n, e)
                }
            }
            let rb = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["ng-component"]
                    ],
                    standalone: !0,
                    features: [JM],
                    decls: 1,
                    vars: 0,
                    template: function(e, i) {
                        1 & e && E(0, "router-outlet")
                    },
                    dependencies: [gf],
                    encapsulation: 2
                }), t
            })();

            function $A(t, n) {
                return t.providers && !t._injector && (t._injector = Rh(t.providers, n, `Route: ${t.path}`)), t._injector ? ? n
            }

            function ob(t) {
                const n = t.children && t.children.map(ob),
                    e = n ? { ...t,
                        children: n
                    } : { ...t
                    };
                return !e.component && !e.loadComponent && (n || e.loadChildren) && e.outlet && e.outlet !== We && (e.component = rb), e
            }

            function Qi(t) {
                return t.outlet || We
            }

            function jA(t, n) {
                const e = t.filter(i => Qi(i) === n);
                return e.push(...t.filter(i => Qi(i) !== n)), e
            }

            function Cd(t) {
                if (!t) return null;
                if (t.routeConfig ? ._injector) return t.routeConfig._injector;
                for (let n = t.parent; n; n = n.parent) {
                    const e = n.routeConfig;
                    if (e ? ._loadedInjector) return e._loadedInjector;
                    if (e ? ._injector) return e._injector
                }
                return null
            }
            class Rz {
                constructor(n, e, i, r) {
                    this.routeReuseStrategy = n, this.futureState = e, this.currState = i, this.forwardEvent = r
                }
                activate(n) {
                    const e = this.futureState._root,
                        i = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(e, i, n), tb(this.futureState.root), this.activateChildRoutes(e, i, n)
                }
                deactivateChildRoutes(n, e, i) {
                    const r = Cl(e);
                    n.children.forEach(s => {
                        const o = s.value.outlet;
                        this.deactivateRoutes(s, r[o], i), delete r[o]
                    }), Mn(r, (s, o) => {
                        this.deactivateRouteAndItsChildren(s, i)
                    })
                }
                deactivateRoutes(n, e, i) {
                    const r = n.value,
                        s = e ? e.value : null;
                    if (r === s)
                        if (r.component) {
                            const o = i.getContext(r.outlet);
                            o && this.deactivateChildRoutes(n, e, o.children)
                        } else this.deactivateChildRoutes(n, e, i);
                    else s && this.deactivateRouteAndItsChildren(e, i)
                }
                deactivateRouteAndItsChildren(n, e) {
                    n.value.component && this.routeReuseStrategy.shouldDetach(n.value.snapshot) ? this.detachAndStoreRouteSubtree(n, e) : this.deactivateRouteAndOutlet(n, e)
                }
                detachAndStoreRouteSubtree(n, e) {
                    const i = e.getContext(n.value.outlet),
                        r = i && n.value.component ? i.children : e,
                        s = Cl(n);
                    for (const o of Object.keys(s)) this.deactivateRouteAndItsChildren(s[o], r);
                    if (i && i.outlet) {
                        const o = i.outlet.detach(),
                            a = i.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(n.value.snapshot, {
                            componentRef: o,
                            route: n,
                            contexts: a
                        })
                    }
                }
                deactivateRouteAndOutlet(n, e) {
                    const i = e.getContext(n.value.outlet),
                        r = i && n.value.component ? i.children : e,
                        s = Cl(n);
                    for (const o of Object.keys(s)) this.deactivateRouteAndItsChildren(s[o], r);
                    i && i.outlet && (i.outlet.deactivate(), i.children.onOutletDeactivated(), i.attachRef = null, i.resolver = null, i.route = null)
                }
                activateChildRoutes(n, e, i) {
                    const r = Cl(e);
                    n.children.forEach(s => {
                        this.activateRoutes(s, r[s.value.outlet], i), this.forwardEvent(new yz(s.value.snapshot))
                    }), n.children.length && this.forwardEvent(new gz(n.value.snapshot))
                }
                activateRoutes(n, e, i) {
                    const r = n.value,
                        s = e ? e.value : null;
                    if (tb(r), r === s)
                        if (r.component) {
                            const o = i.getOrCreateContext(r.outlet);
                            this.activateChildRoutes(n, e, o.children)
                        } else this.activateChildRoutes(n, e, i);
                    else if (r.component) {
                        const o = i.getOrCreateContext(r.outlet);
                        if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
                            const a = this.routeReuseStrategy.retrieve(r.snapshot);
                            this.routeReuseStrategy.store(r.snapshot, null), o.children.onOutletReAttached(a.contexts), o.attachRef = a.componentRef, o.route = a.route.value, o.outlet && o.outlet.attach(a.componentRef, a.route.value), tb(a.route.value), this.activateChildRoutes(n, null, o.children)
                        } else {
                            const a = Cd(r.snapshot),
                                l = a ? .get(Ci) ? ? null;
                            o.attachRef = null, o.route = r, o.resolver = l, o.injector = a, o.outlet && o.outlet.activateWith(r, o.injector), this.activateChildRoutes(n, null, o.children)
                        }
                    } else this.activateChildRoutes(n, null, i)
                }
            }
            class zA {
                constructor(n) {
                    this.path = n, this.route = this.path[this.path.length - 1]
                }
            }
            class _f {
                constructor(n, e) {
                    this.component = n, this.route = e
                }
            }

            function Fz(t, n, e) {
                const i = t._root;
                return xd(i, n ? n._root : null, e, [i.value])
            }

            function xl(t, n) {
                const e = Symbol(),
                    i = n.get(t, e);
                return i === e ? "function" != typeof t || function XP(t) {
                    return null !== Fu(t)
                }(t) ? n.get(t) : t : i
            }

            function xd(t, n, e, i, r = {
                canDeactivateChecks: [],
                canActivateChecks: []
            }) {
                const s = Cl(n);
                return t.children.forEach(o => {
                    (function Pz(t, n, e, i, r = {
                        canDeactivateChecks: [],
                        canActivateChecks: []
                    }) {
                        const s = t.value,
                            o = n ? n.value : null,
                            a = e ? e.getContext(t.value.outlet) : null;
                        if (o && s.routeConfig === o.routeConfig) {
                            const l = function Lz(t, n, e) {
                                if ("function" == typeof e) return e(t, n);
                                switch (e) {
                                    case "pathParamsChange":
                                        return !Zo(t.url, n.url);
                                    case "pathParamsOrQueryParamsChange":
                                        return !Zo(t.url, n.url) || !Br(t.queryParams, n.queryParams);
                                    case "always":
                                        return !0;
                                    case "paramsOrQueryParamsChange":
                                        return !nb(t, n) || !Br(t.queryParams, n.queryParams);
                                    default:
                                        return !nb(t, n)
                                }
                            }(o, s, s.routeConfig.runGuardsAndResolvers);
                            l ? r.canActivateChecks.push(new zA(i)) : (s.data = o.data, s._resolvedData = o._resolvedData), xd(t, n, s.component ? a ? a.children : null : e, i, r), l && a && a.outlet && a.outlet.isActivated && r.canDeactivateChecks.push(new _f(a.outlet.component, o))
                        } else o && Dd(n, a, r), r.canActivateChecks.push(new zA(i)), xd(t, null, s.component ? a ? a.children : null : e, i, r)
                    })(o, s[o.value.outlet], e, i.concat([o.value]), r), delete s[o.value.outlet]
                }), Mn(s, (o, a) => Dd(o, e.getContext(a), r)), r
            }

            function Dd(t, n, e) {
                const i = Cl(t),
                    r = t.value;
                Mn(i, (s, o) => {
                    Dd(s, r.component ? n ? n.children.getContext(o) : null : n, e)
                }), e.canDeactivateChecks.push(new _f(r.component && n && n.outlet && n.outlet.isActivated ? n.outlet.component : null, r))
            }

            function Md(t) {
                return "function" == typeof t
            }

            function ab(t) {
                return t instanceof fd || "EmptyError" === t ? .name
            }
            const yf = Symbol("INITIAL_VALUE");

            function Dl() {
                return vt(t => Qo(t.map(n => n.pipe(Fe(1), pt(yf)))).pipe(Z(n => {
                    for (const e of n)
                        if (!0 !== e) {
                            if (e === yf) return yf;
                            if (!1 === e || e instanceof Ko) return e
                        }
                    return !0
                }), Ie(n => n !== yf), Fe(1)))
            }

            function UA(t) {
                return function vP(...t) {
                    return gC(t)
                }(mt(n => {
                    if (Xo(n)) throw NA(0, n)
                }), Z(n => !0 === n))
            }
            const lb = {
                matched: !1,
                consumedSegments: [],
                remainingSegments: [],
                parameters: {},
                positionalParamSegments: {}
            };

            function GA(t, n, e, i, r) {
                const s = cb(t, n, e);
                return s.matched ? function Jz(t, n, e, i) {
                    const r = n.canMatch;
                    return r && 0 !== r.length ? z(r.map(o => {
                        const a = xl(o, t);
                        return Ks(function jz(t) {
                            return t && Md(t.canMatch)
                        }(a) ? a.canMatch(n, e) : t.runInContext(() => a(n, e)))
                    })).pipe(Dl(), UA()) : z(!0)
                }(i = $A(n, i), n, e).pipe(Z(o => !0 === o ? s : { ...lb
                })) : z(s)
            }

            function cb(t, n, e) {
                if ("" === n.path) return "full" === n.pathMatch && (t.hasChildren() || e.length > 0) ? { ...lb
                } : {
                    matched: !0,
                    consumedSegments: [],
                    remainingSegments: e,
                    parameters: {},
                    positionalParamSegments: {}
                };
                const r = (n.matcher || P5)(e, t, n);
                if (!r) return { ...lb
                };
                const s = {};
                Mn(r.posParams, (a, l) => {
                    s[l] = a.path
                });
                const o = r.consumed.length > 0 ? { ...s,
                    ...r.consumed[r.consumed.length - 1].parameters
                } : s;
                return {
                    matched: !0,
                    consumedSegments: r.consumed,
                    remainingSegments: e.slice(r.consumed.length),
                    parameters: o,
                    positionalParamSegments: r.posParams ? ? {}
                }
            }

            function bf(t, n, e, i, r = "corrected") {
                if (e.length > 0 && function nU(t, n, e) {
                        return e.some(i => vf(t, n, i) && Qi(i) !== We)
                    }(t, e, i)) {
                    const o = new qe(n, function tU(t, n, e, i) {
                        const r = {};
                        r[We] = i, i._sourceSegment = t, i._segmentIndexShift = n.length;
                        for (const s of e)
                            if ("" === s.path && Qi(s) !== We) {
                                const o = new qe([], {});
                                o._sourceSegment = t, o._segmentIndexShift = n.length, r[Qi(s)] = o
                            }
                        return r
                    }(t, n, i, new qe(e, t.children)));
                    return o._sourceSegment = t, o._segmentIndexShift = n.length, {
                        segmentGroup: o,
                        slicedSegments: []
                    }
                }
                if (0 === e.length && function iU(t, n, e) {
                        return e.some(i => vf(t, n, i))
                    }(t, e, i)) {
                    const o = new qe(t.segments, function eU(t, n, e, i, r, s) {
                        const o = {};
                        for (const a of i)
                            if (vf(t, e, a) && !r[Qi(a)]) {
                                const l = new qe([], {});
                                l._sourceSegment = t, l._segmentIndexShift = "legacy" === s ? t.segments.length : n.length, o[Qi(a)] = l
                            }
                        return { ...r,
                            ...o
                        }
                    }(t, n, e, i, t.children, r));
                    return o._sourceSegment = t, o._segmentIndexShift = n.length, {
                        segmentGroup: o,
                        slicedSegments: e
                    }
                }
                const s = new qe(t.segments, t.children);
                return s._sourceSegment = t, s._segmentIndexShift = n.length, {
                    segmentGroup: s,
                    slicedSegments: e
                }
            }

            function vf(t, n, e) {
                return (!(t.hasChildren() || n.length > 0) || "full" !== e.pathMatch) && "" === e.path
            }

            function WA(t, n, e, i) {
                return !!(Qi(t) === i || i !== We && vf(n, e, t)) && ("**" === t.path || cb(n, t, e).matched)
            }

            function qA(t, n, e) {
                return 0 === n.length && !t.children[e]
            }
            const wf = !1;
            class Cf {
                constructor(n) {
                    this.segmentGroup = n || null
                }
            }
            class YA {
                constructor(n) {
                    this.urlTree = n
                }
            }

            function Sd(t) {
                return Ln(new Cf(t))
            }

            function QA(t) {
                return Ln(new YA(t))
            }
            class aU {
                constructor(n, e, i, r, s) {
                    this.injector = n, this.configLoader = e, this.urlSerializer = i, this.urlTree = r, this.config = s, this.allowRedirects = !0
                }
                apply() {
                    const n = bf(this.urlTree.root, [], [], this.config).segmentGroup,
                        e = new qe(n.segments, n.children);
                    return this.expandSegmentGroup(this.injector, this.config, e, We).pipe(Z(s => this.createUrlTree(hf(s), this.urlTree.queryParams, this.urlTree.fragment))).pipe(oi(s => {
                        if (s instanceof YA) return this.allowRedirects = !1, this.match(s.urlTree);
                        throw s instanceof Cf ? this.noMatchError(s) : s
                    }))
                }
                match(n) {
                    return this.expandSegmentGroup(this.injector, this.config, n.root, We).pipe(Z(r => this.createUrlTree(hf(r), n.queryParams, n.fragment))).pipe(oi(r => {
                        throw r instanceof Cf ? this.noMatchError(r) : r
                    }))
                }
                noMatchError(n) {
                    return new B(4002, wf)
                }
                createUrlTree(n, e, i) {
                    const r = qy(n);
                    return new Ko(r, e, i)
                }
                expandSegmentGroup(n, e, i, r) {
                    return 0 === i.segments.length && i.hasChildren() ? this.expandChildren(n, e, i).pipe(Z(s => new qe([], s))) : this.expandSegment(n, i, e, i.segments, r, !0)
                }
                expandChildren(n, e, i) {
                    const r = [];
                    for (const s of Object.keys(i.children)) "primary" === s ? r.unshift(s) : r.push(s);
                    return Rt(r).pipe(Qs(s => {
                        const o = i.children[s],
                            a = jA(e, s);
                        return this.expandSegmentGroup(n, a, o, s).pipe(Z(l => ({
                            segment: l,
                            outlet: s
                        })))
                    }), cA((s, o) => (s[o.outlet] = o.segment, s), {}), dA())
                }
                expandSegment(n, e, i, r, s, o) {
                    return Rt(i).pipe(Qs(a => this.expandSegmentAgainstRoute(n, e, i, a, r, s, o).pipe(oi(c => {
                        if (c instanceof Cf) return z(null);
                        throw c
                    }))), yn(a => !!a), oi((a, l) => {
                        if (ab(a)) return qA(e, r, s) ? z(new qe([], {})) : Sd(e);
                        throw a
                    }))
                }
                expandSegmentAgainstRoute(n, e, i, r, s, o, a) {
                    return WA(r, e, s, o) ? void 0 === r.redirectTo ? this.matchSegmentAgainstRoute(n, e, r, s, o) : a && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o) : Sd(e) : Sd(e)
                }
                expandSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o) {
                    return "**" === r.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, r, o) : this.expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o)
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(n, e, i, r) {
                    const s = this.applyRedirectCommands([], i.redirectTo, {});
                    return i.redirectTo.startsWith("/") ? QA(s) : this.lineralizeSegments(i, s).pipe(_t(o => {
                        const a = new qe(o, {});
                        return this.expandSegment(n, a, e, o, r, !1)
                    }))
                }
                expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o) {
                    const {
                        matched: a,
                        consumedSegments: l,
                        remainingSegments: c,
                        positionalParamSegments: d
                    } = cb(e, r, s);
                    if (!a) return Sd(e);
                    const h = this.applyRedirectCommands(l, r.redirectTo, d);
                    return r.redirectTo.startsWith("/") ? QA(h) : this.lineralizeSegments(r, h).pipe(_t(m => this.expandSegment(n, e, i, m.concat(c), o, !1)))
                }
                matchSegmentAgainstRoute(n, e, i, r, s) {
                    return "**" === i.path ? (n = $A(i, n), i.loadChildren ? (i._loadedRoutes ? z({
                        routes: i._loadedRoutes,
                        injector: i._loadedInjector
                    }) : this.configLoader.loadChildren(n, i)).pipe(Z(a => (i._loadedRoutes = a.routes, i._loadedInjector = a.injector, new qe(r, {})))) : z(new qe(r, {}))) : GA(e, i, r, n).pipe(vt(({
                        matched: o,
                        consumedSegments: a,
                        remainingSegments: l
                    }) => o ? this.getChildConfig(n = i._injector ? ? n, i, r).pipe(_t(d => {
                        const h = d.injector ? ? n,
                            m = d.routes,
                            {
                                segmentGroup: _,
                                slicedSegments: v
                            } = bf(e, a, l, m),
                            D = new qe(_.segments, _.children);
                        if (0 === v.length && D.hasChildren()) return this.expandChildren(h, m, D).pipe(Z(F => new qe(a, F)));
                        if (0 === m.length && 0 === v.length) return z(new qe(a, {}));
                        const k = Qi(i) === s;
                        return this.expandSegment(h, D, m, v, k ? We : s, !0).pipe(Z(L => new qe(a.concat(L.segments), L.children)))
                    })) : Sd(e)))
                }
                getChildConfig(n, e, i) {
                    return e.children ? z({
                        routes: e.children,
                        injector: n
                    }) : e.loadChildren ? void 0 !== e._loadedRoutes ? z({
                        routes: e._loadedRoutes,
                        injector: e._loadedInjector
                    }) : function Xz(t, n, e, i) {
                        const r = n.canLoad;
                        return void 0 === r || 0 === r.length ? z(!0) : z(r.map(o => {
                            const a = xl(o, t);
                            return Ks(function Bz(t) {
                                return t && Md(t.canLoad)
                            }(a) ? a.canLoad(n, e) : t.runInContext(() => a(n, e)))
                        })).pipe(Dl(), UA())
                    }(n, e, i).pipe(_t(r => r ? this.configLoader.loadChildren(n, e).pipe(mt(s => {
                        e._loadedRoutes = s.routes, e._loadedInjector = s.injector
                    })) : function sU(t) {
                        return Ln(BA(wf, 3))
                    }())) : z({
                        routes: [],
                        injector: n
                    })
                }
                lineralizeSegments(n, e) {
                    let i = [],
                        r = e.root;
                    for (;;) {
                        if (i = i.concat(r.segments), 0 === r.numberOfChildren) return z(i);
                        if (r.numberOfChildren > 1 || !r.children[We]) return Ln(new B(4e3, wf));
                        r = r.children[We]
                    }
                }
                applyRedirectCommands(n, e, i) {
                    return this.applyRedirectCreateUrlTree(e, this.urlSerializer.parse(e), n, i)
                }
                applyRedirectCreateUrlTree(n, e, i, r) {
                    const s = this.createSegmentGroup(n, e.root, i, r);
                    return new Ko(s, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment)
                }
                createQueryParams(n, e) {
                    const i = {};
                    return Mn(n, (r, s) => {
                        if ("string" == typeof r && r.startsWith(":")) {
                            const a = r.substring(1);
                            i[s] = e[a]
                        } else i[s] = r
                    }), i
                }
                createSegmentGroup(n, e, i, r) {
                    const s = this.createSegments(n, e.segments, i, r);
                    let o = {};
                    return Mn(e.children, (a, l) => {
                        o[l] = this.createSegmentGroup(n, a, i, r)
                    }), new qe(s, o)
                }
                createSegments(n, e, i, r) {
                    return e.map(s => s.path.startsWith(":") ? this.findPosParam(n, s, r) : this.findOrReturn(s, i))
                }
                findPosParam(n, e, i) {
                    const r = i[e.path.substring(1)];
                    if (!r) throw new B(4001, wf);
                    return r
                }
                findOrReturn(n, e) {
                    let i = 0;
                    for (const r of e) {
                        if (r.path === n.path) return e.splice(i), r;
                        i++
                    }
                    return n
                }
            }
            class cU {}
            class hU {
                constructor(n, e, i, r, s, o, a, l) {
                    this.injector = n, this.rootComponentType = e, this.config = i, this.urlTree = r, this.url = s, this.paramsInheritanceStrategy = o, this.relativeLinkResolution = a, this.urlSerializer = l
                }
                recognize() {
                    const n = bf(this.urlTree.root, [], [], this.config.filter(e => void 0 === e.redirectTo), this.relativeLinkResolution).segmentGroup;
                    return this.processSegmentGroup(this.injector, this.config, n, We).pipe(Z(e => {
                        if (null === e) return null;
                        const i = new pf([], Object.freeze({}), Object.freeze({ ...this.urlTree.queryParams
                            }), this.urlTree.fragment, {}, We, this.rootComponentType, null, this.urlTree.root, -1, {}),
                            r = new gs(i, e),
                            s = new PA(this.url, r);
                        return this.inheritParamsAndData(s._root), s
                    }))
                }
                inheritParamsAndData(n) {
                    const e = n.value,
                        i = OA(e, this.paramsInheritanceStrategy);
                    e.params = Object.freeze(i.params), e.data = Object.freeze(i.data), n.children.forEach(r => this.inheritParamsAndData(r))
                }
                processSegmentGroup(n, e, i, r) {
                    return 0 === i.segments.length && i.hasChildren() ? this.processChildren(n, e, i) : this.processSegment(n, e, i, i.segments, r)
                }
                processChildren(n, e, i) {
                    return Rt(Object.keys(i.children)).pipe(Qs(r => {
                        const s = i.children[r],
                            o = jA(e, r);
                        return this.processSegmentGroup(n, o, s, r)
                    }), cA((r, s) => r && s ? (r.push(...s), r) : null), zy(r => null !== r), sf(null), dA(), Z(r => {
                        if (null === r) return null;
                        const s = KA(r);
                        return function fU(t) {
                            t.sort((n, e) => n.value.outlet === We ? -1 : e.value.outlet === We ? 1 : n.value.outlet.localeCompare(e.value.outlet))
                        }(s), s
                    }))
                }
                processSegment(n, e, i, r, s) {
                    return Rt(e).pipe(Qs(o => this.processSegmentAgainstRoute(o._injector ? ? n, o, i, r, s)), yn(o => !!o), oi(o => {
                        if (ab(o)) return qA(i, r, s) ? z([]) : z(null);
                        throw o
                    }))
                }
                processSegmentAgainstRoute(n, e, i, r, s) {
                    if (e.redirectTo || !WA(e, i, r, s)) return z(null);
                    let o;
                    if ("**" === e.path) {
                        const a = r.length > 0 ? fA(r).parameters : {},
                            l = XA(i) + r.length;
                        o = z({
                            snapshot: new pf(r, a, Object.freeze({ ...this.urlTree.queryParams
                            }), this.urlTree.fragment, eE(e), Qi(e), e.component ? ? e._loadedComponent ? ? null, e, ZA(i), l, tE(e), l),
                            consumedSegments: [],
                            remainingSegments: []
                        })
                    } else o = GA(i, e, r, n).pipe(Z(({
                        matched: a,
                        consumedSegments: l,
                        remainingSegments: c,
                        parameters: d
                    }) => {
                        if (!a) return null;
                        const h = XA(i) + l.length;
                        return {
                            snapshot: new pf(l, d, Object.freeze({ ...this.urlTree.queryParams
                            }), this.urlTree.fragment, eE(e), Qi(e), e.component ? ? e._loadedComponent ? ? null, e, ZA(i), h, tE(e), h),
                            consumedSegments: l,
                            remainingSegments: c
                        }
                    }));
                    return o.pipe(vt(a => {
                        if (null === a) return z(null);
                        const {
                            snapshot: l,
                            consumedSegments: c,
                            remainingSegments: d
                        } = a;
                        n = e._injector ? ? n;
                        const h = e._loadedInjector ? ? n,
                            m = function pU(t) {
                                return t.children ? t.children : t.loadChildren ? t._loadedRoutes : []
                            }(e),
                            {
                                segmentGroup: _,
                                slicedSegments: v
                            } = bf(i, c, d, m.filter(k => void 0 === k.redirectTo), this.relativeLinkResolution);
                        if (0 === v.length && _.hasChildren()) return this.processChildren(h, m, _).pipe(Z(k => null === k ? null : [new gs(l, k)]));
                        if (0 === m.length && 0 === v.length) return z([new gs(l, [])]);
                        const D = Qi(e) === s;
                        return this.processSegment(h, m, _, v, D ? We : s).pipe(Z(k => null === k ? null : [new gs(l, k)]))
                    }))
                }
            }

            function mU(t) {
                const n = t.value.routeConfig;
                return n && "" === n.path && void 0 === n.redirectTo
            }

            function KA(t) {
                const n = [],
                    e = new Set;
                for (const i of t) {
                    if (!mU(i)) {
                        n.push(i);
                        continue
                    }
                    const r = n.find(s => i.value.routeConfig === s.value.routeConfig);
                    void 0 !== r ? (r.children.push(...i.children), e.add(r)) : n.push(i)
                }
                for (const i of e) {
                    const r = KA(i.children);
                    n.push(new gs(i.value, r))
                }
                return n.filter(i => !e.has(i))
            }

            function ZA(t) {
                let n = t;
                for (; n._sourceSegment;) n = n._sourceSegment;
                return n
            }

            function XA(t) {
                let n = t,
                    e = n._segmentIndexShift ? ? 0;
                for (; n._sourceSegment;) n = n._sourceSegment, e += n._segmentIndexShift ? ? 0;
                return e - 1
            }

            function eE(t) {
                return t.data || {}
            }

            function tE(t) {
                return t.resolve || {}
            }

            function nE(t) {
                return "string" == typeof t.title || null === t.title
            }

            function db(t) {
                return vt(n => {
                    const e = t(n);
                    return e ? Rt(e).pipe(Z(() => n)) : z(n)
                })
            }
            let iE = (() => {
                    class t {
                        buildTitle(e) {
                            let i, r = e.root;
                            for (; void 0 !== r;) i = this.getResolvedTitleForRoute(r) ? ? i, r = r.children.find(s => s.outlet === We);
                            return i
                        }
                        getResolvedTitleForRoute(e) {
                            return e.data[pd]
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function() {
                            return st(rE)
                        },
                        providedIn: "root"
                    }), t
                })(),
                rE = (() => {
                    class t extends iE {
                        constructor(e) {
                            super(), this.title = e
                        }
                        updateTitle(e) {
                            const i = this.buildTitle(e);
                            void 0 !== i && this.title.setTitle(i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(tA))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            class xU {}
            class MU extends class DU {
                shouldDetach(n) {
                    return !1
                }
                store(n, e) {}
                shouldAttach(n) {
                    return !1
                }
                retrieve(n) {
                    return null
                }
                shouldReuseRoute(n, e) {
                    return n.routeConfig === e.routeConfig
                }
            } {}
            const Df = new R("", {
                    providedIn: "root",
                    factory: () => ({})
                }),
                ub = new R("ROUTES");
            let hb = (() => {
                class t {
                    constructor(e, i) {
                        this.injector = e, this.compiler = i, this.componentLoaders = new WeakMap, this.childrenLoaders = new WeakMap
                    }
                    loadComponent(e) {
                        if (this.componentLoaders.get(e)) return this.componentLoaders.get(e);
                        if (e._loadedComponent) return z(e._loadedComponent);
                        this.onLoadStartListener && this.onLoadStartListener(e);
                        const i = Ks(e.loadComponent()).pipe(mt(s => {
                                this.onLoadEndListener && this.onLoadEndListener(e), e._loadedComponent = s
                            }), yl(() => {
                                this.componentLoaders.delete(e)
                            })),
                            r = new rf(i, () => new H).pipe($y());
                        return this.componentLoaders.set(e, r), r
                    }
                    loadChildren(e, i) {
                        if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
                        if (i._loadedRoutes) return z({
                            routes: i._loadedRoutes,
                            injector: i._loadedInjector
                        });
                        this.onLoadStartListener && this.onLoadStartListener(i);
                        const s = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(Z(a => {
                                this.onLoadEndListener && this.onLoadEndListener(i);
                                let l, c, d = !1;
                                Array.isArray(a) ? c = a : (l = a.create(e).injector, c = hA(l.get(ub, [], xe.Self | xe.Optional)));
                                return {
                                    routes: c.map(ob),
                                    injector: l
                                }
                            }), yl(() => {
                                this.childrenLoaders.delete(i)
                            })),
                            o = new rf(s, () => new H).pipe($y());
                        return this.childrenLoaders.set(i, o), o
                    }
                    loadModuleFactoryOrRoutes(e) {
                        return Ks(e()).pipe(_t(i => i instanceof ZM || Array.isArray(i) ? z(i) : Rt(this.compiler.compileModuleAsync(i))))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ct), C(ty))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            class kU {}
            class AU {
                shouldProcessUrl(n) {
                    return !0
                }
                extract(n) {
                    return n
                }
                merge(n, e) {
                    return n
                }
            }

            function EU(t) {
                throw t
            }

            function TU(t, n, e) {
                return n.parse("/")
            }
            const IU = {
                    paths: "exact",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "exact"
                },
                RU = {
                    paths: "subset",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "subset"
                };

            function oE() {
                const t = st(bA),
                    n = st(wd),
                    e = st(od),
                    i = st(Ct),
                    r = st(ty),
                    s = st(ub, {
                        optional: !0
                    }) ? ? [],
                    o = st(Df, {
                        optional: !0
                    }) ? ? {},
                    a = st(rE),
                    l = st(iE, {
                        optional: !0
                    }),
                    c = st(kU, {
                        optional: !0
                    }),
                    d = st(xU, {
                        optional: !0
                    }),
                    h = new gt(null, t, n, e, i, r, hA(s));
                return c && (h.urlHandlingStrategy = c), d && (h.routeReuseStrategy = d), h.titleStrategy = l ? ? a,
                    function FU(t, n) {
                        t.errorHandler && (n.errorHandler = t.errorHandler), t.malformedUriErrorHandler && (n.malformedUriErrorHandler = t.malformedUriErrorHandler), t.onSameUrlNavigation && (n.onSameUrlNavigation = t.onSameUrlNavigation), t.paramsInheritanceStrategy && (n.paramsInheritanceStrategy = t.paramsInheritanceStrategy), t.relativeLinkResolution && (n.relativeLinkResolution = t.relativeLinkResolution), t.urlUpdateStrategy && (n.urlUpdateStrategy = t.urlUpdateStrategy), t.canceledNavigationResolution && (n.canceledNavigationResolution = t.canceledNavigationResolution)
                    }(o, h), h
            }
            let gt = (() => {
                class t {
                    constructor(e, i, r, s, o, a, l) {
                        this.rootComponentType = e, this.urlSerializer = i, this.rootContexts = r, this.location = s, this.config = l, this.lastSuccessfulNavigation = null, this.currentNavigation = null, this.disposed = !1, this.navigationId = 0, this.currentPageId = 0, this.isNgZoneEnabled = !1, this.events = new H, this.errorHandler = EU, this.malformedUriErrorHandler = TU, this.navigated = !1, this.lastSuccessfulId = -1, this.afterPreactivation = () => z(void 0), this.urlHandlingStrategy = new AU, this.routeReuseStrategy = new MU, this.onSameUrlNavigation = "ignore", this.paramsInheritanceStrategy = "emptyOnly", this.urlUpdateStrategy = "deferred", this.relativeLinkResolution = "corrected", this.canceledNavigationResolution = "replace", this.configLoader = o.get(hb), this.configLoader.onLoadEndListener = m => this.triggerEvent(new pz(m)), this.configLoader.onLoadStartListener = m => this.triggerEvent(new fz(m)), this.ngModule = o.get(zo), this.console = o.get(M$);
                        const h = o.get(ce);
                        this.isNgZoneEnabled = h instanceof ce && ce.isInAngularZone(), this.resetConfig(l), this.currentUrlTree = function N5() {
                            return new Ko(new qe([], {}), {}, null)
                        }(), this.rawUrlTree = this.currentUrlTree, this.browserUrlTree = this.currentUrlTree, this.routerState = FA(this.currentUrlTree, this.rootComponentType), this.transitions = new Te({
                            id: 0,
                            targetPageId: 0,
                            currentUrlTree: this.currentUrlTree,
                            currentRawUrl: this.currentUrlTree,
                            extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                            urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                            rawUrl: this.currentUrlTree,
                            extras: {},
                            resolve: null,
                            reject: null,
                            promise: Promise.resolve(!0),
                            source: "imperative",
                            restoredState: null,
                            currentSnapshot: this.routerState.snapshot,
                            targetSnapshot: null,
                            currentRouterState: this.routerState,
                            targetRouterState: null,
                            guards: {
                                canActivateChecks: [],
                                canDeactivateChecks: []
                            },
                            guardsResult: null
                        }), this.navigations = this.setupNavigations(this.transitions), this.processNavigations()
                    }
                    get browserPageId() {
                        return this.location.getState() ? .\u0275routerPageId
                    }
                    setupNavigations(e) {
                        const i = this.events;
                        return e.pipe(Ie(r => 0 !== r.id), Z(r => ({ ...r,
                            extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl)
                        })), vt(r => {
                            let s = !1,
                                o = !1;
                            return z(r).pipe(mt(a => {
                                this.currentNavigation = {
                                    id: a.id,
                                    initialUrl: a.rawUrl,
                                    extractedUrl: a.extractedUrl,
                                    trigger: a.source,
                                    extras: a.extras,
                                    previousNavigation: this.lastSuccessfulNavigation ? { ...this.lastSuccessfulNavigation,
                                        previousNavigation: null
                                    } : null
                                }
                            }), vt(a => {
                                const l = this.browserUrlTree.toString(),
                                    c = !this.navigated || a.extractedUrl.toString() !== l || l !== this.currentUrlTree.toString();
                                if (("reload" === this.onSameUrlNavigation || c) && this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl)) return aE(a.source) && (this.browserUrlTree = a.extractedUrl), z(a).pipe(vt(h => {
                                    const m = this.transitions.getValue();
                                    return i.next(new Zy(h.id, this.serializeUrl(h.extractedUrl), h.source, h.restoredState)), m !== this.transitions.getValue() ? Ni : Promise.resolve(h)
                                }), function lU(t, n, e, i) {
                                    return vt(r => function oU(t, n, e, i, r) {
                                        return new aU(t, n, e, i, r).apply()
                                    }(t, n, e, r.extractedUrl, i).pipe(Z(s => ({ ...r,
                                        urlAfterRedirects: s
                                    }))))
                                }(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config), mt(h => {
                                    this.currentNavigation = { ...this.currentNavigation,
                                        finalUrl: h.urlAfterRedirects
                                    }, r.urlAfterRedirects = h.urlAfterRedirects
                                }), function _U(t, n, e, i, r, s) {
                                    return _t(o => function uU(t, n, e, i, r, s, o = "emptyOnly", a = "legacy") {
                                        return new hU(t, n, e, i, r, o, a, s).recognize().pipe(vt(l => null === l ? function dU(t) {
                                            return new Ze(n => n.error(t))
                                        }(new cU) : z(l)))
                                    }(t, n, e, o.urlAfterRedirects, i.serialize(o.urlAfterRedirects), i, r, s).pipe(Z(a => ({ ...o,
                                        targetSnapshot: a
                                    }))))
                                }(this.ngModule.injector, this.rootComponentType, this.config, this.urlSerializer, this.paramsInheritanceStrategy, this.relativeLinkResolution), mt(h => {
                                    if (r.targetSnapshot = h.targetSnapshot, "eager" === this.urlUpdateStrategy) {
                                        if (!h.extras.skipLocationChange) {
                                            const _ = this.urlHandlingStrategy.merge(h.urlAfterRedirects, h.rawUrl);
                                            this.setBrowserUrl(_, h)
                                        }
                                        this.browserUrlTree = h.urlAfterRedirects
                                    }
                                    const m = new lz(h.id, this.serializeUrl(h.extractedUrl), this.serializeUrl(h.urlAfterRedirects), h.targetSnapshot);
                                    i.next(m)
                                }));
                                if (c && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                                    const {
                                        id: m,
                                        extractedUrl: _,
                                        source: v,
                                        restoredState: D,
                                        extras: k
                                    } = a, S = new Zy(m, this.serializeUrl(_), v, D);
                                    i.next(S);
                                    const L = FA(_, this.rootComponentType).snapshot;
                                    return z(r = { ...a,
                                        targetSnapshot: L,
                                        urlAfterRedirects: _,
                                        extras: { ...k,
                                            skipLocationChange: !1,
                                            replaceUrl: !1
                                        }
                                    })
                                }
                                return this.rawUrlTree = a.rawUrl, a.resolve(null), Ni
                            }), mt(a => {
                                const l = new cz(a.id, this.serializeUrl(a.extractedUrl), this.serializeUrl(a.urlAfterRedirects), a.targetSnapshot);
                                this.triggerEvent(l)
                            }), Z(a => r = { ...a,
                                guards: Fz(a.targetSnapshot, a.currentSnapshot, this.rootContexts)
                            }), function Uz(t, n) {
                                return _t(e => {
                                    const {
                                        targetSnapshot: i,
                                        currentSnapshot: r,
                                        guards: {
                                            canActivateChecks: s,
                                            canDeactivateChecks: o
                                        }
                                    } = e;
                                    return 0 === o.length && 0 === s.length ? z({ ...e,
                                        guardsResult: !0
                                    }) : function Gz(t, n, e, i) {
                                        return Rt(t).pipe(_t(r => function Zz(t, n, e, i, r) {
                                            const s = n && n.routeConfig ? n.routeConfig.canDeactivate : null;
                                            return s && 0 !== s.length ? z(s.map(a => {
                                                const l = Cd(n) ? ? r,
                                                    c = xl(a, l);
                                                return Ks(function $z(t) {
                                                    return t && Md(t.canDeactivate)
                                                }(c) ? c.canDeactivate(t, n, e, i) : l.runInContext(() => c(t, n, e, i))).pipe(yn())
                                            })).pipe(Dl()) : z(!0)
                                        }(r.component, r.route, e, n, i)), yn(r => !0 !== r, !0))
                                    }(o, i, r, t).pipe(_t(a => a && function Nz(t) {
                                        return "boolean" == typeof t
                                    }(a) ? function Wz(t, n, e, i) {
                                        return Rt(n).pipe(Qs(r => gl(function Yz(t, n) {
                                            return null !== t && n && n(new mz(t)), z(!0)
                                        }(r.route.parent, i), function qz(t, n) {
                                            return null !== t && n && n(new _z(t)), z(!0)
                                        }(r.route, i), function Kz(t, n, e) {
                                            const i = n[n.length - 1],
                                                s = n.slice(0, n.length - 1).reverse().map(o => function Oz(t) {
                                                    const n = t.routeConfig ? t.routeConfig.canActivateChild : null;
                                                    return n && 0 !== n.length ? {
                                                        node: t,
                                                        guards: n
                                                    } : null
                                                }(o)).filter(o => null !== o).map(o => Ys(() => z(o.guards.map(l => {
                                                    const c = Cd(o.node) ? ? e,
                                                        d = xl(l, c);
                                                    return Ks(function Hz(t) {
                                                        return t && Md(t.canActivateChild)
                                                    }(d) ? d.canActivateChild(i, t) : c.runInContext(() => d(i, t))).pipe(yn())
                                                })).pipe(Dl())));
                                            return z(s).pipe(Dl())
                                        }(t, r.path, e), function Qz(t, n, e) {
                                            const i = n.routeConfig ? n.routeConfig.canActivate : null;
                                            if (!i || 0 === i.length) return z(!0);
                                            const r = i.map(s => Ys(() => {
                                                const o = Cd(n) ? ? e,
                                                    a = xl(s, o);
                                                return Ks(function Vz(t) {
                                                    return t && Md(t.canActivate)
                                                }(a) ? a.canActivate(n, t) : o.runInContext(() => a(n, t))).pipe(yn())
                                            }));
                                            return z(r).pipe(Dl())
                                        }(t, r.route, e))), yn(r => !0 !== r, !0))
                                    }(i, s, t, n) : z(a)), Z(a => ({ ...e,
                                        guardsResult: a
                                    })))
                                })
                            }(this.ngModule.injector, a => this.triggerEvent(a)), mt(a => {
                                if (r.guardsResult = a.guardsResult, Xo(a.guardsResult)) throw NA(0, a.guardsResult);
                                const l = new dz(a.id, this.serializeUrl(a.extractedUrl), this.serializeUrl(a.urlAfterRedirects), a.targetSnapshot, !!a.guardsResult);
                                this.triggerEvent(l)
                            }), Ie(a => !!a.guardsResult || (this.restoreHistory(a), this.cancelNavigationTransition(a, "", 3), !1)), db(a => {
                                if (a.guards.canActivateChecks.length) return z(a).pipe(mt(l => {
                                    const c = new uz(l.id, this.serializeUrl(l.extractedUrl), this.serializeUrl(l.urlAfterRedirects), l.targetSnapshot);
                                    this.triggerEvent(c)
                                }), vt(l => {
                                    let c = !1;
                                    return z(l).pipe(function yU(t, n) {
                                        return _t(e => {
                                            const {
                                                targetSnapshot: i,
                                                guards: {
                                                    canActivateChecks: r
                                                }
                                            } = e;
                                            if (!r.length) return z(e);
                                            let s = 0;
                                            return Rt(r).pipe(Qs(o => function bU(t, n, e, i) {
                                                const r = t.routeConfig,
                                                    s = t._resolve;
                                                return void 0 !== r ? .title && !nE(r) && (s[pd] = r.title),
                                                    function vU(t, n, e, i) {
                                                        const r = function wU(t) {
                                                            return [...Object.keys(t), ...Object.getOwnPropertySymbols(t)]
                                                        }(t);
                                                        if (0 === r.length) return z({});
                                                        const s = {};
                                                        return Rt(r).pipe(_t(o => function CU(t, n, e, i) {
                                                            const r = Cd(n) ? ? i,
                                                                s = xl(t, r);
                                                            return Ks(s.resolve ? s.resolve(n, e) : r.runInContext(() => s(n, e)))
                                                        }(t[o], n, e, i).pipe(yn(), mt(a => {
                                                            s[o] = a
                                                        }))), jy(1), _l(s), oi(o => ab(o) ? Ni : Ln(o)))
                                                    }(s, t, n, i).pipe(Z(o => (t._resolvedData = o, t.data = OA(t, e).resolve, r && nE(r) && (t.data[pd] = r.title), null)))
                                            }(o.route, i, t, n)), mt(() => s++), jy(1), _t(o => s === r.length ? z(e) : Ni))
                                        })
                                    }(this.paramsInheritanceStrategy, this.ngModule.injector), mt({
                                        next: () => c = !0,
                                        complete: () => {
                                            c || (this.restoreHistory(l), this.cancelNavigationTransition(l, "", 2))
                                        }
                                    }))
                                }), mt(l => {
                                    const c = new hz(l.id, this.serializeUrl(l.extractedUrl), this.serializeUrl(l.urlAfterRedirects), l.targetSnapshot);
                                    this.triggerEvent(c)
                                }))
                            }), db(a => {
                                const l = c => {
                                    const d = [];
                                    c.routeConfig ? .loadComponent && !c.routeConfig._loadedComponent && d.push(this.configLoader.loadComponent(c.routeConfig).pipe(mt(h => {
                                        c.component = h
                                    }), Z(() => {})));
                                    for (const h of c.children) d.push(...l(h));
                                    return d
                                };
                                return Qo(l(a.targetSnapshot.root)).pipe(sf(), Fe(1))
                            }), db(() => this.afterPreactivation()), Z(a => {
                                const l = function Cz(t, n, e) {
                                    const i = vd(t, n._root, e ? e._root : void 0);
                                    return new RA(i, n)
                                }(this.routeReuseStrategy, a.targetSnapshot, a.currentRouterState);
                                return r = { ...a,
                                    targetRouterState: l
                                }
                            }), mt(a => {
                                this.currentUrlTree = a.urlAfterRedirects, this.rawUrlTree = this.urlHandlingStrategy.merge(a.urlAfterRedirects, a.rawUrl), this.routerState = a.targetRouterState, "deferred" === this.urlUpdateStrategy && (a.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, a), this.browserUrlTree = a.urlAfterRedirects)
                            }), ((t, n, e) => Z(i => (new Rz(n, i.targetRouterState, i.currentRouterState, e).activate(t), i)))(this.rootContexts, this.routeReuseStrategy, a => this.triggerEvent(a)), mt({
                                next() {
                                    s = !0
                                },
                                complete() {
                                    s = !0
                                }
                            }), yl(() => {
                                s || o || this.cancelNavigationTransition(r, "", 1), this.currentNavigation ? .id === r.id && (this.currentNavigation = null)
                            }), oi(a => {
                                if (o = !0, HA(a)) {
                                    VA(a) || (this.navigated = !0, this.restoreHistory(r, !0));
                                    const l = new ff(r.id, this.serializeUrl(r.extractedUrl), a.message, a.cancellationCode);
                                    if (i.next(l), VA(a)) {
                                        const c = this.urlHandlingStrategy.merge(a.url, this.rawUrlTree),
                                            d = {
                                                skipLocationChange: r.extras.skipLocationChange,
                                                replaceUrl: "eager" === this.urlUpdateStrategy || aE(r.source)
                                            };
                                        this.scheduleNavigation(c, "imperative", null, d, {
                                            resolve: r.resolve,
                                            reject: r.reject,
                                            promise: r.promise
                                        })
                                    } else r.resolve(!1)
                                } else {
                                    this.restoreHistory(r, !0);
                                    const l = new EA(r.id, this.serializeUrl(r.extractedUrl), a, r.targetSnapshot ? ? void 0);
                                    i.next(l);
                                    try {
                                        r.resolve(this.errorHandler(a))
                                    } catch (c) {
                                        r.reject(c)
                                    }
                                }
                                return Ni
                            }))
                        }))
                    }
                    resetRootComponentType(e) {
                        this.rootComponentType = e, this.routerState.root.component = this.rootComponentType
                    }
                    setTransition(e) {
                        this.transitions.next({ ...this.transitions.value,
                            ...e
                        })
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(), 0 === this.navigationId && this.navigateByUrl(this.location.path(!0), {
                            replaceUrl: !0
                        })
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription || (this.locationSubscription = this.location.subscribe(e => {
                            const i = "popstate" === e.type ? "popstate" : "hashchange";
                            "popstate" === i && setTimeout(() => {
                                const r = {
                                        replaceUrl: !0
                                    },
                                    s = e.state ? .navigationId ? e.state : null;
                                if (s) {
                                    const a = { ...s
                                    };
                                    delete a.navigationId, delete a.\u0275routerPageId, 0 !== Object.keys(a).length && (r.state = a)
                                }
                                const o = this.parseUrl(e.url);
                                this.scheduleNavigation(o, i, s, r)
                            }, 0)
                        }))
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree)
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation
                    }
                    triggerEvent(e) {
                        this.events.next(e)
                    }
                    resetConfig(e) {
                        this.config = e.map(ob), this.navigated = !1, this.lastSuccessfulId = -1
                    }
                    ngOnDestroy() {
                        this.dispose()
                    }
                    dispose() {
                        this.transitions.complete(), this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0), this.disposed = !0
                    }
                    createUrlTree(e, i = {}) {
                        const {
                            relativeTo: r,
                            queryParams: s,
                            fragment: o,
                            queryParamsHandling: a,
                            preserveFragment: l
                        } = i, c = r || this.routerState.root, d = l ? this.currentUrlTree.fragment : o;
                        let h = null;
                        switch (a) {
                            case "merge":
                                h = { ...this.currentUrlTree.queryParams,
                                    ...s
                                };
                                break;
                            case "preserve":
                                h = this.currentUrlTree.queryParams;
                                break;
                            default:
                                h = s || null
                        }
                        return null !== h && (h = this.removeEmptyProps(h)), nz(c, this.currentUrlTree, e, h, d ? ? null)
                    }
                    navigateByUrl(e, i = {
                        skipLocationChange: !1
                    }) {
                        const r = Xo(e) ? e : this.parseUrl(e),
                            s = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
                        return this.scheduleNavigation(s, "imperative", null, i)
                    }
                    navigate(e, i = {
                        skipLocationChange: !1
                    }) {
                        return function OU(t) {
                            for (let n = 0; n < t.length; n++) {
                                if (null == t[n]) throw new B(4008, false)
                            }
                        }(e), this.navigateByUrl(this.createUrlTree(e, i), i)
                    }
                    serializeUrl(e) {
                        return this.urlSerializer.serialize(e)
                    }
                    parseUrl(e) {
                        let i;
                        try {
                            i = this.urlSerializer.parse(e)
                        } catch (r) {
                            i = this.malformedUriErrorHandler(r, this.urlSerializer, e)
                        }
                        return i
                    }
                    isActive(e, i) {
                        let r;
                        if (r = !0 === i ? { ...IU
                            } : !1 === i ? { ...RU
                            } : i, Xo(e)) return mA(this.currentUrlTree, e, r);
                        const s = this.parseUrl(e);
                        return mA(this.currentUrlTree, s, r)
                    }
                    removeEmptyProps(e) {
                        return Object.keys(e).reduce((i, r) => {
                            const s = e[r];
                            return null != s && (i[r] = s), i
                        }, {})
                    }
                    processNavigations() {
                        this.navigations.subscribe(e => {
                            this.navigated = !0, this.lastSuccessfulId = e.id, this.currentPageId = e.targetPageId, this.events.next(new Jo(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(this.currentUrlTree))), this.lastSuccessfulNavigation = this.currentNavigation, this.titleStrategy ? .updateTitle(this.routerState.snapshot), e.resolve(!0)
                        }, e => {
                            this.console.warn(`Unhandled Navigation Error: ${e}`)
                        })
                    }
                    scheduleNavigation(e, i, r, s, o) {
                        if (this.disposed) return Promise.resolve(!1);
                        let a, l, c;
                        o ? (a = o.resolve, l = o.reject, c = o.promise) : c = new Promise((m, _) => {
                            a = m, l = _
                        });
                        const d = ++this.navigationId;
                        let h;
                        return "computed" === this.canceledNavigationResolution ? (0 === this.currentPageId && (r = this.location.getState()), h = r && r.\u0275routerPageId ? r.\u0275routerPageId : s.replaceUrl || s.skipLocationChange ? this.browserPageId ? ? 0 : (this.browserPageId ? ? 0) + 1) : h = 0, this.setTransition({
                            id: d,
                            targetPageId: h,
                            source: i,
                            restoredState: r,
                            currentUrlTree: this.currentUrlTree,
                            currentRawUrl: this.rawUrlTree,
                            rawUrl: e,
                            extras: s,
                            resolve: a,
                            reject: l,
                            promise: c,
                            currentSnapshot: this.routerState.snapshot,
                            currentRouterState: this.routerState
                        }), c.catch(m => Promise.reject(m))
                    }
                    setBrowserUrl(e, i) {
                        const r = this.urlSerializer.serialize(e),
                            s = { ...i.extras.state,
                                ...this.generateNgRouterState(i.id, i.targetPageId)
                            };
                        this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl ? this.location.replaceState(r, "", s) : this.location.go(r, "", s)
                    }
                    restoreHistory(e, i = !1) {
                        if ("computed" === this.canceledNavigationResolution) {
                            const r = this.currentPageId - e.targetPageId;
                            "popstate" !== e.source && "eager" !== this.urlUpdateStrategy && this.currentUrlTree !== this.currentNavigation ? .finalUrl || 0 === r ? this.currentUrlTree === this.currentNavigation ? .finalUrl && 0 === r && (this.resetState(e), this.browserUrlTree = e.currentUrlTree, this.resetUrlToCurrentUrlTree()) : this.location.historyGo(r)
                        } else "replace" === this.canceledNavigationResolution && (i && this.resetState(e), this.resetUrlToCurrentUrlTree())
                    }
                    resetState(e) {
                        this.routerState = e.currentRouterState, this.currentUrlTree = e.currentUrlTree, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, e.rawUrl)
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId))
                    }
                    cancelNavigationTransition(e, i, r) {
                        const s = new ff(e.id, this.serializeUrl(e.extractedUrl), i, r);
                        this.triggerEvent(s), e.resolve(!1)
                    }
                    generateNgRouterState(e, i) {
                        return "computed" === this.canceledNavigationResolution ? {
                            navigationId: e,
                            \u0275routerPageId: i
                        } : {
                            navigationId: e
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    dr()
                }, t.\u0275prov = I({
                    token: t,
                    factory: function() {
                        return oE()
                    },
                    providedIn: "root"
                }), t
            })();

            function aE(t) {
                return "imperative" !== t
            }
            let Ml = (() => {
                class t {
                    constructor(e, i, r, s, o) {
                        this.router = e, this.route = i, this.tabIndexAttribute = r, this.renderer = s, this.el = o, this._preserveFragment = !1, this._skipLocationChange = !1, this._replaceUrl = !1, this.commands = null, this.onChanges = new H, this.setTabIndexIfNotOnNativeEl("0")
                    }
                    set preserveFragment(e) {
                        this._preserveFragment = us(e)
                    }
                    get preserveFragment() {
                        return this._preserveFragment
                    }
                    set skipLocationChange(e) {
                        this._skipLocationChange = us(e)
                    }
                    get skipLocationChange() {
                        return this._skipLocationChange
                    }
                    set replaceUrl(e) {
                        this._replaceUrl = us(e)
                    }
                    get replaceUrl() {
                        return this._replaceUrl
                    }
                    setTabIndexIfNotOnNativeEl(e) {
                        if (null != this.tabIndexAttribute) return;
                        const i = this.renderer,
                            r = this.el.nativeElement;
                        null !== e ? i.setAttribute(r, "tabindex", e) : i.removeAttribute(r, "tabindex")
                    }
                    ngOnChanges(e) {
                        this.onChanges.next(this)
                    }
                    set routerLink(e) {
                        null != e ? (this.commands = Array.isArray(e) ? e : [e], this.setTabIndexIfNotOnNativeEl("0")) : (this.commands = null, this.setTabIndexIfNotOnNativeEl(null))
                    }
                    onClick() {
                        return null === this.urlTree || this.router.navigateByUrl(this.urlTree, {
                            skipLocationChange: this.skipLocationChange,
                            replaceUrl: this.replaceUrl,
                            state: this.state
                        }), !0
                    }
                    get urlTree() {
                        return null === this.commands ? null : this.router.createUrlTree(this.commands, {
                            relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                            queryParams: this.queryParams,
                            fragment: this.fragment,
                            queryParamsHandling: this.queryParamsHandling,
                            preserveFragment: this.preserveFragment
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(gt), u(Yi), Qt("tabindex"), u(qn), u(N))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "routerLink", "", 5, "a", 5, "area"]
                    ],
                    hostBindings: function(e, i) {
                        1 & e && T("click", function() {
                            return i.onClick()
                        })
                    },
                    inputs: {
                        queryParams: "queryParams",
                        fragment: "fragment",
                        queryParamsHandling: "queryParamsHandling",
                        state: "state",
                        relativeTo: "relativeTo",
                        preserveFragment: "preserveFragment",
                        skipLocationChange: "skipLocationChange",
                        replaceUrl: "replaceUrl",
                        routerLink: "routerLink"
                    },
                    standalone: !0,
                    features: [ze]
                }), t
            })();
            class lE {}
            let NU = (() => {
                class t {
                    constructor(e, i, r, s, o) {
                        this.router = e, this.injector = r, this.preloadingStrategy = s, this.loader = o
                    }
                    setUpPreloading() {
                        this.subscription = this.router.events.pipe(Ie(e => e instanceof Jo), Qs(() => this.preload())).subscribe(() => {})
                    }
                    preload() {
                        return this.processRoutes(this.injector, this.router.config)
                    }
                    ngOnDestroy() {
                        this.subscription && this.subscription.unsubscribe()
                    }
                    processRoutes(e, i) {
                        const r = [];
                        for (const s of i) {
                            s.providers && !s._injector && (s._injector = Rh(s.providers, e, `Route: ${s.path}`));
                            const o = s._injector ? ? e,
                                a = s._loadedInjector ? ? o;
                            s.loadChildren && !s._loadedRoutes && void 0 === s.canLoad || s.loadComponent && !s._loadedComponent ? r.push(this.preloadConfig(o, s)) : (s.children || s._loadedRoutes) && r.push(this.processRoutes(a, s.children ? ? s._loadedRoutes))
                        }
                        return Rt(r).pipe(Sa())
                    }
                    preloadConfig(e, i) {
                        return this.preloadingStrategy.preload(i, () => {
                            let r;
                            r = i.loadChildren && void 0 === i.canLoad ? this.loader.loadChildren(e, i) : z(null);
                            const s = r.pipe(_t(o => null === o ? z(void 0) : (i._loadedRoutes = o.routes, i._loadedInjector = o.injector, this.processRoutes(o.injector ? ? e, o.routes))));
                            return i.loadComponent && !i._loadedComponent ? Rt([s, this.loader.loadComponent(i)]).pipe(Sa()) : s
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(gt), C(ty), C(Hs), C(lE), C(hb))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const pb = new R("");
            let cE = (() => {
                class t {
                    constructor(e, i, r = {}) {
                        this.router = e, this.viewportScroller = i, this.options = r, this.lastId = 0, this.lastSource = "imperative", this.restoredId = 0, this.store = {}, r.scrollPositionRestoration = r.scrollPositionRestoration || "disabled", r.anchorScrolling = r.anchorScrolling || "disabled"
                    }
                    init() {
                        "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"), this.routerEventsSubscription = this.createScrollEvents(), this.scrollEventsSubscription = this.consumeScrollEvents()
                    }
                    createScrollEvents() {
                        return this.router.events.subscribe(e => {
                            e instanceof Zy ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = e.navigationTrigger, this.restoredId = e.restoredState ? e.restoredState.navigationId : 0) : e instanceof Jo && (this.lastId = e.id, this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment))
                        })
                    }
                    consumeScrollEvents() {
                        return this.router.events.subscribe(e => {
                            e instanceof TA && (e.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(e.position) : e.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(e.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0]))
                        })
                    }
                    scheduleScrollEvent(e, i) {
                        this.router.triggerEvent(new TA(e, "popstate" === this.lastSource ? this.store[this.restoredId] : null, i))
                    }
                    ngOnDestroy() {
                        this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(), this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe()
                    }
                }
                return t.\u0275fac = function(e) {
                    dr()
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();

            function Sl(t, n) {
                return {\
                    u0275kind: t,
                    \u0275providers: n
                }
            }

            function mb(t) {
                return [{
                    provide: ub,
                    multi: !0,
                    useValue: t
                }]
            }

            function uE() {
                const t = st(Ct);
                return n => {
                    const e = t.get(Lr);
                    if (n !== e.components[0]) return;
                    const i = t.get(gt),
                        r = t.get(hE);
                    1 === t.get(gb) && i.initialNavigation(), t.get(fE, null, xe.Optional) ? .setUpPreloading(), t.get(pb, null, xe.Optional) ? .init(), i.resetRootComponentType(e.componentTypes[0]), r.closed || (r.next(), r.unsubscribe())
                }
            }
            const hE = new R("", {
                    factory: () => new H
                }),
                gb = new R("", {
                    providedIn: "root",
                    factory: () => 1
                });
            const fE = new R("");

            function $U(t) {
                return Sl(0, [{
                    provide: fE,
                    useExisting: NU
                }, {
                    provide: lE,
                    useExisting: t
                }])
            }
            const pE = new R("ROUTER_FORROOT_GUARD"),
                jU = [od, {
                    provide: bA,
                    useClass: Gy
                }, {
                    provide: gt,
                    useFactory: oE
                }, wd, {
                    provide: Yi,
                    useFactory: function dE(t) {
                        return t.routerState.root
                    },
                    deps: [gt]
                }, hb];

            function zU() {
                return new GS("Router", gt)
            }
            let mE = (() => {
                class t {
                    constructor(e) {}
                    static forRoot(e, i) {
                        return {
                            ngModule: t,
                            providers: [jU, [], mb(e), {
                                    provide: pE,
                                    useFactory: qU,
                                    deps: [
                                        [gt, new ii, new $i]
                                    ]
                                }, {
                                    provide: Df,
                                    useValue: i || {}
                                }, i ? .useHash ? {
                                    provide: qo,
                                    useClass: p4
                                } : {
                                    provide: qo,
                                    useClass: gk
                                }, {
                                    provide: pb,
                                    useFactory: () => {
                                        const t = st(gt),
                                            n = st(Mj),
                                            e = st(Df);
                                        return e.scrollOffset && n.setOffset(e.scrollOffset), new cE(t, n, e)
                                    }
                                }, i ? .preloadingStrategy ? $U(i.preloadingStrategy).\u0275providers : [], {
                                    provide: GS,
                                    multi: !0,
                                    useFactory: zU
                                }, i ? .initialNavigation ? YU(i) : [],
                                [{
                                    provide: gE,
                                    useFactory: uE
                                }, {
                                    provide: ey,
                                    multi: !0,
                                    useExisting: gE
                                }]
                            ]
                        }
                    }
                    static forChild(e) {
                        return {
                            ngModule: t,
                            providers: [mb(e)]
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(pE, 8))
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [rb]
                }), t
            })();

            function qU(t) {
                return "guarded"
            }

            function YU(t) {
                return ["disabled" === t.initialNavigation ? Sl(3, [{
                    provide: sd,
                    multi: !0,
                    useFactory: () => {
                        const n = st(gt);
                        return () => {
                            n.setUpLocationChangeListener()
                        }
                    }
                }, {
                    provide: gb,
                    useValue: 2
                }]).\u0275providers : [], "enabledBlocking" === t.initialNavigation ? Sl(2, [{
                    provide: gb,
                    useValue: 0
                }, {
                    provide: sd,
                    multi: !0,
                    deps: [Ct],
                    useFactory: n => {
                        const e = n.get(h4, Promise.resolve());
                        let i = !1;
                        return () => e.then(() => new Promise(s => {
                            const o = n.get(gt),
                                a = n.get(hE);
                            (function r(s) {
                                n.get(gt).events.pipe(Ie(a => a instanceof Jo || a instanceof ff || a instanceof EA), Z(a => a instanceof Jo || a instanceof ff && (0 === a.code || 1 === a.code) && null), Ie(a => null !== a), Fe(1)).subscribe(() => {
                                    s()
                                })
                            })(() => {
                                s(!0), i = !0
                            }), o.afterPreactivation = () => (s(!0), i || a.closed ? z(void 0) : a), o.initialNavigation()
                        }))
                    }
                }]).\u0275providers : []]
            }
            const gE = new R("");
            let _b, KU = (() => {
                class t {
                    constructor() {}
                    ngOnInit() {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-arrestanten"]
                    ],
                    decls: 2,
                    vars: 0,
                    template: function(e, i) {
                        1 & e && (f(0, "p"), w(1, "arrestanten works!"), g())
                    }
                }), t
            })();
            try {
                _b = typeof Intl < "u" && Intl.v8BreakIterator
            } catch {
                _b = !1
            }
            let kl, Ft = (() => {
                class t {
                    constructor(e) {
                        this._platformId = e, this.isBrowser = this._platformId ? _n(this._platformId) : "object" == typeof document && !!document, this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent), this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent), this.BLINK = this.isBrowser && !(!window.chrome && !_b) && typeof CSS < "u" && !this.EDGE && !this.TRIDENT, this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT, this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !("MSStream" in window), this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent), this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT, this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(On))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const _E = ["color", "button", "checkbox", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"];

            function yE() {
                if (kl) return kl;
                if ("object" != typeof document || !document) return kl = new Set(_E), kl;
                let t = document.createElement("input");
                return kl = new Set(_E.filter(n => (t.setAttribute("type", n), t.type === n))), kl
            }
            let kd, ea, yb;

            function Zs(t) {
                return function ZU() {
                    if (null == kd && typeof window < "u") try {
                        window.addEventListener("test", null, Object.defineProperty({}, "passive", {
                            get: () => kd = !0
                        }))
                    } finally {
                        kd = kd || !1
                    }
                    return kd
                }() ? t : !!t.capture
            }

            function XU() {
                if (null == ea) {
                    if ("object" != typeof document || !document || "function" != typeof Element || !Element) return ea = !1, ea;
                    if ("scrollBehavior" in document.documentElement.style) ea = !0;
                    else {
                        const t = Element.prototype.scrollTo;
                        ea = !!t && !/\{\s*\[native code\]\s*\}/.test(t.toString())
                    }
                }
                return ea
            }

            function bE(t) {
                if (function JU() {
                        if (null == yb) {
                            const t = typeof document < "u" ? document.head : null;
                            yb = !(!t || !t.createShadowRoot && !t.attachShadow)
                        }
                        return yb
                    }()) {
                    const n = t.getRootNode ? t.getRootNode() : null;
                    if (typeof ShadowRoot < "u" && ShadowRoot && n instanceof ShadowRoot) return n
                }
                return null
            }

            function Al() {
                let t = typeof document < "u" && document ? document.activeElement : null;
                for (; t && t.shadowRoot;) {
                    const n = t.shadowRoot.activeElement;
                    if (n === t) break;
                    t = n
                }
                return t
            }

            function Xs(t) {
                return t.composedPath ? t.composedPath()[0] : t.target
            }

            function bb() {
                return typeof __karma__ < "u" && !!__karma__ || typeof jasmine < "u" && !!jasmine || typeof jest < "u" && !!jest || typeof Mocha < "u" && !!Mocha
            }

            function $t(t, ...n) {
                return n.length ? n.some(e => t[e]) : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey
            }
            class oG extends Re {
                constructor(n, e) {
                    super()
                }
                schedule(n, e = 0) {
                    return this
                }
            }
            const Tf = {
                setInterval(t, n, ...e) {
                    const {
                        delegate: i
                    } = Tf;
                    return i ? .setInterval ? i.setInterval(t, n, ...e) : setInterval(t, n, ...e)
                },
                clearInterval(t) {
                    const {
                        delegate: n
                    } = Tf;
                    return (n ? .clearInterval || clearInterval)(t)
                },
                delegate: void 0
            };
            class Cb extends oG {
                constructor(n, e) {
                    super(n, e), this.scheduler = n, this.work = e, this.pending = !1
                }
                schedule(n, e = 0) {
                    if (this.closed) return this;
                    this.state = n;
                    const i = this.id,
                        r = this.scheduler;
                    return null != i && (this.id = this.recycleAsyncId(r, i, e)), this.pending = !0, this.delay = e, this.id = this.id || this.requestAsyncId(r, this.id, e), this
                }
                requestAsyncId(n, e, i = 0) {
                    return Tf.setInterval(n.flush.bind(n, this), i)
                }
                recycleAsyncId(n, e, i = 0) {
                    if (null != i && this.delay === i && !1 === this.pending) return e;
                    Tf.clearInterval(e)
                }
                execute(n, e) {
                    if (this.closed) return new Error("executing a cancelled action");
                    this.pending = !1;
                    const i = this._execute(n, e);
                    if (i) return i;
                    !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
                }
                _execute(n, e) {
                    let r, i = !1;
                    try {
                        this.work(n)
                    } catch (s) {
                        i = !0, r = s || new Error("Scheduled action threw falsy error")
                    }
                    if (i) return this.unsubscribe(), r
                }
                unsubscribe() {
                    if (!this.closed) {
                        const {
                            id: n,
                            scheduler: e
                        } = this, {
                            actions: i
                        } = e;
                        this.work = this.state = this.scheduler = null, this.pending = !1, Ma(i, this), null != n && (this.id = this.recycleAsyncId(e, n, null)), this.delay = null, super.unsubscribe()
                    }
                }
            }
            const xb = {
                now: () => (xb.delegate || Date).now(),
                delegate: void 0
            };
            class Td {
                constructor(n, e = Td.now) {
                    this.schedulerActionCtor = n, this.now = e
                }
                schedule(n, e = 0, i) {
                    return new this.schedulerActionCtor(this, n).schedule(i, e)
                }
            }
            Td.now = xb.now;
            class Db extends Td {
                constructor(n, e = Td.now) {
                    super(n, e), this.actions = [], this._active = !1, this._scheduled = void 0
                }
                flush(n) {
                    const {
                        actions: e
                    } = this;
                    if (this._active) return void e.push(n);
                    let i;
                    this._active = !0;
                    do {
                        if (i = n.execute(n.state, n.delay)) break
                    } while (n = e.shift());
                    if (this._active = !1, i) {
                        for (; n = e.shift();) n.unsubscribe();
                        throw i
                    }
                }
            }
            const Il = new Db(Cb),
                aG = Il;

            function Rl(t, n = Il) {
                return Pt((e, i) => {
                    let r = null,
                        s = null,
                        o = null;
                    const a = () => {
                        if (r) {
                            r.unsubscribe(), r = null;
                            const c = s;
                            s = null, i.next(c)
                        }
                    };

                    function l() {
                        const c = o + t,
                            d = n.now();
                        if (d < c) return r = this.schedule(void 0, c - d), void i.add(r);
                        a()
                    }
                    e.subscribe(kt(i, c => {
                        s = c, o = n.now(), r || (r = n.schedule(l, t), i.add(r))
                    }, () => {
                        a(), i.complete()
                    }, void 0, () => {
                        s = r = null
                    }))
                })
            }

            function Mb(t) {
                return Ie((n, e) => t <= e)
            }

            function Js(t, n = Ps) {
                return t = t ? ? lG, Pt((e, i) => {
                    let r, s = !0;
                    e.subscribe(kt(i, o => {
                        const a = n(o);
                        (s || !t(r, a)) && (s = !1, r = a, i.next(o))
                    }))
                })
            }

            function lG(t, n) {
                return t === n
            }

            function le(t) {
                return Pt((n, e) => {
                    $n(t).subscribe(kt(e, () => e.complete(), gc)), !e.closed && n.subscribe(e)
                })
            }

            function G(t) {
                return null != t && "false" != `${t}`
            }

            function ht(t, n = 0) {
                return xE(t) ? Number(t) : n
            }

            function xE(t) {
                return !isNaN(parseFloat(t)) && !isNaN(Number(t))
            }

            function If(t) {
                return Array.isArray(t) ? t : [t]
            }

            function nn(t) {
                return null == t ? "" : "string" == typeof t ? t : `${t}px`
            }

            function bs(t) {
                return t instanceof N ? t.nativeElement : t
            }
            let DE = (() => {
                    class t {
                        create(e) {
                            return typeof MutationObserver > "u" ? null : new MutationObserver(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                dG = (() => {
                    class t {
                        constructor(e) {
                            this._mutationObserverFactory = e, this._observedElements = new Map
                        }
                        ngOnDestroy() {
                            this._observedElements.forEach((e, i) => this._cleanupObserver(i))
                        }
                        observe(e) {
                            const i = bs(e);
                            return new Ze(r => {
                                const o = this._observeElement(i).subscribe(r);
                                return () => {
                                    o.unsubscribe(), this._unobserveElement(i)
                                }
                            })
                        }
                        _observeElement(e) {
                            if (this._observedElements.has(e)) this._observedElements.get(e).count++;
                            else {
                                const i = new H,
                                    r = this._mutationObserverFactory.create(s => i.next(s));
                                r && r.observe(e, {
                                    characterData: !0,
                                    childList: !0,
                                    subtree: !0
                                }), this._observedElements.set(e, {
                                    observer: r,
                                    stream: i,
                                    count: 1
                                })
                            }
                            return this._observedElements.get(e).stream
                        }
                        _unobserveElement(e) {
                            this._observedElements.has(e) && (this._observedElements.get(e).count--, this._observedElements.get(e).count || this._cleanupObserver(e))
                        }
                        _cleanupObserver(e) {
                            if (this._observedElements.has(e)) {
                                const {
                                    observer: i,
                                    stream: r
                                } = this._observedElements.get(e);
                                i && i.disconnect(), r.complete(), this._observedElements.delete(e)
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(DE))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Rf = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._contentObserver = e, this._elementRef = i, this._ngZone = r, this.event = new V, this._disabled = !1, this._currentSubscription = null
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e), this._disabled ? this._unsubscribe() : this._subscribe()
                        }
                        get debounce() {
                            return this._debounce
                        }
                        set debounce(e) {
                            this._debounce = ht(e), this._subscribe()
                        }
                        ngAfterContentInit() {
                            !this._currentSubscription && !this.disabled && this._subscribe()
                        }
                        ngOnDestroy() {
                            this._unsubscribe()
                        }
                        _subscribe() {
                            this._unsubscribe();
                            const e = this._contentObserver.observe(this._elementRef);
                            this._ngZone.runOutsideAngular(() => {
                                this._currentSubscription = (this.debounce ? e.pipe(Rl(this.debounce)) : e).subscribe(this.event)
                            })
                        }
                        _unsubscribe() {
                            this._currentSubscription ? .unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(dG), u(N), u(ce))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkObserveContent", ""]
                        ],
                        inputs: {
                            disabled: ["cdkObserveContentDisabled", "disabled"],
                            debounce: "debounce"
                        },
                        outputs: {
                            event: "cdkObserveContent"
                        },
                        exportAs: ["cdkObserveContent"]
                    }), t
                })(),
                Id = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [DE]
                    }), t
                })();
            const ME = new Set;
            let Fl, uG = (() => {
                class t {
                    constructor(e) {
                        this._platform = e, this._matchMedia = this._platform.isBrowser && window.matchMedia ? window.matchMedia.bind(window) : fG
                    }
                    matchMedia(e) {
                        return (this._platform.WEBKIT || this._platform.BLINK) && function hG(t) {
                            if (!ME.has(t)) try {
                                Fl || (Fl = document.createElement("style"), Fl.setAttribute("type", "text/css"), document.head.appendChild(Fl)), Fl.sheet && (Fl.sheet.insertRule(`@media ${t} {body{ }}`, 0), ME.add(t))
                            } catch (n) {
                                console.error(n)
                            }
                        }(e), this._matchMedia(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ft))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function fG(t) {
                return {
                    matches: "all" === t || "" === t,
                    media: t,
                    addListener: () => {},
                    removeListener: () => {}
                }
            }
            let Ff = (() => {
                class t {
                    constructor(e, i) {
                        this._mediaMatcher = e, this._zone = i, this._queries = new Map, this._destroySubject = new H
                    }
                    ngOnDestroy() {
                        this._destroySubject.next(), this._destroySubject.complete()
                    }
                    isMatched(e) {
                        return SE(If(e)).some(r => this._registerQuery(r).mql.matches)
                    }
                    observe(e) {
                        let s = Qo(SE(If(e)).map(o => this._registerQuery(o).observable));
                        return s = gl(s.pipe(Fe(1)), s.pipe(Mb(1), Rl(0))), s.pipe(Z(o => {
                            const a = {
                                matches: !1,
                                breakpoints: {}
                            };
                            return o.forEach(({
                                matches: l,
                                query: c
                            }) => {
                                a.matches = a.matches || l, a.breakpoints[c] = l
                            }), a
                        }))
                    }
                    _registerQuery(e) {
                        if (this._queries.has(e)) return this._queries.get(e);
                        const i = this._mediaMatcher.matchMedia(e),
                            s = {
                                observable: new Ze(o => {
                                    const a = l => this._zone.run(() => o.next(l));
                                    return i.addListener(a), () => {
                                        i.removeListener(a)
                                    }
                                }).pipe(pt(i), Z(({
                                    matches: o
                                }) => ({
                                    query: e,
                                    matches: o
                                })), le(this._destroySubject)),
                                mql: i
                            };
                        return this._queries.set(e, s), s
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(uG), C(ce))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function SE(t) {
                return t.map(n => n.split(",")).reduce((n, e) => n.concat(e)).map(n => n.trim())
            }

            function Of(t, n) {
                return (t.getAttribute(n) || "").match(/\S+/g) || []
            }
            const EE = "cdk-describedby-message",
                Pf = "cdk-describedby-host";
            let Sb = 0,
                TE = (() => {
                    class t {
                        constructor(e, i) {
                            this._platform = i, this._messageRegistry = new Map, this._messagesContainer = null, this._id = "" + Sb++, this._document = e, this._id = st(pl) + "-" + Sb++
                        }
                        describe(e, i, r) {
                            if (!this._canBeDescribed(e, i)) return;
                            const s = kb(i, r);
                            "string" != typeof i ? (IE(i, this._id), this._messageRegistry.set(s, {
                                messageElement: i,
                                referenceCount: 0
                            })) : this._messageRegistry.has(s) || this._createMessageElement(i, r), this._isElementDescribedByMessage(e, s) || this._addMessageReference(e, s)
                        }
                        removeDescription(e, i, r) {
                            if (!i || !this._isElementNode(e)) return;
                            const s = kb(i, r);
                            if (this._isElementDescribedByMessage(e, s) && this._removeMessageReference(e, s), "string" == typeof i) {
                                const o = this._messageRegistry.get(s);
                                o && 0 === o.referenceCount && this._deleteMessageElement(s)
                            }
                            0 === this._messagesContainer ? .childNodes.length && (this._messagesContainer.remove(), this._messagesContainer = null)
                        }
                        ngOnDestroy() {
                            const e = this._document.querySelectorAll(`[${Pf}="${this._id}"]`);
                            for (let i = 0; i < e.length; i++) this._removeCdkDescribedByReferenceIds(e[i]), e[i].removeAttribute(Pf);
                            this._messagesContainer ? .remove(), this._messagesContainer = null, this._messageRegistry.clear()
                        }
                        _createMessageElement(e, i) {
                            const r = this._document.createElement("div");
                            IE(r, this._id), r.textContent = e, i && r.setAttribute("role", i), this._createMessagesContainer(), this._messagesContainer.appendChild(r), this._messageRegistry.set(kb(e, i), {
                                messageElement: r,
                                referenceCount: 0
                            })
                        }
                        _deleteMessageElement(e) {
                            this._messageRegistry.get(e) ? .messageElement ? .remove(), this._messageRegistry.delete(e)
                        }
                        _createMessagesContainer() {
                            if (this._messagesContainer) return;
                            const e = "cdk-describedby-message-container",
                                i = this._document.querySelectorAll(`.${e}[platform="server"]`);
                            for (let s = 0; s < i.length; s++) i[s].remove();
                            const r = this._document.createElement("div");
                            r.style.visibility = "hidden", r.classList.add(e), r.classList.add("cdk-visually-hidden"), this._platform && !this._platform.isBrowser && r.setAttribute("platform", "server"), this._document.body.appendChild(r), this._messagesContainer = r
                        }
                        _removeCdkDescribedByReferenceIds(e) {
                            const i = Of(e, "aria-describedby").filter(r => 0 != r.indexOf(EE));
                            e.setAttribute("aria-describedby", i.join(" "))
                        }
                        _addMessageReference(e, i) {
                            const r = this._messageRegistry.get(i);
                            (function pG(t, n, e) {
                                const i = Of(t, n);
                                i.some(r => r.trim() == e.trim()) || (i.push(e.trim()), t.setAttribute(n, i.join(" ")))
                            })(e, "aria-describedby", r.messageElement.id), e.setAttribute(Pf, this._id), r.referenceCount++
                        }
                        _removeMessageReference(e, i) {
                            const r = this._messageRegistry.get(i);
                            r.referenceCount--,
                                function mG(t, n, e) {
                                    const r = Of(t, n).filter(s => s != e.trim());
                                    r.length ? t.setAttribute(n, r.join(" ")) : t.removeAttribute(n)
                                }(e, "aria-describedby", r.messageElement.id), e.removeAttribute(Pf)
                        }
                        _isElementDescribedByMessage(e, i) {
                            const r = Of(e, "aria-describedby"),
                                s = this._messageRegistry.get(i),
                                o = s && s.messageElement.id;
                            return !!o && -1 != r.indexOf(o)
                        }
                        _canBeDescribed(e, i) {
                            if (!this._isElementNode(e)) return !1;
                            if (i && "object" == typeof i) return !0;
                            const r = null == i ? "" : `${i}`.trim(),
                                s = e.getAttribute("aria-label");
                            return !(!r || s && s.trim() === r)
                        }
                        _isElementNode(e) {
                            return e.nodeType === this._document.ELEMENT_NODE
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe), C(Ft))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();

            function kb(t, n) {
                return "string" == typeof t ? `${n||""}/${t}` : t
            }

            function IE(t, n) {
                t.id || (t.id = `${EE}-${n}-${Sb++}`)
            }
            class RE {
                constructor(n) {
                    this._items = n, this._activeItemIndex = -1, this._activeItem = null, this._wrap = !1, this._letterKeyStream = new H, this._typeaheadSubscription = Re.EMPTY, this._vertical = !0, this._allowedModifierKeys = [], this._homeAndEnd = !1, this._skipPredicateFn = e => e.disabled, this._pressedLetters = [], this.tabOut = new H, this.change = new H, n instanceof Pr && n.changes.subscribe(e => {
                        if (this._activeItem) {
                            const r = e.toArray().indexOf(this._activeItem);
                            r > -1 && r !== this._activeItemIndex && (this._activeItemIndex = r)
                        }
                    })
                }
                skipPredicate(n) {
                    return this._skipPredicateFn = n, this
                }
                withWrap(n = !0) {
                    return this._wrap = n, this
                }
                withVerticalOrientation(n = !0) {
                    return this._vertical = n, this
                }
                withHorizontalOrientation(n) {
                    return this._horizontal = n, this
                }
                withAllowedModifierKeys(n) {
                    return this._allowedModifierKeys = n, this
                }
                withTypeAhead(n = 200) {
                    return this._typeaheadSubscription.unsubscribe(), this._typeaheadSubscription = this._letterKeyStream.pipe(mt(e => this._pressedLetters.push(e)), Rl(n), Ie(() => this._pressedLetters.length > 0), Z(() => this._pressedLetters.join(""))).subscribe(e => {
                        const i = this._getItemsArray();
                        for (let r = 1; r < i.length + 1; r++) {
                            const s = (this._activeItemIndex + r) % i.length,
                                o = i[s];
                            if (!this._skipPredicateFn(o) && 0 === o.getLabel().toUpperCase().trim().indexOf(e)) {
                                this.setActiveItem(s);
                                break
                            }
                        }
                        this._pressedLetters = []
                    }), this
                }
                withHomeAndEnd(n = !0) {
                    return this._homeAndEnd = n, this
                }
                setActiveItem(n) {
                    const e = this._activeItem;
                    this.updateActiveItem(n), this._activeItem !== e && this.change.next(this._activeItemIndex)
                }
                onKeydown(n) {
                    const e = n.keyCode,
                        r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(s => !n[s] || this._allowedModifierKeys.indexOf(s) > -1);
                    switch (e) {
                        case 9:
                            return void this.tabOut.next();
                        case 40:
                            if (this._vertical && r) {
                                this.setNextItemActive();
                                break
                            }
                            return;
                        case 38:
                            if (this._vertical && r) {
                                this.setPreviousItemActive();
                                break
                            }
                            return;
                        case 39:
                            if (this._horizontal && r) {
                                "rtl" === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                                break
                            }
                            return;
                        case 37:
                            if (this._horizontal && r) {
                                "rtl" === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                                break
                            }
                            return;
                        case 36:
                            if (this._homeAndEnd && r) {
                                this.setFirstItemActive();
                                break
                            }
                            return;
                        case 35:
                            if (this._homeAndEnd && r) {
                                this.setLastItemActive();
                                break
                            }
                            return;
                        default:
                            return void((r || $t(n, "shiftKey")) && (n.key && 1 === n.key.length ? this._letterKeyStream.next(n.key.toLocaleUpperCase()) : (e >= 65 && e <= 90 || e >= 48 && e <= 57) && this._letterKeyStream.next(String.fromCharCode(e))))
                    }
                    this._pressedLetters = [], n.preventDefault()
                }
                get activeItemIndex() {
                    return this._activeItemIndex
                }
                get activeItem() {
                    return this._activeItem
                }
                isTyping() {
                    return this._pressedLetters.length > 0
                }
                setFirstItemActive() {
                    this._setActiveItemByIndex(0, 1)
                }
                setLastItemActive() {
                    this._setActiveItemByIndex(this._items.length - 1, -1)
                }
                setNextItemActive() {
                    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1)
                }
                setPreviousItemActive() {
                    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1)
                }
                updateActiveItem(n) {
                    const e = this._getItemsArray(),
                        i = "number" == typeof n ? n : e.indexOf(n);
                    this._activeItem = e[i] ? ? null, this._activeItemIndex = i
                }
                _setActiveItemByDelta(n) {
                    this._wrap ? this._setActiveInWrapMode(n) : this._setActiveInDefaultMode(n)
                }
                _setActiveInWrapMode(n) {
                    const e = this._getItemsArray();
                    for (let i = 1; i <= e.length; i++) {
                        const r = (this._activeItemIndex + n * i + e.length) % e.length;
                        if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r)
                    }
                }
                _setActiveInDefaultMode(n) {
                    this._setActiveItemByIndex(this._activeItemIndex + n, n)
                }
                _setActiveItemByIndex(n, e) {
                    const i = this._getItemsArray();
                    if (i[n]) {
                        for (; this._skipPredicateFn(i[n]);)
                            if (!i[n += e]) return;
                        this.setActiveItem(n)
                    }
                }
                _getItemsArray() {
                    return this._items instanceof Pr ? this._items.toArray() : this._items
                }
            }
            class gG extends RE {
                setActiveItem(n) {
                    this.activeItem && this.activeItem.setInactiveStyles(), super.setActiveItem(n), this.activeItem && this.activeItem.setActiveStyles()
                }
            }
            class Rd extends RE {
                constructor() {
                    super(...arguments), this._origin = "program"
                }
                setFocusOrigin(n) {
                    return this._origin = n, this
                }
                setActiveItem(n) {
                    super.setActiveItem(n), this.activeItem && this.activeItem.focus(this._origin)
                }
            }
            let Lf = (() => {
                class t {
                    constructor(e) {
                        this._platform = e
                    }
                    isDisabled(e) {
                        return e.hasAttribute("disabled")
                    }
                    isVisible(e) {
                        return function yG(t) {
                            return !!(t.offsetWidth || t.offsetHeight || "function" == typeof t.getClientRects && t.getClientRects().length)
                        }(e) && "visible" === getComputedStyle(e).visibility
                    }
                    isTabbable(e) {
                        if (!this._platform.isBrowser) return !1;
                        const i = function _G(t) {
                            try {
                                return t.frameElement
                            } catch {
                                return null
                            }
                        }(function SG(t) {
                            return t.ownerDocument && t.ownerDocument.defaultView || window
                        }(e));
                        if (i && (-1 === OE(i) || !this.isVisible(i))) return !1;
                        let r = e.nodeName.toLowerCase(),
                            s = OE(e);
                        return e.hasAttribute("contenteditable") ? -1 !== s : !("iframe" === r || "object" === r || this._platform.WEBKIT && this._platform.IOS && ! function DG(t) {
                            let n = t.nodeName.toLowerCase(),
                                e = "input" === n && t.type;
                            return "text" === e || "password" === e || "select" === n || "textarea" === n
                        }(e)) && ("audio" === r ? !!e.hasAttribute("controls") && -1 !== s : "video" === r ? -1 !== s && (null !== s || this._platform.FIREFOX || e.hasAttribute("controls")) : e.tabIndex >= 0)
                    }
                    isFocusable(e, i) {
                        return function MG(t) {
                            return ! function vG(t) {
                                return function CG(t) {
                                    return "input" == t.nodeName.toLowerCase()
                                }(t) && "hidden" == t.type
                            }(t) && (function bG(t) {
                                let n = t.nodeName.toLowerCase();
                                return "input" === n || "select" === n || "button" === n || "textarea" === n
                            }(t) || function wG(t) {
                                return function xG(t) {
                                    return "a" == t.nodeName.toLowerCase()
                                }(t) && t.hasAttribute("href")
                            }(t) || t.hasAttribute("contenteditable") || FE(t))
                        }(e) && !this.isDisabled(e) && (i ? .ignoreVisibility || this.isVisible(e))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ft))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function FE(t) {
                if (!t.hasAttribute("tabindex") || void 0 === t.tabIndex) return !1;
                let n = t.getAttribute("tabindex");
                return !(!n || isNaN(parseInt(n, 10)))
            }

            function OE(t) {
                if (!FE(t)) return null;
                const n = parseInt(t.getAttribute("tabindex") || "", 10);
                return isNaN(n) ? -1 : n
            }
            class kG {
                constructor(n, e, i, r, s = !1) {
                    this._element = n, this._checker = e, this._ngZone = i, this._document = r, this._hasAttached = !1, this.startAnchorListener = () => this.focusLastTabbableElement(), this.endAnchorListener = () => this.focusFirstTabbableElement(), this._enabled = !0, s || this.attachAnchors()
                }
                get enabled() {
                    return this._enabled
                }
                set enabled(n) {
                    this._enabled = n, this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(n, this._startAnchor), this._toggleAnchorTabIndex(n, this._endAnchor))
                }
                destroy() {
                    const n = this._startAnchor,
                        e = this._endAnchor;
                    n && (n.removeEventListener("focus", this.startAnchorListener), n.remove()), e && (e.removeEventListener("focus", this.endAnchorListener), e.remove()), this._startAnchor = this._endAnchor = null, this._hasAttached = !1
                }
                attachAnchors() {
                    return !!this._hasAttached || (this._ngZone.runOutsideAngular(() => {
                        this._startAnchor || (this._startAnchor = this._createAnchor(), this._startAnchor.addEventListener("focus", this.startAnchorListener)), this._endAnchor || (this._endAnchor = this._createAnchor(), this._endAnchor.addEventListener("focus", this.endAnchorListener))
                    }), this._element.parentNode && (this._element.parentNode.insertBefore(this._startAnchor, this._element), this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling), this._hasAttached = !0), this._hasAttached)
                }
                focusInitialElementWhenReady(n) {
                    return new Promise(e => {
                        this._executeOnStable(() => e(this.focusInitialElement(n)))
                    })
                }
                focusFirstTabbableElementWhenReady(n) {
                    return new Promise(e => {
                        this._executeOnStable(() => e(this.focusFirstTabbableElement(n)))
                    })
                }
                focusLastTabbableElementWhenReady(n) {
                    return new Promise(e => {
                        this._executeOnStable(() => e(this.focusLastTabbableElement(n)))
                    })
                }
                _getRegionBoundary(n) {
                    const e = this._element.querySelectorAll(`[cdk-focus-region-${n}], [cdkFocusRegion${n}], [cdk-focus-${n}]`);
                    return "start" == n ? e.length ? e[0] : this._getFirstTabbableElement(this._element) : e.length ? e[e.length - 1] : this._getLastTabbableElement(this._element)
                }
                focusInitialElement(n) {
                    const e = this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");
                    if (e) {
                        if (!this._checker.isFocusable(e)) {
                            const i = this._getFirstTabbableElement(e);
                            return i ? .focus(n), !!i
                        }
                        return e.focus(n), !0
                    }
                    return this.focusFirstTabbableElement(n)
                }
                focusFirstTabbableElement(n) {
                    const e = this._getRegionBoundary("start");
                    return e && e.focus(n), !!e
                }
                focusLastTabbableElement(n) {
                    const e = this._getRegionBoundary("end");
                    return e && e.focus(n), !!e
                }
                hasAttached() {
                    return this._hasAttached
                }
                _getFirstTabbableElement(n) {
                    if (this._checker.isFocusable(n) && this._checker.isTabbable(n)) return n;
                    const e = n.children;
                    for (let i = 0; i < e.length; i++) {
                        const r = e[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[i]) : null;
                        if (r) return r
                    }
                    return null
                }
                _getLastTabbableElement(n) {
                    if (this._checker.isFocusable(n) && this._checker.isTabbable(n)) return n;
                    const e = n.children;
                    for (let i = e.length - 1; i >= 0; i--) {
                        const r = e[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[i]) : null;
                        if (r) return r
                    }
                    return null
                }
                _createAnchor() {
                    const n = this._document.createElement("div");
                    return this._toggleAnchorTabIndex(this._enabled, n), n.classList.add("cdk-visually-hidden"), n.classList.add("cdk-focus-trap-anchor"), n.setAttribute("aria-hidden", "true"), n
                }
                _toggleAnchorTabIndex(n, e) {
                    n ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex")
                }
                toggleAnchors(n) {
                    this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(n, this._startAnchor), this._toggleAnchorTabIndex(n, this._endAnchor))
                }
                _executeOnStable(n) {
                    this._ngZone.isStable ? n() : this._ngZone.onStable.pipe(Fe(1)).subscribe(n)
                }
            }
            let Nf = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._checker = e, this._ngZone = i, this._document = r
                        }
                        create(e, i = !1) {
                            return new kG(e, this._checker, this._ngZone, this._document, i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Lf), C(ce), C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                AG = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._elementRef = e, this._focusTrapFactory = i, this._previouslyFocusedElement = null, this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, !0)
                        }
                        get enabled() {
                            return this.focusTrap.enabled
                        }
                        set enabled(e) {
                            this.focusTrap.enabled = G(e)
                        }
                        get autoCapture() {
                            return this._autoCapture
                        }
                        set autoCapture(e) {
                            this._autoCapture = G(e)
                        }
                        ngOnDestroy() {
                            this.focusTrap.destroy(), this._previouslyFocusedElement && (this._previouslyFocusedElement.focus(), this._previouslyFocusedElement = null)
                        }
                        ngAfterContentInit() {
                            this.focusTrap.attachAnchors(), this.autoCapture && this._captureFocus()
                        }
                        ngDoCheck() {
                            this.focusTrap.hasAttached() || this.focusTrap.attachAnchors()
                        }
                        ngOnChanges(e) {
                            const i = e.autoCapture;
                            i && !i.firstChange && this.autoCapture && this.focusTrap.hasAttached() && this._captureFocus()
                        }
                        _captureFocus() {
                            this._previouslyFocusedElement = Al(), this.focusTrap.focusInitialElementWhenReady()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Nf), u(pe))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkTrapFocus", ""]
                        ],
                        inputs: {
                            enabled: ["cdkTrapFocus", "enabled"],
                            autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"]
                        },
                        exportAs: ["cdkTrapFocus"],
                        features: [ze]
                    }), t
                })();

            function Ab(t) {
                return 0 === t.buttons || 0 === t.offsetX && 0 === t.offsetY
            }

            function Eb(t) {
                const n = t.touches && t.touches[0] || t.changedTouches && t.changedTouches[0];
                return !(!n || -1 !== n.identifier || null != n.radiusX && 1 !== n.radiusX || null != n.radiusY && 1 !== n.radiusY)
            }
            const EG = new R("cdk-input-modality-detector-options"),
                TG = {
                    ignoreKeys: [18, 17, 224, 91, 16]
                },
                Ol = Zs({
                    passive: !0,
                    capture: !0
                });
            let IG = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._platform = e, this._mostRecentTarget = null, this._modality = new Te(null), this._lastTouchMs = 0, this._onKeydown = o => {
                            this._options ? .ignoreKeys ? .some(a => a === o.keyCode) || (this._modality.next("keyboard"), this._mostRecentTarget = Xs(o))
                        }, this._onMousedown = o => {
                            Date.now() - this._lastTouchMs < 650 || (this._modality.next(Ab(o) ? "keyboard" : "mouse"), this._mostRecentTarget = Xs(o))
                        }, this._onTouchstart = o => {
                            Eb(o) ? this._modality.next("keyboard") : (this._lastTouchMs = Date.now(), this._modality.next("touch"), this._mostRecentTarget = Xs(o))
                        }, this._options = { ...TG,
                            ...s
                        }, this.modalityDetected = this._modality.pipe(Mb(1)), this.modalityChanged = this.modalityDetected.pipe(Js()), e.isBrowser && i.runOutsideAngular(() => {
                            r.addEventListener("keydown", this._onKeydown, Ol), r.addEventListener("mousedown", this._onMousedown, Ol), r.addEventListener("touchstart", this._onTouchstart, Ol)
                        })
                    }
                    get mostRecentModality() {
                        return this._modality.value
                    }
                    ngOnDestroy() {
                        this._modality.complete(), this._platform.isBrowser && (document.removeEventListener("keydown", this._onKeydown, Ol), document.removeEventListener("mousedown", this._onMousedown, Ol), document.removeEventListener("touchstart", this._onTouchstart, Ol))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ft), C(ce), C(pe), C(EG, 8))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const RG = new R("liveAnnouncerElement", {
                    providedIn: "root",
                    factory: function FG() {
                        return null
                    }
                }),
                OG = new R("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
            let Bf = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._ngZone = i, this._defaultOptions = s, this._document = r, this._liveElement = e || this._createLiveElement()
                    }
                    announce(e, ...i) {
                        const r = this._defaultOptions;
                        let s, o;
                        return 1 === i.length && "number" == typeof i[0] ? o = i[0] : [s, o] = i, this.clear(), clearTimeout(this._previousTimeout), s || (s = r && r.politeness ? r.politeness : "polite"), null == o && r && (o = r.duration), this._liveElement.setAttribute("aria-live", s), this._ngZone.runOutsideAngular(() => (this._currentPromise || (this._currentPromise = new Promise(a => this._currentResolve = a)), clearTimeout(this._previousTimeout), this._previousTimeout = setTimeout(() => {
                            this._liveElement.textContent = e, "number" == typeof o && (this._previousTimeout = setTimeout(() => this.clear(), o)), this._currentResolve(), this._currentPromise = this._currentResolve = void 0
                        }, 100), this._currentPromise))
                    }
                    clear() {
                        this._liveElement && (this._liveElement.textContent = "")
                    }
                    ngOnDestroy() {
                        clearTimeout(this._previousTimeout), this._liveElement ? .remove(), this._liveElement = null, this._currentResolve ? .(), this._currentPromise = this._currentResolve = void 0
                    }
                    _createLiveElement() {
                        const e = "cdk-live-announcer-element",
                            i = this._document.getElementsByClassName(e),
                            r = this._document.createElement("div");
                        for (let s = 0; s < i.length; s++) i[s].remove();
                        return r.classList.add(e), r.classList.add("cdk-visually-hidden"), r.setAttribute("aria-atomic", "true"), r.setAttribute("aria-live", "polite"), this._document.body.appendChild(r), r
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(RG, 8), C(ce), C(pe), C(OG, 8))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const PG = new R("cdk-focus-monitor-default-options"),
                Vf = Zs({
                    passive: !0,
                    capture: !0
                });
            let dn = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._ngZone = e, this._platform = i, this._inputModalityDetector = r, this._origin = null, this._windowFocused = !1, this._originFromTouchInteraction = !1, this._elementInfo = new Map, this._monitoredElementCount = 0, this._rootNodeFocusListenerCount = new Map, this._windowFocusListener = () => {
                                this._windowFocused = !0, this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = !1)
                            }, this._stopInputModalityDetector = new H, this._rootNodeFocusAndBlurListener = a => {
                                for (let c = Xs(a); c; c = c.parentElement) "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c)
                            }, this._document = s, this._detectionMode = o ? .detectionMode || 0
                        }
                        monitor(e, i = !1) {
                            const r = bs(e);
                            if (!this._platform.isBrowser || 1 !== r.nodeType) return z(null);
                            const s = bE(r) || this._getDocument(),
                                o = this._elementInfo.get(r);
                            if (o) return i && (o.checkChildren = !0), o.subject;
                            const a = {
                                checkChildren: i,
                                subject: new H,
                                rootNode: s
                            };
                            return this._elementInfo.set(r, a), this._registerGlobalListeners(a), a.subject
                        }
                        stopMonitoring(e) {
                            const i = bs(e),
                                r = this._elementInfo.get(i);
                            r && (r.subject.complete(), this._setClasses(i), this._elementInfo.delete(i), this._removeGlobalListeners(r))
                        }
                        focusVia(e, i, r) {
                            const s = bs(e);
                            s === this._getDocument().activeElement ? this._getClosestElementsInfo(s).forEach(([a, l]) => this._originChanged(a, i, l)) : (this._setOrigin(i), "function" == typeof s.focus && s.focus(r))
                        }
                        ngOnDestroy() {
                            this._elementInfo.forEach((e, i) => this.stopMonitoring(i))
                        }
                        _getDocument() {
                            return this._document || document
                        }
                        _getWindow() {
                            return this._getDocument().defaultView || window
                        }
                        _getFocusOrigin(e) {
                            return this._origin ? this._originFromTouchInteraction ? this._shouldBeAttributedToTouch(e) ? "touch" : "program" : this._origin : this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : e && this._isLastInteractionFromInputLabel(e) ? "mouse" : "program"
                        }
                        _shouldBeAttributedToTouch(e) {
                            return 1 === this._detectionMode || !!e ? .contains(this._inputModalityDetector._mostRecentTarget)
                        }
                        _setClasses(e, i) {
                            e.classList.toggle("cdk-focused", !!i), e.classList.toggle("cdk-touch-focused", "touch" === i), e.classList.toggle("cdk-keyboard-focused", "keyboard" === i), e.classList.toggle("cdk-mouse-focused", "mouse" === i), e.classList.toggle("cdk-program-focused", "program" === i)
                        }
                        _setOrigin(e, i = !1) {
                            this._ngZone.runOutsideAngular(() => {
                                this._origin = e, this._originFromTouchInteraction = "touch" === e && i, 0 === this._detectionMode && (clearTimeout(this._originTimeoutId), this._originTimeoutId = setTimeout(() => this._origin = null, this._originFromTouchInteraction ? 650 : 1))
                            })
                        }
                        _onFocus(e, i) {
                            const r = this._elementInfo.get(i),
                                s = Xs(e);
                            !r || !r.checkChildren && i !== s || this._originChanged(i, this._getFocusOrigin(s), r)
                        }
                        _onBlur(e, i) {
                            const r = this._elementInfo.get(i);
                            !r || r.checkChildren && e.relatedTarget instanceof Node && i.contains(e.relatedTarget) || (this._setClasses(i), this._emitOrigin(r, null))
                        }
                        _emitOrigin(e, i) {
                            e.subject.observers.length && this._ngZone.run(() => e.subject.next(i))
                        }
                        _registerGlobalListeners(e) {
                            if (!this._platform.isBrowser) return;
                            const i = e.rootNode,
                                r = this._rootNodeFocusListenerCount.get(i) || 0;
                            r || this._ngZone.runOutsideAngular(() => {
                                i.addEventListener("focus", this._rootNodeFocusAndBlurListener, Vf), i.addEventListener("blur", this._rootNodeFocusAndBlurListener, Vf)
                            }), this._rootNodeFocusListenerCount.set(i, r + 1), 1 == ++this._monitoredElementCount && (this._ngZone.runOutsideAngular(() => {
                                this._getWindow().addEventListener("focus", this._windowFocusListener)
                            }), this._inputModalityDetector.modalityDetected.pipe(le(this._stopInputModalityDetector)).subscribe(s => {
                                this._setOrigin(s, !0)
                            }))
                        }
                        _removeGlobalListeners(e) {
                            const i = e.rootNode;
                            if (this._rootNodeFocusListenerCount.has(i)) {
                                const r = this._rootNodeFocusListenerCount.get(i);
                                r > 1 ? this._rootNodeFocusListenerCount.set(i, r - 1) : (i.removeEventListener("focus", this._rootNodeFocusAndBlurListener, Vf), i.removeEventListener("blur", this._rootNodeFocusAndBlurListener, Vf), this._rootNodeFocusListenerCount.delete(i))
                            }--this._monitoredElementCount || (this._getWindow().removeEventListener("focus", this._windowFocusListener), this._stopInputModalityDetector.next(), clearTimeout(this._windowFocusTimeoutId), clearTimeout(this._originTimeoutId))
                        }
                        _originChanged(e, i, r) {
                            this._setClasses(e, i), this._emitOrigin(r, i), this._lastFocusOrigin = i
                        }
                        _getClosestElementsInfo(e) {
                            const i = [];
                            return this._elementInfo.forEach((r, s) => {
                                (s === e || r.checkChildren && s.contains(e)) && i.push([s, r])
                            }), i
                        }
                        _isLastInteractionFromInputLabel(e) {
                            const {
                                _mostRecentTarget: i,
                                mostRecentModality: r
                            } = this._inputModalityDetector;
                            if ("mouse" !== r || !i || i === e || "INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName || e.disabled) return !1;
                            const s = e.labels;
                            if (s)
                                for (let o = 0; o < s.length; o++)
                                    if (s[o].contains(i)) return !0;
                            return !1
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(ce), C(Ft), C(IG), C(pe, 8), C(PG, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                LE = (() => {
                    class t {
                        constructor(e, i) {
                            this._elementRef = e, this._focusMonitor = i, this._focusOrigin = null, this.cdkFocusChange = new V
                        }
                        get focusOrigin() {
                            return this._focusOrigin
                        }
                        ngAfterViewInit() {
                            const e = this._elementRef.nativeElement;
                            this._monitorSubscription = this._focusMonitor.monitor(e, 1 === e.nodeType && e.hasAttribute("cdkMonitorSubtreeFocus")).subscribe(i => {
                                this._focusOrigin = i, this.cdkFocusChange.emit(i)
                            })
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef), this._monitorSubscription && this._monitorSubscription.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(dn))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkMonitorElementFocus", ""],
                            ["", "cdkMonitorSubtreeFocus", ""]
                        ],
                        outputs: {
                            cdkFocusChange: "cdkFocusChange"
                        },
                        exportAs: ["cdkMonitorFocus"]
                    }), t
                })();
            const NE = "cdk-high-contrast-black-on-white",
                BE = "cdk-high-contrast-white-on-black",
                Tb = "cdk-high-contrast-active";
            let VE = (() => {
                    class t {
                        constructor(e, i) {
                            this._platform = e, this._document = i, this._breakpointSubscription = st(Ff).observe("(forced-colors: active)").subscribe(() => {
                                this._hasCheckedHighContrastMode && (this._hasCheckedHighContrastMode = !1, this._applyBodyHighContrastModeCssClasses())
                            })
                        }
                        getHighContrastMode() {
                            if (!this._platform.isBrowser) return 0;
                            const e = this._document.createElement("div");
                            e.style.backgroundColor = "rgb(1,2,3)", e.style.position = "absolute", this._document.body.appendChild(e);
                            const i = this._document.defaultView || window,
                                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                                s = (r && r.backgroundColor || "").replace(/ /g, "");
                            switch (e.remove(), s) {
                                case "rgb(0,0,0)":
                                case "rgb(45,50,54)":
                                case "rgb(32,32,32)":
                                    return 2;
                                case "rgb(255,255,255)":
                                case "rgb(255,250,239)":
                                    return 1
                            }
                            return 0
                        }
                        ngOnDestroy() {
                            this._breakpointSubscription.unsubscribe()
                        }
                        _applyBodyHighContrastModeCssClasses() {
                            if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {
                                const e = this._document.body.classList;
                                e.remove(Tb, NE, BE), this._hasCheckedHighContrastMode = !0;
                                const i = this.getHighContrastMode();
                                1 === i ? e.add(Tb, NE) : 2 === i && e.add(Tb, BE)
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Ft), C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Fd = (() => {
                    class t {
                        constructor(e) {
                            e._applyBodyHighContrastModeCssClasses()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(VE))
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Id]
                    }), t
                })();
            const LG = ["addListener", "removeListener"],
                NG = ["addEventListener", "removeEventListener"],
                BG = ["on", "off"];

            function un(t, n, e, i) {
                if (Qe(e) && (i = e, e = void 0), i) return un(t, n, e).pipe(Hy(i));
                const [r, s] = function $G(t) {
                    return Qe(t.addEventListener) && Qe(t.removeEventListener)
                }(t) ? NG.map(o => a => t[o](n, a, e)): function VG(t) {
                    return Qe(t.addListener) && Qe(t.removeListener)
                }(t) ? LG.map(HE(t, n)) : function HG(t) {
                    return Qe(t.on) && Qe(t.off)
                }(t) ? BG.map(HE(t, n)) : [];
                if (!r && Rm(t)) return _t(o => un(o, n, e))($n(t));
                if (!r) throw new TypeError("Invalid event target");
                return new Ze(o => {
                    const a = (...l) => o.next(1 < l.length ? l : l[0]);
                    return r(a), () => s(a)
                })
            }

            function HE(t, n) {
                return e => i => t[e](n, i)
            }
            const Od = {
                schedule(t) {
                    let n = requestAnimationFrame,
                        e = cancelAnimationFrame;
                    const {
                        delegate: i
                    } = Od;
                    i && (n = i.requestAnimationFrame, e = i.cancelAnimationFrame);
                    const r = n(s => {
                        e = void 0, t(s)
                    });
                    return new Re(() => e ? .(r))
                },
                requestAnimationFrame(...t) {
                    const {
                        delegate: n
                    } = Od;
                    return (n ? .requestAnimationFrame || requestAnimationFrame)(...t)
                },
                cancelAnimationFrame(...t) {
                    const {
                        delegate: n
                    } = Od;
                    return (n ? .cancelAnimationFrame || cancelAnimationFrame)(...t)
                },
                delegate: void 0
            };
            new class zG extends Db {
                flush(n) {
                    this._active = !0;
                    const e = this._scheduled;
                    this._scheduled = void 0;
                    const {
                        actions: i
                    } = this;
                    let r;
                    n = n || i.shift();
                    do {
                        if (r = n.execute(n.state, n.delay)) break
                    } while ((n = i[0]) && n.id === e && i.shift());
                    if (this._active = !1, r) {
                        for (;
                            (n = i[0]) && n.id === e && i.shift();) n.unsubscribe();
                        throw r
                    }
                }
            }(class jG extends Cb {
                constructor(n, e) {
                    super(n, e), this.scheduler = n, this.work = e
                }
                requestAsyncId(n, e, i = 0) {
                    return null !== i && i > 0 ? super.requestAsyncId(n, e, i) : (n.actions.push(this), n._scheduled || (n._scheduled = Od.requestAnimationFrame(() => n.flush(void 0))))
                }
                recycleAsyncId(n, e, i = 0) {
                    if (null != i && i > 0 || null == i && this.delay > 0) return super.recycleAsyncId(n, e, i);
                    n.actions.some(r => r.id === e) || (Od.cancelAnimationFrame(e), n._scheduled = void 0)
                }
            });
            let Ib, GG = 1;
            const Hf = {};

            function $E(t) {
                return t in Hf && (delete Hf[t], !0)
            }
            const WG = {
                    setImmediate(t) {
                        const n = GG++;
                        return Hf[n] = !0, Ib || (Ib = Promise.resolve()), Ib.then(() => $E(n) && t()), n
                    },
                    clearImmediate(t) {
                        $E(t)
                    }
                },
                {
                    setImmediate: qG,
                    clearImmediate: YG
                } = WG,
                $f = {
                    setImmediate(...t) {
                        const {
                            delegate: n
                        } = $f;
                        return (n ? .setImmediate || qG)(...t)
                    },
                    clearImmediate(t) {
                        const {
                            delegate: n
                        } = $f;
                        return (n ? .clearImmediate || YG)(t)
                    },
                    delegate: void 0
                },
                jf = new class KG extends Db {
                    flush(n) {
                        this._active = !0;
                        const e = this._scheduled;
                        this._scheduled = void 0;
                        const {
                            actions: i
                        } = this;
                        let r;
                        n = n || i.shift();
                        do {
                            if (r = n.execute(n.state, n.delay)) break
                        } while ((n = i[0]) && n.id === e && i.shift());
                        if (this._active = !1, r) {
                            for (;
                                (n = i[0]) && n.id === e && i.shift();) n.unsubscribe();
                            throw r
                        }
                    }
                }(class QG extends Cb {
                    constructor(n, e) {
                        super(n, e), this.scheduler = n, this.work = e
                    }
                    requestAsyncId(n, e, i = 0) {
                        return null !== i && i > 0 ? super.requestAsyncId(n, e, i) : (n.actions.push(this), n._scheduled || (n._scheduled = $f.setImmediate(n.flush.bind(n, void 0))))
                    }
                    recycleAsyncId(n, e, i = 0) {
                        if (null != i && i > 0 || null == i && this.delay > 0) return super.recycleAsyncId(n, e, i);
                        n.actions.some(r => r.id === e) || ($f.clearImmediate(e), n._scheduled = void 0)
                    }
                });

            function Pd(t = 0, n, e = aG) {
                let i = -1;
                return null != n && (RC(n) ? e = n : i = n), new Ze(r => {
                    let s = function XG(t) {
                        return t instanceof Date && !isNaN(t)
                    }(t) ? +t - e.now() : t;
                    s < 0 && (s = 0);
                    let o = 0;
                    return e.schedule(function() {
                        r.closed || (r.next(o++), 0 <= i ? this.schedule(void 0, i) : r.complete())
                    }, s)
                })
            }

            function Rb(t, n = Il) {
                return function ZG(t) {
                    return Pt((n, e) => {
                        let i = !1,
                            r = null,
                            s = null,
                            o = !1;
                        const a = () => {
                                if (s ? .unsubscribe(), s = null, i) {
                                    i = !1;
                                    const c = r;
                                    r = null, e.next(c)
                                }
                                o && e.complete()
                            },
                            l = () => {
                                s = null, o && e.complete()
                            };
                        n.subscribe(kt(e, c => {
                            i = !0, r = c, s || $n(t(c)).subscribe(s = kt(e, a, l))
                        }, () => {
                            o = !0, (!i || !s || s.closed) && e.complete()
                        }))
                    })
                }(() => Pd(t, n))
            }
            const JG = new R("cdk-dir-doc", {
                    providedIn: "root",
                    factory: function e8() {
                        return st(pe)
                    }
                }),
                t8 = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
            let Mt = (() => {
                    class t {
                        constructor(e) {
                            if (this.value = "ltr", this.change = new V, e) {
                                const r = e.documentElement ? e.documentElement.dir : null;
                                this.value = function n8(t) {
                                    const n = t ? .toLowerCase() || "";
                                    return "auto" === n && typeof navigator < "u" && navigator ? .language ? t8.test(navigator.language) ? "rtl" : "ltr" : "rtl" === n ? "rtl" : "ltr"
                                }((e.body ? e.body.dir : null) || r || "ltr")
                            }
                        }
                        ngOnDestroy() {
                            this.change.complete()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(JG, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                ta = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })(),
                jE = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._ngZone = e, this._platform = i, this._scrolled = new H, this._globalSubscription = null, this._scrolledCount = 0, this.scrollContainers = new Map, this._document = r
                        }
                        register(e) {
                            this.scrollContainers.has(e) || this.scrollContainers.set(e, e.elementScrolled().subscribe(() => this._scrolled.next(e)))
                        }
                        deregister(e) {
                            const i = this.scrollContainers.get(e);
                            i && (i.unsubscribe(), this.scrollContainers.delete(e))
                        }
                        scrolled(e = 20) {
                            return this._platform.isBrowser ? new Ze(i => {
                                this._globalSubscription || this._addGlobalListener();
                                const r = e > 0 ? this._scrolled.pipe(Rb(e)).subscribe(i) : this._scrolled.subscribe(i);
                                return this._scrolledCount++, () => {
                                    r.unsubscribe(), this._scrolledCount--, this._scrolledCount || this._removeGlobalListener()
                                }
                            }) : z()
                        }
                        ngOnDestroy() {
                            this._removeGlobalListener(), this.scrollContainers.forEach((e, i) => this.deregister(i)), this._scrolled.complete()
                        }
                        ancestorScrolled(e, i) {
                            const r = this.getAncestorScrollContainers(e);
                            return this.scrolled(i).pipe(Ie(s => !s || r.indexOf(s) > -1))
                        }
                        getAncestorScrollContainers(e) {
                            const i = [];
                            return this.scrollContainers.forEach((r, s) => {
                                this._scrollableContainsElement(s, e) && i.push(s)
                            }), i
                        }
                        _getWindow() {
                            return this._document.defaultView || window
                        }
                        _scrollableContainsElement(e, i) {
                            let r = bs(i),
                                s = e.getElementRef().nativeElement;
                            do {
                                if (r == s) return !0
                            } while (r = r.parentElement);
                            return !1
                        }
                        _addGlobalListener() {
                            this._globalSubscription = this._ngZone.runOutsideAngular(() => un(this._getWindow().document, "scroll").subscribe(() => this._scrolled.next()))
                        }
                        _removeGlobalListener() {
                            this._globalSubscription && (this._globalSubscription.unsubscribe(), this._globalSubscription = null)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(ce), C(Ft), C(pe, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Hr = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._platform = e, this._change = new H, this._changeListener = s => {
                                this._change.next(s)
                            }, this._document = r, i.runOutsideAngular(() => {
                                if (e.isBrowser) {
                                    const s = this._getWindow();
                                    s.addEventListener("resize", this._changeListener), s.addEventListener("orientationchange", this._changeListener)
                                }
                                this.change().subscribe(() => this._viewportSize = null)
                            })
                        }
                        ngOnDestroy() {
                            if (this._platform.isBrowser) {
                                const e = this._getWindow();
                                e.removeEventListener("resize", this._changeListener), e.removeEventListener("orientationchange", this._changeListener)
                            }
                            this._change.complete()
                        }
                        getViewportSize() {
                            this._viewportSize || this._updateViewportSize();
                            const e = {
                                width: this._viewportSize.width,
                                height: this._viewportSize.height
                            };
                            return this._platform.isBrowser || (this._viewportSize = null), e
                        }
                        getViewportRect() {
                            const e = this.getViewportScrollPosition(),
                                {
                                    width: i,
                                    height: r
                                } = this.getViewportSize();
                            return {
                                top: e.top,
                                left: e.left,
                                bottom: e.top + r,
                                right: e.left + i,
                                height: r,
                                width: i
                            }
                        }
                        getViewportScrollPosition() {
                            if (!this._platform.isBrowser) return {
                                top: 0,
                                left: 0
                            };
                            const e = this._document,
                                i = this._getWindow(),
                                r = e.documentElement,
                                s = r.getBoundingClientRect();
                            return {
                                top: -s.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                                left: -s.left || e.body.scrollLeft || i.scrollX || r.scrollLeft || 0
                            }
                        }
                        change(e = 20) {
                            return e > 0 ? this._change.pipe(Rb(e)) : this._change
                        }
                        _getWindow() {
                            return this._document.defaultView || window
                        }
                        _updateViewportSize() {
                            const e = this._getWindow();
                            this._viewportSize = this._platform.isBrowser ? {
                                width: e.innerWidth,
                                height: e.innerHeight
                            } : {
                                width: 0,
                                height: 0
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Ft), C(ce), C(pe, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                vs = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })(),
                Fb = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ta, vs, ta, vs]
                    }), t
                })();
            class Ob {
                attach(n) {
                    return this._attachedHost = n, n.attach(this)
                }
                detach() {
                    let n = this._attachedHost;
                    null != n && (this._attachedHost = null, n.detach())
                }
                get isAttached() {
                    return null != this._attachedHost
                }
                setAttachedHost(n) {
                    this._attachedHost = n
                }
            }
            class eo extends Ob {
                constructor(n, e, i, r) {
                    super(), this.component = n, this.viewContainerRef = e, this.injector = i, this.componentFactoryResolver = r
                }
            }
            class yr extends Ob {
                constructor(n, e, i, r) {
                    super(), this.templateRef = n, this.viewContainerRef = e, this.context = i, this.injector = r
                }
                get origin() {
                    return this.templateRef.elementRef
                }
                attach(n, e = this.context) {
                    return this.context = e, super.attach(n)
                }
                detach() {
                    return this.context = void 0, super.detach()
                }
            }
            class s8 extends Ob {
                constructor(n) {
                    super(), this.element = n instanceof N ? n.nativeElement : n
                }
            }
            class zf {
                constructor() {
                    this._isDisposed = !1, this.attachDomPortal = null
                }
                hasAttached() {
                    return !!this._attachedPortal
                }
                attach(n) {
                    return n instanceof eo ? (this._attachedPortal = n, this.attachComponentPortal(n)) : n instanceof yr ? (this._attachedPortal = n, this.attachTemplatePortal(n)) : this.attachDomPortal && n instanceof s8 ? (this._attachedPortal = n, this.attachDomPortal(n)) : void 0
                }
                detach() {
                    this._attachedPortal && (this._attachedPortal.setAttachedHost(null), this._attachedPortal = null), this._invokeDisposeFn()
                }
                dispose() {
                    this.hasAttached() && this.detach(), this._invokeDisposeFn(), this._isDisposed = !0
                }
                setDisposeFn(n) {
                    this._disposeFn = n
                }
                _invokeDisposeFn() {
                    this._disposeFn && (this._disposeFn(), this._disposeFn = null)
                }
            }
            class zE extends zf {
                constructor(n, e, i, r, s) {
                    super(), this.outletElement = n, this._componentFactoryResolver = e, this._appRef = i, this._defaultInjector = r, this.attachDomPortal = o => {
                        const a = o.element,
                            l = this._document.createComment("dom-portal");
                        a.parentNode.insertBefore(l, a), this.outletElement.appendChild(a), this._attachedPortal = o, super.setDisposeFn(() => {
                            l.parentNode && l.parentNode.replaceChild(a, l)
                        })
                    }, this._document = s
                }
                attachComponentPortal(n) {
                    const i = (n.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(n.component);
                    let r;
                    return n.viewContainerRef ? (r = n.viewContainerRef.createComponent(i, n.viewContainerRef.length, n.injector || n.viewContainerRef.injector), this.setDisposeFn(() => r.destroy())) : (r = i.create(n.injector || this._defaultInjector || Ct.NULL), this._appRef.attachView(r.hostView), this.setDisposeFn(() => {
                        this._appRef.viewCount > 0 && this._appRef.detachView(r.hostView), r.destroy()
                    })), this.outletElement.appendChild(this._getComponentRootNode(r)), this._attachedPortal = n, r
                }
                attachTemplatePortal(n) {
                    let e = n.viewContainerRef,
                        i = e.createEmbeddedView(n.templateRef, n.context, {
                            injector: n.injector
                        });
                    return i.rootNodes.forEach(r => this.outletElement.appendChild(r)), i.detectChanges(), this.setDisposeFn(() => {
                        let r = e.indexOf(i); - 1 !== r && e.remove(r)
                    }), this._attachedPortal = n, i
                }
                dispose() {
                    super.dispose(), this.outletElement.remove()
                }
                _getComponentRootNode(n) {
                    return n.hostView.rootNodes[0]
                }
            }
            let o8 = (() => {
                    class t extends yr {
                        constructor(e, i) {
                            super(e, i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(Je))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkPortal", ""]
                        ],
                        exportAs: ["cdkPortal"],
                        features: [A]
                    }), t
                })(),
                Ki = (() => {
                    class t extends zf {
                        constructor(e, i, r) {
                            super(), this._componentFactoryResolver = e, this._viewContainerRef = i, this._isInitialized = !1, this.attached = new V, this.attachDomPortal = s => {
                                const o = s.element,
                                    a = this._document.createComment("dom-portal");
                                s.setAttachedHost(this), o.parentNode.insertBefore(a, o), this._getRootNode().appendChild(o), this._attachedPortal = s, super.setDisposeFn(() => {
                                    a.parentNode && a.parentNode.replaceChild(o, a)
                                })
                            }, this._document = r
                        }
                        get portal() {
                            return this._attachedPortal
                        }
                        set portal(e) {
                            this.hasAttached() && !e && !this._isInitialized || (this.hasAttached() && super.detach(), e && super.attach(e), this._attachedPortal = e || null)
                        }
                        get attachedRef() {
                            return this._attachedRef
                        }
                        ngOnInit() {
                            this._isInitialized = !0
                        }
                        ngOnDestroy() {
                            super.dispose(), this._attachedPortal = null, this._attachedRef = null
                        }
                        attachComponentPortal(e) {
                            e.setAttachedHost(this);
                            const i = null != e.viewContainerRef ? e.viewContainerRef : this._viewContainerRef,
                                s = (e.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(e.component),
                                o = i.createComponent(s, i.length, e.injector || i.injector);
                            return i !== this._viewContainerRef && this._getRootNode().appendChild(o.hostView.rootNodes[0]), super.setDisposeFn(() => o.destroy()), this._attachedPortal = e, this._attachedRef = o, this.attached.emit(o), o
                        }
                        attachTemplatePortal(e) {
                            e.setAttachedHost(this);
                            const i = this._viewContainerRef.createEmbeddedView(e.templateRef, e.context, {
                                injector: e.injector
                            });
                            return super.setDisposeFn(() => this._viewContainerRef.clear()), this._attachedPortal = e, this._attachedRef = i, this.attached.emit(i), i
                        }
                        _getRootNode() {
                            const e = this._viewContainerRef.element.nativeElement;
                            return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ci), u(Je), u(pe))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkPortalOutlet", ""]
                        ],
                        inputs: {
                            portal: ["cdkPortalOutlet", "portal"]
                        },
                        outputs: {
                            attached: "attached"
                        },
                        exportAs: ["cdkPortalOutlet"],
                        features: [A]
                    }), t
                })(),
                $r = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })();
            const UE = XU();
            class a8 {
                constructor(n, e) {
                    this._viewportRuler = n, this._previousHTMLStyles = {
                        top: "",
                        left: ""
                    }, this._isEnabled = !1, this._document = e
                }
                attach() {}
                enable() {
                    if (this._canBeEnabled()) {
                        const n = this._document.documentElement;
                        this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition(), this._previousHTMLStyles.left = n.style.left || "", this._previousHTMLStyles.top = n.style.top || "", n.style.left = nn(-this._previousScrollPosition.left), n.style.top = nn(-this._previousScrollPosition.top), n.classList.add("cdk-global-scrollblock"), this._isEnabled = !0
                    }
                }
                disable() {
                    if (this._isEnabled) {
                        const n = this._document.documentElement,
                            i = n.style,
                            r = this._document.body.style,
                            s = i.scrollBehavior || "",
                            o = r.scrollBehavior || "";
                        this._isEnabled = !1, i.left = this._previousHTMLStyles.left, i.top = this._previousHTMLStyles.top, n.classList.remove("cdk-global-scrollblock"), UE && (i.scrollBehavior = r.scrollBehavior = "auto"), window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top), UE && (i.scrollBehavior = s, r.scrollBehavior = o)
                    }
                }
                _canBeEnabled() {
                    if (this._document.documentElement.classList.contains("cdk-global-scrollblock") || this._isEnabled) return !1;
                    const e = this._document.body,
                        i = this._viewportRuler.getViewportSize();
                    return e.scrollHeight > i.height || e.scrollWidth > i.width
                }
            }
            class l8 {
                constructor(n, e, i, r) {
                    this._scrollDispatcher = n, this._ngZone = e, this._viewportRuler = i, this._config = r, this._scrollSubscription = null, this._detach = () => {
                        this.disable(), this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach())
                    }
                }
                attach(n) {
                    this._overlayRef = n
                }
                enable() {
                    if (this._scrollSubscription) return;
                    const n = this._scrollDispatcher.scrolled(0);
                    this._config && this._config.threshold && this._config.threshold > 1 ? (this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top, this._scrollSubscription = n.subscribe(() => {
                        const e = this._viewportRuler.getViewportScrollPosition().top;
                        Math.abs(e - this._initialScrollPosition) > this._config.threshold ? this._detach() : this._overlayRef.updatePosition()
                    })) : this._scrollSubscription = n.subscribe(this._detach)
                }
                disable() {
                    this._scrollSubscription && (this._scrollSubscription.unsubscribe(), this._scrollSubscription = null)
                }
                detach() {
                    this.disable(), this._overlayRef = null
                }
            }
            class Uf {
                enable() {}
                disable() {}
                attach() {}
            }

            function Pb(t, n) {
                return n.some(e => t.bottom < e.top || t.top > e.bottom || t.right < e.left || t.left > e.right)
            }

            function GE(t, n) {
                return n.some(e => t.top < e.top || t.bottom > e.bottom || t.left < e.left || t.right > e.right)
            }
            class c8 {
                constructor(n, e, i, r) {
                    this._scrollDispatcher = n, this._viewportRuler = e, this._ngZone = i, this._config = r, this._scrollSubscription = null
                }
                attach(n) {
                    this._overlayRef = n
                }
                enable() {
                    this._scrollSubscription || (this._scrollSubscription = this._scrollDispatcher.scrolled(this._config ? this._config.scrollThrottle : 0).subscribe(() => {
                        if (this._overlayRef.updatePosition(), this._config && this._config.autoClose) {
                            const e = this._overlayRef.overlayElement.getBoundingClientRect(),
                                {
                                    width: i,
                                    height: r
                                } = this._viewportRuler.getViewportSize();
                            Pb(e, [{
                                width: i,
                                height: r,
                                bottom: r,
                                right: i,
                                top: 0,
                                left: 0
                            }]) && (this.disable(), this._ngZone.run(() => this._overlayRef.detach()))
                        }
                    }))
                }
                disable() {
                    this._scrollSubscription && (this._scrollSubscription.unsubscribe(), this._scrollSubscription = null)
                }
                detach() {
                    this.disable(), this._overlayRef = null
                }
            }
            let d8 = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._scrollDispatcher = e, this._viewportRuler = i, this._ngZone = r, this.noop = () => new Uf, this.close = o => new l8(this._scrollDispatcher, this._ngZone, this._viewportRuler, o), this.block = () => new a8(this._viewportRuler, this._document), this.reposition = o => new c8(this._scrollDispatcher, this._viewportRuler, this._ngZone, o), this._document = s
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(jE), C(Hr), C(ce), C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            class na {
                constructor(n) {
                    if (this.scrollStrategy = new Uf, this.panelClass = "", this.hasBackdrop = !1, this.backdropClass = "cdk-overlay-dark-backdrop", this.disposeOnNavigation = !1, n) {
                        const e = Object.keys(n);
                        for (const i of e) void 0 !== n[i] && (this[i] = n[i])
                    }
                }
            }
            class u8 {
                constructor(n, e) {
                    this.connectionPair = n, this.scrollableViewProperties = e
                }
            }
            let WE = (() => {
                    class t {
                        constructor(e) {
                            this._attachedOverlays = [], this._document = e
                        }
                        ngOnDestroy() {
                            this.detach()
                        }
                        add(e) {
                            this.remove(e), this._attachedOverlays.push(e)
                        }
                        remove(e) {
                            const i = this._attachedOverlays.indexOf(e);
                            i > -1 && this._attachedOverlays.splice(i, 1), 0 === this._attachedOverlays.length && this.detach()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                h8 = (() => {
                    class t extends WE {
                        constructor(e, i) {
                            super(e), this._ngZone = i, this._keydownListener = r => {
                                const s = this._attachedOverlays;
                                for (let o = s.length - 1; o > -1; o--)
                                    if (s[o]._keydownEvents.observers.length > 0) {
                                        const a = s[o]._keydownEvents;
                                        this._ngZone ? this._ngZone.run(() => a.next(r)) : a.next(r);
                                        break
                                    }
                            }
                        }
                        add(e) {
                            super.add(e), this._isAttached || (this._ngZone ? this._ngZone.runOutsideAngular(() => this._document.body.addEventListener("keydown", this._keydownListener)) : this._document.body.addEventListener("keydown", this._keydownListener), this._isAttached = !0)
                        }
                        detach() {
                            this._isAttached && (this._document.body.removeEventListener("keydown", this._keydownListener), this._isAttached = !1)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe), C(ce, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                f8 = (() => {
                    class t extends WE {
                        constructor(e, i, r) {
                            super(e), this._platform = i, this._ngZone = r, this._cursorStyleIsSet = !1, this._pointerDownListener = s => {
                                this._pointerDownEventTarget = Xs(s)
                            }, this._clickListener = s => {
                                const o = Xs(s),
                                    a = "click" === s.type && this._pointerDownEventTarget ? this._pointerDownEventTarget : o;
                                this._pointerDownEventTarget = null;
                                const l = this._attachedOverlays.slice();
                                for (let c = l.length - 1; c > -1; c--) {
                                    const d = l[c];
                                    if (d._outsidePointerEvents.observers.length < 1 || !d.hasAttached()) continue;
                                    if (d.overlayElement.contains(o) || d.overlayElement.contains(a)) break;
                                    const h = d._outsidePointerEvents;
                                    this._ngZone ? this._ngZone.run(() => h.next(s)) : h.next(s)
                                }
                            }
                        }
                        add(e) {
                            if (super.add(e), !this._isAttached) {
                                const i = this._document.body;
                                this._ngZone ? this._ngZone.runOutsideAngular(() => this._addEventListeners(i)) : this._addEventListeners(i), this._platform.IOS && !this._cursorStyleIsSet && (this._cursorOriginalValue = i.style.cursor, i.style.cursor = "pointer", this._cursorStyleIsSet = !0), this._isAttached = !0
                            }
                        }
                        detach() {
                            if (this._isAttached) {
                                const e = this._document.body;
                                e.removeEventListener("pointerdown", this._pointerDownListener, !0), e.removeEventListener("click", this._clickListener, !0), e.removeEventListener("auxclick", this._clickListener, !0), e.removeEventListener("contextmenu", this._clickListener, !0), this._platform.IOS && this._cursorStyleIsSet && (e.style.cursor = this._cursorOriginalValue, this._cursorStyleIsSet = !1), this._isAttached = !1
                            }
                        }
                        _addEventListeners(e) {
                            e.addEventListener("pointerdown", this._pointerDownListener, !0), e.addEventListener("click", this._clickListener, !0), e.addEventListener("auxclick", this._clickListener, !0), e.addEventListener("contextmenu", this._clickListener, !0)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe), C(Ft), C(ce, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Gf = (() => {
                    class t {
                        constructor(e, i) {
                            this._platform = i, this._document = e
                        }
                        ngOnDestroy() {
                            this._containerElement ? .remove()
                        }
                        getContainerElement() {
                            return this._containerElement || this._createContainer(), this._containerElement
                        }
                        _createContainer() {
                            const e = "cdk-overlay-container";
                            if (this._platform.isBrowser || bb()) {
                                const r = this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);
                                for (let s = 0; s < r.length; s++) r[s].remove()
                            }
                            const i = this._document.createElement("div");
                            i.classList.add(e), bb() ? i.setAttribute("platform", "test") : this._platform.isBrowser || i.setAttribute("platform", "server"), this._document.body.appendChild(i), this._containerElement = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe), C(Ft))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            class Ld {
                constructor(n, e, i, r, s, o, a, l, c, d = !1) {
                    this._portalOutlet = n, this._host = e, this._pane = i, this._config = r, this._ngZone = s, this._keyboardDispatcher = o, this._document = a, this._location = l, this._outsideClickDispatcher = c, this._animationsDisabled = d, this._backdropElement = null, this._backdropClick = new H, this._attachments = new H, this._detachments = new H, this._locationChanges = Re.EMPTY, this._backdropClickHandler = h => this._backdropClick.next(h), this._backdropTransitionendHandler = h => {
                        this._disposeBackdrop(h.target)
                    }, this._keydownEvents = new H, this._outsidePointerEvents = new H, r.scrollStrategy && (this._scrollStrategy = r.scrollStrategy, this._scrollStrategy.attach(this)), this._positionStrategy = r.positionStrategy
                }
                get overlayElement() {
                    return this._pane
                }
                get backdropElement() {
                    return this._backdropElement
                }
                get hostElement() {
                    return this._host
                }
                attach(n) {
                    !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host);
                    const e = this._portalOutlet.attach(n);
                    return this._positionStrategy && this._positionStrategy.attach(this), this._updateStackingOrder(), this._updateElementSize(), this._updateElementDirection(), this._scrollStrategy && this._scrollStrategy.enable(), this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                        this.hasAttached() && this.updatePosition()
                    }), this._togglePointerEvents(!0), this._config.hasBackdrop && this._attachBackdrop(), this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0), this._attachments.next(), this._keyboardDispatcher.add(this), this._config.disposeOnNavigation && (this._locationChanges = this._location.subscribe(() => this.dispose())), this._outsideClickDispatcher.add(this), "function" == typeof e ? .onDestroy && e.onDestroy(() => {
                        this.hasAttached() && this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()))
                    }), e
                }
                detach() {
                    if (!this.hasAttached()) return;
                    this.detachBackdrop(), this._togglePointerEvents(!1), this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(), this._scrollStrategy && this._scrollStrategy.disable();
                    const n = this._portalOutlet.detach();
                    return this._detachments.next(), this._keyboardDispatcher.remove(this), this._detachContentWhenStable(), this._locationChanges.unsubscribe(), this._outsideClickDispatcher.remove(this), n
                }
                dispose() {
                    const n = this.hasAttached();
                    this._positionStrategy && this._positionStrategy.dispose(), this._disposeScrollStrategy(), this._disposeBackdrop(this._backdropElement), this._locationChanges.unsubscribe(), this._keyboardDispatcher.remove(this), this._portalOutlet.dispose(), this._attachments.complete(), this._backdropClick.complete(), this._keydownEvents.complete(), this._outsidePointerEvents.complete(), this._outsideClickDispatcher.remove(this), this._host ? .remove(), this._previousHostParent = this._pane = this._host = null, n && this._detachments.next(), this._detachments.complete()
                }
                hasAttached() {
                    return this._portalOutlet.hasAttached()
                }
                backdropClick() {
                    return this._backdropClick
                }
                attachments() {
                    return this._attachments
                }
                detachments() {
                    return this._detachments
                }
                keydownEvents() {
                    return this._keydownEvents
                }
                outsidePointerEvents() {
                    return this._outsidePointerEvents
                }
                getConfig() {
                    return this._config
                }
                updatePosition() {
                    this._positionStrategy && this._positionStrategy.apply()
                }
                updatePositionStrategy(n) {
                    n !== this._positionStrategy && (this._positionStrategy && this._positionStrategy.dispose(), this._positionStrategy = n, this.hasAttached() && (n.attach(this), this.updatePosition()))
                }
                updateSize(n) {
                    this._config = { ...this._config,
                        ...n
                    }, this._updateElementSize()
                }
                setDirection(n) {
                    this._config = { ...this._config,
                        direction: n
                    }, this._updateElementDirection()
                }
                addPanelClass(n) {
                    this._pane && this._toggleClasses(this._pane, n, !0)
                }
                removePanelClass(n) {
                    this._pane && this._toggleClasses(this._pane, n, !1)
                }
                getDirection() {
                    const n = this._config.direction;
                    return n ? "string" == typeof n ? n : n.value : "ltr"
                }
                updateScrollStrategy(n) {
                    n !== this._scrollStrategy && (this._disposeScrollStrategy(), this._scrollStrategy = n, this.hasAttached() && (n.attach(this), n.enable()))
                }
                _updateElementDirection() {
                    this._host.setAttribute("dir", this.getDirection())
                }
                _updateElementSize() {
                    if (!this._pane) return;
                    const n = this._pane.style;
                    n.width = nn(this._config.width), n.height = nn(this._config.height), n.minWidth = nn(this._config.minWidth), n.minHeight = nn(this._config.minHeight), n.maxWidth = nn(this._config.maxWidth), n.maxHeight = nn(this._config.maxHeight)
                }
                _togglePointerEvents(n) {
                    this._pane.style.pointerEvents = n ? "" : "none"
                }
                _attachBackdrop() {
                    const n = "cdk-overlay-backdrop-showing";
                    this._backdropElement = this._document.createElement("div"), this._backdropElement.classList.add("cdk-overlay-backdrop"), this._animationsDisabled && this._backdropElement.classList.add("cdk-overlay-backdrop-noop-animation"), this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0), this._host.parentElement.insertBefore(this._backdropElement, this._host), this._backdropElement.addEventListener("click", this._backdropClickHandler), !this._animationsDisabled && typeof requestAnimationFrame < "u" ? this._ngZone.runOutsideAngular(() => {
                        requestAnimationFrame(() => {
                            this._backdropElement && this._backdropElement.classList.add(n)
                        })
                    }) : this._backdropElement.classList.add(n)
                }
                _updateStackingOrder() {
                    this._host.nextSibling && this._host.parentNode.appendChild(this._host)
                }
                detachBackdrop() {
                    const n = this._backdropElement;
                    if (n) {
                        if (this._animationsDisabled) return void this._disposeBackdrop(n);
                        n.classList.remove("cdk-overlay-backdrop-showing"), this._ngZone.runOutsideAngular(() => {
                            n.addEventListener("transitionend", this._backdropTransitionendHandler)
                        }), n.style.pointerEvents = "none", this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {
                            this._disposeBackdrop(n)
                        }, 500))
                    }
                }
                _toggleClasses(n, e, i) {
                    const r = If(e || []).filter(s => !!s);
                    r.length && (i ? n.classList.add(...r) : n.classList.remove(...r))
                }
                _detachContentWhenStable() {
                    this._ngZone.runOutsideAngular(() => {
                        const n = this._ngZone.onStable.pipe(le(tt(this._attachments, this._detachments))).subscribe(() => {
                            (!this._pane || !this._host || 0 === this._pane.children.length) && (this._pane && this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !1), this._host && this._host.parentElement && (this._previousHostParent = this._host.parentElement, this._host.remove()), n.unsubscribe())
                        })
                    })
                }
                _disposeScrollStrategy() {
                    const n = this._scrollStrategy;
                    n && (n.disable(), n.detach && n.detach())
                }
                _disposeBackdrop(n) {
                    n && (n.removeEventListener("click", this._backdropClickHandler), n.removeEventListener("transitionend", this._backdropTransitionendHandler), n.remove(), this._backdropElement === n && (this._backdropElement = null)), this._backdropTimeout && (clearTimeout(this._backdropTimeout), this._backdropTimeout = void 0)
                }
            }
            const qE = "cdk-overlay-connected-position-bounding-box",
                p8 = /([A-Za-z%]+)$/;
            class YE {
                constructor(n, e, i, r, s) {
                    this._viewportRuler = e, this._document = i, this._platform = r, this._overlayContainer = s, this._lastBoundingBoxSize = {
                        width: 0,
                        height: 0
                    }, this._isPushed = !1, this._canPush = !0, this._growAfterOpen = !1, this._hasFlexibleDimensions = !0, this._positionLocked = !1, this._viewportMargin = 0, this._scrollables = [], this._preferredPositions = [], this._positionChanges = new H, this._resizeSubscription = Re.EMPTY, this._offsetX = 0, this._offsetY = 0, this._appliedPanelClasses = [], this.positionChanges = this._positionChanges, this.setOrigin(n)
                }
                get positions() {
                    return this._preferredPositions
                }
                attach(n) {
                    this._validatePositions(), n.hostElement.classList.add(qE), this._overlayRef = n, this._boundingBox = n.hostElement, this._pane = n.overlayElement, this._isDisposed = !1, this._isInitialRender = !0, this._lastPosition = null, this._resizeSubscription.unsubscribe(), this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
                        this._isInitialRender = !0, this.apply()
                    })
                }
                apply() {
                    if (this._isDisposed || !this._platform.isBrowser) return;
                    if (!this._isInitialRender && this._positionLocked && this._lastPosition) return void this.reapplyLastPosition();
                    this._clearPanelClasses(), this._resetOverlayElementStyles(), this._resetBoundingBoxStyles(), this._viewportRect = this._getNarrowedViewportRect(), this._originRect = this._getOriginRect(), this._overlayRect = this._pane.getBoundingClientRect(), this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();
                    const n = this._originRect,
                        e = this._overlayRect,
                        i = this._viewportRect,
                        r = this._containerRect,
                        s = [];
                    let o;
                    for (let a of this._preferredPositions) {
                        let l = this._getOriginPoint(n, r, a),
                            c = this._getOverlayPoint(l, e, a),
                            d = this._getOverlayFit(c, e, i, a);
                        if (d.isCompletelyWithinViewport) return this._isPushed = !1, void this._applyPosition(a, l);
                        this._canFitWithFlexibleDimensions(d, c, i) ? s.push({
                            position: a,
                            origin: l,
                            overlayRect: e,
                            boundingBoxRect: this._calculateBoundingBoxRect(l, a)
                        }) : (!o || o.overlayFit.visibleArea < d.visibleArea) && (o = {
                            overlayFit: d,
                            overlayPoint: c,
                            originPoint: l,
                            position: a,
                            overlayRect: e
                        })
                    }
                    if (s.length) {
                        let a = null,
                            l = -1;
                        for (const c of s) {
                            const d = c.boundingBoxRect.width * c.boundingBoxRect.height * (c.position.weight || 1);
                            d > l && (l = d, a = c)
                        }
                        return this._isPushed = !1, void this._applyPosition(a.position, a.origin)
                    }
                    if (this._canPush) return this._isPushed = !0, void this._applyPosition(o.position, o.originPoint);
                    this._applyPosition(o.position, o.originPoint)
                }
                detach() {
                    this._clearPanelClasses(), this._lastPosition = null, this._previousPushAmount = null, this._resizeSubscription.unsubscribe()
                }
                dispose() {
                    this._isDisposed || (this._boundingBox && ia(this._boundingBox.style, {
                        top: "",
                        left: "",
                        right: "",
                        bottom: "",
                        height: "",
                        width: "",
                        alignItems: "",
                        justifyContent: ""
                    }), this._pane && this._resetOverlayElementStyles(), this._overlayRef && this._overlayRef.hostElement.classList.remove(qE), this.detach(), this._positionChanges.complete(), this._overlayRef = this._boundingBox = null, this._isDisposed = !0)
                }
                reapplyLastPosition() {
                    if (this._isDisposed || !this._platform.isBrowser) return;
                    const n = this._lastPosition;
                    if (n) {
                        this._originRect = this._getOriginRect(), this._overlayRect = this._pane.getBoundingClientRect(), this._viewportRect = this._getNarrowedViewportRect(), this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();
                        const e = this._getOriginPoint(this._originRect, this._containerRect, n);
                        this._applyPosition(n, e)
                    } else this.apply()
                }
                withScrollableContainers(n) {
                    return this._scrollables = n, this
                }
                withPositions(n) {
                    return this._preferredPositions = n, -1 === n.indexOf(this._lastPosition) && (this._lastPosition = null), this._validatePositions(), this
                }
                withViewportMargin(n) {
                    return this._viewportMargin = n, this
                }
                withFlexibleDimensions(n = !0) {
                    return this._hasFlexibleDimensions = n, this
                }
                withGrowAfterOpen(n = !0) {
                    return this._growAfterOpen = n, this
                }
                withPush(n = !0) {
                    return this._canPush = n, this
                }
                withLockedPosition(n = !0) {
                    return this._positionLocked = n, this
                }
                setOrigin(n) {
                    return this._origin = n, this
                }
                withDefaultOffsetX(n) {
                    return this._offsetX = n, this
                }
                withDefaultOffsetY(n) {
                    return this._offsetY = n, this
                }
                withTransformOriginOn(n) {
                    return this._transformOriginSelector = n, this
                }
                _getOriginPoint(n, e, i) {
                    let r, s;
                    if ("center" == i.originX) r = n.left + n.width / 2;
                    else {
                        const o = this._isRtl() ? n.right : n.left,
                            a = this._isRtl() ? n.left : n.right;
                        r = "start" == i.originX ? o : a
                    }
                    return e.left < 0 && (r -= e.left), s = "center" == i.originY ? n.top + n.height / 2 : "top" == i.originY ? n.top : n.bottom, e.top < 0 && (s -= e.top), {
                        x: r,
                        y: s
                    }
                }
                _getOverlayPoint(n, e, i) {
                    let r, s;
                    return r = "center" == i.overlayX ? -e.width / 2 : "start" === i.overlayX ? this._isRtl() ? -e.width : 0 : this._isRtl() ? 0 : -e.width, s = "center" == i.overlayY ? -e.height / 2 : "top" == i.overlayY ? 0 : -e.height, {
                        x: n.x + r,
                        y: n.y + s
                    }
                }
                _getOverlayFit(n, e, i, r) {
                    const s = KE(e);
                    let {
                        x: o,
                        y: a
                    } = n, l = this._getOffset(r, "x"), c = this._getOffset(r, "y");
                    l && (o += l), c && (a += c);
                    let m = 0 - a,
                        _ = a + s.height - i.height,
                        v = this._subtractOverflows(s.width, 0 - o, o + s.width - i.width),
                        D = this._subtractOverflows(s.height, m, _),
                        k = v * D;
                    return {
                        visibleArea: k,
                        isCompletelyWithinViewport: s.width * s.height === k,
                        fitsInViewportVertically: D === s.height,
                        fitsInViewportHorizontally: v == s.width
                    }
                }
                _canFitWithFlexibleDimensions(n, e, i) {
                    if (this._hasFlexibleDimensions) {
                        const r = i.bottom - e.y,
                            s = i.right - e.x,
                            o = QE(this._overlayRef.getConfig().minHeight),
                            a = QE(this._overlayRef.getConfig().minWidth),
                            c = n.fitsInViewportHorizontally || null != a && a <= s;
                        return (n.fitsInViewportVertically || null != o && o <= r) && c
                    }
                    return !1
                }
                _pushOverlayOnScreen(n, e, i) {
                    if (this._previousPushAmount && this._positionLocked) return {
                        x: n.x + this._previousPushAmount.x,
                        y: n.y + this._previousPushAmount.y
                    };
                    const r = KE(e),
                        s = this._viewportRect,
                        o = Math.max(n.x + r.width - s.width, 0),
                        a = Math.max(n.y + r.height - s.height, 0),
                        l = Math.max(s.top - i.top - n.y, 0),
                        c = Math.max(s.left - i.left - n.x, 0);
                    let d = 0,
                        h = 0;
                    return d = r.width <= s.width ? c || -o : n.x < this._viewportMargin ? s.left - i.left - n.x : 0, h = r.height <= s.height ? l || -a : n.y < this._viewportMargin ? s.top - i.top - n.y : 0, this._previousPushAmount = {
                        x: d,
                        y: h
                    }, {
                        x: n.x + d,
                        y: n.y + h
                    }
                }
                _applyPosition(n, e) {
                    if (this._setTransformOrigin(n), this._setOverlayElementStyles(e, n), this._setBoundingBoxStyles(e, n), n.panelClass && this._addPanelClasses(n.panelClass), this._lastPosition = n, this._positionChanges.observers.length) {
                        const i = this._getScrollVisibility(),
                            r = new u8(n, i);
                        this._positionChanges.next(r)
                    }
                    this._isInitialRender = !1
                }
                _setTransformOrigin(n) {
                    if (!this._transformOriginSelector) return;
                    const e = this._boundingBox.querySelectorAll(this._transformOriginSelector);
                    let i, r = n.overlayY;
                    i = "center" === n.overlayX ? "center" : this._isRtl() ? "start" === n.overlayX ? "right" : "left" : "start" === n.overlayX ? "left" : "right";
                    for (let s = 0; s < e.length; s++) e[s].style.transformOrigin = `${i} ${r}`
                }
                _calculateBoundingBoxRect(n, e) {
                    const i = this._viewportRect,
                        r = this._isRtl();
                    let s, o, a, d, h, m;
                    if ("top" === e.overlayY) o = n.y, s = i.height - o + this._viewportMargin;
                    else if ("bottom" === e.overlayY) a = i.height - n.y + 2 * this._viewportMargin, s = i.height - a + this._viewportMargin;
                    else {
                        const _ = Math.min(i.bottom - n.y + i.top, n.y),
                            v = this._lastBoundingBoxSize.height;
                        s = 2 * _, o = n.y - _, s > v && !this._isInitialRender && !this._growAfterOpen && (o = n.y - v / 2)
                    }
                    if ("end" === e.overlayX && !r || "start" === e.overlayX && r) m = i.width - n.x + this._viewportMargin, d = n.x - this._viewportMargin;
                    else if ("start" === e.overlayX && !r || "end" === e.overlayX && r) h = n.x, d = i.right - n.x;
                    else {
                        const _ = Math.min(i.right - n.x + i.left, n.x),
                            v = this._lastBoundingBoxSize.width;
                        d = 2 * _, h = n.x - _, d > v && !this._isInitialRender && !this._growAfterOpen && (h = n.x - v / 2)
                    }
                    return {
                        top: o,
                        left: h,
                        bottom: a,
                        right: m,
                        width: d,
                        height: s
                    }
                }
                _setBoundingBoxStyles(n, e) {
                    const i = this._calculateBoundingBoxRect(n, e);
                    !this._isInitialRender && !this._growAfterOpen && (i.height = Math.min(i.height, this._lastBoundingBoxSize.height), i.width = Math.min(i.width, this._lastBoundingBoxSize.width));
                    const r = {};
                    if (this._hasExactPosition()) r.top = r.left = "0", r.bottom = r.right = r.maxHeight = r.maxWidth = "", r.width = r.height = "100%";
                    else {
                        const s = this._overlayRef.getConfig().maxHeight,
                            o = this._overlayRef.getConfig().maxWidth;
                        r.height = nn(i.height), r.top = nn(i.top), r.bottom = nn(i.bottom), r.width = nn(i.width), r.left = nn(i.left), r.right = nn(i.right), r.alignItems = "center" === e.overlayX ? "center" : "end" === e.overlayX ? "flex-end" : "flex-start", r.justifyContent = "center" === e.overlayY ? "center" : "bottom" === e.overlayY ? "flex-end" : "flex-start", s && (r.maxHeight = nn(s)), o && (r.maxWidth = nn(o))
                    }
                    this._lastBoundingBoxSize = i, ia(this._boundingBox.style, r)
                }
                _resetBoundingBoxStyles() {
                    ia(this._boundingBox.style, {
                        top: "0",
                        left: "0",
                        right: "0",
                        bottom: "0",
                        height: "",
                        width: "",
                        alignItems: "",
                        justifyContent: ""
                    })
                }
                _resetOverlayElementStyles() {
                    ia(this._pane.style, {
                        top: "",
                        left: "",
                        bottom: "",
                        right: "",
                        position: "",
                        transform: ""
                    })
                }
                _setOverlayElementStyles(n, e) {
                    const i = {},
                        r = this._hasExactPosition(),
                        s = this._hasFlexibleDimensions,
                        o = this._overlayRef.getConfig();
                    if (r) {
                        const d = this._viewportRuler.getViewportScrollPosition();
                        ia(i, this._getExactOverlayY(e, n, d)), ia(i, this._getExactOverlayX(e, n, d))
                    } else i.position = "static";
                    let a = "",
                        l = this._getOffset(e, "x"),
                        c = this._getOffset(e, "y");
                    l && (a += `translateX(${l}px) `), c && (a += `translateY(${c}px)`), i.transform = a.trim(), o.maxHeight && (r ? i.maxHeight = nn(o.maxHeight) : s && (i.maxHeight = "")), o.maxWidth && (r ? i.maxWidth = nn(o.maxWidth) : s && (i.maxWidth = "")), ia(this._pane.style, i)
                }
                _getExactOverlayY(n, e, i) {
                    let r = {
                            top: "",
                            bottom: ""
                        },
                        s = this._getOverlayPoint(e, this._overlayRect, n);
                    return this._isPushed && (s = this._pushOverlayOnScreen(s, this._overlayRect, i)), "bottom" === n.overlayY ? r.bottom = this._document.documentElement.clientHeight - (s.y + this._overlayRect.height) + "px" : r.top = nn(s.y), r
                }
                _getExactOverlayX(n, e, i) {
                    let o, r = {
                            left: "",
                            right: ""
                        },
                        s = this._getOverlayPoint(e, this._overlayRect, n);
                    return this._isPushed && (s = this._pushOverlayOnScreen(s, this._overlayRect, i)), o = this._isRtl() ? "end" === n.overlayX ? "left" : "right" : "end" === n.overlayX ? "right" : "left", "right" === o ? r.right = this._document.documentElement.clientWidth - (s.x + this._overlayRect.width) + "px" : r.left = nn(s.x), r
                }
                _getScrollVisibility() {
                    const n = this._getOriginRect(),
                        e = this._pane.getBoundingClientRect(),
                        i = this._scrollables.map(r => r.getElementRef().nativeElement.getBoundingClientRect());
                    return {
                        isOriginClipped: GE(n, i),
                        isOriginOutsideView: Pb(n, i),
                        isOverlayClipped: GE(e, i),
                        isOverlayOutsideView: Pb(e, i)
                    }
                }
                _subtractOverflows(n, ...e) {
                    return e.reduce((i, r) => i - Math.max(r, 0), n)
                }
                _getNarrowedViewportRect() {
                    const n = this._document.documentElement.clientWidth,
                        e = this._document.documentElement.clientHeight,
                        i = this._viewportRuler.getViewportScrollPosition();
                    return {
                        top: i.top + this._viewportMargin,
                        left: i.left + this._viewportMargin,
                        right: i.left + n - this._viewportMargin,
                        bottom: i.top + e - this._viewportMargin,
                        width: n - 2 * this._viewportMargin,
                        height: e - 2 * this._viewportMargin
                    }
                }
                _isRtl() {
                    return "rtl" === this._overlayRef.getDirection()
                }
                _hasExactPosition() {
                    return !this._hasFlexibleDimensions || this._isPushed
                }
                _getOffset(n, e) {
                    return "x" === e ? n.offsetX ? ? this._offsetX : n.offsetY ? ? this._offsetY
                }
                _validatePositions() {}
                _addPanelClasses(n) {
                    this._pane && If(n).forEach(e => {
                        "" !== e && -1 === this._appliedPanelClasses.indexOf(e) && (this._appliedPanelClasses.push(e), this._pane.classList.add(e))
                    })
                }
                _clearPanelClasses() {
                    this._pane && (this._appliedPanelClasses.forEach(n => {
                        this._pane.classList.remove(n)
                    }), this._appliedPanelClasses = [])
                }
                _getOriginRect() {
                    const n = this._origin;
                    if (n instanceof N) return n.nativeElement.getBoundingClientRect();
                    if (n instanceof Element) return n.getBoundingClientRect();
                    const e = n.width || 0,
                        i = n.height || 0;
                    return {
                        top: n.y,
                        bottom: n.y + i,
                        left: n.x,
                        right: n.x + e,
                        height: i,
                        width: e
                    }
                }
            }

            function ia(t, n) {
                for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
                return t
            }

            function QE(t) {
                if ("number" != typeof t && null != t) {
                    const [n, e] = t.split(p8);
                    return e && "px" !== e ? null : parseFloat(n)
                }
                return t || null
            }

            function KE(t) {
                return {
                    top: Math.floor(t.top),
                    right: Math.floor(t.right),
                    bottom: Math.floor(t.bottom),
                    left: Math.floor(t.left),
                    width: Math.floor(t.width),
                    height: Math.floor(t.height)
                }
            }
            const ZE = "cdk-global-overlay-wrapper";
            class m8 {
                constructor() {
                    this._cssPosition = "static", this._topOffset = "", this._bottomOffset = "", this._alignItems = "", this._xPosition = "", this._xOffset = "", this._width = "", this._height = "", this._isDisposed = !1
                }
                attach(n) {
                    const e = n.getConfig();
                    this._overlayRef = n, this._width && !e.width && n.updateSize({
                        width: this._width
                    }), this._height && !e.height && n.updateSize({
                        height: this._height
                    }), n.hostElement.classList.add(ZE), this._isDisposed = !1
                }
                top(n = "") {
                    return this._bottomOffset = "", this._topOffset = n, this._alignItems = "flex-start", this
                }
                left(n = "") {
                    return this._xOffset = n, this._xPosition = "left", this
                }
                bottom(n = "") {
                    return this._topOffset = "", this._bottomOffset = n, this._alignItems = "flex-end", this
                }
                right(n = "") {
                    return this._xOffset = n, this._xPosition = "right", this
                }
                start(n = "") {
                    return this._xOffset = n, this._xPosition = "start", this
                }
                end(n = "") {
                    return this._xOffset = n, this._xPosition = "end", this
                }
                width(n = "") {
                    return this._overlayRef ? this._overlayRef.updateSize({
                        width: n
                    }) : this._width = n, this
                }
                height(n = "") {
                    return this._overlayRef ? this._overlayRef.updateSize({
                        height: n
                    }) : this._height = n, this
                }
                centerHorizontally(n = "") {
                    return this.left(n), this._xPosition = "center", this
                }
                centerVertically(n = "") {
                    return this.top(n), this._alignItems = "center", this
                }
                apply() {
                    if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
                    const n = this._overlayRef.overlayElement.style,
                        e = this._overlayRef.hostElement.style,
                        i = this._overlayRef.getConfig(),
                        {
                            width: r,
                            height: s,
                            maxWidth: o,
                            maxHeight: a
                        } = i,
                        l = !("100%" !== r && "100vw" !== r || o && "100%" !== o && "100vw" !== o),
                        c = !("100%" !== s && "100vh" !== s || a && "100%" !== a && "100vh" !== a),
                        d = this._xPosition,
                        h = this._xOffset,
                        m = "rtl" === this._overlayRef.getConfig().direction;
                    let _ = "",
                        v = "",
                        D = "";
                    l ? D = "flex-start" : "center" === d ? (D = "center", m ? v = h : _ = h) : m ? "left" === d || "end" === d ? (D = "flex-end", _ = h) : ("right" === d || "start" === d) && (D = "flex-start", v = h) : "left" === d || "start" === d ? (D = "flex-start", _ = h) : ("right" === d || "end" === d) && (D = "flex-end", v = h), n.position = this._cssPosition, n.marginLeft = l ? "0" : _, n.marginTop = c ? "0" : this._topOffset, n.marginBottom = this._bottomOffset, n.marginRight = l ? "0" : v, e.justifyContent = D, e.alignItems = c ? "flex-start" : this._alignItems
                }
                dispose() {
                    if (this._isDisposed || !this._overlayRef) return;
                    const n = this._overlayRef.overlayElement.style,
                        e = this._overlayRef.hostElement,
                        i = e.style;
                    e.classList.remove(ZE), i.justifyContent = i.alignItems = n.marginTop = n.marginBottom = n.marginLeft = n.marginRight = n.position = "", this._overlayRef = null, this._isDisposed = !0
                }
            }
            let g8 = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._viewportRuler = e, this._document = i, this._platform = r, this._overlayContainer = s
                        }
                        global() {
                            return new m8
                        }
                        flexibleConnectedTo(e) {
                            return new YE(e, this._viewportRuler, this._document, this._platform, this._overlayContainer)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Hr), C(pe), C(Ft), C(Gf))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                _8 = 0,
                vn = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l, c, d, h, m, _) {
                            this.scrollStrategies = e, this._overlayContainer = i, this._componentFactoryResolver = r, this._positionBuilder = s, this._keyboardDispatcher = o, this._injector = a, this._ngZone = l, this._document = c, this._directionality = d, this._location = h, this._outsideClickDispatcher = m, this._animationsModuleType = _
                        }
                        create(e) {
                            const i = this._createHostElement(),
                                r = this._createPaneElement(i),
                                s = this._createPortalOutlet(r),
                                o = new na(e);
                            return o.direction = o.direction || this._directionality.value, new Ld(s, i, r, o, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, "NoopAnimations" === this._animationsModuleType)
                        }
                        position() {
                            return this._positionBuilder
                        }
                        _createPaneElement(e) {
                            const i = this._document.createElement("div");
                            return i.id = "cdk-overlay-" + _8++, i.classList.add("cdk-overlay-pane"), e.appendChild(i), i
                        }
                        _createHostElement() {
                            const e = this._document.createElement("div");
                            return this._overlayContainer.getContainerElement().appendChild(e), e
                        }
                        _createPortalOutlet(e) {
                            return this._appRef || (this._appRef = this._injector.get(Lr)), new zE(e, this._componentFactoryResolver, this._appRef, this._injector, this._document)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(d8), C(Gf), C(Ci), C(g8), C(h8), C(Ct), C(ce), C(pe), C(Mt), C(od), C(f8), C(Tt, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
            const y8 = [{
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "top"
                }, {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "bottom"
                }, {
                    originX: "end",
                    originY: "top",
                    overlayX: "end",
                    overlayY: "bottom"
                }, {
                    originX: "end",
                    originY: "bottom",
                    overlayX: "end",
                    overlayY: "top"
                }],
                XE = new R("cdk-connected-overlay-scroll-strategy");
            let JE = (() => {
                    class t {
                        constructor(e) {
                            this.elementRef = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdk-overlay-origin", ""],
                            ["", "overlay-origin", ""],
                            ["", "cdkOverlayOrigin", ""]
                        ],
                        exportAs: ["cdkOverlayOrigin"]
                    }), t
                })(),
                e1 = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._overlay = e, this._dir = o, this._hasBackdrop = !1, this._lockPosition = !1, this._growAfterOpen = !1, this._flexibleDimensions = !1, this._push = !1, this._backdropSubscription = Re.EMPTY, this._attachSubscription = Re.EMPTY, this._detachSubscription = Re.EMPTY, this._positionSubscription = Re.EMPTY, this.viewportMargin = 0, this.open = !1, this.disableClose = !1, this.backdropClick = new V, this.positionChange = new V, this.attach = new V, this.detach = new V, this.overlayKeydown = new V, this.overlayOutsideClick = new V, this._templatePortal = new yr(i, r), this._scrollStrategyFactory = s, this.scrollStrategy = this._scrollStrategyFactory()
                        }
                        get offsetX() {
                            return this._offsetX
                        }
                        set offsetX(e) {
                            this._offsetX = e, this._position && this._updatePositionStrategy(this._position)
                        }
                        get offsetY() {
                            return this._offsetY
                        }
                        set offsetY(e) {
                            this._offsetY = e, this._position && this._updatePositionStrategy(this._position)
                        }
                        get hasBackdrop() {
                            return this._hasBackdrop
                        }
                        set hasBackdrop(e) {
                            this._hasBackdrop = G(e)
                        }
                        get lockPosition() {
                            return this._lockPosition
                        }
                        set lockPosition(e) {
                            this._lockPosition = G(e)
                        }
                        get flexibleDimensions() {
                            return this._flexibleDimensions
                        }
                        set flexibleDimensions(e) {
                            this._flexibleDimensions = G(e)
                        }
                        get growAfterOpen() {
                            return this._growAfterOpen
                        }
                        set growAfterOpen(e) {
                            this._growAfterOpen = G(e)
                        }
                        get push() {
                            return this._push
                        }
                        set push(e) {
                            this._push = G(e)
                        }
                        get overlayRef() {
                            return this._overlayRef
                        }
                        get dir() {
                            return this._dir ? this._dir.value : "ltr"
                        }
                        ngOnDestroy() {
                            this._attachSubscription.unsubscribe(), this._detachSubscription.unsubscribe(), this._backdropSubscription.unsubscribe(), this._positionSubscription.unsubscribe(), this._overlayRef && this._overlayRef.dispose()
                        }
                        ngOnChanges(e) {
                            this._position && (this._updatePositionStrategy(this._position), this._overlayRef.updateSize({
                                width: this.width,
                                minWidth: this.minWidth,
                                height: this.height,
                                minHeight: this.minHeight
                            }), e.origin && this.open && this._position.apply()), e.open && (this.open ? this._attachOverlay() : this._detachOverlay())
                        }
                        _createOverlay() {
                            (!this.positions || !this.positions.length) && (this.positions = y8);
                            const e = this._overlayRef = this._overlay.create(this._buildConfig());
                            this._attachSubscription = e.attachments().subscribe(() => this.attach.emit()), this._detachSubscription = e.detachments().subscribe(() => this.detach.emit()), e.keydownEvents().subscribe(i => {
                                this.overlayKeydown.next(i), 27 === i.keyCode && !this.disableClose && !$t(i) && (i.preventDefault(), this._detachOverlay())
                            }), this._overlayRef.outsidePointerEvents().subscribe(i => {
                                this.overlayOutsideClick.next(i)
                            })
                        }
                        _buildConfig() {
                            const e = this._position = this.positionStrategy || this._createPositionStrategy(),
                                i = new na({
                                    direction: this._dir,
                                    positionStrategy: e,
                                    scrollStrategy: this.scrollStrategy,
                                    hasBackdrop: this.hasBackdrop
                                });
                            return (this.width || 0 === this.width) && (i.width = this.width), (this.height || 0 === this.height) && (i.height = this.height), (this.minWidth || 0 === this.minWidth) && (i.minWidth = this.minWidth), (this.minHeight || 0 === this.minHeight) && (i.minHeight = this.minHeight), this.backdropClass && (i.backdropClass = this.backdropClass), this.panelClass && (i.panelClass = this.panelClass), i
                        }
                        _updatePositionStrategy(e) {
                            const i = this.positions.map(r => ({
                                originX: r.originX,
                                originY: r.originY,
                                overlayX: r.overlayX,
                                overlayY: r.overlayY,
                                offsetX: r.offsetX || this.offsetX,
                                offsetY: r.offsetY || this.offsetY,
                                panelClass: r.panelClass || void 0
                            }));
                            return e.setOrigin(this._getFlexibleConnectedPositionStrategyOrigin()).withPositions(i).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector)
                        }
                        _createPositionStrategy() {
                            const e = this._overlay.position().flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());
                            return this._updatePositionStrategy(e), e
                        }
                        _getFlexibleConnectedPositionStrategyOrigin() {
                            return this.origin instanceof JE ? this.origin.elementRef : this.origin
                        }
                        _attachOverlay() {
                            this._overlayRef ? this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop : this._createOverlay(), this._overlayRef.hasAttached() || this._overlayRef.attach(this._templatePortal), this.hasBackdrop ? this._backdropSubscription = this._overlayRef.backdropClick().subscribe(e => {
                                this.backdropClick.emit(e)
                            }) : this._backdropSubscription.unsubscribe(), this._positionSubscription.unsubscribe(), this.positionChange.observers.length > 0 && (this._positionSubscription = this._position.positionChanges.pipe(zy(() => this.positionChange.observers.length > 0)).subscribe(e => {
                                this.positionChange.emit(e), 0 === this.positionChange.observers.length && this._positionSubscription.unsubscribe()
                            }))
                        }
                        _detachOverlay() {
                            this._overlayRef && this._overlayRef.detach(), this._backdropSubscription.unsubscribe(), this._positionSubscription.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(vn), u(rt), u(Je), u(XE), u(Mt, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdk-connected-overlay", ""],
                            ["", "connected-overlay", ""],
                            ["", "cdkConnectedOverlay", ""]
                        ],
                        inputs: {
                            origin: ["cdkConnectedOverlayOrigin", "origin"],
                            positions: ["cdkConnectedOverlayPositions", "positions"],
                            positionStrategy: ["cdkConnectedOverlayPositionStrategy", "positionStrategy"],
                            offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                            offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                            width: ["cdkConnectedOverlayWidth", "width"],
                            height: ["cdkConnectedOverlayHeight", "height"],
                            minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                            minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                            backdropClass: ["cdkConnectedOverlayBackdropClass", "backdropClass"],
                            panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                            viewportMargin: ["cdkConnectedOverlayViewportMargin", "viewportMargin"],
                            scrollStrategy: ["cdkConnectedOverlayScrollStrategy", "scrollStrategy"],
                            open: ["cdkConnectedOverlayOpen", "open"],
                            disableClose: ["cdkConnectedOverlayDisableClose", "disableClose"],
                            transformOriginSelector: ["cdkConnectedOverlayTransformOriginOn", "transformOriginSelector"],
                            hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                            lockPosition: ["cdkConnectedOverlayLockPosition", "lockPosition"],
                            flexibleDimensions: ["cdkConnectedOverlayFlexibleDimensions", "flexibleDimensions"],
                            growAfterOpen: ["cdkConnectedOverlayGrowAfterOpen", "growAfterOpen"],
                            push: ["cdkConnectedOverlayPush", "push"]
                        },
                        outputs: {
                            backdropClick: "backdropClick",
                            positionChange: "positionChange",
                            attach: "attach",
                            detach: "detach",
                            overlayKeydown: "overlayKeydown",
                            overlayOutsideClick: "overlayOutsideClick"
                        },
                        exportAs: ["cdkConnectedOverlay"],
                        features: [ze]
                    }), t
                })();
            const v8 = {
                provide: XE,
                deps: [vn],
                useFactory: function b8(t) {
                    return () => t.scrollStrategies.reposition()
                }
            };
            let to = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    providers: [vn, v8],
                    imports: [ta, $r, Fb, Fb]
                }), t
            })();

            function w8(t, n) {}
            class Wf {
                constructor() {
                    this.role = "dialog", this.panelClass = "", this.hasBackdrop = !0, this.backdropClass = "", this.disableClose = !1, this.width = "", this.height = "", this.data = null, this.ariaDescribedBy = null, this.ariaLabelledBy = null, this.ariaLabel = null, this.ariaModal = !0, this.autoFocus = "first-tabbable", this.restoreFocus = !0, this.closeOnNavigation = !0, this.closeOnDestroy = !0
                }
            }
            let t1 = (() => {
                class t extends zf {
                    constructor(e, i, r, s, o, a, l, c) {
                        super(), this._elementRef = e, this._focusTrapFactory = i, this._config = s, this._interactivityChecker = o, this._ngZone = a, this._overlayRef = l, this._focusMonitor = c, this._elementFocusedBeforeDialogWasOpened = null, this._closeInteractionType = null, this.attachDomPortal = d => {
                            this._portalOutlet.hasAttached();
                            const h = this._portalOutlet.attachDomPortal(d);
                            return this._contentAttached(), h
                        }, this._ariaLabelledBy = this._config.ariaLabelledBy || null, this._document = r
                    }
                    _contentAttached() {
                        this._initializeFocusTrap(), this._handleBackdropClicks(), this._captureInitialFocus()
                    }
                    _captureInitialFocus() {
                        this._trapFocus()
                    }
                    ngOnDestroy() {
                        this._restoreFocus()
                    }
                    attachComponentPortal(e) {
                        this._portalOutlet.hasAttached();
                        const i = this._portalOutlet.attachComponentPortal(e);
                        return this._contentAttached(), i
                    }
                    attachTemplatePortal(e) {
                        this._portalOutlet.hasAttached();
                        const i = this._portalOutlet.attachTemplatePortal(e);
                        return this._contentAttached(), i
                    }
                    _recaptureFocus() {
                        this._containsFocus() || this._trapFocus()
                    }
                    _forceFocus(e, i) {
                        this._interactivityChecker.isFocusable(e) || (e.tabIndex = -1, this._ngZone.runOutsideAngular(() => {
                            const r = () => {
                                e.removeEventListener("blur", r), e.removeEventListener("mousedown", r), e.removeAttribute("tabindex")
                            };
                            e.addEventListener("blur", r), e.addEventListener("mousedown", r)
                        })), e.focus(i)
                    }
                    _focusByCssSelector(e, i) {
                        let r = this._elementRef.nativeElement.querySelector(e);
                        r && this._forceFocus(r, i)
                    }
                    _trapFocus() {
                        const e = this._elementRef.nativeElement;
                        switch (this._config.autoFocus) {
                            case !1:
                            case "dialog":
                                this._containsFocus() || e.focus();
                                break;
                            case !0:
                            case "first-tabbable":
                                this._focusTrap.focusInitialElementWhenReady().then(i => {
                                    i || this._focusDialogContainer()
                                });
                                break;
                            case "first-heading":
                                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');
                                break;
                            default:
                                this._focusByCssSelector(this._config.autoFocus)
                        }
                    }
                    _restoreFocus() {
                        const e = this._config.restoreFocus;
                        let i = null;
                        if ("string" == typeof e ? i = this._document.querySelector(e) : "boolean" == typeof e ? i = e ? this._elementFocusedBeforeDialogWasOpened : null : e && (i = e), this._config.restoreFocus && i && "function" == typeof i.focus) {
                            const r = Al(),
                                s = this._elementRef.nativeElement;
                            (!r || r === this._document.body || r === s || s.contains(r)) && (this._focusMonitor ? (this._focusMonitor.focusVia(i, this._closeInteractionType), this._closeInteractionType = null) : i.focus())
                        }
                        this._focusTrap && this._focusTrap.destroy()
                    }
                    _focusDialogContainer() {
                        this._elementRef.nativeElement.focus && this._elementRef.nativeElement.focus()
                    }
                    _containsFocus() {
                        const e = this._elementRef.nativeElement,
                            i = Al();
                        return e === i || e.contains(i)
                    }
                    _initializeFocusTrap() {
                        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement), this._document && (this._elementFocusedBeforeDialogWasOpened = Al())
                    }
                    _handleBackdropClicks() {
                        this._overlayRef.backdropClick().subscribe(() => {
                            this._config.disableClose && this._recaptureFocus()
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(Nf), u(pe, 8), u(Wf), u(Lf), u(ce), u(Ld), u(dn))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["cdk-dialog-container"]
                    ],
                    viewQuery: function(e, i) {
                        if (1 & e && J(Ki, 7), 2 & e) {
                            let r;
                            O(r = P()) && (i._portalOutlet = r.first)
                        }
                    },
                    hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
                    hostVars: 6,
                    hostBindings: function(e, i) {
                        2 & e && q("id", i._config.id || null)("role", i._config.role)("aria-modal", i._config.ariaModal)("aria-labelledby", i._config.ariaLabel ? null : i._ariaLabelledBy)("aria-label", i._config.ariaLabel)("aria-describedby", i._config.ariaDescribedBy || null)
                    },
                    features: [A],
                    decls: 1,
                    vars: 0,
                    consts: [
                        ["cdkPortalOutlet", ""]
                    ],
                    template: function(e, i) {
                        1 & e && b(0, w8, 0, 0, "ng-template", 0)
                    },
                    dependencies: [Ki],
                    styles: [".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}"],
                    encapsulation: 2
                }), t
            })();
            class Lb {
                constructor(n, e) {
                    this.overlayRef = n, this.config = e, this.closed = new H, this.disableClose = e.disableClose, this.backdropClick = n.backdropClick(), this.keydownEvents = n.keydownEvents(), this.outsidePointerEvents = n.outsidePointerEvents(), this.id = e.id, this.keydownEvents.subscribe(i => {
                        27 === i.keyCode && !this.disableClose && !$t(i) && (i.preventDefault(), this.close(void 0, {
                            focusOrigin: "keyboard"
                        }))
                    }), this.backdropClick.subscribe(() => {
                        this.disableClose || this.close(void 0, {
                            focusOrigin: "mouse"
                        })
                    })
                }
                close(n, e) {
                    if (this.containerInstance) {
                        const i = this.closed;
                        this.containerInstance._closeInteractionType = e ? .focusOrigin || "program", this.overlayRef.dispose(), i.next(n), i.complete(), this.componentInstance = this.containerInstance = null
                    }
                }
                updatePosition() {
                    return this.overlayRef.updatePosition(), this
                }
                updateSize(n = "", e = "") {
                    return this.overlayRef.updateSize({
                        width: n,
                        height: e
                    }), this
                }
                addPanelClass(n) {
                    return this.overlayRef.addPanelClass(n), this
                }
                removePanelClass(n) {
                    return this.overlayRef.removePanelClass(n), this
                }
            }
            const n1 = new R("DialogScrollStrategy"),
                C8 = new R("DialogData"),
                x8 = new R("DefaultDialogConfig"),
                M8 = {
                    provide: n1,
                    deps: [vn],
                    useFactory: function D8(t) {
                        return () => t.scrollStrategies.block()
                    }
                };
            let S8 = 0,
                r1 = (() => {
                    class t {
                        constructor(e, i, r, s, o, a) {
                            this._overlay = e, this._injector = i, this._defaultOptions = r, this._parentDialog = s, this._overlayContainer = o, this._openDialogsAtThisLevel = [], this._afterAllClosedAtThisLevel = new H, this._afterOpenedAtThisLevel = new H, this._ariaHiddenElements = new Map, this.afterAllClosed = Ys(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(pt(void 0))), this._scrollStrategy = a
                        }
                        get openDialogs() {
                            return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel
                        }
                        get afterOpened() {
                            return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel
                        }
                        open(e, i) {
                            (i = { ...this._defaultOptions || new Wf,
                                ...i
                            }).id = i.id || "cdk-dialog-" + S8++, i.id && this.getDialogById(i.id);
                            const s = this._getOverlayConfig(i),
                                o = this._overlay.create(s),
                                a = new Lb(o, i),
                                l = this._attachContainer(o, a, i);
                            return a.containerInstance = l, this._attachDialogContent(e, a, l, i), this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(), this.openDialogs.push(a), a.closed.subscribe(() => this._removeOpenDialog(a, !0)), this.afterOpened.next(a), a
                        }
                        closeAll() {
                            Nb(this.openDialogs, e => e.close())
                        }
                        getDialogById(e) {
                            return this.openDialogs.find(i => i.id === e)
                        }
                        ngOnDestroy() {
                            Nb(this._openDialogsAtThisLevel, e => {
                                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1)
                            }), Nb(this._openDialogsAtThisLevel, e => e.close()), this._afterAllClosedAtThisLevel.complete(), this._afterOpenedAtThisLevel.complete(), this._openDialogsAtThisLevel = []
                        }
                        _getOverlayConfig(e) {
                            const i = new na({
                                positionStrategy: e.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),
                                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                                panelClass: e.panelClass,
                                hasBackdrop: e.hasBackdrop,
                                direction: e.direction,
                                minWidth: e.minWidth,
                                minHeight: e.minHeight,
                                maxWidth: e.maxWidth,
                                maxHeight: e.maxHeight,
                                width: e.width,
                                height: e.height,
                                disposeOnNavigation: e.closeOnNavigation
                            });
                            return e.backdropClass && (i.backdropClass = e.backdropClass), i
                        }
                        _attachContainer(e, i, r) {
                            const s = r.injector || r.viewContainerRef ? .injector,
                                o = [{
                                    provide: Wf,
                                    useValue: r
                                }, {
                                    provide: Lb,
                                    useValue: i
                                }, {
                                    provide: Ld,
                                    useValue: e
                                }];
                            let a;
                            r.container ? "function" == typeof r.container ? a = r.container : (a = r.container.type, o.push(...r.container.providers(r))) : a = t1;
                            const l = new eo(a, r.viewContainerRef, Ct.create({
                                parent: s || this._injector,
                                providers: o
                            }), r.componentFactoryResolver);
                            return e.attach(l).instance
                        }
                        _attachDialogContent(e, i, r, s) {
                            if (e instanceof rt) {
                                const o = this._createInjector(s, i, r, void 0);
                                let a = {
                                    $implicit: s.data,
                                    dialogRef: i
                                };
                                s.templateContext && (a = { ...a,
                                    ..."function" == typeof s.templateContext ? s.templateContext() : s.templateContext
                                }), r.attachTemplatePortal(new yr(e, null, a, o))
                            } else {
                                const o = this._createInjector(s, i, r, this._injector),
                                    a = r.attachComponentPortal(new eo(e, s.viewContainerRef, o, s.componentFactoryResolver));
                                i.componentInstance = a.instance
                            }
                        }
                        _createInjector(e, i, r, s) {
                            const o = e.injector || e.viewContainerRef ? .injector,
                                a = [{
                                    provide: C8,
                                    useValue: e.data
                                }, {
                                    provide: Lb,
                                    useValue: i
                                }];
                            return e.providers && ("function" == typeof e.providers ? a.push(...e.providers(i, e, r)) : a.push(...e.providers)), e.direction && (!o || !o.get(Mt, null, xe.Optional)) && a.push({
                                provide: Mt,
                                useValue: {
                                    value: e.direction,
                                    change: z()
                                }
                            }), Ct.create({
                                parent: o || s,
                                providers: a
                            })
                        }
                        _removeOpenDialog(e, i) {
                            const r = this.openDialogs.indexOf(e);
                            r > -1 && (this.openDialogs.splice(r, 1), this.openDialogs.length || (this._ariaHiddenElements.forEach((s, o) => {
                                s ? o.setAttribute("aria-hidden", s) : o.removeAttribute("aria-hidden")
                            }), this._ariaHiddenElements.clear(), i && this._getAfterAllClosed().next()))
                        }
                        _hideNonDialogContentFromAssistiveTechnology() {
                            const e = this._overlayContainer.getContainerElement();
                            if (e.parentElement) {
                                const i = e.parentElement.children;
                                for (let r = i.length - 1; r > -1; r--) {
                                    const s = i[r];
                                    s !== e && "SCRIPT" !== s.nodeName && "STYLE" !== s.nodeName && !s.hasAttribute("aria-live") && (this._ariaHiddenElements.set(s, s.getAttribute("aria-hidden")), s.setAttribute("aria-hidden", "true"))
                                }
                            }
                        }
                        _getAfterAllClosed() {
                            const e = this._parentDialog;
                            return e ? e._getAfterAllClosed() : this._afterAllClosedAtThisLevel
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(vn), C(Ct), C(x8, 8), C(t, 12), C(Gf), C(n1))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();

            function Nb(t, n) {
                let e = t.length;
                for (; e--;) n(t[e])
            }
            let s1 = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    providers: [r1, M8],
                    imports: [to, $r, Fd, $r]
                }), t
            })();
            const k8 = ["*", [
                    ["mat-option"],
                    ["ng-container"]
                ]],
                A8 = ["*", "mat-option, ng-container"];

            function E8(t, n) {
                if (1 & t && E(0, "mat-pseudo-checkbox", 4), 2 & t) {
                    const e = x();
                    y("state", e.selected ? "checked" : "unchecked")("disabled", e.disabled)
                }
            }

            function T8(t, n) {
                if (1 & t && (f(0, "span", 5), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), X("(", e.group.label, ")")
                }
            }
            const I8 = ["*"];
            let Bb = (() => {
                    class t {}
                    return t.STANDARD_CURVE = "cubic-bezier(0.4,0.0,0.2,1)", t.DECELERATION_CURVE = "cubic-bezier(0.0,0.0,0.2,1)", t.ACCELERATION_CURVE = "cubic-bezier(0.4,0.0,1,1)", t.SHARP_CURVE = "cubic-bezier(0.4,0.0,0.6,1)", t
                })(),
                Vb = (() => {
                    class t {}
                    return t.COMPLEX = "375ms", t.ENTERING = "225ms", t.EXITING = "195ms", t
                })();
            const F8 = new R("mat-sanity-checks", {
                providedIn: "root",
                factory: function R8() {
                    return !0
                }
            });
            let de = (() => {
                class t {
                    constructor(e, i, r) {
                        this._sanityChecks = i, this._document = r, this._hasDoneGlobalChecks = !1, e._applyBodyHighContrastModeCssClasses(), this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0)
                    }
                    _checkIsEnabled(e) {
                        return !bb() && ("boolean" == typeof this._sanityChecks ? this._sanityChecks : !!this._sanityChecks[e])
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(VE), C(F8, 8), C(pe))
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [ta, ta]
                }), t
            })();

            function Si(t) {
                return class extends t {
                    constructor(...n) {
                        super(...n), this._disabled = !1
                    }
                    get disabled() {
                        return this._disabled
                    }
                    set disabled(n) {
                        this._disabled = G(n)
                    }
                }
            }

            function Zi(t, n) {
                return class extends t {
                    constructor(...e) {
                        super(...e), this.defaultColor = n, this.color = n
                    }
                    get color() {
                        return this._color
                    }
                    set color(e) {
                        const i = e || this.defaultColor;
                        i !== this._color && (this._color && this._elementRef.nativeElement.classList.remove(`mat-${this._color}`), i && this._elementRef.nativeElement.classList.add(`mat-${i}`), this._color = i)
                    }
                }
            }

            function br(t) {
                return class extends t {
                    constructor(...n) {
                        super(...n), this._disableRipple = !1
                    }
                    get disableRipple() {
                        return this._disableRipple
                    }
                    set disableRipple(n) {
                        this._disableRipple = G(n)
                    }
                }
            }

            function no(t, n = 0) {
                return class extends t {
                    constructor(...e) {
                        super(...e), this._tabIndex = n, this.defaultTabIndex = n
                    }
                    get tabIndex() {
                        return this.disabled ? -1 : this._tabIndex
                    }
                    set tabIndex(e) {
                        this._tabIndex = null != e ? ht(e) : this.defaultTabIndex
                    }
                }
            }

            function Hb(t) {
                return class extends t {
                    constructor(...n) {
                        super(...n), this.errorState = !1
                    }
                    updateErrorState() {
                        const n = this.errorState,
                            s = (this.errorStateMatcher || this._defaultErrorStateMatcher).isErrorState(this.ngControl ? this.ngControl.control : null, this._parentFormGroup || this._parentForm);
                        s !== n && (this.errorState = s, this.stateChanges.next())
                    }
                }
            }

            function l1(t) {
                return class extends t {
                    constructor(...n) {
                        super(...n), this._isInitialized = !1, this._pendingSubscribers = [], this.initialized = new Ze(e => {
                            this._isInitialized ? this._notifySubscriber(e) : this._pendingSubscribers.push(e)
                        })
                    }
                    _markInitialized() {
                        this._isInitialized = !0, this._pendingSubscribers.forEach(this._notifySubscriber), this._pendingSubscribers = null
                    }
                    _notifySubscriber(n) {
                        n.next(), n.complete()
                    }
                }
            }
            const O8 = new R("MAT_DATE_LOCALE", {
                providedIn: "root",
                factory: function P8() {
                    return st(Gi)
                }
            });
            class kn {
                constructor() {
                    this._localeChanges = new H, this.localeChanges = this._localeChanges
                }
                getValidDateOrNull(n) {
                    return this.isDateInstance(n) && this.isValid(n) ? n : null
                }
                deserialize(n) {
                    return null == n || this.isDateInstance(n) && this.isValid(n) ? n : this.invalid()
                }
                setLocale(n) {
                    this.locale = n, this._localeChanges.next()
                }
                compareDate(n, e) {
                    return this.getYear(n) - this.getYear(e) || this.getMonth(n) - this.getMonth(e) || this.getDate(n) - this.getDate(e)
                }
                sameDate(n, e) {
                    if (n && e) {
                        let i = this.isValid(n),
                            r = this.isValid(e);
                        return i && r ? !this.compareDate(n, e) : i == r
                    }
                    return n == e
                }
                clampDate(n, e, i) {
                    return e && this.compareDate(n, e) < 0 ? e : i && this.compareDate(n, i) > 0 ? i : n
                }
            }
            const ra = new R("mat-date-formats"),
                L8 = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;

            function $b(t, n) {
                const e = Array(t);
                for (let i = 0; i < t; i++) e[i] = n(i);
                return e
            }
            let N8 = (() => {
                class t extends kn {
                    constructor(e, i) {
                        super(), this.useUtcForDisplay = !1, super.setLocale(e)
                    }
                    getYear(e) {
                        return e.getFullYear()
                    }
                    getMonth(e) {
                        return e.getMonth()
                    }
                    getDate(e) {
                        return e.getDate()
                    }
                    getDayOfWeek(e) {
                        return e.getDay()
                    }
                    getMonthNames(e) {
                        const i = new Intl.DateTimeFormat(this.locale, {
                            month: e,
                            timeZone: "utc"
                        });
                        return $b(12, r => this._format(i, new Date(2017, r, 1)))
                    }
                    getDateNames() {
                        const e = new Intl.DateTimeFormat(this.locale, {
                            day: "numeric",
                            timeZone: "utc"
                        });
                        return $b(31, i => this._format(e, new Date(2017, 0, i + 1)))
                    }
                    getDayOfWeekNames(e) {
                        const i = new Intl.DateTimeFormat(this.locale, {
                            weekday: e,
                            timeZone: "utc"
                        });
                        return $b(7, r => this._format(i, new Date(2017, 0, r + 1)))
                    }
                    getYearName(e) {
                        const i = new Intl.DateTimeFormat(this.locale, {
                            year: "numeric",
                            timeZone: "utc"
                        });
                        return this._format(i, e)
                    }
                    getFirstDayOfWeek() {
                        return 0
                    }
                    getNumDaysInMonth(e) {
                        return this.getDate(this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0))
                    }
                    clone(e) {
                        return new Date(e.getTime())
                    }
                    createDate(e, i, r) {
                        let s = this._createDateWithOverflow(e, i, r);
                        return s.getMonth(), s
                    }
                    today() {
                        return new Date
                    }
                    parse(e, i) {
                        return "number" == typeof e ? new Date(e) : e ? new Date(Date.parse(e)) : null
                    }
                    format(e, i) {
                        if (!this.isValid(e)) throw Error("NativeDateAdapter: Cannot format invalid date.");
                        const r = new Intl.DateTimeFormat(this.locale, { ...i,
                            timeZone: "utc"
                        });
                        return this._format(r, e)
                    }
                    addCalendarYears(e, i) {
                        return this.addCalendarMonths(e, 12 * i)
                    }
                    addCalendarMonths(e, i) {
                        let r = this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + i, this.getDate(e));
                        return this.getMonth(r) != ((this.getMonth(e) + i) % 12 + 12) % 12 && (r = this._createDateWithOverflow(this.getYear(r), this.getMonth(r), 0)), r
                    }
                    addCalendarDays(e, i) {
                        return this._createDateWithOverflow(this.getYear(e), this.getMonth(e), this.getDate(e) + i)
                    }
                    toIso8601(e) {
                        return [e.getUTCFullYear(), this._2digit(e.getUTCMonth() + 1), this._2digit(e.getUTCDate())].join("-")
                    }
                    deserialize(e) {
                        if ("string" == typeof e) {
                            if (!e) return null;
                            if (L8.test(e)) {
                                let i = new Date(e);
                                if (this.isValid(i)) return i
                            }
                        }
                        return super.deserialize(e)
                    }
                    isDateInstance(e) {
                        return e instanceof Date
                    }
                    isValid(e) {
                        return !isNaN(e.getTime())
                    }
                    invalid() {
                        return new Date(NaN)
                    }
                    _createDateWithOverflow(e, i, r) {
                        const s = new Date;
                        return s.setFullYear(e, i, r), s.setHours(0, 0, 0, 0), s
                    }
                    _2digit(e) {
                        return ("00" + e).slice(-2)
                    }
                    _format(e, i) {
                        const r = new Date;
                        return r.setUTCFullYear(i.getFullYear(), i.getMonth(), i.getDate()), r.setUTCHours(i.getHours(), i.getMinutes(), i.getSeconds(), i.getMilliseconds()), e.format(r)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(O8, 8), C(Ft))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const B8 = {
                parse: {
                    dateInput: null
                },
                display: {
                    dateInput: {
                        year: "numeric",
                        month: "numeric",
                        day: "numeric"
                    },
                    monthYearLabel: {
                        year: "numeric",
                        month: "short"
                    },
                    dateA11yLabel: {
                        year: "numeric",
                        month: "long",
                        day: "numeric"
                    },
                    monthYearA11yLabel: {
                        year: "numeric",
                        month: "long"
                    }
                }
            };
            let V8 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [{
                            provide: kn,
                            useClass: N8
                        }]
                    }), t
                })(),
                c1 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [{
                            provide: ra,
                            useValue: B8
                        }],
                        imports: [V8]
                    }), t
                })(),
                io = (() => {
                    class t {
                        isErrorState(e, i) {
                            return !!(e && e.invalid && (e.touched || i && i.submitted))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                d1 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-line", ""],
                            ["", "matLine", ""]
                        ],
                        hostAttrs: [1, "mat-line"]
                    }), t
                })();

            function Nd(t, n, e) {
                t.nativeElement.classList.toggle(n, e)
            }
            let qf = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [de, de]
                }), t
            })();
            class H8 {
                constructor(n, e, i, r = !1) {
                    this._renderer = n, this.element = e, this.config = i, this._animationForciblyDisabledThroughCss = r, this.state = 3
                }
                fadeOut() {
                    this._renderer.fadeOutRipple(this)
                }
            }
            const h1 = {
                    enterDuration: 225,
                    exitDuration: 150
                },
                jb = Zs({
                    passive: !0
                }),
                f1 = ["mousedown", "touchstart"],
                p1 = ["mouseup", "mouseleave", "touchend", "touchcancel"];
            class m1 {
                constructor(n, e, i, r) {
                    this._target = n, this._ngZone = e, this._isPointerDown = !1, this._activeRipples = new Map, this._pointerUpEventsRegistered = !1, r.isBrowser && (this._containerElement = bs(i))
                }
                fadeInRipple(n, e, i = {}) {
                    const r = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect(),
                        s = { ...h1,
                            ...i.animation
                        };
                    i.centered && (n = r.left + r.width / 2, e = r.top + r.height / 2);
                    const o = i.radius || function j8(t, n, e) {
                            const i = Math.max(Math.abs(t - e.left), Math.abs(t - e.right)),
                                r = Math.max(Math.abs(n - e.top), Math.abs(n - e.bottom));
                            return Math.sqrt(i * i + r * r)
                        }(n, e, r),
                        a = n - r.left,
                        l = e - r.top,
                        c = s.enterDuration,
                        d = document.createElement("div");
                    d.classList.add("mat-ripple-element"), d.style.left = a - o + "px", d.style.top = l - o + "px", d.style.height = 2 * o + "px", d.style.width = 2 * o + "px", null != i.color && (d.style.backgroundColor = i.color), d.style.transitionDuration = `${c}ms`, this._containerElement.appendChild(d);
                    const h = window.getComputedStyle(d),
                        _ = h.transitionDuration,
                        v = "none" === h.transitionProperty || "0s" === _ || "0s, 0s" === _,
                        D = new H8(this, d, i, v);
                    d.style.transform = "scale3d(1, 1, 1)", D.state = 0, i.persistent || (this._mostRecentTransientRipple = D);
                    let k = null;
                    return !v && (c || s.exitDuration) && this._ngZone.runOutsideAngular(() => {
                        const S = () => this._finishRippleTransition(D),
                            L = () => this._destroyRipple(D);
                        d.addEventListener("transitionend", S), d.addEventListener("transitioncancel", L), k = {
                            onTransitionEnd: S,
                            onTransitionCancel: L
                        }
                    }), this._activeRipples.set(D, k), (v || !c) && this._finishRippleTransition(D), D
                }
                fadeOutRipple(n) {
                    if (2 === n.state || 3 === n.state) return;
                    const e = n.element,
                        i = { ...h1,
                            ...n.config.animation
                        };
                    e.style.transitionDuration = `${i.exitDuration}ms`, e.style.opacity = "0", n.state = 2, (n._animationForciblyDisabledThroughCss || !i.exitDuration) && this._finishRippleTransition(n)
                }
                fadeOutAll() {
                    this._getActiveRipples().forEach(n => n.fadeOut())
                }
                fadeOutAllNonPersistent() {
                    this._getActiveRipples().forEach(n => {
                        n.config.persistent || n.fadeOut()
                    })
                }
                setupTriggerEvents(n) {
                    const e = bs(n);
                    !e || e === this._triggerElement || (this._removeTriggerEvents(), this._triggerElement = e, this._registerEvents(f1))
                }
                handleEvent(n) {
                    "mousedown" === n.type ? this._onMousedown(n) : "touchstart" === n.type ? this._onTouchStart(n) : this._onPointerUp(), this._pointerUpEventsRegistered || (this._registerEvents(p1), this._pointerUpEventsRegistered = !0)
                }
                _finishRippleTransition(n) {
                    0 === n.state ? this._startFadeOutTransition(n) : 2 === n.state && this._destroyRipple(n)
                }
                _startFadeOutTransition(n) {
                    const e = n === this._mostRecentTransientRipple,
                        {
                            persistent: i
                        } = n.config;
                    n.state = 1, !i && (!e || !this._isPointerDown) && n.fadeOut()
                }
                _destroyRipple(n) {
                    const e = this._activeRipples.get(n) ? ? null;
                    this._activeRipples.delete(n), this._activeRipples.size || (this._containerRect = null), n === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null), n.state = 3, null !== e && (n.element.removeEventListener("transitionend", e.onTransitionEnd), n.element.removeEventListener("transitioncancel", e.onTransitionCancel)), n.element.remove()
                }
                _onMousedown(n) {
                    const e = Ab(n),
                        i = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
                    !this._target.rippleDisabled && !e && !i && (this._isPointerDown = !0, this.fadeInRipple(n.clientX, n.clientY, this._target.rippleConfig))
                }
                _onTouchStart(n) {
                    if (!this._target.rippleDisabled && !Eb(n)) {
                        this._lastTouchStartEvent = Date.now(), this._isPointerDown = !0;
                        const e = n.changedTouches;
                        for (let i = 0; i < e.length; i++) this.fadeInRipple(e[i].clientX, e[i].clientY, this._target.rippleConfig)
                    }
                }
                _onPointerUp() {
                    !this._isPointerDown || (this._isPointerDown = !1, this._getActiveRipples().forEach(n => {
                        !n.config.persistent && (1 === n.state || n.config.terminateOnPointerUp && 0 === n.state) && n.fadeOut()
                    }))
                }
                _registerEvents(n) {
                    this._ngZone.runOutsideAngular(() => {
                        n.forEach(e => {
                            this._triggerElement.addEventListener(e, this, jb)
                        })
                    })
                }
                _getActiveRipples() {
                    return Array.from(this._activeRipples.keys())
                }
                _removeTriggerEvents() {
                    this._triggerElement && (f1.forEach(n => {
                        this._triggerElement.removeEventListener(n, this, jb)
                    }), this._pointerUpEventsRegistered && p1.forEach(n => {
                        this._triggerElement.removeEventListener(n, this, jb)
                    }))
                }
            }
            const g1 = new R("mat-ripple-global-options");
            let li = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._elementRef = e, this._animationMode = o, this.radius = 0, this._disabled = !1, this._isInitialized = !1, this._globalOptions = s || {}, this._rippleRenderer = new m1(this, i, e, r)
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            e && this.fadeOutAllNonPersistent(), this._disabled = e, this._setupTriggerEventsIfEnabled()
                        }
                        get trigger() {
                            return this._trigger || this._elementRef.nativeElement
                        }
                        set trigger(e) {
                            this._trigger = e, this._setupTriggerEventsIfEnabled()
                        }
                        ngOnInit() {
                            this._isInitialized = !0, this._setupTriggerEventsIfEnabled()
                        }
                        ngOnDestroy() {
                            this._rippleRenderer._removeTriggerEvents()
                        }
                        fadeOutAll() {
                            this._rippleRenderer.fadeOutAll()
                        }
                        fadeOutAllNonPersistent() {
                            this._rippleRenderer.fadeOutAllNonPersistent()
                        }
                        get rippleConfig() {
                            return {
                                centered: this.centered,
                                radius: this.radius,
                                color: this.color,
                                animation: { ...this._globalOptions.animation,
                                    ..."NoopAnimations" === this._animationMode ? {
                                        enterDuration: 0,
                                        exitDuration: 0
                                    } : {},
                                    ...this.animation
                                },
                                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp
                            }
                        }
                        get rippleDisabled() {
                            return this.disabled || !!this._globalOptions.disabled
                        }
                        _setupTriggerEventsIfEnabled() {
                            !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger)
                        }
                        launch(e, i = 0, r) {
                            return "number" == typeof e ? this._rippleRenderer.fadeInRipple(e, i, { ...this.rippleConfig,
                                ...r
                            }) : this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig,
                                ...e
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ce), u(Ft), u(g1, 8), u(Tt, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-ripple", ""],
                            ["", "matRipple", ""]
                        ],
                        hostAttrs: [1, "mat-ripple"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-ripple-unbounded", i.unbounded)
                        },
                        inputs: {
                            color: ["matRippleColor", "color"],
                            unbounded: ["matRippleUnbounded", "unbounded"],
                            centered: ["matRippleCentered", "centered"],
                            radius: ["matRippleRadius", "radius"],
                            animation: ["matRippleAnimation", "animation"],
                            disabled: ["matRippleDisabled", "disabled"],
                            trigger: ["matRippleTrigger", "trigger"]
                        },
                        exportAs: ["matRipple"]
                    }), t
                })(),
                ki = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, de]
                    }), t
                })(),
                zb = (() => {
                    class t {
                        constructor(e) {
                            this._animationMode = e, this.state = "unchecked", this.disabled = !1
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-pseudo-checkbox"]
                        ],
                        hostAttrs: [1, "mat-pseudo-checkbox"],
                        hostVars: 8,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-pseudo-checkbox-indeterminate", "indeterminate" === i.state)("mat-pseudo-checkbox-checked", "checked" === i.state)("mat-pseudo-checkbox-disabled", i.disabled)("_mat-animation-noopable", "NoopAnimations" === i._animationMode)
                        },
                        inputs: {
                            state: "state",
                            disabled: "disabled"
                        },
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        styles: ['.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Yf = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de]
                    }), t
                })();
            const Ub = new R("MAT_OPTION_PARENT_COMPONENT"),
                z8 = Si(class {});
            let U8 = 0,
                G8 = (() => {
                    class t extends z8 {
                        constructor(e) {
                            super(), this._labelId = "mat-optgroup-label-" + U8++, this._inert = e ? .inertGroups ? ? !1
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ub, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            label: "label"
                        },
                        features: [A]
                    }), t
                })();
            const Gb = new R("MatOptgroup");
            let W8 = (() => {
                    class t extends G8 {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-optgroup"]
                        ],
                        hostAttrs: [1, "mat-optgroup"],
                        hostVars: 5,
                        hostBindings: function(e, i) {
                            2 & e && (q("role", i._inert ? null : "group")("aria-disabled", i._inert ? null : i.disabled.toString())("aria-labelledby", i._inert ? null : i._labelId), re("mat-optgroup-disabled", i.disabled))
                        },
                        inputs: {
                            disabled: "disabled"
                        },
                        exportAs: ["matOptgroup"],
                        features: [Q([{
                            provide: Gb,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: A8,
                        decls: 4,
                        vars: 2,
                        consts: [
                            ["aria-hidden", "true", 1, "mat-optgroup-label", 3, "id"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(k8), f(0, "span", 0), w(1), me(2), g(), me(3, 1)), 2 & e && (y("id", i._labelId), p(1), X("", i.label, " "))
                        },
                        styles: [".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                q8 = 0;
            class _1 {
                constructor(n, e = !1) {
                    this.source = n, this.isUserInput = e
                }
            }
            let Y8 = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._element = e, this._changeDetectorRef = i, this._parent = r, this.group = s, this._selected = !1, this._active = !1, this._disabled = !1, this._mostRecentViewValue = "", this.id = "mat-option-" + q8++, this.onSelectionChange = new V, this._stateChanges = new H
                        }
                        get multiple() {
                            return this._parent && this._parent.multiple
                        }
                        get selected() {
                            return this._selected
                        }
                        get disabled() {
                            return this.group && this.group.disabled || this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e)
                        }
                        get disableRipple() {
                            return !(!this._parent || !this._parent.disableRipple)
                        }
                        get active() {
                            return this._active
                        }
                        get viewValue() {
                            return (this._getHostElement().textContent || "").trim()
                        }
                        select() {
                            this._selected || (this._selected = !0, this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent())
                        }
                        deselect() {
                            this._selected && (this._selected = !1, this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent())
                        }
                        focus(e, i) {
                            const r = this._getHostElement();
                            "function" == typeof r.focus && r.focus(i)
                        }
                        setActiveStyles() {
                            this._active || (this._active = !0, this._changeDetectorRef.markForCheck())
                        }
                        setInactiveStyles() {
                            this._active && (this._active = !1, this._changeDetectorRef.markForCheck())
                        }
                        getLabel() {
                            return this.viewValue
                        }
                        _handleKeydown(e) {
                            (13 === e.keyCode || 32 === e.keyCode) && !$t(e) && (this._selectViaInteraction(), e.preventDefault())
                        }
                        _selectViaInteraction() {
                            this.disabled || (this._selected = !this.multiple || !this._selected, this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent(!0))
                        }
                        _getAriaSelected() {
                            return this.selected || !this.multiple && null
                        }
                        _getTabIndex() {
                            return this.disabled ? "-1" : "0"
                        }
                        _getHostElement() {
                            return this._element.nativeElement
                        }
                        ngAfterViewChecked() {
                            if (this._selected) {
                                const e = this.viewValue;
                                e !== this._mostRecentViewValue && (this._mostRecentViewValue = e, this._stateChanges.next())
                            }
                        }
                        ngOnDestroy() {
                            this._stateChanges.complete()
                        }
                        _emitSelectionChangeEvent(e = !1) {
                            this.onSelectionChange.emit(new _1(this, e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            value: "value",
                            id: "id",
                            disabled: "disabled"
                        },
                        outputs: {
                            onSelectionChange: "onSelectionChange"
                        }
                    }), t
                })(),
                sa = (() => {
                    class t extends Y8 {
                        constructor(e, i, r, s) {
                            super(e, i, r, s)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Ub, 8), u(Gb, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-option"]
                        ],
                        hostAttrs: ["role", "option", 1, "mat-option", "mat-focus-indicator"],
                        hostVars: 12,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i._selectViaInteraction()
                            })("keydown", function(s) {
                                return i._handleKeydown(s)
                            }), 2 & e && (xn("id", i.id), q("tabindex", i._getTabIndex())("aria-selected", i._getAriaSelected())("aria-disabled", i.disabled.toString()), re("mat-selected", i.selected)("mat-option-multiple", i.multiple)("mat-active", i.active)("mat-option-disabled", i.disabled))
                        },
                        exportAs: ["matOption"],
                        features: [A],
                        ngContentSelectors: I8,
                        decls: 5,
                        vars: 4,
                        consts: [
                            ["class", "mat-option-pseudo-checkbox", 3, "state", "disabled", 4, "ngIf"],
                            [1, "mat-option-text"],
                            ["class", "cdk-visually-hidden", 4, "ngIf"],
                            ["mat-ripple", "", 1, "mat-option-ripple", 3, "matRippleTrigger", "matRippleDisabled"],
                            [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                            [1, "cdk-visually-hidden"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, E8, 1, 2, "mat-pseudo-checkbox", 0), f(1, "span", 1), me(2), g(), b(3, T8, 2, 1, "span", 2), E(4, "div", 3)), 2 & e && (y("ngIf", i.multiple), p(3), y("ngIf", i.group && i.group._inert), p(1), y("matRippleTrigger", i._getHostElement())("matRippleDisabled", i.disabled || i.disableRipple))
                        },
                        dependencies: [li, at, zb],
                        styles: ['.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:""}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();

            function Qf(t, n, e) {
                if (e.length) {
                    let i = n.toArray(),
                        r = e.toArray(),
                        s = 0;
                    for (let o = 0; o < t + 1; o++) i[o].group && i[o].group === r[s] && s++;
                    return s
                }
                return 0
            }
            let Kf = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [ki, ut, de, Yf]
                }), t
            })();
            class b1 {}
            const ws = "*";

            function Nt(t, n) {
                return {
                    type: 7,
                    name: t,
                    definitions: n,
                    options: {}
                }
            }

            function Ye(t, n = null) {
                return {
                    type: 4,
                    styles: n,
                    timings: t
                }
            }

            function Zf(t, n = null) {
                return {
                    type: 3,
                    steps: t,
                    options: n
                }
            }

            function v1(t, n = null) {
                return {
                    type: 2,
                    steps: t,
                    options: n
                }
            }

            function ee(t) {
                return {
                    type: 6,
                    styles: t,
                    offset: null
                }
            }

            function Oe(t, n, e) {
                return {
                    type: 0,
                    name: t,
                    styles: n,
                    options: e
                }
            }

            function oa(t) {
                return {
                    type: 5,
                    steps: t
                }
            }

            function Ue(t, n, e = null) {
                return {
                    type: 1,
                    expr: t,
                    animation: n,
                    options: e
                }
            }

            function Pl(t = null) {
                return {
                    type: 9,
                    options: t
                }
            }

            function Ll(t, n, e = null) {
                return {
                    type: 11,
                    selector: t,
                    animation: n,
                    options: e
                }
            }

            function w1(t) {
                Promise.resolve().then(t)
            }
            class Bd {
                constructor(n = 0, e = 0) {
                    this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._originalOnDoneFns = [], this._originalOnStartFns = [], this._started = !1, this._destroyed = !1, this._finished = !1, this._position = 0, this.parentPlayer = null, this.totalTime = n + e
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                onStart(n) {
                    this._originalOnStartFns.push(n), this._onStartFns.push(n)
                }
                onDone(n) {
                    this._originalOnDoneFns.push(n), this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                hasStarted() {
                    return this._started
                }
                init() {}
                play() {
                    this.hasStarted() || (this._onStart(), this.triggerMicrotask()), this._started = !0
                }
                triggerMicrotask() {
                    w1(() => this._onFinish())
                }
                _onStart() {
                    this._onStartFns.forEach(n => n()), this._onStartFns = []
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish()
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this.hasStarted() || this._onStart(), this.finish(), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                reset() {
                    this._started = !1, this._finished = !1, this._onStartFns = this._originalOnStartFns, this._onDoneFns = this._originalOnDoneFns
                }
                setPosition(n) {
                    this._position = this.totalTime ? n * this.totalTime : 1
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1
                }
                triggerCallback(n) {
                    const e = "start" == n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }
            class C1 {
                constructor(n) {
                    this._onDoneFns = [], this._onStartFns = [], this._finished = !1, this._started = !1, this._destroyed = !1, this._onDestroyFns = [], this.parentPlayer = null, this.totalTime = 0, this.players = n;
                    let e = 0,
                        i = 0,
                        r = 0;
                    const s = this.players.length;
                    0 == s ? w1(() => this._onFinish()) : this.players.forEach(o => {
                        o.onDone(() => {
                            ++e == s && this._onFinish()
                        }), o.onDestroy(() => {
                            ++i == s && this._onDestroy()
                        }), o.onStart(() => {
                            ++r == s && this._onStart()
                        })
                    }), this.totalTime = this.players.reduce((o, a) => Math.max(o, a.totalTime), 0)
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                init() {
                    this.players.forEach(n => n.init())
                }
                onStart(n) {
                    this._onStartFns.push(n)
                }
                _onStart() {
                    this.hasStarted() || (this._started = !0, this._onStartFns.forEach(n => n()), this._onStartFns = [])
                }
                onDone(n) {
                    this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this.parentPlayer || this.init(), this._onStart(), this.players.forEach(n => n.play())
                }
                pause() {
                    this.players.forEach(n => n.pause())
                }
                restart() {
                    this.players.forEach(n => n.restart())
                }
                finish() {
                    this._onFinish(), this.players.forEach(n => n.finish())
                }
                destroy() {
                    this._onDestroy()
                }
                _onDestroy() {
                    this._destroyed || (this._destroyed = !0, this._onFinish(), this.players.forEach(n => n.destroy()), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                reset() {
                    this.players.forEach(n => n.reset()), this._destroyed = !1, this._finished = !1, this._started = !1
                }
                setPosition(n) {
                    const e = n * this.totalTime;
                    this.players.forEach(i => {
                        const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
                        i.setPosition(r)
                    })
                }
                getPosition() {
                    const n = this.players.reduce((e, i) => null === e || i.totalTime > e.totalTime ? i : e, null);
                    return null != n ? n.getPosition() : 0
                }
                beforeDestroy() {
                    this.players.forEach(n => {
                        n.beforeDestroy && n.beforeDestroy()
                    })
                }
                triggerCallback(n) {
                    const e = "start" == n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }

            function K8(t, n) {}
            const Nl = {
                    params: {
                        enterAnimationDuration: "150ms",
                        exitAnimationDuration: "75ms"
                    }
                },
                Z8 = {
                    dialogContainer: Nt("dialogContainer", [Oe("void, exit", ee({
                        opacity: 0,
                        transform: "scale(0.7)"
                    })), Oe("enter", ee({
                        transform: "none"
                    })), Ue("* => enter", Zf([Ye("{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)", ee({
                        transform: "none",
                        opacity: 1
                    })), Ll("@*", Pl(), {
                        optional: !0
                    })]), Nl), Ue("* => void, * => exit", Zf([Ye("{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)", ee({
                        opacity: 0
                    })), Ll("@*", Pl(), {
                        optional: !0
                    })]), Nl)])
                };
            class Xf {
                constructor() {
                    this.role = "dialog", this.panelClass = "", this.hasBackdrop = !0, this.backdropClass = "", this.disableClose = !1, this.width = "", this.height = "", this.maxWidth = "80vw", this.data = null, this.ariaDescribedBy = null, this.ariaLabelledBy = null, this.ariaLabel = null, this.ariaModal = !0, this.autoFocus = "first-tabbable", this.restoreFocus = !0, this.delayFocusTrap = !0, this.closeOnNavigation = !0, this.enterAnimationDuration = Nl.params.enterAnimationDuration, this.exitAnimationDuration = Nl.params.exitAnimationDuration
                }
            }
            let X8 = (() => {
                    class t extends t1 {
                        constructor(e, i, r, s, o, a, l, c) {
                            super(e, i, r, s, o, a, l, c), this._animationStateChanged = new V
                        }
                        _captureInitialFocus() {
                            this._config.delayFocusTrap || this._trapFocus()
                        }
                        _openAnimationDone(e) {
                            this._config.delayFocusTrap && this._trapFocus(), this._animationStateChanged.next({
                                state: "opened",
                                totalTime: e
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Nf), u(pe, 8), u(Xf), u(Lf), u(ce), u(Ld), u(dn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["ng-component"]
                        ],
                        features: [A],
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        encapsulation: 2
                    }), t
                })(),
                J8 = (() => {
                    class t extends X8 {
                        constructor(e, i, r, s, o, a, l, c, d) {
                            super(e, i, r, s, o, a, l, d), this._changeDetectorRef = c, this._state = "enter"
                        }
                        _onAnimationDone({
                            toState: e,
                            totalTime: i
                        }) {
                            "enter" === e ? this._openAnimationDone(i) : "exit" === e && this._animationStateChanged.next({
                                state: "closed",
                                totalTime: i
                            })
                        }
                        _onAnimationStart({
                            toState: e,
                            totalTime: i
                        }) {
                            "enter" === e ? this._animationStateChanged.next({
                                state: "opening",
                                totalTime: i
                            }) : ("exit" === e || "void" === e) && this._animationStateChanged.next({
                                state: "closing",
                                totalTime: i
                            })
                        }
                        _startExitAnimation() {
                            this._state = "exit", this._changeDetectorRef.markForCheck()
                        }
                        _getAnimationState() {
                            return {
                                value: this._state,
                                params: {
                                    enterAnimationDuration: this._config.enterAnimationDuration || Nl.params.enterAnimationDuration,
                                    exitAnimationDuration: this._config.exitAnimationDuration || Nl.params.exitAnimationDuration
                                }
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Nf), u(pe, 8), u(Xf), u(Lf), u(ce), u(Ld), u(ge), u(dn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-dialog-container"]
                        ],
                        hostAttrs: ["tabindex", "-1", 1, "mat-dialog-container"],
                        hostVars: 7,
                        hostBindings: function(e, i) {
                            1 & e && qc("@dialogContainer.start", function(s) {
                                return i._onAnimationStart(s)
                            })("@dialogContainer.done", function(s) {
                                return i._onAnimationDone(s)
                            }), 2 & e && (xn("id", i._config.id), q("aria-modal", i._config.ariaModal)("role", i._config.role)("aria-labelledby", i._config.ariaLabel ? null : i._ariaLabelledBy)("aria-label", i._config.ariaLabel)("aria-describedby", i._config.ariaDescribedBy || null), ll("@dialogContainer", i._getAnimationState()))
                        },
                        features: [A],
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["cdkPortalOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && b(0, K8, 0, 0, "ng-template", 0)
                        },
                        dependencies: [Ki],
                        styles: [".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}"],
                        encapsulation: 2,
                        data: {
                            animation: [Z8.dialogContainer]
                        }
                    }), t
                })();
            class ro {
                constructor(n, e, i) {
                    this._ref = n, this._containerInstance = i, this._afterOpened = new H, this._beforeClosed = new H, this._state = 0, this.disableClose = e.disableClose, this.id = n.id, i._animationStateChanged.pipe(Ie(r => "opened" === r.state), Fe(1)).subscribe(() => {
                        this._afterOpened.next(), this._afterOpened.complete()
                    }), i._animationStateChanged.pipe(Ie(r => "closed" === r.state), Fe(1)).subscribe(() => {
                        clearTimeout(this._closeFallbackTimeout), this._finishDialogClose()
                    }), n.overlayRef.detachments().subscribe(() => {
                        this._beforeClosed.next(this._result), this._beforeClosed.complete(), this._finishDialogClose()
                    }), tt(this.backdropClick(), this.keydownEvents().pipe(Ie(r => 27 === r.keyCode && !this.disableClose && !$t(r)))).subscribe(r => {
                        this.disableClose || (r.preventDefault(), x1(this, "keydown" === r.type ? "keyboard" : "mouse"))
                    })
                }
                close(n) {
                    this._result = n, this._containerInstance._animationStateChanged.pipe(Ie(e => "closing" === e.state), Fe(1)).subscribe(e => {
                        this._beforeClosed.next(n), this._beforeClosed.complete(), this._ref.overlayRef.detachBackdrop(), this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), e.totalTime + 100)
                    }), this._state = 1, this._containerInstance._startExitAnimation()
                }
                afterOpened() {
                    return this._afterOpened
                }
                afterClosed() {
                    return this._ref.closed
                }
                beforeClosed() {
                    return this._beforeClosed
                }
                backdropClick() {
                    return this._ref.backdropClick
                }
                keydownEvents() {
                    return this._ref.keydownEvents
                }
                updatePosition(n) {
                    let e = this._ref.config.positionStrategy;
                    return n && (n.left || n.right) ? n.left ? e.left(n.left) : e.right(n.right) : e.centerHorizontally(), n && (n.top || n.bottom) ? n.top ? e.top(n.top) : e.bottom(n.bottom) : e.centerVertically(), this._ref.updatePosition(), this
                }
                updateSize(n = "", e = "") {
                    return this._ref.updateSize(n, e), this
                }
                addPanelClass(n) {
                    return this._ref.addPanelClass(n), this
                }
                removePanelClass(n) {
                    return this._ref.removePanelClass(n), this
                }
                getState() {
                    return this._state
                }
                _finishDialogClose() {
                    this._state = 2, this._ref.close(this._result, {
                        focusOrigin: this._closeInteractionType
                    }), this.componentInstance = null
                }
            }

            function x1(t, n, e) {
                return t._closeInteractionType = n, t.close(e)
            }
            const Vd = new R("MatDialogData"),
                e6 = new R("mat-dialog-default-options"),
                D1 = new R("mat-dialog-scroll-strategy"),
                n6 = {
                    provide: D1,
                    deps: [vn],
                    useFactory: function t6(t) {
                        return () => t.scrollStrategies.block()
                    }
                };
            let i6 = 0,
                r6 = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l, c, d, h) {
                            this._overlay = e, this._defaultOptions = r, this._parentDialog = s, this._dialogRefConstructor = l, this._dialogContainerType = c, this._dialogDataToken = d, this._openDialogsAtThisLevel = [], this._afterAllClosedAtThisLevel = new H, this._afterOpenedAtThisLevel = new H, this._idPrefix = "mat-dialog-", this.afterAllClosed = Ys(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(pt(void 0))), this._scrollStrategy = a, this._dialog = i.get(r1)
                        }
                        get openDialogs() {
                            return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel
                        }
                        get afterOpened() {
                            return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel
                        }
                        _getAfterAllClosed() {
                            const e = this._parentDialog;
                            return e ? e._getAfterAllClosed() : this._afterAllClosedAtThisLevel
                        }
                        open(e, i) {
                            let r;
                            (i = { ...this._defaultOptions || new Xf,
                                ...i
                            }).id = i.id || `${this._idPrefix}${i6++}`, i.scrollStrategy = i.scrollStrategy || this._scrollStrategy();
                            const s = this._dialog.open(e, { ...i,
                                positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),
                                disableClose: !0,
                                closeOnDestroy: !1,
                                container: {
                                    type: this._dialogContainerType,
                                    providers: () => [{
                                        provide: Xf,
                                        useValue: i
                                    }, {
                                        provide: Wf,
                                        useValue: i
                                    }]
                                },
                                templateContext: () => ({
                                    dialogRef: r
                                }),
                                providers: (o, a, l) => (r = new this._dialogRefConstructor(o, i, l), r.updatePosition(i ? .position), [{
                                    provide: this._dialogContainerType,
                                    useValue: l
                                }, {
                                    provide: this._dialogDataToken,
                                    useValue: a.data
                                }, {
                                    provide: this._dialogRefConstructor,
                                    useValue: r
                                }])
                            });
                            return r.componentInstance = s.componentInstance, this.openDialogs.push(r), this.afterOpened.next(r), r.afterClosed().subscribe(() => {
                                const o = this.openDialogs.indexOf(r);
                                o > -1 && (this.openDialogs.splice(o, 1), this.openDialogs.length || this._getAfterAllClosed().next())
                            }), r
                        }
                        closeAll() {
                            this._closeDialogs(this.openDialogs)
                        }
                        getDialogById(e) {
                            return this.openDialogs.find(i => i.id === e)
                        }
                        ngOnDestroy() {
                            this._closeDialogs(this._openDialogsAtThisLevel), this._afterAllClosedAtThisLevel.complete(), this._afterOpenedAtThisLevel.complete()
                        }
                        _closeDialogs(e) {
                            let i = e.length;
                            for (; i--;) e[i].close()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Bl = (() => {
                    class t extends r6 {
                        constructor(e, i, r, s, o, a, l, c) {
                            super(e, i, s, a, l, o, ro, J8, Vd, c)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(vn), C(Ct), C(od, 8), C(e6, 8), C(D1), C(t, 12), C(Gf), C(Tt, 8))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                s6 = 0,
                qb = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.dialogRef = e, this._elementRef = i, this._dialog = r, this.type = "button"
                        }
                        ngOnInit() {
                            this.dialogRef || (this.dialogRef = M1(this._elementRef, this._dialog.openDialogs))
                        }
                        ngOnChanges(e) {
                            const i = e._matDialogClose || e._matDialogCloseResult;
                            i && (this.dialogResult = i.currentValue)
                        }
                        _onButtonClick(e) {
                            x1(this.dialogRef, 0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse", this.dialogResult)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro, 8), u(N), u(Bl))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-dialog-close", ""],
                            ["", "matDialogClose", ""]
                        ],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function(s) {
                                return i._onButtonClick(s)
                            }), 2 & e && q("aria-label", i.ariaLabel || null)("type", i.type)
                        },
                        inputs: {
                            ariaLabel: ["aria-label", "ariaLabel"],
                            type: "type",
                            dialogResult: ["mat-dialog-close", "dialogResult"],
                            _matDialogClose: ["matDialogClose", "_matDialogClose"]
                        },
                        exportAs: ["matDialogClose"],
                        features: [ze]
                    }), t
                })(),
                o6 = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._dialogRef = e, this._elementRef = i, this._dialog = r, this.id = "mat-dialog-title-" + s6++
                        }
                        ngOnInit() {
                            this._dialogRef || (this._dialogRef = M1(this._elementRef, this._dialog.openDialogs)), this._dialogRef && Promise.resolve().then(() => {
                                const e = this._dialogRef._containerInstance;
                                e && !e._ariaLabelledBy && (e._ariaLabelledBy = this.id)
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro, 8), u(N), u(Bl))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-dialog-title", ""],
                            ["", "matDialogTitle", ""]
                        ],
                        hostAttrs: [1, "mat-dialog-title"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && xn("id", i.id)
                        },
                        inputs: {
                            id: "id"
                        },
                        exportAs: ["matDialogTitle"]
                    }), t
                })(),
                a6 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-dialog-content", ""],
                            ["mat-dialog-content"],
                            ["", "matDialogContent", ""]
                        ],
                        hostAttrs: [1, "mat-dialog-content"]
                    }), t
                })(),
                Jf = (() => {
                    class t {
                        constructor() {
                            this.align = "start"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-dialog-actions", ""],
                            ["mat-dialog-actions"],
                            ["", "matDialogActions", ""]
                        ],
                        hostAttrs: [1, "mat-dialog-actions"],
                        hostVars: 4,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-dialog-actions-align-center", "center" === i.align)("mat-dialog-actions-align-end", "end" === i.align)
                        },
                        inputs: {
                            align: "align"
                        }
                    }), t
                })();

            function M1(t, n) {
                let e = t.nativeElement.parentElement;
                for (; e && !e.classList.contains("mat-dialog-container");) e = e.parentElement;
                return e ? n.find(i => i.id === e.id) : null
            }
            let Yb = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    providers: [Bl, n6],
                    imports: [s1, to, $r, de, de]
                }), t
            })();
            const l6 = ["mat-button", ""],
                c6 = ["*"],
                u6 = ["mat-button", "mat-flat-button", "mat-icon-button", "mat-raised-button", "mat-stroked-button", "mat-mini-fab", "mat-fab"],
                h6 = Zi(Si(br(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                })));
            let Xt = (() => {
                    class t extends h6 {
                        constructor(e, i, r) {
                            super(e), this._focusMonitor = i, this._animationMode = r, this.isRoundButton = this._hasHostAttributes("mat-fab", "mat-mini-fab"), this.isIconButton = this._hasHostAttributes("mat-icon-button");
                            for (const s of u6) this._hasHostAttributes(s) && this._getHostElement().classList.add(s);
                            e.nativeElement.classList.add("mat-button-base"), this.isRoundButton && (this.color = "accent")
                        }
                        ngAfterViewInit() {
                            this._focusMonitor.monitor(this._elementRef, !0)
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef)
                        }
                        focus(e, i) {
                            e ? this._focusMonitor.focusVia(this._getHostElement(), e, i) : this._getHostElement().focus(i)
                        }
                        _getHostElement() {
                            return this._elementRef.nativeElement
                        }
                        _isRippleDisabled() {
                            return this.disableRipple || this.disabled
                        }
                        _hasHostAttributes(...e) {
                            return e.some(i => this._getHostElement().hasAttribute(i))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(dn), u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["button", "mat-button", ""],
                            ["button", "mat-raised-button", ""],
                            ["button", "mat-icon-button", ""],
                            ["button", "mat-fab", ""],
                            ["button", "mat-mini-fab", ""],
                            ["button", "mat-stroked-button", ""],
                            ["button", "mat-flat-button", ""]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(li, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.ripple = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-focus-indicator"],
                        hostVars: 5,
                        hostBindings: function(e, i) {
                            2 & e && (q("disabled", i.disabled || null), re("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-button-disabled", i.disabled))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            color: "color"
                        },
                        exportAs: ["matButton"],
                        features: [A],
                        attrs: l6,
                        ngContentSelectors: c6,
                        decls: 4,
                        vars: 5,
                        consts: [
                            [1, "mat-button-wrapper"],
                            ["matRipple", "", 1, "mat-button-ripple", 3, "matRippleDisabled", "matRippleCentered", "matRippleTrigger"],
                            [1, "mat-button-focus-overlay"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "span", 0), me(1), g(), E(2, "span", 1)(3, "span", 2)), 2 & e && (p(2), re("mat-button-ripple-round", i.isRoundButton || i.isIconButton), y("matRippleDisabled", i._isRippleDisabled())("matRippleCentered", i.isIconButton)("matRippleTrigger", i._getHostElement()))
                        },
                        dependencies: [li],
                        styles: [".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Cs = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ki, de, de]
                    }), t
                })();
            const f6 = ["connectionContainer"],
                p6 = ["inputContainer"],
                m6 = ["label"];

            function g6(t, n) {
                1 & t && (oe(0), f(1, "div", 14), E(2, "div", 15)(3, "div", 16)(4, "div", 17), g(), f(5, "div", 18), E(6, "div", 15)(7, "div", 16)(8, "div", 17), g(), ae())
            }

            function _6(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 19), T("cdkObserveContent", function() {
                        return ne(e), ie(x().updateOutlineGap())
                    }), me(1, 1), g()
                }
                2 & t && y("cdkObserveContentDisabled", "outline" != x().appearance)
            }

            function y6(t, n) {
                if (1 & t && (oe(0), me(1, 2), f(2, "span"), w(3), g(), ae()), 2 & t) {
                    const e = x(2);
                    p(3), ve(e._control.placeholder)
                }
            }

            function b6(t, n) {
                1 & t && me(0, 3, ["*ngSwitchCase", "true"])
            }

            function v6(t, n) {
                1 & t && (f(0, "span", 23), w(1, " *"), g())
            }

            function w6(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "label", 20, 21), T("cdkObserveContent", function() {
                        return ne(e), ie(x().updateOutlineGap())
                    }), b(2, y6, 4, 1, "ng-container", 12), b(3, b6, 1, 0, "ng-content", 12), b(4, v6, 2, 0, "span", 22), g()
                }
                if (2 & t) {
                    const e = x();
                    re("mat-empty", e._control.empty && !e._shouldAlwaysFloat())("mat-form-field-empty", e._control.empty && !e._shouldAlwaysFloat())("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color), y("cdkObserveContentDisabled", "outline" != e.appearance)("id", e._labelId)("ngSwitch", e._hasLabel()), q("for", e._control.id)("aria-owns", e._control.id), p(2), y("ngSwitchCase", !1), p(1), y("ngSwitchCase", !0), p(1), y("ngIf", !e.hideRequiredMarker && e._control.required && !e._control.disabled)
                }
            }

            function C6(t, n) {
                1 & t && (f(0, "div", 24), me(1, 4), g())
            }

            function x6(t, n) {
                if (1 & t && (f(0, "div", 25), E(1, "span", 26), g()), 2 & t) {
                    const e = x();
                    p(1), re("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color)
                }
            }

            function D6(t, n) {
                1 & t && (f(0, "div"), me(1, 5), g()), 2 & t && y("@transitionMessages", x()._subscriptAnimationState)
            }

            function M6(t, n) {
                if (1 & t && (f(0, "div", 30), w(1), g()), 2 & t) {
                    const e = x(2);
                    y("id", e._hintLabelId), p(1), ve(e.hintLabel)
                }
            }

            function S6(t, n) {
                if (1 & t && (f(0, "div", 27), b(1, M6, 2, 2, "div", 28), me(2, 6), E(3, "div", 29), me(4, 7), g()), 2 & t) {
                    const e = x();
                    y("@transitionMessages", e._subscriptAnimationState), p(1), y("ngIf", e.hintLabel)
                }
            }
            const k6 = ["*", [
                        ["", "matPrefix", ""]
                    ],
                    [
                        ["mat-placeholder"]
                    ],
                    [
                        ["mat-label"]
                    ],
                    [
                        ["", "matSuffix", ""]
                    ],
                    [
                        ["mat-error"]
                    ],
                    [
                        ["mat-hint", 3, "align", "end"]
                    ],
                    [
                        ["mat-hint", "align", "end"]
                    ]
                ],
                A6 = ["*", "[matPrefix]", "mat-placeholder", "mat-label", "[matSuffix]", "mat-error", "mat-hint:not([align='end'])", "mat-hint[align='end']"];
            let E6 = 0;
            const S1 = new R("MatError");
            let ep = (() => {
                class t {
                    constructor(e, i) {
                        this.id = "mat-error-" + E6++, e || i.nativeElement.setAttribute("aria-live", "polite")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(Qt("aria-live"), u(N))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["mat-error"]
                    ],
                    hostAttrs: ["aria-atomic", "true", 1, "mat-error"],
                    hostVars: 1,
                    hostBindings: function(e, i) {
                        2 & e && q("id", i.id)
                    },
                    inputs: {
                        id: "id"
                    },
                    features: [Q([{
                        provide: S1,
                        useExisting: t
                    }])]
                }), t
            })();
            const T6 = {
                transitionMessages: Nt("transitionMessages", [Oe("enter", ee({
                    opacity: 1,
                    transform: "translateY(0%)"
                })), Ue("void => enter", [ee({
                    opacity: 0,
                    transform: "translateY(-5px)"
                }), Ye("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])
            };
            let Vl = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t
                    }), t
                })(),
                I6 = 0;
            const k1 = new R("MatHint");
            let R6 = (() => {
                    class t {
                        constructor() {
                            this.align = "start", this.id = "mat-hint-" + I6++
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-hint"]
                        ],
                        hostAttrs: [1, "mat-hint"],
                        hostVars: 4,
                        hostBindings: function(e, i) {
                            2 & e && (q("id", i.id)("align", null), re("mat-form-field-hint-end", "end" === i.align))
                        },
                        inputs: {
                            align: "align",
                            id: "id"
                        },
                        features: [Q([{
                            provide: k1,
                            useExisting: t
                        }])]
                    }), t
                })(),
                aa = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-label"]
                        ]
                    }), t
                })(),
                F6 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-placeholder"]
                        ]
                    }), t
                })();
            const A1 = new R("MatPrefix");
            let O6 = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "matPrefix", ""]
                    ],
                    features: [Q([{
                        provide: A1,
                        useExisting: t
                    }])]
                }), t
            })();
            const E1 = new R("MatSuffix");
            let P6 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matSuffix", ""]
                        ],
                        features: [Q([{
                            provide: E1,
                            useExisting: t
                        }])]
                    }), t
                })(),
                T1 = 0;
            const N6 = Zi(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                }, "primary"),
                B6 = new R("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
                Hd = new R("MatFormField");
            let ci = (() => {
                    class t extends N6 {
                        constructor(e, i, r, s, o, a, l) {
                            super(e), this._changeDetectorRef = i, this._dir = r, this._defaults = s, this._platform = o, this._ngZone = a, this._outlineGapCalculationNeededImmediately = !1, this._outlineGapCalculationNeededOnStable = !1, this._destroyed = new H, this._hideRequiredMarker = !1, this._showAlwaysAnimate = !1, this._subscriptAnimationState = "", this._hintLabel = "", this._hintLabelId = "mat-hint-" + T1++, this._labelId = "mat-form-field-label-" + T1++, this.floatLabel = this._getDefaultFloatLabelState(), this._animationsEnabled = "NoopAnimations" !== l, this.appearance = s ? .appearance || "legacy", s && (this._hideRequiredMarker = Boolean(s.hideRequiredMarker), s.color && (this.color = this.defaultColor = s.color))
                        }
                        get appearance() {
                            return this._appearance
                        }
                        set appearance(e) {
                            const i = this._appearance;
                            this._appearance = e || this._defaults ? .appearance || "legacy", "outline" === this._appearance && i !== e && (this._outlineGapCalculationNeededOnStable = !0)
                        }
                        get hideRequiredMarker() {
                            return this._hideRequiredMarker
                        }
                        set hideRequiredMarker(e) {
                            this._hideRequiredMarker = G(e)
                        }
                        _shouldAlwaysFloat() {
                            return "always" === this.floatLabel && !this._showAlwaysAnimate
                        }
                        _canLabelFloat() {
                            return "never" !== this.floatLabel
                        }
                        get hintLabel() {
                            return this._hintLabel
                        }
                        set hintLabel(e) {
                            this._hintLabel = e, this._processHints()
                        }
                        get floatLabel() {
                            return "legacy" !== this.appearance && "never" === this._floatLabel ? "auto" : this._floatLabel
                        }
                        set floatLabel(e) {
                            e !== this._floatLabel && (this._floatLabel = e || this._getDefaultFloatLabelState(), this._changeDetectorRef.markForCheck())
                        }
                        get _control() {
                            return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic
                        }
                        set _control(e) {
                            this._explicitFormFieldControl = e
                        }
                        getLabelId() {
                            return this._hasFloatingLabel() ? this._labelId : null
                        }
                        getConnectedOverlayOrigin() {
                            return this._connectionContainerRef || this._elementRef
                        }
                        ngAfterContentInit() {
                            this._validateControlChild();
                            const e = this._control;
                            e.controlType && this._elementRef.nativeElement.classList.add(`mat-form-field-type-${e.controlType}`), e.stateChanges.pipe(pt(null)).subscribe(() => {
                                this._validatePlaceholders(), this._syncDescribedByIds(), this._changeDetectorRef.markForCheck()
                            }), e.ngControl && e.ngControl.valueChanges && e.ngControl.valueChanges.pipe(le(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck()), this._ngZone.runOutsideAngular(() => {
                                this._ngZone.onStable.pipe(le(this._destroyed)).subscribe(() => {
                                    this._outlineGapCalculationNeededOnStable && this.updateOutlineGap()
                                })
                            }), tt(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {
                                this._outlineGapCalculationNeededOnStable = !0, this._changeDetectorRef.markForCheck()
                            }), this._hintChildren.changes.pipe(pt(null)).subscribe(() => {
                                this._processHints(), this._changeDetectorRef.markForCheck()
                            }), this._errorChildren.changes.pipe(pt(null)).subscribe(() => {
                                this._syncDescribedByIds(), this._changeDetectorRef.markForCheck()
                            }), this._dir && this._dir.change.pipe(le(this._destroyed)).subscribe(() => {
                                "function" == typeof requestAnimationFrame ? this._ngZone.runOutsideAngular(() => {
                                    requestAnimationFrame(() => this.updateOutlineGap())
                                }) : this.updateOutlineGap()
                            })
                        }
                        ngAfterContentChecked() {
                            this._validateControlChild(), this._outlineGapCalculationNeededImmediately && this.updateOutlineGap()
                        }
                        ngAfterViewInit() {
                            this._subscriptAnimationState = "enter", this._changeDetectorRef.detectChanges()
                        }
                        ngOnDestroy() {
                            this._destroyed.next(), this._destroyed.complete()
                        }
                        _shouldForward(e) {
                            const i = this._control ? this._control.ngControl : null;
                            return i && i[e]
                        }
                        _hasPlaceholder() {
                            return !!(this._control && this._control.placeholder || this._placeholderChild)
                        }
                        _hasLabel() {
                            return !(!this._labelChildNonStatic && !this._labelChildStatic)
                        }
                        _shouldLabelFloat() {
                            return this._canLabelFloat() && (this._control && this._control.shouldLabelFloat || this._shouldAlwaysFloat())
                        }
                        _hideControlPlaceholder() {
                            return "legacy" === this.appearance && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat()
                        }
                        _hasFloatingLabel() {
                            return this._hasLabel() || "legacy" === this.appearance && this._hasPlaceholder()
                        }
                        _getDisplayedMessages() {
                            return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? "error" : "hint"
                        }
                        _animateAndLockLabel() {
                            this._hasFloatingLabel() && this._canLabelFloat() && (this._animationsEnabled && this._label && (this._showAlwaysAnimate = !0, un(this._label.nativeElement, "transitionend").pipe(Fe(1)).subscribe(() => {
                                this._showAlwaysAnimate = !1
                            })), this.floatLabel = "always", this._changeDetectorRef.markForCheck())
                        }
                        _validatePlaceholders() {}
                        _processHints() {
                            this._validateHints(), this._syncDescribedByIds()
                        }
                        _validateHints() {}
                        _getDefaultFloatLabelState() {
                            return this._defaults && this._defaults.floatLabel || "auto"
                        }
                        _syncDescribedByIds() {
                            if (this._control) {
                                let e = [];
                                if (this._control.userAriaDescribedBy && "string" == typeof this._control.userAriaDescribedBy && e.push(...this._control.userAriaDescribedBy.split(" ")), "hint" === this._getDisplayedMessages()) {
                                    const i = this._hintChildren ? this._hintChildren.find(s => "start" === s.align) : null,
                                        r = this._hintChildren ? this._hintChildren.find(s => "end" === s.align) : null;
                                    i ? e.push(i.id) : this._hintLabel && e.push(this._hintLabelId), r && e.push(r.id)
                                } else this._errorChildren && e.push(...this._errorChildren.map(i => i.id));
                                this._control.setDescribedByIds(e)
                            }
                        }
                        _validateControlChild() {}
                        updateOutlineGap() {
                            const e = this._label ? this._label.nativeElement : null,
                                i = this._connectionContainerRef.nativeElement,
                                r = ".mat-form-field-outline-start",
                                s = ".mat-form-field-outline-gap";
                            if ("outline" !== this.appearance || !this._platform.isBrowser) return;
                            if (!e || !e.children.length || !e.textContent.trim()) {
                                const d = i.querySelectorAll(`${r}, ${s}`);
                                for (let h = 0; h < d.length; h++) d[h].style.width = "0";
                                return
                            }
                            if (!this._isAttachedToDOM()) return void(this._outlineGapCalculationNeededImmediately = !0);
                            let o = 0,
                                a = 0;
                            const l = i.querySelectorAll(r),
                                c = i.querySelectorAll(s);
                            if (this._label && this._label.nativeElement.children.length) {
                                const d = i.getBoundingClientRect();
                                if (0 === d.width && 0 === d.height) return this._outlineGapCalculationNeededOnStable = !0, void(this._outlineGapCalculationNeededImmediately = !1);
                                const h = this._getStartEnd(d),
                                    m = e.children,
                                    _ = this._getStartEnd(m[0].getBoundingClientRect());
                                let v = 0;
                                for (let D = 0; D < m.length; D++) v += m[D].offsetWidth;
                                o = Math.abs(_ - h) - 5, a = v > 0 ? .75 * v + 10 : 0
                            }
                            for (let d = 0; d < l.length; d++) l[d].style.width = `${o}px`;
                            for (let d = 0; d < c.length; d++) c[d].style.width = `${a}px`;
                            this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = !1
                        }
                        _getStartEnd(e) {
                            return this._dir && "rtl" === this._dir.value ? e.right : e.left
                        }
                        _isAttachedToDOM() {
                            const e = this._elementRef.nativeElement;
                            if (e.getRootNode) {
                                const i = e.getRootNode();
                                return i && i !== e
                            }
                            return document.documentElement.contains(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Mt, 8), u(B6, 8), u(Ft), u(ce), u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-form-field"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, Vl, 5), _e(r, Vl, 7), _e(r, aa, 5), _e(r, aa, 7), _e(r, F6, 5), _e(r, S1, 5), _e(r, k1, 5), _e(r, A1, 5), _e(r, E1, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i._controlNonStatic = s.first), O(s = P()) && (i._controlStatic = s.first), O(s = P()) && (i._labelChildNonStatic = s.first), O(s = P()) && (i._labelChildStatic = s.first), O(s = P()) && (i._placeholderChild = s.first), O(s = P()) && (i._errorChildren = s), O(s = P()) && (i._hintChildren = s), O(s = P()) && (i._prefixChildren = s), O(s = P()) && (i._suffixChildren = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && (J(f6, 7), J(p6, 5), J(m6, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i._connectionContainerRef = r.first), O(r = P()) && (i._inputContainerRef = r.first), O(r = P()) && (i._label = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-form-field"],
                        hostVars: 40,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-form-field-appearance-standard", "standard" == i.appearance)("mat-form-field-appearance-fill", "fill" == i.appearance)("mat-form-field-appearance-outline", "outline" == i.appearance)("mat-form-field-appearance-legacy", "legacy" == i.appearance)("mat-form-field-invalid", i._control.errorState)("mat-form-field-can-float", i._canLabelFloat())("mat-form-field-should-float", i._shouldLabelFloat())("mat-form-field-has-label", i._hasFloatingLabel())("mat-form-field-hide-placeholder", i._hideControlPlaceholder())("mat-form-field-disabled", i._control.disabled)("mat-form-field-autofilled", i._control.autofilled)("mat-focused", i._control.focused)("ng-untouched", i._shouldForward("untouched"))("ng-touched", i._shouldForward("touched"))("ng-pristine", i._shouldForward("pristine"))("ng-dirty", i._shouldForward("dirty"))("ng-valid", i._shouldForward("valid"))("ng-invalid", i._shouldForward("invalid"))("ng-pending", i._shouldForward("pending"))("_mat-animation-noopable", !i._animationsEnabled)
                        },
                        inputs: {
                            color: "color",
                            appearance: "appearance",
                            hideRequiredMarker: "hideRequiredMarker",
                            hintLabel: "hintLabel",
                            floatLabel: "floatLabel"
                        },
                        exportAs: ["matFormField"],
                        features: [Q([{
                            provide: Hd,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: A6,
                        decls: 15,
                        vars: 8,
                        consts: [
                            [1, "mat-form-field-wrapper"],
                            [1, "mat-form-field-flex", 3, "click"],
                            ["connectionContainer", ""],
                            [4, "ngIf"],
                            ["class", "mat-form-field-prefix", 3, "cdkObserveContentDisabled", "cdkObserveContent", 4, "ngIf"],
                            [1, "mat-form-field-infix"],
                            ["inputContainer", ""],
                            [1, "mat-form-field-label-wrapper"],
                            ["class", "mat-form-field-label", 3, "cdkObserveContentDisabled", "id", "mat-empty", "mat-form-field-empty", "mat-accent", "mat-warn", "ngSwitch", "cdkObserveContent", 4, "ngIf"],
                            ["class", "mat-form-field-suffix", 4, "ngIf"],
                            ["class", "mat-form-field-underline", 4, "ngIf"],
                            [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                            [4, "ngSwitchCase"],
                            ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                            [1, "mat-form-field-outline"],
                            [1, "mat-form-field-outline-start"],
                            [1, "mat-form-field-outline-gap"],
                            [1, "mat-form-field-outline-end"],
                            [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                            [1, "mat-form-field-prefix", 3, "cdkObserveContentDisabled", "cdkObserveContent"],
                            [1, "mat-form-field-label", 3, "cdkObserveContentDisabled", "id", "ngSwitch", "cdkObserveContent"],
                            ["label", ""],
                            ["class", "mat-placeholder-required mat-form-field-required-marker", "aria-hidden", "true", 4, "ngIf"],
                            ["aria-hidden", "true", 1, "mat-placeholder-required", "mat-form-field-required-marker"],
                            [1, "mat-form-field-suffix"],
                            [1, "mat-form-field-underline"],
                            [1, "mat-form-field-ripple"],
                            [1, "mat-form-field-hint-wrapper"],
                            ["class", "mat-hint", 3, "id", 4, "ngIf"],
                            [1, "mat-form-field-hint-spacer"],
                            [1, "mat-hint", 3, "id"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(k6), f(0, "div", 0)(1, "div", 1, 2), T("click", function(s) {
                                return i._control.onContainerClick && i._control.onContainerClick(s)
                            }), b(3, g6, 9, 0, "ng-container", 3), b(4, _6, 2, 1, "div", 4), f(5, "div", 5, 6), me(7), f(8, "span", 7), b(9, w6, 5, 16, "label", 8), g()(), b(10, C6, 2, 0, "div", 9), g(), b(11, x6, 2, 4, "div", 10), f(12, "div", 11), b(13, D6, 2, 1, "div", 12), b(14, S6, 5, 2, "div", 13), g()()), 2 & e && (p(3), y("ngIf", "outline" == i.appearance), p(1), y("ngIf", i._prefixChildren.length), p(5), y("ngIf", i._hasFloatingLabel()), p(1), y("ngIf", i._suffixChildren.length), p(1), y("ngIf", "outline" != i.appearance), p(1), y("ngSwitch", i._getDisplayedMessages()), p(1), y("ngSwitchCase", "error"), p(1), y("ngSwitchCase", "hint"))
                        },
                        dependencies: [at, ps, Yo, Rf],
                        styles: [".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}", '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}', '.mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}', ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}", ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}", ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}"],
                        encapsulation: 2,
                        data: {
                            animation: [T6.transitionMessages]
                        },
                        changeDetection: 0
                    }), t
                })(),
                $d = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, de, Id, de]
                    }), t
                })();
            const R1 = Zs({
                passive: !0
            });
            let V6 = (() => {
                    class t {
                        constructor(e, i) {
                            this._platform = e, this._ngZone = i, this._monitoredElements = new Map
                        }
                        monitor(e) {
                            if (!this._platform.isBrowser) return Ni;
                            const i = bs(e),
                                r = this._monitoredElements.get(i);
                            if (r) return r.subject;
                            const s = new H,
                                o = "cdk-text-field-autofilled",
                                a = l => {
                                    "cdk-text-field-autofill-start" !== l.animationName || i.classList.contains(o) ? "cdk-text-field-autofill-end" === l.animationName && i.classList.contains(o) && (i.classList.remove(o), this._ngZone.run(() => s.next({
                                        target: l.target,
                                        isAutofilled: !1
                                    }))) : (i.classList.add(o), this._ngZone.run(() => s.next({
                                        target: l.target,
                                        isAutofilled: !0
                                    })))
                                };
                            return this._ngZone.runOutsideAngular(() => {
                                i.addEventListener("animationstart", a, R1), i.classList.add("cdk-text-field-autofill-monitored")
                            }), this._monitoredElements.set(i, {
                                subject: s,
                                unlisten: () => {
                                    i.removeEventListener("animationstart", a, R1)
                                }
                            }), s
                        }
                        stopMonitoring(e) {
                            const i = bs(e),
                                r = this._monitoredElements.get(i);
                            r && (r.unlisten(), r.subject.complete(), i.classList.remove("cdk-text-field-autofill-monitored"), i.classList.remove("cdk-text-field-autofilled"), this._monitoredElements.delete(i))
                        }
                        ngOnDestroy() {
                            this._monitoredElements.forEach((e, i) => this.stopMonitoring(i))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Ft), C(ce))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                F1 = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._elementRef = e, this._platform = i, this._ngZone = r, this._destroyed = new H, this._enabled = !0, this._previousMinRows = -1, this._isViewInited = !1, this._handleFocusEvent = o => {
                                this._hasFocus = "focus" === o.type
                            }, this._document = s, this._textareaElement = this._elementRef.nativeElement
                        }
                        get minRows() {
                            return this._minRows
                        }
                        set minRows(e) {
                            this._minRows = ht(e), this._setMinHeight()
                        }
                        get maxRows() {
                            return this._maxRows
                        }
                        set maxRows(e) {
                            this._maxRows = ht(e), this._setMaxHeight()
                        }
                        get enabled() {
                            return this._enabled
                        }
                        set enabled(e) {
                            e = G(e), this._enabled !== e && ((this._enabled = e) ? this.resizeToFitContent(!0) : this.reset())
                        }
                        get placeholder() {
                            return this._textareaElement.placeholder
                        }
                        set placeholder(e) {
                            this._cachedPlaceholderHeight = void 0, e ? this._textareaElement.setAttribute("placeholder", e) : this._textareaElement.removeAttribute("placeholder"), this._cacheTextareaPlaceholderHeight()
                        }
                        _setMinHeight() {
                            const e = this.minRows && this._cachedLineHeight ? this.minRows * this._cachedLineHeight + "px" : null;
                            e && (this._textareaElement.style.minHeight = e)
                        }
                        _setMaxHeight() {
                            const e = this.maxRows && this._cachedLineHeight ? this.maxRows * this._cachedLineHeight + "px" : null;
                            e && (this._textareaElement.style.maxHeight = e)
                        }
                        ngAfterViewInit() {
                            this._platform.isBrowser && (this._initialHeight = this._textareaElement.style.height, this.resizeToFitContent(), this._ngZone.runOutsideAngular(() => {
                                un(this._getWindow(), "resize").pipe(Rb(16), le(this._destroyed)).subscribe(() => this.resizeToFitContent(!0)), this._textareaElement.addEventListener("focus", this._handleFocusEvent), this._textareaElement.addEventListener("blur", this._handleFocusEvent)
                            }), this._isViewInited = !0, this.resizeToFitContent(!0))
                        }
                        ngOnDestroy() {
                            this._textareaElement.removeEventListener("focus", this._handleFocusEvent), this._textareaElement.removeEventListener("blur", this._handleFocusEvent), this._destroyed.next(), this._destroyed.complete()
                        }
                        _cacheTextareaLineHeight() {
                            if (this._cachedLineHeight) return;
                            let e = this._textareaElement.cloneNode(!1);
                            e.rows = 1, e.style.position = "absolute", e.style.visibility = "hidden", e.style.border = "none", e.style.padding = "0", e.style.height = "", e.style.minHeight = "", e.style.maxHeight = "", e.style.overflow = "hidden", this._textareaElement.parentNode.appendChild(e), this._cachedLineHeight = e.clientHeight, e.remove(), this._setMinHeight(), this._setMaxHeight()
                        }
                        _measureScrollHeight() {
                            const e = this._textareaElement,
                                i = e.style.marginBottom || "",
                                r = this._platform.FIREFOX,
                                s = r && this._hasFocus,
                                o = r ? "cdk-textarea-autosize-measuring-firefox" : "cdk-textarea-autosize-measuring";
                            s && (e.style.marginBottom = `${e.clientHeight}px`), e.classList.add(o);
                            const a = e.scrollHeight - 4;
                            return e.classList.remove(o), s && (e.style.marginBottom = i), a
                        }
                        _cacheTextareaPlaceholderHeight() {
                            if (!this._isViewInited || null != this._cachedPlaceholderHeight) return;
                            if (!this.placeholder) return void(this._cachedPlaceholderHeight = 0);
                            const e = this._textareaElement.value;
                            this._textareaElement.value = this._textareaElement.placeholder, this._cachedPlaceholderHeight = this._measureScrollHeight(), this._textareaElement.value = e
                        }
                        ngDoCheck() {
                            this._platform.isBrowser && this.resizeToFitContent()
                        }
                        resizeToFitContent(e = !1) {
                            if (!this._enabled || (this._cacheTextareaLineHeight(), this._cacheTextareaPlaceholderHeight(), !this._cachedLineHeight)) return;
                            const i = this._elementRef.nativeElement,
                                r = i.value;
                            if (!e && this._minRows === this._previousMinRows && r === this._previousValue) return;
                            const s = this._measureScrollHeight(),
                                o = Math.max(s, this._cachedPlaceholderHeight || 0);
                            i.style.height = `${o}px`, this._ngZone.runOutsideAngular(() => {
                                typeof requestAnimationFrame < "u" ? requestAnimationFrame(() => this._scrollToCaretPosition(i)) : setTimeout(() => this._scrollToCaretPosition(i))
                            }), this._previousValue = r, this._previousMinRows = this._minRows
                        }
                        reset() {
                            void 0 !== this._initialHeight && (this._textareaElement.style.height = this._initialHeight)
                        }
                        _noopInputHandler() {}
                        _getDocument() {
                            return this._document || document
                        }
                        _getWindow() {
                            return this._getDocument().defaultView || window
                        }
                        _scrollToCaretPosition(e) {
                            const {
                                selectionStart: i,
                                selectionEnd: r
                            } = e;
                            !this._destroyed.isStopped && this._hasFocus && e.setSelectionRange(i, r)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ft), u(ce), u(pe, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["textarea", "cdkTextareaAutosize", ""]
                        ],
                        hostAttrs: ["rows", "1", 1, "cdk-textarea-autosize"],
                        hostBindings: function(e, i) {
                            1 & e && T("input", function() {
                                return i._noopInputHandler()
                            })
                        },
                        inputs: {
                            minRows: ["cdkAutosizeMinRows", "minRows"],
                            maxRows: ["cdkAutosizeMaxRows", "maxRows"],
                            enabled: ["cdkTextareaAutosize", "enabled"],
                            placeholder: "placeholder"
                        },
                        exportAs: ["cdkTextareaAutosize"]
                    }), t
                })(),
                O1 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })();

            function P1(...t) {
                const n = FC(t),
                    {
                        args: e,
                        keys: i
                    } = sA(t),
                    r = new Ze(s => {
                        const {
                            length: o
                        } = e;
                        if (!o) return void s.complete();
                        const a = new Array(o);
                        let l = o,
                            c = o;
                        for (let d = 0; d < o; d++) {
                            let h = !1;
                            $n(e[d]).subscribe(kt(s, m => {
                                h || (h = !0, c--), a[d] = m
                            }, () => l--, void 0, () => {
                                (!l || !h) && (c || s.next(i ? oA(i, a) : a), s.complete())
                            }))
                        }
                    });
                return n ? r.pipe(Hy(n)) : r
            }
            let L1 = (() => {
                    class t {
                        constructor(e, i) {
                            this._renderer = e, this._elementRef = i, this.onChange = r => {}, this.onTouched = () => {}
                        }
                        setProperty(e, i) {
                            this._renderer.setProperty(this._elementRef.nativeElement, e, i)
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        registerOnChange(e) {
                            this.onChange = e
                        }
                        setDisabledState(e) {
                            this.setProperty("disabled", e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(qn), u(N))
                    }, t.\u0275dir = M({
                        type: t
                    }), t
                })(),
                la = (() => {
                    class t extends L1 {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })();
            const hn = new R("NgValueAccessor"),
                $6 = {
                    provide: hn,
                    useExisting: Ve(() => di),
                    multi: !0
                },
                z6 = new R("CompositionEventMode");
            let di = (() => {
                class t extends L1 {
                    constructor(e, i, r) {
                        super(e, i), this._compositionMode = r, this._composing = !1, null == this._compositionMode && (this._compositionMode = ! function j6() {
                            const t = Nr() ? Nr().getUserAgent() : "";
                            return /android (\d+)/.test(t.toLowerCase())
                        }())
                    }
                    writeValue(e) {
                        this.setProperty("value", e ? ? "")
                    }
                    _handleInput(e) {
                        (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(e)
                    }
                    _compositionStart() {
                        this._composing = !0
                    }
                    _compositionEnd(e) {
                        this._composing = !1, this._compositionMode && this.onChange(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(qn), u(N), u(z6, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["input", "formControlName", "", 3, "type", "checkbox"],
                        ["textarea", "formControlName", ""],
                        ["input", "formControl", "", 3, "type", "checkbox"],
                        ["textarea", "formControl", ""],
                        ["input", "ngModel", "", 3, "type", "checkbox"],
                        ["textarea", "ngModel", ""],
                        ["", "ngDefaultControl", ""]
                    ],
                    hostBindings: function(e, i) {
                        1 & e && T("input", function(s) {
                            return i._handleInput(s.target.value)
                        })("blur", function() {
                            return i.onTouched()
                        })("compositionstart", function() {
                            return i._compositionStart()
                        })("compositionend", function(s) {
                            return i._compositionEnd(s.target.value)
                        })
                    },
                    features: [Q([$6]), A]
                }), t
            })();

            function so(t) {
                return null == t || ("string" == typeof t || Array.isArray(t)) && 0 === t.length
            }

            function B1(t) {
                return null != t && "number" == typeof t.length
            }
            const fn = new R("NgValidators"),
                oo = new R("NgAsyncValidators"),
                G6 = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
            class jt {
                static min(n) {
                    return function V1(t) {
                        return n => {
                            if (so(n.value) || so(t)) return null;
                            const e = parseFloat(n.value);
                            return !isNaN(e) && e < t ? {
                                min: {
                                    min: t,
                                    actual: n.value
                                }
                            } : null
                        }
                    }(n)
                }
                static max(n) {
                    return function H1(t) {
                        return n => {
                            if (so(n.value) || so(t)) return null;
                            const e = parseFloat(n.value);
                            return !isNaN(e) && e > t ? {
                                max: {
                                    max: t,
                                    actual: n.value
                                }
                            } : null
                        }
                    }(n)
                }
                static required(n) {
                    return $1(n)
                }
                static requiredTrue(n) {
                    return function j1(t) {
                        return !0 === t.value ? null : {
                            required: !0
                        }
                    }(n)
                }
                static email(n) {
                    return function z1(t) {
                        return so(t.value) || G6.test(t.value) ? null : {
                            email: !0
                        }
                    }(n)
                }
                static minLength(n) {
                    return function U1(t) {
                        return n => so(n.value) || !B1(n.value) ? null : n.value.length < t ? {
                            minlength: {
                                requiredLength: t,
                                actualLength: n.value.length
                            }
                        } : null
                    }(n)
                }
                static maxLength(n) {
                    return function G1(t) {
                        return n => B1(n.value) && n.value.length > t ? {
                            maxlength: {
                                requiredLength: t,
                                actualLength: n.value.length
                            }
                        } : null
                    }(n)
                }
                static pattern(n) {
                    return function W1(t) {
                        if (!t) return tp;
                        let n, e;
                        return "string" == typeof t ? (e = "", "^" !== t.charAt(0) && (e += "^"), e += t, "$" !== t.charAt(t.length - 1) && (e += "$"), n = new RegExp(e)) : (e = t.toString(), n = t), i => {
                            if (so(i.value)) return null;
                            const r = i.value;
                            return n.test(r) ? null : {
                                pattern: {
                                    requiredPattern: e,
                                    actualValue: r
                                }
                            }
                        }
                    }(n)
                }
                static nullValidator(n) {
                    return null
                }
                static compose(n) {
                    return X1(n)
                }
                static composeAsync(n) {
                    return J1(n)
                }
            }

            function $1(t) {
                return so(t.value) ? {
                    required: !0
                } : null
            }

            function tp(t) {
                return null
            }

            function q1(t) {
                return null != t
            }

            function Y1(t) {
                return Wc(t) ? Rt(t) : t
            }

            function Q1(t) {
                let n = {};
                return t.forEach(e => {
                    n = null != e ? { ...n,
                        ...e
                    } : n
                }), 0 === Object.keys(n).length ? null : n
            }

            function K1(t, n) {
                return n.map(e => e(t))
            }

            function Z1(t) {
                return t.map(n => function W6(t) {
                    return !t.validate
                }(n) ? n : e => n.validate(e))
            }

            function X1(t) {
                if (!t) return null;
                const n = t.filter(q1);
                return 0 == n.length ? null : function(e) {
                    return Q1(K1(e, n))
                }
            }

            function Qb(t) {
                return null != t ? X1(Z1(t)) : null
            }

            function J1(t) {
                if (!t) return null;
                const n = t.filter(q1);
                return 0 == n.length ? null : function(e) {
                    return P1(K1(e, n).map(Y1)).pipe(Z(Q1))
                }
            }

            function Kb(t) {
                return null != t ? J1(Z1(t)) : null
            }

            function eT(t, n) {
                return null === t ? [n] : Array.isArray(t) ? [...t, n] : [t, n]
            }

            function tT(t) {
                return t._rawValidators
            }

            function nT(t) {
                return t._rawAsyncValidators
            }

            function Zb(t) {
                return t ? Array.isArray(t) ? t : [t] : []
            }

            function np(t, n) {
                return Array.isArray(t) ? t.includes(n) : t === n
            }

            function iT(t, n) {
                const e = Zb(n);
                return Zb(t).forEach(r => {
                    np(e, r) || e.push(r)
                }), e
            }

            function rT(t, n) {
                return Zb(n).filter(e => !np(t, e))
            }
            class sT {
                constructor() {
                    this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = []
                }
                get value() {
                    return this.control ? this.control.value : null
                }
                get valid() {
                    return this.control ? this.control.valid : null
                }
                get invalid() {
                    return this.control ? this.control.invalid : null
                }
                get pending() {
                    return this.control ? this.control.pending : null
                }
                get disabled() {
                    return this.control ? this.control.disabled : null
                }
                get enabled() {
                    return this.control ? this.control.enabled : null
                }
                get errors() {
                    return this.control ? this.control.errors : null
                }
                get pristine() {
                    return this.control ? this.control.pristine : null
                }
                get dirty() {
                    return this.control ? this.control.dirty : null
                }
                get touched() {
                    return this.control ? this.control.touched : null
                }
                get status() {
                    return this.control ? this.control.status : null
                }
                get untouched() {
                    return this.control ? this.control.untouched : null
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null
                }
                get path() {
                    return null
                }
                _setValidators(n) {
                    this._rawValidators = n || [], this._composedValidatorFn = Qb(this._rawValidators)
                }
                _setAsyncValidators(n) {
                    this._rawAsyncValidators = n || [], this._composedAsyncValidatorFn = Kb(this._rawAsyncValidators)
                }
                get validator() {
                    return this._composedValidatorFn || null
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null
                }
                _registerOnDestroy(n) {
                    this._onDestroyCallbacks.push(n)
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach(n => n()), this._onDestroyCallbacks = []
                }
                reset(n) {
                    this.control && this.control.reset(n)
                }
                hasError(n, e) {
                    return !!this.control && this.control.hasError(n, e)
                }
                getError(n, e) {
                    return this.control ? this.control.getError(n, e) : null
                }
            }
            class Zn extends sT {
                get formDirective() {
                    return null
                }
                get path() {
                    return null
                }
            }
            class vr extends sT {
                constructor() {
                    super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null
                }
            }
            class oT {
                constructor(n) {
                    this._cd = n
                }
                get isTouched() {
                    return !!this._cd ? .control ? .touched
                }
                get isUntouched() {
                    return !!this._cd ? .control ? .untouched
                }
                get isPristine() {
                    return !!this._cd ? .control ? .pristine
                }
                get isDirty() {
                    return !!this._cd ? .control ? .dirty
                }
                get isValid() {
                    return !!this._cd ? .control ? .valid
                }
                get isInvalid() {
                    return !!this._cd ? .control ? .invalid
                }
                get isPending() {
                    return !!this._cd ? .control ? .pending
                }
                get isSubmitted() {
                    return !!this._cd ? .submitted
                }
            }
            let Xn = (() => {
                    class t extends oT {
                        constructor(e) {
                            super(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(vr, 2))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "formControlName", ""],
                            ["", "ngModel", ""],
                            ["", "formControl", ""]
                        ],
                        hostVars: 14,
                        hostBindings: function(e, i) {
                            2 & e && re("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)("ng-pristine", i.isPristine)("ng-dirty", i.isDirty)("ng-valid", i.isValid)("ng-invalid", i.isInvalid)("ng-pending", i.isPending)
                        },
                        features: [A]
                    }), t
                })(),
                ao = (() => {
                    class t extends oT {
                        constructor(e) {
                            super(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Zn, 10))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "formGroupName", ""],
                            ["", "formArrayName", ""],
                            ["", "ngModelGroup", ""],
                            ["", "formGroup", ""],
                            ["form", 3, "ngNoForm", ""],
                            ["", "ngForm", ""]
                        ],
                        hostVars: 16,
                        hostBindings: function(e, i) {
                            2 & e && re("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)("ng-pristine", i.isPristine)("ng-dirty", i.isDirty)("ng-valid", i.isValid)("ng-invalid", i.isInvalid)("ng-pending", i.isPending)("ng-submitted", i.isSubmitted)
                        },
                        features: [A]
                    }), t
                })();
            const jd = "VALID",
                rp = "INVALID",
                Hl = "PENDING",
                zd = "DISABLED";

            function tv(t) {
                return (sp(t) ? t.validators : t) || null
            }

            function lT(t) {
                return Array.isArray(t) ? Qb(t) : t || null
            }

            function nv(t, n) {
                return (sp(n) ? n.asyncValidators : t) || null
            }

            function cT(t) {
                return Array.isArray(t) ? Kb(t) : t || null
            }

            function sp(t) {
                return null != t && !Array.isArray(t) && "object" == typeof t
            }

            function dT(t, n, e) {
                const i = t.controls;
                if (!(n ? Object.keys(i) : i).length) throw new B(1e3, "");
                if (!i[e]) throw new B(1001, "")
            }

            function uT(t, n, e) {
                t._forEachChild((i, r) => {
                    if (void 0 === e[r]) throw new B(1002, "")
                })
            }
            class Ud {
                constructor(n, e) {
                    this._pendingDirty = !1, this._hasOwnPendingAsyncValidator = !1, this._pendingTouched = !1, this._onCollectionChange = () => {}, this._parent = null, this.pristine = !0, this.touched = !1, this._onDisabledChange = [], this._rawValidators = n, this._rawAsyncValidators = e, this._composedValidatorFn = lT(this._rawValidators), this._composedAsyncValidatorFn = cT(this._rawAsyncValidators)
                }
                get validator() {
                    return this._composedValidatorFn
                }
                set validator(n) {
                    this._rawValidators = this._composedValidatorFn = n
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn
                }
                set asyncValidator(n) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn = n
                }
                get parent() {
                    return this._parent
                }
                get valid() {
                    return this.status === jd
                }
                get invalid() {
                    return this.status === rp
                }
                get pending() {
                    return this.status == Hl
                }
                get disabled() {
                    return this.status === zd
                }
                get enabled() {
                    return this.status !== zd
                }
                get dirty() {
                    return !this.pristine
                }
                get untouched() {
                    return !this.touched
                }
                get updateOn() {
                    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change"
                }
                setValidators(n) {
                    this._rawValidators = n, this._composedValidatorFn = lT(n)
                }
                setAsyncValidators(n) {
                    this._rawAsyncValidators = n, this._composedAsyncValidatorFn = cT(n)
                }
                addValidators(n) {
                    this.setValidators(iT(n, this._rawValidators))
                }
                addAsyncValidators(n) {
                    this.setAsyncValidators(iT(n, this._rawAsyncValidators))
                }
                removeValidators(n) {
                    this.setValidators(rT(n, this._rawValidators))
                }
                removeAsyncValidators(n) {
                    this.setAsyncValidators(rT(n, this._rawAsyncValidators))
                }
                hasValidator(n) {
                    return np(this._rawValidators, n)
                }
                hasAsyncValidator(n) {
                    return np(this._rawAsyncValidators, n)
                }
                clearValidators() {
                    this.validator = null
                }
                clearAsyncValidators() {
                    this.asyncValidator = null
                }
                markAsTouched(n = {}) {
                    this.touched = !0, this._parent && !n.onlySelf && this._parent.markAsTouched(n)
                }
                markAllAsTouched() {
                    this.markAsTouched({
                        onlySelf: !0
                    }), this._forEachChild(n => n.markAllAsTouched())
                }
                markAsUntouched(n = {}) {
                    this.touched = !1, this._pendingTouched = !1, this._forEachChild(e => {
                        e.markAsUntouched({
                            onlySelf: !0
                        })
                    }), this._parent && !n.onlySelf && this._parent._updateTouched(n)
                }
                markAsDirty(n = {}) {
                    this.pristine = !1, this._parent && !n.onlySelf && this._parent.markAsDirty(n)
                }
                markAsPristine(n = {}) {
                    this.pristine = !0, this._pendingDirty = !1, this._forEachChild(e => {
                        e.markAsPristine({
                            onlySelf: !0
                        })
                    }), this._parent && !n.onlySelf && this._parent._updatePristine(n)
                }
                markAsPending(n = {}) {
                    this.status = Hl, !1 !== n.emitEvent && this.statusChanges.emit(this.status), this._parent && !n.onlySelf && this._parent.markAsPending(n)
                }
                disable(n = {}) {
                    const e = this._parentMarkedDirty(n.onlySelf);
                    this.status = zd, this.errors = null, this._forEachChild(i => {
                        i.disable({ ...n,
                            onlySelf: !0
                        })
                    }), this._updateValue(), !1 !== n.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors({ ...n,
                        skipPristineCheck: e
                    }), this._onDisabledChange.forEach(i => i(!0))
                }
                enable(n = {}) {
                    const e = this._parentMarkedDirty(n.onlySelf);
                    this.status = jd, this._forEachChild(i => {
                        i.enable({ ...n,
                            onlySelf: !0
                        })
                    }), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: n.emitEvent
                    }), this._updateAncestors({ ...n,
                        skipPristineCheck: e
                    }), this._onDisabledChange.forEach(i => i(!1))
                }
                _updateAncestors(n) {
                    this._parent && !n.onlySelf && (this._parent.updateValueAndValidity(n), n.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched())
                }
                setParent(n) {
                    this._parent = n
                }
                getRawValue() {
                    return this.value
                }
                updateValueAndValidity(n = {}) {
                    this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === jd || this.status === Hl) && this._runAsyncValidator(n.emitEvent)), !1 !== n.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !n.onlySelf && this._parent.updateValueAndValidity(n)
                }
                _updateTreeValidity(n = {
                    emitEvent: !0
                }) {
                    this._forEachChild(e => e._updateTreeValidity(n)), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: n.emitEvent
                    })
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? zd : jd
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null
                }
                _runAsyncValidator(n) {
                    if (this.asyncValidator) {
                        this.status = Hl, this._hasOwnPendingAsyncValidator = !0;
                        const e = Y1(this.asyncValidator(this));
                        this._asyncValidationSubscription = e.subscribe(i => {
                            this._hasOwnPendingAsyncValidator = !1, this.setErrors(i, {
                                emitEvent: n
                            })
                        })
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1)
                }
                setErrors(n, e = {}) {
                    this.errors = n, this._updateControlsErrors(!1 !== e.emitEvent)
                }
                get(n) {
                    let e = n;
                    return null == e || (Array.isArray(e) || (e = e.split(".")), 0 === e.length) ? null : e.reduce((i, r) => i && i._find(r), this)
                }
                getError(n, e) {
                    const i = e ? this.get(e) : this;
                    return i && i.errors ? i.errors[n] : null
                }
                hasError(n, e) {
                    return !!this.getError(n, e)
                }
                get root() {
                    let n = this;
                    for (; n._parent;) n = n._parent;
                    return n
                }
                _updateControlsErrors(n) {
                    this.status = this._calculateStatus(), n && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(n)
                }
                _initObservables() {
                    this.valueChanges = new V, this.statusChanges = new V
                }
                _calculateStatus() {
                    return this._allControlsDisabled() ? zd : this.errors ? rp : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Hl) ? Hl : this._anyControlsHaveStatus(rp) ? rp : jd
                }
                _anyControlsHaveStatus(n) {
                    return this._anyControls(e => e.status === n)
                }
                _anyControlsDirty() {
                    return this._anyControls(n => n.dirty)
                }
                _anyControlsTouched() {
                    return this._anyControls(n => n.touched)
                }
                _updatePristine(n = {}) {
                    this.pristine = !this._anyControlsDirty(), this._parent && !n.onlySelf && this._parent._updatePristine(n)
                }
                _updateTouched(n = {}) {
                    this.touched = this._anyControlsTouched(), this._parent && !n.onlySelf && this._parent._updateTouched(n)
                }
                _registerOnCollectionChange(n) {
                    this._onCollectionChange = n
                }
                _setUpdateStrategy(n) {
                    sp(n) && null != n.updateOn && (this._updateOn = n.updateOn)
                }
                _parentMarkedDirty(n) {
                    return !n && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty()
                }
                _find(n) {
                    return null
                }
            }
            class Xi extends Ud {
                constructor(n, e, i) {
                    super(tv(e), nv(i, e)), this.controls = n, this._initObservables(), this._setUpdateStrategy(e), this._setUpControls(), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: !!this.asyncValidator
                    })
                }
                registerControl(n, e) {
                    return this.controls[n] ? this.controls[n] : (this.controls[n] = e, e.setParent(this), e._registerOnCollectionChange(this._onCollectionChange), e)
                }
                addControl(n, e, i = {}) {
                    this.registerControl(n, e), this.updateValueAndValidity({
                        emitEvent: i.emitEvent
                    }), this._onCollectionChange()
                }
                removeControl(n, e = {}) {
                    this.controls[n] && this.controls[n]._registerOnCollectionChange(() => {}), delete this.controls[n], this.updateValueAndValidity({
                        emitEvent: e.emitEvent
                    }), this._onCollectionChange()
                }
                setControl(n, e, i = {}) {
                    this.controls[n] && this.controls[n]._registerOnCollectionChange(() => {}), delete this.controls[n], e && this.registerControl(n, e), this.updateValueAndValidity({
                        emitEvent: i.emitEvent
                    }), this._onCollectionChange()
                }
                contains(n) {
                    return this.controls.hasOwnProperty(n) && this.controls[n].enabled
                }
                setValue(n, e = {}) {
                    uT(this, 0, n), Object.keys(n).forEach(i => {
                        dT(this, !0, i), this.controls[i].setValue(n[i], {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this.updateValueAndValidity(e)
                }
                patchValue(n, e = {}) {
                    null != n && (Object.keys(n).forEach(i => {
                        const r = this.controls[i];
                        r && r.patchValue(n[i], {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this.updateValueAndValidity(e))
                }
                reset(n = {}, e = {}) {
                    this._forEachChild((i, r) => {
                        i.reset(n[r], {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this._updatePristine(e), this._updateTouched(e), this.updateValueAndValidity(e)
                }
                getRawValue() {
                    return this._reduceChildren({}, (n, e, i) => (n[i] = e.getRawValue(), n))
                }
                _syncPendingControls() {
                    let n = this._reduceChildren(!1, (e, i) => !!i._syncPendingControls() || e);
                    return n && this.updateValueAndValidity({
                        onlySelf: !0
                    }), n
                }
                _forEachChild(n) {
                    Object.keys(this.controls).forEach(e => {
                        const i = this.controls[e];
                        i && n(i, e)
                    })
                }
                _setUpControls() {
                    this._forEachChild(n => {
                        n.setParent(this), n._registerOnCollectionChange(this._onCollectionChange)
                    })
                }
                _updateValue() {
                    this.value = this._reduceValue()
                }
                _anyControls(n) {
                    for (const [e, i] of Object.entries(this.controls))
                        if (this.contains(e) && n(i)) return !0;
                    return !1
                }
                _reduceValue() {
                    return this._reduceChildren({}, (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e))
                }
                _reduceChildren(n, e) {
                    let i = n;
                    return this._forEachChild((r, s) => {
                        i = e(i, r, s)
                    }), i
                }
                _allControlsDisabled() {
                    for (const n of Object.keys(this.controls))
                        if (this.controls[n].enabled) return !1;
                    return Object.keys(this.controls).length > 0 || this.disabled
                }
                _find(n) {
                    return this.controls.hasOwnProperty(n) ? this.controls[n] : null
                }
            }
            const iv = Xi;
            class hT extends Xi {}

            function op(t, n) {
                return [...n.path, t]
            }

            function Gd(t, n) {
                rv(t, n), n.valueAccessor.writeValue(t.value), t.disabled && n.valueAccessor.setDisabledState ? .(!0),
                    function eW(t, n) {
                        n.valueAccessor.registerOnChange(e => {
                            t._pendingValue = e, t._pendingChange = !0, t._pendingDirty = !0, "change" === t.updateOn && fT(t, n)
                        })
                    }(t, n),
                    function nW(t, n) {
                        const e = (i, r) => {
                            n.valueAccessor.writeValue(i), r && n.viewToModelUpdate(i)
                        };
                        t.registerOnChange(e), n._registerOnDestroy(() => {
                            t._unregisterOnChange(e)
                        })
                    }(t, n),
                    function tW(t, n) {
                        n.valueAccessor.registerOnTouched(() => {
                            t._pendingTouched = !0, "blur" === t.updateOn && t._pendingChange && fT(t, n), "submit" !== t.updateOn && t.markAsTouched()
                        })
                    }(t, n),
                    function J6(t, n) {
                        if (n.valueAccessor.setDisabledState) {
                            const e = i => {
                                n.valueAccessor.setDisabledState(i)
                            };
                            t.registerOnDisabledChange(e), n._registerOnDestroy(() => {
                                t._unregisterOnDisabledChange(e)
                            })
                        }
                    }(t, n)
            }

            function ap(t, n, e = !0) {
                const i = () => {};
                n.valueAccessor && (n.valueAccessor.registerOnChange(i), n.valueAccessor.registerOnTouched(i)), cp(t, n), t && (n._invokeOnDestroyCallbacks(), t._registerOnCollectionChange(() => {}))
            }

            function lp(t, n) {
                t.forEach(e => {
                    e.registerOnValidatorChange && e.registerOnValidatorChange(n)
                })
            }

            function rv(t, n) {
                const e = tT(t);
                null !== n.validator ? t.setValidators(eT(e, n.validator)) : "function" == typeof e && t.setValidators([e]);
                const i = nT(t);
                null !== n.asyncValidator ? t.setAsyncValidators(eT(i, n.asyncValidator)) : "function" == typeof i && t.setAsyncValidators([i]);
                const r = () => t.updateValueAndValidity();
                lp(n._rawValidators, r), lp(n._rawAsyncValidators, r)
            }

            function cp(t, n) {
                let e = !1;
                if (null !== t) {
                    if (null !== n.validator) {
                        const r = tT(t);
                        if (Array.isArray(r) && r.length > 0) {
                            const s = r.filter(o => o !== n.validator);
                            s.length !== r.length && (e = !0, t.setValidators(s))
                        }
                    }
                    if (null !== n.asyncValidator) {
                        const r = nT(t);
                        if (Array.isArray(r) && r.length > 0) {
                            const s = r.filter(o => o !== n.asyncValidator);
                            s.length !== r.length && (e = !0, t.setAsyncValidators(s))
                        }
                    }
                }
                const i = () => {};
                return lp(n._rawValidators, i), lp(n._rawAsyncValidators, i), e
            }

            function fT(t, n) {
                t._pendingDirty && t.markAsDirty(), t.setValue(t._pendingValue, {
                    emitModelToViewChange: !1
                }), n.viewToModelUpdate(t._pendingValue), t._pendingChange = !1
            }

            function pT(t, n) {
                rv(t, n)
            }

            function sv(t, n) {
                if (!t.hasOwnProperty("model")) return !1;
                const e = t.model;
                return !!e.isFirstChange() || !Object.is(n, e.currentValue)
            }

            function gT(t, n) {
                t._syncPendingControls(), n.forEach(e => {
                    const i = e.control;
                    "submit" === i.updateOn && i._pendingChange && (e.viewToModelUpdate(i._pendingValue), i._pendingChange = !1)
                })
            }

            function ov(t, n) {
                if (!n) return null;
                let e, i, r;
                return Array.isArray(n), n.forEach(s => {
                    s.constructor === di ? e = s : function sW(t) {
                        return Object.getPrototypeOf(t.constructor) === la
                    }(s) ? i = s : r = s
                }), r || i || e || null
            }
            const aW = {
                    provide: Zn,
                    useExisting: Ve(() => $l)
                },
                Wd = (() => Promise.resolve())();
            let $l = (() => {
                class t extends Zn {
                    constructor(e, i) {
                        super(), this.submitted = !1, this._directives = new Set, this.ngSubmit = new V, this.form = new Xi({}, Qb(e), Kb(i))
                    }
                    ngAfterViewInit() {
                        this._setUpdateStrategy()
                    }
                    get formDirective() {
                        return this
                    }
                    get control() {
                        return this.form
                    }
                    get path() {
                        return []
                    }
                    get controls() {
                        return this.form.controls
                    }
                    addControl(e) {
                        Wd.then(() => {
                            const i = this._findContainer(e.path);
                            e.control = i.registerControl(e.name, e.control), Gd(e.control, e), e.control.updateValueAndValidity({
                                emitEvent: !1
                            }), this._directives.add(e)
                        })
                    }
                    getControl(e) {
                        return this.form.get(e.path)
                    }
                    removeControl(e) {
                        Wd.then(() => {
                            const i = this._findContainer(e.path);
                            i && i.removeControl(e.name), this._directives.delete(e)
                        })
                    }
                    addFormGroup(e) {
                        Wd.then(() => {
                            const i = this._findContainer(e.path),
                                r = new Xi({});
                            pT(r, e), i.registerControl(e.name, r), r.updateValueAndValidity({
                                emitEvent: !1
                            })
                        })
                    }
                    removeFormGroup(e) {
                        Wd.then(() => {
                            const i = this._findContainer(e.path);
                            i && i.removeControl(e.name)
                        })
                    }
                    getFormGroup(e) {
                        return this.form.get(e.path)
                    }
                    updateModel(e, i) {
                        Wd.then(() => {
                            this.form.get(e.path).setValue(i)
                        })
                    }
                    setValue(e) {
                        this.control.setValue(e)
                    }
                    onSubmit(e) {
                        return this.submitted = !0, gT(this.form, this._directives), this.ngSubmit.emit(e), "dialog" === e ? .target ? .method
                    }
                    onReset() {
                        this.resetForm()
                    }
                    resetForm(e) {
                        this.form.reset(e), this.submitted = !1
                    }
                    _setUpdateStrategy() {
                        this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn)
                    }
                    _findContainer(e) {
                        return e.pop(), e.length ? this.form.get(e) : this.form
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(fn, 10), u(oo, 10))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                        ["ng-form"],
                        ["", "ngForm", ""]
                    ],
                    hostBindings: function(e, i) {
                        1 & e && T("submit", function(s) {
                            return i.onSubmit(s)
                        })("reset", function() {
                            return i.onReset()
                        })
                    },
                    inputs: {
                        options: ["ngFormOptions", "options"]
                    },
                    outputs: {
                        ngSubmit: "ngSubmit"
                    },
                    exportAs: ["ngForm"],
                    features: [Q([aW]), A]
                }), t
            })();

            function _T(t, n) {
                const e = t.indexOf(n);
                e > -1 && t.splice(e, 1)
            }

            function yT(t) {
                return "object" == typeof t && null !== t && 2 === Object.keys(t).length && "value" in t && "disabled" in t
            }
            const jr = class extends Ud {
                    constructor(n = null, e, i) {
                        super(tv(e), nv(i, e)), this.defaultValue = null, this._onChange = [], this._pendingChange = !1, this._applyFormState(n), this._setUpdateStrategy(e), this._initObservables(), this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator
                        }), sp(e) && (e.nonNullable || e.initialValueIsDefault) && (this.defaultValue = yT(n) ? n.value : n)
                    }
                    setValue(n, e = {}) {
                        this.value = this._pendingValue = n, this._onChange.length && !1 !== e.emitModelToViewChange && this._onChange.forEach(i => i(this.value, !1 !== e.emitViewToModelChange)), this.updateValueAndValidity(e)
                    }
                    patchValue(n, e = {}) {
                        this.setValue(n, e)
                    }
                    reset(n = this.defaultValue, e = {}) {
                        this._applyFormState(n), this.markAsPristine(e), this.markAsUntouched(e), this.setValue(this.value, e), this._pendingChange = !1
                    }
                    _updateValue() {}
                    _anyControls(n) {
                        return !1
                    }
                    _allControlsDisabled() {
                        return this.disabled
                    }
                    registerOnChange(n) {
                        this._onChange.push(n)
                    }
                    _unregisterOnChange(n) {
                        _T(this._onChange, n)
                    }
                    registerOnDisabledChange(n) {
                        this._onDisabledChange.push(n)
                    }
                    _unregisterOnDisabledChange(n) {
                        _T(this._onDisabledChange, n)
                    }
                    _forEachChild(n) {}
                    _syncPendingControls() {
                        return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1
                        }), 0))
                    }
                    _applyFormState(n) {
                        yT(n) ? (this.value = this._pendingValue = n.value, n.disabled ? this.disable({
                            onlySelf: !0,
                            emitEvent: !1
                        }) : this.enable({
                            onlySelf: !0,
                            emitEvent: !1
                        })) : this.value = this._pendingValue = n
                    }
                },
                dW = {
                    provide: vr,
                    useExisting: Ve(() => qd)
                },
                wT = (() => Promise.resolve())();
            let qd = (() => {
                    class t extends vr {
                        constructor(e, i, r, s, o) {
                            super(), this._changeDetectorRef = o, this.control = new jr, this._registered = !1, this.update = new V, this._parent = e, this._setValidators(i), this._setAsyncValidators(r), this.valueAccessor = ov(0, s)
                        }
                        ngOnChanges(e) {
                            if (this._checkForErrors(), !this._registered || "name" in e) {
                                if (this._registered && (this._checkName(), this.formDirective)) {
                                    const i = e.name.previousValue;
                                    this.formDirective.removeControl({
                                        name: i,
                                        path: this._getPath(i)
                                    })
                                }
                                this._setUpControl()
                            }
                            "isDisabled" in e && this._updateDisabled(e), sv(e, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model)
                        }
                        ngOnDestroy() {
                            this.formDirective && this.formDirective.removeControl(this)
                        }
                        get path() {
                            return this._getPath(this.name)
                        }
                        get formDirective() {
                            return this._parent ? this._parent.formDirective : null
                        }
                        viewToModelUpdate(e) {
                            this.viewModel = e, this.update.emit(e)
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = !0
                        }
                        _setUpdateStrategy() {
                            this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn)
                        }
                        _isStandalone() {
                            return !this._parent || !(!this.options || !this.options.standalone)
                        }
                        _setUpStandalone() {
                            Gd(this.control, this), this.control.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(), this._checkName()
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options && this.options.name && (this.name = this.options.name), this._isStandalone()
                        }
                        _updateValue(e) {
                            wT.then(() => {
                                this.control.setValue(e, {
                                    emitViewToModelChange: !1
                                }), this._changeDetectorRef ? .markForCheck()
                            })
                        }
                        _updateDisabled(e) {
                            const i = e.isDisabled.currentValue,
                                r = 0 !== i && us(i);
                            wT.then(() => {
                                r && !this.control.disabled ? this.control.disable() : !r && this.control.disabled && this.control.enable(), this._changeDetectorRef ? .markForCheck()
                            })
                        }
                        _getPath(e) {
                            return this._parent ? op(e, this._parent) : [e]
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Zn, 9), u(fn, 10), u(oo, 10), u(hn, 10), u(ge, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]
                        ],
                        inputs: {
                            name: "name",
                            isDisabled: ["disabled", "isDisabled"],
                            model: ["ngModel", "model"],
                            options: ["ngModelOptions", "options"]
                        },
                        outputs: {
                            update: "ngModelChange"
                        },
                        exportAs: ["ngModel"],
                        features: [Q([dW]), A, ze]
                    }), t
                })(),
                lo = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]
                        ],
                        hostAttrs: ["novalidate", ""]
                    }), t
                })();
            const uW = {
                provide: hn,
                useExisting: Ve(() => dp),
                multi: !0
            };
            let dp = (() => {
                    class t extends la {
                        writeValue(e) {
                            this.setProperty("value", e ? ? "")
                        }
                        registerOnChange(e) {
                            this.onChange = i => {
                                e("" == i ? null : parseFloat(i))
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["input", "type", "number", "formControlName", ""],
                            ["input", "type", "number", "formControl", ""],
                            ["input", "type", "number", "ngModel", ""]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && T("input", function(s) {
                                return i.onChange(s.target.value)
                            })("blur", function() {
                                return i.onTouched()
                            })
                        },
                        features: [Q([uW]), A]
                    }), t
                })(),
                CT = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })();
            const av = new R("NgModelWithFormControlWarning"),
                mW = {
                    provide: vr,
                    useExisting: Ve(() => xs)
                };
            let xs = (() => {
                class t extends vr {
                    constructor(e, i, r, s) {
                        super(), this._ngModelWarningConfig = s, this.update = new V, this._ngModelWarningSent = !1, this._setValidators(e), this._setAsyncValidators(i), this.valueAccessor = ov(0, r)
                    }
                    set isDisabled(e) {}
                    ngOnChanges(e) {
                        if (this._isControlChanged(e)) {
                            const i = e.form.previousValue;
                            i && ap(i, this, !1), Gd(this.form, this), this.form.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                        sv(e, this.viewModel) && (this.form.setValue(this.model), this.viewModel = this.model)
                    }
                    ngOnDestroy() {
                        this.form && ap(this.form, this, !1)
                    }
                    get path() {
                        return []
                    }
                    get control() {
                        return this.form
                    }
                    viewToModelUpdate(e) {
                        this.viewModel = e, this.update.emit(e)
                    }
                    _isControlChanged(e) {
                        return e.hasOwnProperty("form")
                    }
                }
                return t._ngModelWarningSentOnce = !1, t.\u0275fac = function(e) {
                    return new(e || t)(u(fn, 10), u(oo, 10), u(hn, 10), u(av, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "formControl", ""]
                    ],
                    inputs: {
                        form: ["formControl", "form"],
                        isDisabled: ["disabled", "isDisabled"],
                        model: ["ngModel", "model"]
                    },
                    outputs: {
                        update: "ngModelChange"
                    },
                    exportAs: ["ngForm"],
                    features: [Q([mW]), A, ze]
                }), t
            })();
            const gW = {
                provide: Zn,
                useExisting: Ve(() => ui)
            };
            let ui = (() => {
                class t extends Zn {
                    constructor(e, i) {
                        super(), this.submitted = !1, this._onCollectionChange = () => this._updateDomValue(), this.directives = [], this.form = null, this.ngSubmit = new V, this._setValidators(e), this._setAsyncValidators(i)
                    }
                    ngOnChanges(e) {
                        this._checkFormPresent(), e.hasOwnProperty("form") && (this._updateValidators(), this._updateDomValue(), this._updateRegistrations(), this._oldForm = this.form)
                    }
                    ngOnDestroy() {
                        this.form && (cp(this.form, this), this.form._onCollectionChange === this._onCollectionChange && this.form._registerOnCollectionChange(() => {}))
                    }
                    get formDirective() {
                        return this
                    }
                    get control() {
                        return this.form
                    }
                    get path() {
                        return []
                    }
                    addControl(e) {
                        const i = this.form.get(e.path);
                        return Gd(i, e), i.updateValueAndValidity({
                            emitEvent: !1
                        }), this.directives.push(e), i
                    }
                    getControl(e) {
                        return this.form.get(e.path)
                    }
                    removeControl(e) {
                        ap(e.control || null, e, !1),
                            function oW(t, n) {
                                const e = t.indexOf(n);
                                e > -1 && t.splice(e, 1)
                            }(this.directives, e)
                    }
                    addFormGroup(e) {
                        this._setUpFormContainer(e)
                    }
                    removeFormGroup(e) {
                        this._cleanUpFormContainer(e)
                    }
                    getFormGroup(e) {
                        return this.form.get(e.path)
                    }
                    addFormArray(e) {
                        this._setUpFormContainer(e)
                    }
                    removeFormArray(e) {
                        this._cleanUpFormContainer(e)
                    }
                    getFormArray(e) {
                        return this.form.get(e.path)
                    }
                    updateModel(e, i) {
                        this.form.get(e.path).setValue(i)
                    }
                    onSubmit(e) {
                        return this.submitted = !0, gT(this.form, this.directives), this.ngSubmit.emit(e), "dialog" === e ? .target ? .method
                    }
                    onReset() {
                        this.resetForm()
                    }
                    resetForm(e) {
                        this.form.reset(e), this.submitted = !1
                    }
                    _updateDomValue() {
                        this.directives.forEach(e => {
                            const i = e.control,
                                r = this.form.get(e.path);
                            i !== r && (ap(i || null, e), (t => t instanceof jr)(r) && (Gd(r, e), e.control = r))
                        }), this.form._updateTreeValidity({
                            emitEvent: !1
                        })
                    }
                    _setUpFormContainer(e) {
                        const i = this.form.get(e.path);
                        pT(i, e), i.updateValueAndValidity({
                            emitEvent: !1
                        })
                    }
                    _cleanUpFormContainer(e) {
                        if (this.form) {
                            const i = this.form.get(e.path);
                            i && function iW(t, n) {
                                return cp(t, n)
                            }(i, e) && i.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                    }
                    _updateRegistrations() {
                        this.form._registerOnCollectionChange(this._onCollectionChange), this._oldForm && this._oldForm._registerOnCollectionChange(() => {})
                    }
                    _updateValidators() {
                        rv(this.form, this), this._oldForm && cp(this._oldForm, this)
                    }
                    _checkFormPresent() {}
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(fn, 10), u(oo, 10))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "formGroup", ""]
                    ],
                    hostBindings: function(e, i) {
                        1 & e && T("submit", function(s) {
                            return i.onSubmit(s)
                        })("reset", function() {
                            return i.onReset()
                        })
                    },
                    inputs: {
                        form: ["formGroup", "form"]
                    },
                    outputs: {
                        ngSubmit: "ngSubmit"
                    },
                    exportAs: ["ngForm"],
                    features: [Q([gW]), A, ze]
                }), t
            })();
            const bW = {
                provide: vr,
                useExisting: Ve(() => jl)
            };
            let jl = (() => {
                    class t extends vr {
                        constructor(e, i, r, s, o) {
                            super(), this._ngModelWarningConfig = o, this._added = !1, this.update = new V, this._ngModelWarningSent = !1, this._parent = e, this._setValidators(i), this._setAsyncValidators(r), this.valueAccessor = ov(0, s)
                        }
                        set isDisabled(e) {}
                        ngOnChanges(e) {
                            this._added || this._setUpControl(), sv(e, this.viewModel) && (this.viewModel = this.model, this.formDirective.updateModel(this, this.model))
                        }
                        ngOnDestroy() {
                            this.formDirective && this.formDirective.removeControl(this)
                        }
                        viewToModelUpdate(e) {
                            this.viewModel = e, this.update.emit(e)
                        }
                        get path() {
                            return op(null == this.name ? this.name : this.name.toString(), this._parent)
                        }
                        get formDirective() {
                            return this._parent ? this._parent.formDirective : null
                        }
                        _checkParentType() {}
                        _setUpControl() {
                            this._checkParentType(), this.control = this.formDirective.addControl(this), this._added = !0
                        }
                    }
                    return t._ngModelWarningSentOnce = !1, t.\u0275fac = function(e) {
                        return new(e || t)(u(Zn, 13), u(fn, 10), u(oo, 10), u(hn, 10), u(av, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "formControlName", ""]
                        ],
                        inputs: {
                            name: ["formControlName", "name"],
                            isDisabled: ["disabled", "isDisabled"],
                            model: ["ngModel", "model"]
                        },
                        outputs: {
                            update: "ngModelChange"
                        },
                        features: [Q([bW]), A, ze]
                    }), t
                })(),
                ca = (() => {
                    class t {
                        constructor() {
                            this._validator = tp
                        }
                        ngOnChanges(e) {
                            if (this.inputName in e) {
                                const i = this.normalizeInput(e[this.inputName].currentValue);
                                this._enabled = this.enabled(i), this._validator = this._enabled ? this.createValidator(i) : tp, this._onChange && this._onChange()
                            }
                        }
                        validate(e) {
                            return this._validator(e)
                        }
                        registerOnValidatorChange(e) {
                            this._onChange = e
                        }
                        enabled(e) {
                            return null != e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        features: [ze]
                    }), t
                })();
            const AW = {
                provide: fn,
                useExisting: Ve(() => zr),
                multi: !0
            };
            let zr = (() => {
                    class t extends ca {
                        constructor() {
                            super(...arguments), this.inputName = "required", this.normalizeInput = us, this.createValidator = e => $1
                        }
                        enabled(e) {
                            return e
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
                            ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                            ["", "required", "", "ngModel", "", 3, "type", "checkbox"]
                        ],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && q("required", i._enabled ? "" : null)
                        },
                        inputs: {
                            required: "required"
                        },
                        features: [Q([AW]), A]
                    }), t
                })(),
                LT = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [CT]
                    }), t
                })(),
                OW = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [LT]
                    }), t
                })(),
                Ji = (() => {
                    class t {
                        static withConfig(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: av,
                                    useValue: e.warnOnNgModelWithFormControl
                                }]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [LT]
                    }), t
                })();
            class zl extends Ud {
                constructor(n, e, i) {
                    super(tv(e), nv(i, e)), this.controls = n, this._initObservables(), this._setUpdateStrategy(e), this._setUpControls(), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: !!this.asyncValidator
                    })
                }
                at(n) {
                    return this.controls[this._adjustIndex(n)]
                }
                push(n, e = {}) {
                    this.controls.push(n), this._registerControl(n), this.updateValueAndValidity({
                        emitEvent: e.emitEvent
                    }), this._onCollectionChange()
                }
                insert(n, e, i = {}) {
                    this.controls.splice(n, 0, e), this._registerControl(e), this.updateValueAndValidity({
                        emitEvent: i.emitEvent
                    })
                }
                removeAt(n, e = {}) {
                    let i = this._adjustIndex(n);
                    i < 0 && (i = 0), this.controls[i] && this.controls[i]._registerOnCollectionChange(() => {}), this.controls.splice(i, 1), this.updateValueAndValidity({
                        emitEvent: e.emitEvent
                    })
                }
                setControl(n, e, i = {}) {
                    let r = this._adjustIndex(n);
                    r < 0 && (r = 0), this.controls[r] && this.controls[r]._registerOnCollectionChange(() => {}), this.controls.splice(r, 1), e && (this.controls.splice(r, 0, e), this._registerControl(e)), this.updateValueAndValidity({
                        emitEvent: i.emitEvent
                    }), this._onCollectionChange()
                }
                get length() {
                    return this.controls.length
                }
                setValue(n, e = {}) {
                    uT(this, 0, n), n.forEach((i, r) => {
                        dT(this, !1, r), this.at(r).setValue(i, {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this.updateValueAndValidity(e)
                }
                patchValue(n, e = {}) {
                    null != n && (n.forEach((i, r) => {
                        this.at(r) && this.at(r).patchValue(i, {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this.updateValueAndValidity(e))
                }
                reset(n = [], e = {}) {
                    this._forEachChild((i, r) => {
                        i.reset(n[r], {
                            onlySelf: !0,
                            emitEvent: e.emitEvent
                        })
                    }), this._updatePristine(e), this._updateTouched(e), this.updateValueAndValidity(e)
                }
                getRawValue() {
                    return this.controls.map(n => n.getRawValue())
                }
                clear(n = {}) {
                    this.controls.length < 1 || (this._forEachChild(e => e._registerOnCollectionChange(() => {})), this.controls.splice(0), this.updateValueAndValidity({
                        emitEvent: n.emitEvent
                    }))
                }
                _adjustIndex(n) {
                    return n < 0 ? n + this.length : n
                }
                _syncPendingControls() {
                    let n = this.controls.reduce((e, i) => !!i._syncPendingControls() || e, !1);
                    return n && this.updateValueAndValidity({
                        onlySelf: !0
                    }), n
                }
                _forEachChild(n) {
                    this.controls.forEach((e, i) => {
                        n(e, i)
                    })
                }
                _updateValue() {
                    this.value = this.controls.filter(n => n.enabled || this.disabled).map(n => n.value)
                }
                _anyControls(n) {
                    return this.controls.some(e => e.enabled && n(e))
                }
                _setUpControls() {
                    this._forEachChild(n => this._registerControl(n))
                }
                _allControlsDisabled() {
                    for (const n of this.controls)
                        if (n.enabled) return !1;
                    return this.controls.length > 0 || this.disabled
                }
                _registerControl(n) {
                    n.setParent(this), n._registerOnCollectionChange(this._onCollectionChange)
                }
                _find(n) {
                    return this.at(n) ? ? null
                }
            }

            function NT(t) {
                return !!t && (void 0 !== t.asyncValidators || void 0 !== t.validators || void 0 !== t.updateOn)
            }
            let PW = (() => {
                    class t {
                        constructor() {
                            this.useNonNullable = !1
                        }
                        get nonNullable() {
                            const e = new t;
                            return e.useNonNullable = !0, e
                        }
                        group(e, i = null) {
                            const r = this._reduceControls(e);
                            let s = {};
                            return NT(i) ? s = i : null !== i && (s.validators = i.validator, s.asyncValidators = i.asyncValidator), new Xi(r, s)
                        }
                        record(e, i = null) {
                            const r = this._reduceControls(e);
                            return new hT(r, i)
                        }
                        control(e, i, r) {
                            let s = {};
                            return this.useNonNullable ? (NT(i) ? s = i : (s.validators = i, s.asyncValidators = r), new jr(e, { ...s,
                                nonNullable: !0
                            })) : new jr(e, i, r)
                        }
                        array(e, i, r) {
                            const s = e.map(o => this._createControl(o));
                            return new zl(s, i, r)
                        }
                        _reduceControls(e) {
                            const i = {};
                            return Object.keys(e).forEach(r => {
                                i[r] = this._createControl(e[r])
                            }), i
                        }
                        _createControl(e) {
                            return e instanceof jr || e instanceof Ud ? e : Array.isArray(e) ? this.control(e[0], e.length > 1 ? e[1] : null, e.length > 2 ? e[2] : null) : this.control(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: Ji
                    }), t
                })(),
                hp = (() => {
                    class t extends PW {
                        group(e, i = null) {
                            return super.group(e, i)
                        }
                        control(e, i, r) {
                            return super.control(e, i, r)
                        }
                        array(e, i, r) {
                            return super.array(e, i, r)
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: Ji
                    }), t
                })();
            const hv = new R("MAT_INPUT_VALUE_ACCESSOR"),
                LW = ["button", "checkbox", "file", "hidden", "image", "radio", "range", "reset", "submit"];
            let NW = 0;
            const BW = Hb(class {
                constructor(t, n, e, i) {
                    this._defaultErrorStateMatcher = t, this._parentForm = n, this._parentFormGroup = e, this.ngControl = i, this.stateChanges = new H
                }
            });
            let Nn = (() => {
                    class t extends BW {
                        constructor(e, i, r, s, o, a, l, c, d, h) {
                            super(a, s, o, r), this._elementRef = e, this._platform = i, this._autofillMonitor = c, this._formField = h, this._uid = "mat-input-" + NW++, this.focused = !1, this.stateChanges = new H, this.controlType = "mat-input", this.autofilled = !1, this._disabled = !1, this._type = "text", this._readonly = !1, this._neverEmptyInputTypes = ["date", "datetime", "datetime-local", "month", "time", "week"].filter(v => yE().has(v)), this._iOSKeyupListener = v => {
                                const D = v.target;
                                !D.value && 0 === D.selectionStart && 0 === D.selectionEnd && (D.setSelectionRange(1, 1), D.setSelectionRange(0, 0))
                            };
                            const m = this._elementRef.nativeElement,
                                _ = m.nodeName.toLowerCase();
                            this._inputValueAccessor = l || m, this._previousNativeValue = this.value, this.id = this.id, i.IOS && d.runOutsideAngular(() => {
                                e.nativeElement.addEventListener("keyup", this._iOSKeyupListener)
                            }), this._isServer = !this._platform.isBrowser, this._isNativeSelect = "select" === _, this._isTextarea = "textarea" === _, this._isInFormField = !!h, this._isNativeSelect && (this.controlType = m.multiple ? "mat-native-select-multiple" : "mat-native-select")
                        }
                        get disabled() {
                            return this.ngControl && null !== this.ngControl.disabled ? this.ngControl.disabled : this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e), this.focused && (this.focused = !1, this.stateChanges.next())
                        }
                        get id() {
                            return this._id
                        }
                        set id(e) {
                            this._id = e || this._uid
                        }
                        get required() {
                            return this._required ? ? this.ngControl ? .control ? .hasValidator(jt.required) ? ? !1
                        }
                        set required(e) {
                            this._required = G(e)
                        }
                        get type() {
                            return this._type
                        }
                        set type(e) {
                            this._type = e || "text", this._validateType(), !this._isTextarea && yE().has(this._type) && (this._elementRef.nativeElement.type = this._type)
                        }
                        get value() {
                            return this._inputValueAccessor.value
                        }
                        set value(e) {
                            e !== this.value && (this._inputValueAccessor.value = e, this.stateChanges.next())
                        }
                        get readonly() {
                            return this._readonly
                        }
                        set readonly(e) {
                            this._readonly = G(e)
                        }
                        ngAfterViewInit() {
                            this._platform.isBrowser && this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e => {
                                this.autofilled = e.isAutofilled, this.stateChanges.next()
                            })
                        }
                        ngOnChanges() {
                            this.stateChanges.next()
                        }
                        ngOnDestroy() {
                            this.stateChanges.complete(), this._platform.isBrowser && this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement), this._platform.IOS && this._elementRef.nativeElement.removeEventListener("keyup", this._iOSKeyupListener)
                        }
                        ngDoCheck() {
                            this.ngControl && this.updateErrorState(), this._dirtyCheckNativeValue(), this._dirtyCheckPlaceholder()
                        }
                        focus(e) {
                            this._elementRef.nativeElement.focus(e)
                        }
                        _focusChanged(e) {
                            e !== this.focused && (this.focused = e, this.stateChanges.next())
                        }
                        _onInput() {}
                        _dirtyCheckPlaceholder() {
                            const e = this._formField,
                                i = e && "legacy" === e.appearance && !e._hasLabel ? .() ? null : this.placeholder;
                            if (i !== this._previousPlaceholder) {
                                const r = this._elementRef.nativeElement;
                                this._previousPlaceholder = i, i ? r.setAttribute("placeholder", i) : r.removeAttribute("placeholder")
                            }
                        }
                        _dirtyCheckNativeValue() {
                            const e = this._elementRef.nativeElement.value;
                            this._previousNativeValue !== e && (this._previousNativeValue = e, this.stateChanges.next())
                        }
                        _validateType() {
                            LW.indexOf(this._type)
                        }
                        _isNeverEmpty() {
                            return this._neverEmptyInputTypes.indexOf(this._type) > -1
                        }
                        _isBadInput() {
                            let e = this._elementRef.nativeElement.validity;
                            return e && e.badInput
                        }
                        get empty() {
                            return !(this._isNeverEmpty() || this._elementRef.nativeElement.value || this._isBadInput() || this.autofilled)
                        }
                        get shouldLabelFloat() {
                            if (this._isNativeSelect) {
                                const e = this._elementRef.nativeElement,
                                    i = e.options[0];
                                return this.focused || e.multiple || !this.empty || !!(e.selectedIndex > -1 && i && i.label)
                            }
                            return this.focused || !this.empty
                        }
                        setDescribedByIds(e) {
                            e.length ? this._elementRef.nativeElement.setAttribute("aria-describedby", e.join(" ")) : this._elementRef.nativeElement.removeAttribute("aria-describedby")
                        }
                        onContainerClick() {
                            this.focused || this.focus()
                        }
                        _isInlineSelect() {
                            const e = this._elementRef.nativeElement;
                            return this._isNativeSelect && (e.multiple || e.size > 1)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ft), u(vr, 10), u($l, 8), u(ui, 8), u(io), u(hv, 10), u(V6), u(ce), u(Hd, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["input", "matInput", ""],
                            ["textarea", "matInput", ""],
                            ["select", "matNativeControl", ""],
                            ["input", "matNativeControl", ""],
                            ["textarea", "matNativeControl", ""]
                        ],
                        hostAttrs: [1, "mat-input-element", "mat-form-field-autofill-control"],
                        hostVars: 12,
                        hostBindings: function(e, i) {
                            1 & e && T("focus", function() {
                                return i._focusChanged(!0)
                            })("blur", function() {
                                return i._focusChanged(!1)
                            })("input", function() {
                                return i._onInput()
                            }), 2 & e && (xn("disabled", i.disabled)("required", i.required), q("id", i.id)("data-placeholder", i.placeholder)("name", i.name || null)("readonly", i.readonly && !i._isNativeSelect || null)("aria-invalid", i.empty && i.required ? null : i.errorState)("aria-required", i.required), re("mat-input-server", i._isServer)("mat-native-select-inline", i._isInlineSelect()))
                        },
                        inputs: {
                            disabled: "disabled",
                            id: "id",
                            placeholder: "placeholder",
                            name: "name",
                            required: "required",
                            type: "type",
                            errorStateMatcher: "errorStateMatcher",
                            userAriaDescribedBy: ["aria-describedby", "userAriaDescribedBy"],
                            value: "value",
                            readonly: "readonly"
                        },
                        exportAs: ["matInput"],
                        features: [Q([{
                            provide: Vl,
                            useExisting: t
                        }]), A, ze]
                    }), t
                })(),
                fp = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [io],
                        imports: [O1, $d, de, O1, $d]
                    }), t
                })(),
                VW = (() => {
                    class t {
                        constructor(e) {
                            this.dialogref = e
                        }
                        ngOnInit() {
                            console.log(this.user)
                        }
                        save() {
                            this.dialogref.close()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-profiledialog"]
                        ],
                        decls: 12,
                        vars: 2,
                        consts: [
                            [2, "text-align", "center"],
                            ["width", "40%", "height", "40%", "src", "url(../../../../assets/kobinsky.png"],
                            ["matInput", "", "placeholder", "Gebruikersnaam", 3, "ngModel", "ngModelChange"],
                            ["matInput", "", "placeholder", "Wachtwoord", 3, "ngModel", "ngModelChange"],
                            ["mat-raised-button", "", 3, "click"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0)(1, "h3"), w(2, "Profiel"), g(), E(3, "img", 1)(4, "br"), f(5, "mat-form-field")(6, "input", 2), T("ngModelChange", function(s) {
                                return i.user.username = s
                            }), g()(), f(7, "mat-form-field")(8, "input", 3), T("ngModelChange", function(s) {
                                return i.user.passwordtest = s
                            }), g()(), E(9, "br"), f(10, "button", 4), T("click", function() {
                                return i.save()
                            }), w(11, "Opslaan"), g()()), 2 & e && (p(6), y("ngModel", i.user.username), p(2), y("ngModel", i.user.passwordtest))
                        },
                        dependencies: [Xt, ci, Nn, di, Xn, qd]
                    }), t
                })();
            var co = function() {
                function t() {
                    this._subs = []
                }
                return t.prototype.add = function() {
                    for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
                    this._subs = this._subs.concat(n)
                }, Object.defineProperty(t.prototype, "sink", {
                    set: function(n) {
                        this._subs.push(n)
                    },
                    enumerable: !0,
                    configurable: !0
                }), t.prototype.unsubscribe = function() {
                    this._subs.forEach(function(n) {
                        return n && function(t) {
                            return "function" == typeof t
                        }(n.unsubscribe) && n.unsubscribe()
                    }), this._subs = []
                }, t
            }();
            const $W = new R("JWT_OPTIONS");
            let jW = (() => {
                class t {
                    constructor(e = null) {
                        this.tokenGetter = e && e.tokenGetter || function() {}
                    }
                    urlBase64Decode(e) {
                        let i = e.replace(/-/g, "+").replace(/_/g, "/");
                        switch (i.length % 4) {
                            case 0:
                                break;
                            case 2:
                                i += "==";
                                break;
                            case 3:
                                i += "=";
                                break;
                            default:
                                throw new Error("Illegal base64url string!")
                        }
                        return this.b64DecodeUnicode(i)
                    }
                    b64decode(e) {
                        let r = "";
                        if ((e = String(e).replace(/=+$/, "")).length % 4 == 1) throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
                        for (let o, a, s = 0, l = 0; a = e.charAt(l++); ~a && (o = s % 4 ? 64 * o + a : a, s++ % 4) ? r += String.fromCharCode(255 & o >> (-2 * s & 6)) : 0) a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a);
                        return r
                    }
                    b64DecodeUnicode(e) {
                        return decodeURIComponent(Array.prototype.map.call(this.b64decode(e), i => "%" + ("00" + i.charCodeAt(0).toString(16)).slice(-2)).join(""))
                    }
                    decodeToken(e = this.tokenGetter()) {
                        if (!e || "" === e) return null;
                        const i = e.split(".");
                        if (3 !== i.length) throw new Error("The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.");
                        const r = this.urlBase64Decode(i[1]);
                        if (!r) throw new Error("Cannot decode the token.");
                        return JSON.parse(r)
                    }
                    getTokenExpirationDate(e = this.tokenGetter()) {
                        let i;
                        if (i = this.decodeToken(e), !i || !i.hasOwnProperty("exp")) return null;
                        const r = new Date(0);
                        return r.setUTCSeconds(i.exp), r
                    }
                    isTokenExpired(e = this.tokenGetter(), i) {
                        if (!e || "" === e) return !0;
                        const r = this.getTokenExpirationDate(e);
                        return i = i || 0, null !== r && !(r.valueOf() > (new Date).valueOf() + 1e3 * i)
                    }
                    getAuthScheme(e, i) {
                        return "function" == typeof e ? e(i) : e
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C($W))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class BT {}
            class VT {}
            class Ds {
                constructor(n) {
                    this.normalizedNames = new Map, this.lazyUpdate = null, n ? this.lazyInit = "string" == typeof n ? () => {
                        this.headers = new Map, n.split("\n").forEach(e => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                                const r = e.slice(0, i),
                                    s = r.toLowerCase(),
                                    o = e.slice(i + 1).trim();
                                this.maybeSetNormalizedName(r, s), this.headers.has(s) ? this.headers.get(s).push(o) : this.headers.set(s, [o])
                            }
                        })
                    } : () => {
                        this.headers = new Map, Object.keys(n).forEach(e => {
                            let i = n[e];
                            const r = e.toLowerCase();
                            "string" == typeof i && (i = [i]), i.length > 0 && (this.headers.set(r, i), this.maybeSetNormalizedName(e, r))
                        })
                    } : this.headers = new Map
                }
                has(n) {
                    return this.init(), this.headers.has(n.toLowerCase())
                }
                get(n) {
                    this.init();
                    const e = this.headers.get(n.toLowerCase());
                    return e && e.length > 0 ? e[0] : null
                }
                keys() {
                    return this.init(), Array.from(this.normalizedNames.values())
                }
                getAll(n) {
                    return this.init(), this.headers.get(n.toLowerCase()) || null
                }
                append(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "a"
                    })
                }
                set(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "s"
                    })
                }
                delete(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "d"
                    })
                }
                maybeSetNormalizedName(n, e) {
                    this.normalizedNames.has(e) || this.normalizedNames.set(e, n)
                }
                init() {
                    this.lazyInit && (this.lazyInit instanceof Ds ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(n => this.applyUpdate(n)), this.lazyUpdate = null))
                }
                copyFrom(n) {
                    n.init(), Array.from(n.headers.keys()).forEach(e => {
                        this.headers.set(e, n.headers.get(e)), this.normalizedNames.set(e, n.normalizedNames.get(e))
                    })
                }
                clone(n) {
                    const e = new Ds;
                    return e.lazyInit = this.lazyInit && this.lazyInit instanceof Ds ? this.lazyInit : this, e.lazyUpdate = (this.lazyUpdate || []).concat([n]), e
                }
                applyUpdate(n) {
                    const e = n.name.toLowerCase();
                    switch (n.op) {
                        case "a":
                        case "s":
                            let i = n.value;
                            if ("string" == typeof i && (i = [i]), 0 === i.length) return;
                            this.maybeSetNormalizedName(n.name, e);
                            const r = ("a" === n.op ? this.headers.get(e) : void 0) || [];
                            r.push(...i), this.headers.set(e, r);
                            break;
                        case "d":
                            const s = n.value;
                            if (s) {
                                let o = this.headers.get(e);
                                if (!o) return;
                                o = o.filter(a => -1 === s.indexOf(a)), 0 === o.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, o)
                            } else this.headers.delete(e), this.normalizedNames.delete(e)
                    }
                }
                forEach(n) {
                    this.init(), Array.from(this.normalizedNames.keys()).forEach(e => n(this.normalizedNames.get(e), this.headers.get(e)))
                }
            }
            class zW {
                encodeKey(n) {
                    return HT(n)
                }
                encodeValue(n) {
                    return HT(n)
                }
                decodeKey(n) {
                    return decodeURIComponent(n)
                }
                decodeValue(n) {
                    return decodeURIComponent(n)
                }
            }
            const GW = /%(\d[a-f0-9])/gi,
                WW = {
                    40: "@",
                    "3A": ":",
                    24: "$",
                    "2C": ",",
                    "3B": ";",
                    "3D": "=",
                    "3F": "?",
                    "2F": "/"
                };

            function HT(t) {
                return encodeURIComponent(t).replace(GW, (n, e) => WW[e] ? ? n)
            }

            function pp(t) {
                return `${t}`
            }
            class Ai {
                constructor(n = {}) {
                    if (this.updates = null, this.cloneFrom = null, this.encoder = n.encoder || new zW, n.fromString) {
                        if (n.fromObject) throw new Error("Cannot specify both fromString and fromObject.");
                        this.map = function UW(t, n) {
                            const e = new Map;
                            return t.length > 0 && t.replace(/^\?/, "").split("&").forEach(r => {
                                const s = r.indexOf("="),
                                    [o, a] = -1 == s ? [n.decodeKey(r), ""] : [n.decodeKey(r.slice(0, s)), n.decodeValue(r.slice(s + 1))],
                                    l = e.get(o) || [];
                                l.push(a), e.set(o, l)
                            }), e
                        }(n.fromString, this.encoder)
                    } else n.fromObject ? (this.map = new Map, Object.keys(n.fromObject).forEach(e => {
                        const i = n.fromObject[e],
                            r = Array.isArray(i) ? i.map(pp) : [pp(i)];
                        this.map.set(e, r)
                    })) : this.map = null
                }
                has(n) {
                    return this.init(), this.map.has(n)
                }
                get(n) {
                    this.init();
                    const e = this.map.get(n);
                    return e ? e[0] : null
                }
                getAll(n) {
                    return this.init(), this.map.get(n) || null
                }
                keys() {
                    return this.init(), Array.from(this.map.keys())
                }
                append(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "a"
                    })
                }
                appendAll(n) {
                    const e = [];
                    return Object.keys(n).forEach(i => {
                        const r = n[i];
                        Array.isArray(r) ? r.forEach(s => {
                            e.push({
                                param: i,
                                value: s,
                                op: "a"
                            })
                        }) : e.push({
                            param: i,
                            value: r,
                            op: "a"
                        })
                    }), this.clone(e)
                }
                set(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "s"
                    })
                }
                delete(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "d"
                    })
                }
                toString() {
                    return this.init(), this.keys().map(n => {
                        const e = this.encoder.encodeKey(n);
                        return this.map.get(n).map(i => e + "=" + this.encoder.encodeValue(i)).join("&")
                    }).filter(n => "" !== n).join("&")
                }
                clone(n) {
                    const e = new Ai({
                        encoder: this.encoder
                    });
                    return e.cloneFrom = this.cloneFrom || this, e.updates = (this.updates || []).concat(n), e
                }
                init() {
                    null === this.map && (this.map = new Map), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(n => this.map.set(n, this.cloneFrom.map.get(n))), this.updates.forEach(n => {
                        switch (n.op) {
                            case "a":
                            case "s":
                                const e = ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                                e.push(pp(n.value)), this.map.set(n.param, e);
                                break;
                            case "d":
                                if (void 0 === n.value) {
                                    this.map.delete(n.param);
                                    break
                                } {
                                    let i = this.map.get(n.param) || [];
                                    const r = i.indexOf(pp(n.value)); - 1 !== r && i.splice(r, 1), i.length > 0 ? this.map.set(n.param, i) : this.map.delete(n.param)
                                }
                        }
                    }), this.cloneFrom = this.updates = null)
                }
            }
            class qW {
                constructor() {
                    this.map = new Map
                }
                set(n, e) {
                    return this.map.set(n, e), this
                }
                get(n) {
                    return this.map.has(n) || this.map.set(n, n.defaultValue()), this.map.get(n)
                }
                delete(n) {
                    return this.map.delete(n), this
                }
                has(n) {
                    return this.map.has(n)
                }
                keys() {
                    return this.map.keys()
                }
            }

            function $T(t) {
                return typeof ArrayBuffer < "u" && t instanceof ArrayBuffer
            }

            function jT(t) {
                return typeof Blob < "u" && t instanceof Blob
            }

            function zT(t) {
                return typeof FormData < "u" && t instanceof FormData
            }
            class Yd {
                constructor(n, e, i, r) {
                    let s;
                    if (this.url = e, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = n.toUpperCase(), function YW(t) {
                            switch (t) {
                                case "DELETE":
                                case "GET":
                                case "HEAD":
                                case "OPTIONS":
                                case "JSONP":
                                    return !1;
                                default:
                                    return !0
                            }
                        }(this.method) || r ? (this.body = void 0 !== i ? i : null, s = r) : s = i, s && (this.reportProgress = !!s.reportProgress, this.withCredentials = !!s.withCredentials, s.responseType && (this.responseType = s.responseType), s.headers && (this.headers = s.headers), s.context && (this.context = s.context), s.params && (this.params = s.params)), this.headers || (this.headers = new Ds), this.context || (this.context = new qW), this.params) {
                        const o = this.params.toString();
                        if (0 === o.length) this.urlWithParams = e;
                        else {
                            const a = e.indexOf("?");
                            this.urlWithParams = e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + o
                        }
                    } else this.params = new Ai, this.urlWithParams = e
                }
                serializeBody() {
                    return null === this.body ? null : $T(this.body) || jT(this.body) || zT(this.body) || function QW(t) {
                        return typeof URLSearchParams < "u" && t instanceof URLSearchParams
                    }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof Ai ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString()
                }
                detectContentTypeHeader() {
                    return null === this.body || zT(this.body) ? null : jT(this.body) ? this.body.type || null : $T(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof Ai ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null
                }
                clone(n = {}) {
                    const e = n.method || this.method,
                        i = n.url || this.url,
                        r = n.responseType || this.responseType,
                        s = void 0 !== n.body ? n.body : this.body,
                        o = void 0 !== n.withCredentials ? n.withCredentials : this.withCredentials,
                        a = void 0 !== n.reportProgress ? n.reportProgress : this.reportProgress;
                    let l = n.headers || this.headers,
                        c = n.params || this.params;
                    const d = n.context ? ? this.context;
                    return void 0 !== n.setHeaders && (l = Object.keys(n.setHeaders).reduce((h, m) => h.set(m, n.setHeaders[m]), l)), n.setParams && (c = Object.keys(n.setParams).reduce((h, m) => h.set(m, n.setParams[m]), c)), new Yd(e, i, s, {
                        params: c,
                        headers: l,
                        context: d,
                        reportProgress: a,
                        responseType: r,
                        withCredentials: o
                    })
                }
            }
            var rn = (() => ((rn = rn || {})[rn.Sent = 0] = "Sent", rn[rn.UploadProgress = 1] = "UploadProgress", rn[rn.ResponseHeader = 2] = "ResponseHeader", rn[rn.DownloadProgress = 3] = "DownloadProgress", rn[rn.Response = 4] = "Response", rn[rn.User = 5] = "User", rn))();
            class fv {
                constructor(n, e = 200, i = "OK") {
                    this.headers = n.headers || new Ds, this.status = void 0 !== n.status ? n.status : e, this.statusText = n.statusText || i, this.url = n.url || null, this.ok = this.status >= 200 && this.status < 300
                }
            }
            class pv extends fv {
                constructor(n = {}) {
                    super(n), this.type = rn.ResponseHeader
                }
                clone(n = {}) {
                    return new pv({
                        headers: n.headers || this.headers,
                        status: void 0 !== n.status ? n.status : this.status,
                        statusText: n.statusText || this.statusText,
                        url: n.url || this.url || void 0
                    })
                }
            }
            class mp extends fv {
                constructor(n = {}) {
                    super(n), this.type = rn.Response, this.body = void 0 !== n.body ? n.body : null
                }
                clone(n = {}) {
                    return new mp({
                        body: void 0 !== n.body ? n.body : this.body,
                        headers: n.headers || this.headers,
                        status: void 0 !== n.status ? n.status : this.status,
                        statusText: n.statusText || this.statusText,
                        url: n.url || this.url || void 0
                    })
                }
            }
            class mv extends fv {
                constructor(n) {
                    super(n, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = !1, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${n.url||"(unknown url)"}` : `Http failure response for ${n.url||"(unknown url)"}: ${n.status} ${n.statusText}`, this.error = n.error || null
                }
            }

            function gv(t, n) {
                return {
                    body: n,
                    headers: t.headers,
                    context: t.context,
                    observe: t.observe,
                    params: t.params,
                    reportProgress: t.reportProgress,
                    responseType: t.responseType,
                    withCredentials: t.withCredentials
                }
            }
            let wr = (() => {
                class t {
                    constructor(e) {
                        this.handler = e
                    }
                    request(e, i, r = {}) {
                        let s;
                        if (e instanceof Yd) s = e;
                        else {
                            let l, c;
                            l = r.headers instanceof Ds ? r.headers : new Ds(r.headers), r.params && (c = r.params instanceof Ai ? r.params : new Ai({
                                fromObject: r.params
                            })), s = new Yd(e, i, void 0 !== r.body ? r.body : null, {
                                headers: l,
                                context: r.context,
                                params: c,
                                reportProgress: r.reportProgress,
                                responseType: r.responseType || "json",
                                withCredentials: r.withCredentials
                            })
                        }
                        const o = z(s).pipe(Qs(l => this.handler.handle(l)));
                        if (e instanceof Yd || "events" === r.observe) return o;
                        const a = o.pipe(Ie(l => l instanceof mp));
                        switch (r.observe || "body") {
                            case "body":
                                switch (s.responseType) {
                                    case "arraybuffer":
                                        return a.pipe(Z(l => {
                                            if (null !== l.body && !(l.body instanceof ArrayBuffer)) throw new Error("Response is not an ArrayBuffer.");
                                            return l.body
                                        }));
                                    case "blob":
                                        return a.pipe(Z(l => {
                                            if (null !== l.body && !(l.body instanceof Blob)) throw new Error("Response is not a Blob.");
                                            return l.body
                                        }));
                                    case "text":
                                        return a.pipe(Z(l => {
                                            if (null !== l.body && "string" != typeof l.body) throw new Error("Response is not a string.");
                                            return l.body
                                        }));
                                    default:
                                        return a.pipe(Z(l => l.body))
                                }
                            case "response":
                                return a;
                            default:
                                throw new Error(`Unreachable: unhandled observe type ${r.observe}}`)
                        }
                    }
                    delete(e, i = {}) {
                        return this.request("DELETE", e, i)
                    }
                    get(e, i = {}) {
                        return this.request("GET", e, i)
                    }
                    head(e, i = {}) {
                        return this.request("HEAD", e, i)
                    }
                    jsonp(e, i) {
                        return this.request("JSONP", e, {
                            params: (new Ai).append(i, "JSONP_CALLBACK"),
                            observe: "body",
                            responseType: "json"
                        })
                    }
                    options(e, i = {}) {
                        return this.request("OPTIONS", e, i)
                    }
                    patch(e, i, r = {}) {
                        return this.request("PATCH", e, gv(r, i))
                    }
                    post(e, i, r = {}) {
                        return this.request("POST", e, gv(r, i))
                    }
                    put(e, i, r = {}) {
                        return this.request("PUT", e, gv(r, i))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(BT))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class UT {
                constructor(n, e) {
                    this.next = n, this.interceptor = e
                }
                handle(n) {
                    return this.interceptor.intercept(n, this.next)
                }
            }
            const _v = new R("HTTP_INTERCEPTORS");
            let KW = (() => {
                class t {
                    intercept(e, i) {
                        return i.handle(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const ZW = /^\)\]\}',?\n/;
            let GT = (() => {
                class t {
                    constructor(e) {
                        this.xhrFactory = e
                    }
                    handle(e) {
                        if ("JSONP" === e.method) throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");
                        return new Ze(i => {
                            const r = this.xhrFactory.build();
                            if (r.open(e.method, e.urlWithParams), e.withCredentials && (r.withCredentials = !0), e.headers.forEach((_, v) => r.setRequestHeader(_, v.join(","))), e.headers.has("Accept") || r.setRequestHeader("Accept", "application/json, text/plain, */*"), !e.headers.has("Content-Type")) {
                                const _ = e.detectContentTypeHeader();
                                null !== _ && r.setRequestHeader("Content-Type", _)
                            }
                            if (e.responseType) {
                                const _ = e.responseType.toLowerCase();
                                r.responseType = "json" !== _ ? _ : "text"
                            }
                            const s = e.serializeBody();
                            let o = null;
                            const a = () => {
                                    if (null !== o) return o;
                                    const _ = r.statusText || "OK",
                                        v = new Ds(r.getAllResponseHeaders()),
                                        D = function XW(t) {
                                            return "responseURL" in t && t.responseURL ? t.responseURL : /^X-Request-URL:/m.test(t.getAllResponseHeaders()) ? t.getResponseHeader("X-Request-URL") : null
                                        }(r) || e.url;
                                    return o = new pv({
                                        headers: v,
                                        status: r.status,
                                        statusText: _,
                                        url: D
                                    }), o
                                },
                                l = () => {
                                    let {
                                        headers: _,
                                        status: v,
                                        statusText: D,
                                        url: k
                                    } = a(), S = null;
                                    204 !== v && (S = typeof r.response > "u" ? r.responseText : r.response), 0 === v && (v = S ? 200 : 0);
                                    let L = v >= 200 && v < 300;
                                    if ("json" === e.responseType && "string" == typeof S) {
                                        const F = S;
                                        S = S.replace(ZW, "");
                                        try {
                                            S = "" !== S ? JSON.parse(S) : null
                                        } catch (K) {
                                            S = F, L && (L = !1, S = {
                                                error: K,
                                                text: S
                                            })
                                        }
                                    }
                                    L ? (i.next(new mp({
                                        body: S,
                                        headers: _,
                                        status: v,
                                        statusText: D,
                                        url: k || void 0
                                    })), i.complete()) : i.error(new mv({
                                        error: S,
                                        headers: _,
                                        status: v,
                                        statusText: D,
                                        url: k || void 0
                                    }))
                                },
                                c = _ => {
                                    const {
                                        url: v
                                    } = a(), D = new mv({
                                        error: _,
                                        status: r.status || 0,
                                        statusText: r.statusText || "Unknown Error",
                                        url: v || void 0
                                    });
                                    i.error(D)
                                };
                            let d = !1;
                            const h = _ => {
                                    d || (i.next(a()), d = !0);
                                    let v = {
                                        type: rn.DownloadProgress,
                                        loaded: _.loaded
                                    };
                                    _.lengthComputable && (v.total = _.total), "text" === e.responseType && !!r.responseText && (v.partialText = r.responseText), i.next(v)
                                },
                                m = _ => {
                                    let v = {
                                        type: rn.UploadProgress,
                                        loaded: _.loaded
                                    };
                                    _.lengthComputable && (v.total = _.total), i.next(v)
                                };
                            return r.addEventListener("load", l), r.addEventListener("error", c), r.addEventListener("timeout", c), r.addEventListener("abort", c), e.reportProgress && (r.addEventListener("progress", h), null !== s && r.upload && r.upload.addEventListener("progress", m)), r.send(s), i.next({
                                type: rn.Sent
                            }), () => {
                                r.removeEventListener("error", c), r.removeEventListener("abort", c), r.removeEventListener("load", l), r.removeEventListener("timeout", c), e.reportProgress && (r.removeEventListener("progress", h), null !== s && r.upload && r.upload.removeEventListener("progress", m)), r.readyState !== r.DONE && r.abort()
                            }
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Pk))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const yv = new R("XSRF_COOKIE_NAME"),
                bv = new R("XSRF_HEADER_NAME");
            class WT {}
            let JW = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.doc = e, this.platform = i, this.cookieName = r, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0
                        }
                        getToken() {
                            if ("server" === this.platform) return null;
                            const e = this.doc.cookie || "";
                            return e !== this.lastCookieString && (this.parseCount++, this.lastToken = Sk(e, this.cookieName), this.lastCookieString = e), this.lastToken
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe), C(On), C(yv))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                vv = (() => {
                    class t {
                        constructor(e, i) {
                            this.tokenService = e, this.headerName = i
                        }
                        intercept(e, i) {
                            const r = e.url.toLowerCase();
                            if ("GET" === e.method || "HEAD" === e.method || r.startsWith("http://") || r.startsWith("https://")) return i.handle(e);
                            const s = this.tokenService.getToken();
                            return null !== s && !e.headers.has(this.headerName) && (e = e.clone({
                                headers: e.headers.set(this.headerName, s)
                            })), i.handle(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(WT), C(bv))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                e9 = (() => {
                    class t {
                        constructor(e, i) {
                            this.backend = e, this.injector = i, this.chain = null
                        }
                        handle(e) {
                            if (null === this.chain) {
                                const i = this.injector.get(_v, []);
                                this.chain = i.reduceRight((r, s) => new UT(r, s), this.backend)
                            }
                            return this.chain.handle(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(VT), C(Ct))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                t9 = (() => {
                    class t {
                        static disable() {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: vv,
                                    useClass: KW
                                }]
                            }
                        }
                        static withOptions(e = {}) {
                            return {
                                ngModule: t,
                                providers: [e.cookieName ? {
                                    provide: yv,
                                    useValue: e.cookieName
                                } : [], e.headerName ? {
                                    provide: bv,
                                    useValue: e.headerName
                                } : []]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [vv, {
                            provide: _v,
                            useExisting: vv,
                            multi: !0
                        }, {
                            provide: WT,
                            useClass: JW
                        }, {
                            provide: yv,
                            useValue: "XSRF-TOKEN"
                        }, {
                            provide: bv,
                            useValue: "X-XSRF-TOKEN"
                        }]
                    }), t
                })(),
                qT = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [wr, {
                            provide: BT,
                            useClass: e9
                        }, GT, {
                            provide: VT,
                            useExisting: GT
                        }],
                        imports: [t9.withOptions({
                            cookieName: "XSRF-TOKEN",
                            headerName: "X-XSRF-TOKEN"
                        })]
                    }), t
                })();

            function YT(t, n, e, i, r, s, o) {
                try {
                    var a = t[s](o),
                        l = a.value
                } catch (c) {
                    return void e(c)
                }
                a.done ? n(l) : Promise.resolve(l).then(i, r)
            }

            function Cr(t) {
                return function() {
                    var n = this,
                        e = arguments;
                    return new Promise(function(i, r) {
                        var s = t.apply(n, e);

                        function o(l) {
                            YT(s, i, r, o, a, "next", l)
                        }

                        function a(l) {
                            YT(s, i, r, o, a, "throw", l)
                        }
                        o(void 0)
                    })
                }
            }
            class Jn extends H {
                constructor(n = 1 / 0, e = 1 / 0, i = xb) {
                    super(), this._bufferSize = n, this._windowTime = e, this._timestampProvider = i, this._buffer = [], this._infiniteTimeWindow = !0, this._infiniteTimeWindow = e === 1 / 0, this._bufferSize = Math.max(1, n), this._windowTime = Math.max(1, e)
                }
                next(n) {
                    const {
                        isStopped: e,
                        _buffer: i,
                        _infiniteTimeWindow: r,
                        _timestampProvider: s,
                        _windowTime: o
                    } = this;
                    e || (i.push(n), !r && i.push(s.now() + o)), this._trimBuffer(), super.next(n)
                }
                _subscribe(n) {
                    this._throwIfClosed(), this._trimBuffer();
                    const e = this._innerSubscribe(n),
                        {
                            _infiniteTimeWindow: i,
                            _buffer: r
                        } = this,
                        s = r.slice();
                    for (let o = 0; o < s.length && !n.closed; o += i ? 1 : 2) n.next(s[o]);
                    return this._checkFinalizedStatuses(n), e
                }
                _trimBuffer() {
                    const {
                        _bufferSize: n,
                        _timestampProvider: e,
                        _buffer: i,
                        _infiniteTimeWindow: r
                    } = this, s = (r ? 1 : 2) * n;
                    if (n < 1 / 0 && s < i.length && i.splice(0, i.length - s), !r) {
                        const o = e.now();
                        let a = 0;
                        for (let l = 1; l < i.length && i[l] <= o; l += 2) a = l;
                        a && i.splice(0, a + 1)
                    }
                }
            }
            const {
                isArray: n9
            } = Array;

            function wv(...t) {
                return 1 === (t = function i9(t) {
                    return 1 === t.length && n9(t[0]) ? t[0] : t
                }(t)).length ? $n(t[0]) : new Ze(function r9(t) {
                    return n => {
                        let e = [];
                        for (let i = 0; e && !n.closed && i < t.length; i++) e.push($n(t[i]).subscribe(kt(n, r => {
                            if (e) {
                                for (let s = 0; s < e.length; s++) s !== i && e[s].unsubscribe();
                                e = null
                            }
                            n.next(r)
                        })))
                    }
                }(t))
            }
            let QT = (() => {
                class t {
                    validate(e, i) {
                        switch (i.type) {
                            case "string":
                                return this.validateString(e, i);
                            case "number":
                            case "integer":
                                return this.validateNumber(e, i);
                            case "boolean":
                                return this.validateBoolean(e, i);
                            case "array":
                                return this.validateArray(e, i);
                            case "object":
                                return this.validateObject(e, i)
                        }
                    }
                    validateString(e, i) {
                        if ("string" != typeof e || !this.validateConst(e, i) || !this.validateEnum(e, i) || void 0 !== i.maxLength && e.length > i.maxLength || void 0 !== i.minLength && e.length < i.minLength) return !1;
                        if (i.pattern) {
                            let r = null;
                            try {
                                r = new RegExp(i.pattern)
                            } catch {}
                            if (r && !r.test(e)) return !1
                        }
                        return !0
                    }
                    validateNumber(e, i) {
                        return !("number" != typeof e || "integer" === i.type && !Number.isInteger(e) || !this.validateConst(e, i) || !this.validateEnum(e, i) || i.multipleOf && !Number.isInteger(e / i.multipleOf) || void 0 !== i.maximum && e > i.maximum || void 0 !== i.exclusiveMaximum && e >= i.exclusiveMaximum || void 0 !== i.minimum && e < i.minimum || void 0 !== i.exclusiveMinimum && e <= i.exclusiveMinimum)
                    }
                    validateBoolean(e, i) {
                        return !("boolean" != typeof e || !this.validateConst(e, i))
                    }
                    validateArray(e, i) {
                        if (!Array.isArray(e) || void 0 !== i.maxItems && e.length > i.maxItems || void 0 !== i.minItems && e.length < i.minItems) return !1;
                        if (i.uniqueItems) {
                            const r = new Set(e);
                            if (e.length !== r.size) return !1
                        }
                        if (Array.isArray(i.items)) return this.validateTuple(e, i.items);
                        for (const r of e)
                            if (!this.validate(r, i.items)) return !1;
                        return !0
                    }
                    validateTuple(e, i) {
                        if (e.length !== i.length) return !1;
                        for (let r = 0; r < i.length; r += 1)
                            if (!this.validate(e[r], i[r])) return !1;
                        return !0
                    }
                    validateObject(e, i) {
                        if ("object" != typeof e || null === e || Object.keys(i.properties).length < Object.keys(e).length) return !1;
                        if (i.required)
                            for (const r of i.required)
                                if (!Object.prototype.hasOwnProperty.call(e, r)) return !1;
                        for (const r in i.properties)
                            if (Object.prototype.hasOwnProperty.call(i.properties, r) && Object.prototype.hasOwnProperty.call(e, r) && !this.validate(e[r], i.properties[r])) return !1;
                        return !0
                    }
                    validateConst(e, i) {
                        return !i.const || e === i.const
                    }
                    validateEnum(e, i) {
                        return !i.enum || i.enum.includes(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const Cv = new R("localStoragePrefix", {
                    providedIn: "root",
                    factory: () => ""
                }),
                KT = "ngStorage",
                ZT = new R("localStorageIDBDBName", {
                    providedIn: "root",
                    factory: () => KT
                }),
                JT = new R("localStorageIDBDBVersion", {
                    providedIn: "root",
                    factory: () => 1
                }),
                eI = "localStorage",
                tI = new R("localStorageIDBStoreName", {
                    providedIn: "root",
                    factory: () => eI
                }),
                iI = new R("localStorageIDBWrap", {
                    providedIn: "root",
                    factory: () => !0
                }),
                rI = "indexedDB is not working";
            class sI extends Error {
                constructor() {
                    super(...arguments), this.message = rI
                }
            }
            class o9 extends Error {
                constructor() {
                    super(...arguments), this.message = "The storage is currently localStorage,\nwhere data must be serialized, and the provided data can't be serialized."
                }
            }
            let xv = (() => {
                    class t {
                        constructor(e = KT, i = eI, r = 1, s = !0) {
                            this.database = new Jn(1), this.wrapIndex = "value", this.dbName = e, this.storeName = i, this.dbVersion = r, this.noWrap = s, this.connect()
                        }
                        get backingStore() {
                            return {
                                database: this.dbName,
                                store: this.storeName,
                                version: this.dbVersion
                            }
                        }
                        get size() {
                            return this.transaction("readonly").pipe(_t(e => {
                                const {
                                    store: i,
                                    events: r
                                } = e, s = i.count();
                                return r.pipe(Z(() => s.result))
                            }), yn())
                        }
                        get(e) {
                            return this.transaction("readonly").pipe(_t(i => {
                                const {
                                    store: r,
                                    events: s
                                } = i, o = r.get(e);
                                return s.pipe(Z(() => {
                                    if (null != o.result) return !this.noWrap && "object" == typeof o.result && this.wrapIndex in o.result && null != o.result[this.wrapIndex] ? o.result[this.wrapIndex] : o.result
                                }))
                            }), yn())
                        }
                        set(e, i) {
                            return void 0 === i ? this.delete(e) : this.transaction("readwrite").pipe(_t(r => {
                                const {
                                    store: s,
                                    events: o
                                } = r;
                                return s.put(this.noWrap ? i : {
                                    [this.wrapIndex]: i
                                }, e), o.pipe(_l(void 0))
                            }), yn())
                        }
                        delete(e) {
                            return this.transaction("readwrite").pipe(_t(i => {
                                const {
                                    store: r,
                                    events: s
                                } = i;
                                return r.delete(e), s.pipe(_l(void 0))
                            }), yn())
                        }
                        clear() {
                            return this.transaction("readwrite").pipe(_t(e => {
                                const {
                                    store: i,
                                    events: r
                                } = e;
                                return i.clear(), r.pipe(_l(void 0))
                            }), yn())
                        }
                        keys() {
                            return this.transaction("readonly").pipe(yn(), _t(e => {
                                const {
                                    store: i
                                } = e, r = i.openKeyCursor();
                                return wv([un(r, "success").pipe(zy(() => null !== r.result), Z(() => r.result.key.toString()), mt(() => {
                                    r.result.continue()
                                })), this.listenError(r)])
                            }))
                        }
                        has(e) {
                            return this.transaction("readonly").pipe(_t(i => {
                                const {
                                    store: r,
                                    events: s
                                } = i, o = r.getKey(e);
                                return s.pipe(Z(() => void 0 !== o.result))
                            }), yn())
                        }
                        connect() {
                            let e;
                            try {
                                e = indexedDB.open(this.dbName, this.dbVersion)
                            } catch {
                                return void this.database.error(new sI)
                            }
                            this.createStore(e), wv([un(e, "success"), this.listenError(e)]).pipe(yn()).subscribe({
                                next: () => {
                                    this.database.next(e.result)
                                },
                                error: () => {
                                    this.database.error(new sI)
                                }
                            })
                        }
                        createStore(e) {
                            un(e, "upgradeneeded").pipe(yn()).subscribe({
                                next: () => {
                                    e.result.objectStoreNames.contains(this.storeName) || e.result.createObjectStore(this.storeName)
                                }
                            })
                        }
                        transaction(e) {
                            return this.database.pipe(_t(i => {
                                let r;
                                try {
                                    r = i.transaction([this.storeName], e)
                                } catch (a) {
                                    return Ln(a)
                                }
                                return z({
                                    store: r.objectStore(this.storeName),
                                    events: this.listenTransactionEvents(r)
                                })
                            }))
                        }
                        listenError(e) {
                            return un(e, "error").pipe(_t(i => Ln(i.target.error)))
                        }
                        listenTransactionEvents(e) {
                            return wv([un(e, "complete"), this.listenError(e)])
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(ZT), C(tI), C(JT), C(iI))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                gp = (() => {
                    class t {
                        constructor(e = "") {
                            this.prefix = e || ""
                        }
                        get size() {
                            return z(localStorage.length)
                        }
                        get(e) {
                            const i = localStorage.getItem(this.prefixKey(e));
                            let r;
                            if (null != i) try {
                                r = JSON.parse(i)
                            } catch (s) {
                                return Ln(s)
                            }
                            return z(r)
                        }
                        set(e, i) {
                            let r = null;
                            const s = Object.getPrototypeOf(i);
                            if ("object" == typeof i && null !== i && !Array.isArray(i) && s !== Object.prototype && null !== s) return Ln(new o9);
                            try {
                                r = JSON.stringify(i)
                            } catch (o) {
                                return Ln(o)
                            }
                            try {
                                localStorage.setItem(this.prefixKey(e), r)
                            } catch (o) {
                                return Ln(o)
                            }
                            return z(void 0)
                        }
                        delete(e) {
                            return localStorage.removeItem(this.prefixKey(e)), z(void 0)
                        }
                        clear() {
                            return localStorage.clear(), z(void 0)
                        }
                        keys() {
                            return new Ze(e => {
                                for (let i = 0; i < localStorage.length; i += 1) e.next(this.getUnprefixedKey(i));
                                e.complete()
                            }).pipe(Om(Il))
                        }
                        has(e) {
                            for (let i = 0; i < localStorage.length; i += 1)
                                if (e === this.getUnprefixedKey(i)) return z(!0);
                            return z(!1)
                        }
                        getUnprefixedKey(e) {
                            const i = localStorage.key(e);
                            return null !== i ? this.prefix ? i.substr(this.prefix.length) : i : null
                        }
                        prefixKey(e) {
                            return `${this.prefix}${e}`
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Cv))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                _p = (() => {
                    class t {
                        constructor() {
                            this.memoryStorage = new Map
                        }
                        get size() {
                            return z(this.memoryStorage.size)
                        }
                        get(e) {
                            return z(this.memoryStorage.get(e))
                        }
                        set(e, i) {
                            return this.memoryStorage.set(e, i), z(void 0)
                        }
                        delete(e) {
                            return this.memoryStorage.delete(e), z(void 0)
                        }
                        clear() {
                            return this.memoryStorage.clear(), z(void 0)
                        }
                        keys() {
                            return Rt(this.memoryStorage.keys())
                        }
                        has(e) {
                            return z(this.memoryStorage.has(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                l9 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: function(e) {
                            let i = null;
                            return i = e ? new e : function a9(t, n, e, i, r, s) {
                                try {
                                    if (_n(t) && void 0 !== indexedDB && null !== indexedDB && "open" in indexedDB) return new xv(e, i, r, s);
                                    if (_n(t) && void 0 !== localStorage && null !== localStorage && "getItem" in localStorage) return new gp(n)
                                } catch {}
                                return new _p
                            }(C(On), C(Cv), C(ZT), C(tI), C(JT), C(iI)), i
                        },
                        providedIn: "root"
                    }), t
                })();
            class oI extends Error {
                constructor() {
                    super(...arguments), this.message = "Data stored is not valid against the provided JSON schema.\nCheck your JSON schema, otherwise it means data has been corrupted."
                }
            }
            let d9 = (() => {
                    class t {
                        constructor(e, i = new QT, r = "") {
                            this.database = e, this.jsonValidator = i, this.LSPrefix = r, this.notifiers = new Map
                        }
                        get size() {
                            return this.database.size.pipe(this.catchIDBBroken(() => this.database.size))
                        }
                        get backingEngine() {
                            return this.database instanceof xv ? "indexedDB" : this.database instanceof gp ? "localStorage" : this.database instanceof _p ? "memory" : "unknown"
                        }
                        get backingStore() {
                            return this.database instanceof xv ? this.database.backingStore : {
                                database: "",
                                store: "",
                                version: 0
                            }
                        }
                        get fallbackBackingStore() {
                            return this.database instanceof gp ? {
                                prefix: this.database.prefix
                            } : {
                                prefix: ""
                            }
                        }
                        get(e, i) {
                            return this.database.get(e).pipe(this.catchIDBBroken(() => this.database.get(e)), _t(r => null == r ? z(void 0) : i ? this.jsonValidator.validate(r, i) ? z(r) : Ln(new oI) : z(r)))
                        }
                        set(e, i, r) {
                            return null == i ? this.delete(e) : r && !this.jsonValidator.validate(i, r) ? Ln(new oI) : this.database.set(e, i).pipe(this.catchIDBBroken(() => this.database.set(e, i)), mt(() => {
                                this.notify(e, i)
                            }))
                        }
                        delete(e) {
                            return this.database.delete(e).pipe(this.catchIDBBroken(() => this.database.delete(e)), mt(() => {
                                this.notify(e, void 0)
                            }))
                        }
                        clear() {
                            return this.database.clear().pipe(this.catchIDBBroken(() => this.database.clear()), mt(() => {
                                for (const e of this.notifiers.keys()) this.notify(e, void 0)
                            }))
                        }
                        keys() {
                            return this.database.keys().pipe(this.catchIDBBroken(() => this.database.keys()))
                        }
                        has(e) {
                            return this.database.has(e).pipe(this.catchIDBBroken(() => this.database.has(e)))
                        }
                        watch(e, i) {
                            this.notifiers.has(e) || this.notifiers.set(e, new Jn(1));
                            const r = this.notifiers.get(e);
                            return (i ? this.get(e, i) : this.get(e)).subscribe({
                                next: s => r.next(s),
                                error: s => r.error(s)
                            }), r.asObservable()
                        }
                        notify(e, i) {
                            const r = this.notifiers.get(e);
                            r && r.next(i)
                        }
                        catchIDBBroken(e) {
                            return oi(i => {
                                if (null != i && "object" == typeof i && "message" in i && i.message === rI) {
                                    try {
                                        this.database = "getItem" in localStorage ? new gp(this.LSPrefix) : new _p
                                    } catch {
                                        this.database = new _p
                                    }
                                    return e()
                                }
                                return Ln(i)
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(l9), C(QT), C(Cv))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                aI = (() => {
                    class t {
                        constructor(e) {
                            this.storage = e
                        }
                        getKey(e) {
                            return `cache-v1-${e}`
                        }
                        save(e) {
                            e.expirationMins = e.expirationMins || 0;
                            const i = e.expirationMins ? 60 * e.expirationMins * 1e3 : 0,
                                r = e.refreshMins ? 60 * e.refreshMins * 1e3 : 0,
                                s = {
                                    value: e.data,
                                    expiration: 0 !== i ? (new Date).getTime() + i : void 0,
                                    refreshAt: 0 !== r ? (new Date).getTime() + r : void 0,
                                    lastUpdated: (new Date).getTime()
                                },
                                o = this.getKey(e.key);
                            this.storage.set(o, s).subscribe({
                                next: () => {}
                            })
                        }
                        getRecord(e) {
                            return e = this.getKey(e), this.storage.get(e).pipe(Z(i => {
                                const r = i;
                                if (null != r) {
                                    r.expired = !1, r.shouldRefresh = !1;
                                    const s = (new Date).getTime();
                                    r.lastUpdated && r.lastUpdated > s && (r.expired = !0), r.expiration && r.expiration <= s && (r.expired = !0), r.refreshAt && r.refreshAt <= s && (r.shouldRefresh = !0)
                                }
                                return r
                            }))
                        }
                        load(e) {
                            return this.getRecord(e).pipe(Z(i => null != i && "value" in i ? i.expired ? null : i.value : null))
                        }
                        remove(e) {
                            this.storage.delete(this.getKey(e)).subscribe(() => {})
                        }
                        cleanLocalStorage() {
                            this.storage.clear().subscribe({
                                next: () => {}
                            })
                        }
                        reset() {
                            this.storage.clear().subscribe({
                                next: () => {}
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(d9))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            var Ul = (() => {
                return (t = Ul || (Ul = {})).GET = "GET", t.PUT = "PUT", t.POST = "POST", t.DELETE = "DELETE", Ul;
                var t
            })();
            let yp = (() => {
                class t {
                    constructor(e, i) {
                        this.http = e, this.cacheService = i, this.busyRequests = new Map
                    }
                    get(e, i) {
                        var r = this;
                        const s = i ? .body ? ? void 0,
                            o = i ? .cacheMins ? ? 0,
                            a = i ? .refreshAfter ? ? void 0;
                        let l = "";
                        if (l = e, null != i ? .params && (l = l + "?" + i.params.toString()), this.busyRequests.get(l)) return this.busyRequests.get(l);
                        const c = new Jn(1);
                        this.busyRequests.set(l, c);
                        const d = new Promise(function() {
                            var h = Cr(function*(m, _) {
                                if (o && o > 0) try {
                                    r.cacheService.getRecord(l).subscribe(v => {
                                        null != v && v.value && c.next(v.value), m(v)
                                    })
                                } catch (v) {
                                    console.error(v), _(d)
                                }
                            });
                            return function(m, _) {
                                return h.apply(this, arguments)
                            }
                        }());
                        return setTimeout(Cr(function*() {
                            if (i ? .refreshAfter) {
                                const h = yield d;
                                if (h && !h.shouldRefresh) return
                            }
                            r.http.request("GET", e, {
                                body: s,
                                params: i ? .params,
                                observe: "response"
                            }).subscribe({
                                next: h => {
                                    null != l && (!i ? .cacheStatusCodes || i.cacheStatusCodes.includes(h.status)) && r.cacheService.save({
                                        key: l,
                                        data: h.body,
                                        expirationMins: o,
                                        refreshMins: a,
                                        status: h.status
                                    }), c.next(h.body)
                                },
                                error: h => {
                                    i ? .cacheStatusCodes && h.status && i.cacheStatusCodes.includes(h.status) && r.cacheService.save({
                                        key: l,
                                        data: null,
                                        expirationMins: o,
                                        refreshMins: a,
                                        status: h.status
                                    }), c.error(h)
                                },
                                complete: () => {
                                    r.busyRequests.delete(l), c.complete()
                                }
                            })
                        })), c.asObservable()
                    }
                    delete(e, i) {
                        return this.httpCall(Ul.DELETE, e, i)
                    }
                    post(e, i, r) {
                        return r || (r = {
                            body: i
                        }), r.body || (r.body = i), this.httpCall(Ul.POST, e, r)
                    }
                    put(e, i) {
                        return this.httpCall(Ul.PUT, e, i)
                    }
                    httpCall(e, i, r) {
                        const s = r ? .cacheMins ? ? 0;
                        if (s > 0) {
                            const o = this.cacheService.load(i);
                            if (null !== o) return Rt(o)
                        }
                        return this.http.request(e, i, r).pipe(mt({
                            next: o => {
                                s && s > 0 && this.cacheService.save({
                                    key: i,
                                    data: o,
                                    expirationMins: s
                                })
                            }
                        }))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(wr), C(aI))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const lI = ["toast-component", ""];

            function u9(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 5), T("click", function() {
                        return ne(e), ie(x().remove())
                    }), f(1, "span", 6), w(2, "\xd7"), g()()
                }
            }

            function h9(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x(2);
                    p(1), X("[", e.duplicatesCount + 1, "]")
                }
            }

            function f9(t, n) {
                if (1 & t && (f(0, "div"), w(1), b(2, h9, 2, 1, "ng-container", 4), g()), 2 & t) {
                    const e = x();
                    Fr(e.options.titleClass), q("aria-label", e.title), p(1), X(" ", e.title, " "), p(1), y("ngIf", e.duplicatesCount)
                }
            }

            function p9(t, n) {
                if (1 & t && E(0, "div", 7), 2 & t) {
                    const e = x();
                    Fr(e.options.messageClass), y("innerHTML", e.message, uh)
                }
            }

            function m9(t, n) {
                if (1 & t && (f(0, "div", 8), w(1), g()), 2 & t) {
                    const e = x();
                    Fr(e.options.messageClass), q("aria-label", e.message), p(1), X(" ", e.message, " ")
                }
            }

            function g9(t, n) {
                if (1 & t && (f(0, "div"), E(1, "div", 9), g()), 2 & t) {
                    const e = x();
                    p(1), Kt("width", e.width + "%")
                }
            }
            class x9 {
                constructor(n, e) {
                    this.component = n, this.injector = e
                }
                attach(n, e) {
                    return this._attachedHost = n, n.attach(this, e)
                }
                detach() {
                    const n = this._attachedHost;
                    if (n) return this._attachedHost = void 0, n.detach()
                }
                get isAttached() {
                    return null != this._attachedHost
                }
                setAttachedHost(n) {
                    this._attachedHost = n
                }
            }
            class bp {
                constructor(n, e, i, r, s, o) {
                    this.toastId = n, this.config = e, this.message = i, this.title = r, this.toastType = s, this.toastRef = o, this._onTap = new H, this._onAction = new H, this.toastRef.afterClosed().subscribe(() => {
                        this._onAction.complete(), this._onTap.complete()
                    })
                }
                triggerTap() {
                    this._onTap.next(), this.config.tapToDismiss && this._onTap.complete()
                }
                onTap() {
                    return this._onTap.asObservable()
                }
                triggerAction(n) {
                    this._onAction.next(n)
                }
                onAction() {
                    return this._onAction.asObservable()
                }
            }
            const dI = new R("ToastConfig");
            class M9 {
                constructor(n) {
                    this._overlayRef = n, this.duplicatesCount = 0, this._afterClosed = new H, this._activate = new H, this._manualClose = new H, this._resetTimeout = new H, this._countDuplicate = new H
                }
                manualClose() {
                    this._manualClose.next(), this._manualClose.complete()
                }
                manualClosed() {
                    return this._manualClose.asObservable()
                }
                timeoutReset() {
                    return this._resetTimeout.asObservable()
                }
                countDuplicate() {
                    return this._countDuplicate.asObservable()
                }
                close() {
                    this._overlayRef.detach(), this._afterClosed.next(), this._manualClose.next(), this._afterClosed.complete(), this._manualClose.complete(), this._activate.complete(), this._resetTimeout.complete(), this._countDuplicate.complete()
                }
                afterClosed() {
                    return this._afterClosed.asObservable()
                }
                isInactive() {
                    return this._activate.isStopped
                }
                activate() {
                    this._activate.next(), this._activate.complete()
                }
                afterActivate() {
                    return this._activate.asObservable()
                }
                onDuplicate(n, e) {
                    n && this._resetTimeout.next(), e && this._countDuplicate.next(++this.duplicatesCount)
                }
            }
            class S9 {
                constructor(n, e) {
                    this._toastPackage = n, this._parentInjector = e
                }
                get(n, e, i) {
                    return n === bp ? this._toastPackage : this._parentInjector.get(n, e, i)
                }
            }
            class k9 extends class D9 {
                attach(n, e) {
                    return this._attachedPortal = n, this.attachComponentPortal(n, e)
                }
                detach() {
                    this._attachedPortal && this._attachedPortal.setAttachedHost(), this._attachedPortal = void 0, this._disposeFn && (this._disposeFn(), this._disposeFn = void 0)
                }
                setDisposeFn(n) {
                    this._disposeFn = n
                }
            } {
                constructor(n, e, i) {
                    super(), this._hostDomElement = n, this._componentFactoryResolver = e, this._appRef = i
                }
                attachComponentPortal(n, e) {
                    const i = this._componentFactoryResolver.resolveComponentFactory(n.component);
                    let r;
                    return r = i.create(n.injector), this._appRef.attachView(r.hostView), this.setDisposeFn(() => {
                        this._appRef.detachView(r.hostView), r.destroy()
                    }), e ? this._hostDomElement.insertBefore(this._getComponentRootNode(r), this._hostDomElement.firstChild) : this._hostDomElement.appendChild(this._getComponentRootNode(r)), r
                }
                _getComponentRootNode(n) {
                    return n.hostView.rootNodes[0]
                }
            }
            class A9 {
                constructor(n) {
                    this._portalHost = n
                }
                attach(n, e = !0) {
                    return this._portalHost.attach(n, e)
                }
                detach() {
                    return this._portalHost.detach()
                }
            }
            let E9 = (() => {
                    class t {
                        constructor(e) {
                            this._document = e
                        }
                        ngOnDestroy() {
                            this._containerElement && this._containerElement.parentNode && this._containerElement.parentNode.removeChild(this._containerElement)
                        }
                        getContainerElement() {
                            return this._containerElement || this._createContainer(), this._containerElement
                        }
                        _createContainer() {
                            const e = this._document.createElement("div");
                            e.classList.add("overlay-container"), e.setAttribute("aria-live", "polite"), this._document.body.appendChild(e), this._containerElement = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                T9 = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._overlayContainer = e, this._componentFactoryResolver = i, this._appRef = r, this._document = s, this._paneElements = new Map
                        }
                        create(e, i) {
                            return this._createOverlayRef(this.getPaneElement(e, i))
                        }
                        getPaneElement(e = "", i) {
                            return this._paneElements.get(i) || this._paneElements.set(i, {}), this._paneElements.get(i)[e] || (this._paneElements.get(i)[e] = this._createPaneElement(e, i)), this._paneElements.get(i)[e]
                        }
                        _createPaneElement(e, i) {
                            const r = this._document.createElement("div");
                            return r.id = "toast-container", r.classList.add(e), r.classList.add("toast-container"), i ? i.getContainerElement().appendChild(r) : this._overlayContainer.getContainerElement().appendChild(r), r
                        }
                        _createPortalHost(e) {
                            return new k9(e, this._componentFactoryResolver, this._appRef)
                        }
                        _createOverlayRef(e) {
                            return new A9(this._createPortalHost(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(E9), C(Ci), C(Lr), C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Ur = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this.overlay = i, this._injector = r, this.sanitizer = s, this.ngZone = o, this.currentlyActive = 0, this.toasts = [], this.index = 0, this.toastrConfig = { ...e.default,
                                ...e.config
                            }, e.config.iconClasses && (this.toastrConfig.iconClasses = { ...e.default.iconClasses,
                                ...e.config.iconClasses
                            })
                        }
                        show(e, i, r = {}, s = "") {
                            return this._preBuildNotification(s, e, i, this.applyConfig(r))
                        }
                        success(e, i, r = {}) {
                            return this._preBuildNotification(this.toastrConfig.iconClasses.success || "", e, i, this.applyConfig(r))
                        }
                        error(e, i, r = {}) {
                            return this._preBuildNotification(this.toastrConfig.iconClasses.error || "", e, i, this.applyConfig(r))
                        }
                        info(e, i, r = {}) {
                            return this._preBuildNotification(this.toastrConfig.iconClasses.info || "", e, i, this.applyConfig(r))
                        }
                        warning(e, i, r = {}) {
                            return this._preBuildNotification(this.toastrConfig.iconClasses.warning || "", e, i, this.applyConfig(r))
                        }
                        clear(e) {
                            for (const i of this.toasts)
                                if (void 0 !== e) {
                                    if (i.toastId === e) return void i.toastRef.manualClose()
                                } else i.toastRef.manualClose()
                        }
                        remove(e) {
                            const i = this._findToast(e);
                            if (!i || (i.activeToast.toastRef.close(), this.toasts.splice(i.index, 1), this.currentlyActive = this.currentlyActive - 1, !this.toastrConfig.maxOpened || !this.toasts.length)) return !1;
                            if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {
                                const r = this.toasts[this.currentlyActive].toastRef;
                                r.isInactive() || (this.currentlyActive = this.currentlyActive + 1, r.activate())
                            }
                            return !0
                        }
                        findDuplicate(e = "", i = "", r, s) {
                            const {
                                includeTitleDuplicates: o
                            } = this.toastrConfig;
                            for (const a of this.toasts) {
                                const l = o && a.title === e;
                                if ((!o || l) && a.message === i) return a.toastRef.onDuplicate(r, s), a
                            }
                            return null
                        }
                        applyConfig(e = {}) {
                            return { ...this.toastrConfig,
                                ...e
                            }
                        }
                        _findToast(e) {
                            for (let i = 0; i < this.toasts.length; i++)
                                if (this.toasts[i].toastId === e) return {
                                    index: i,
                                    activeToast: this.toasts[i]
                                };
                            return null
                        }
                        _preBuildNotification(e, i, r, s) {
                            return s.onActivateTick ? this.ngZone.run(() => this._buildNotification(e, i, r, s)) : this._buildNotification(e, i, r, s)
                        }
                        _buildNotification(e, i, r, s) {
                            if (!s.toastComponent) throw new Error("toastComponent required");
                            const o = this.findDuplicate(r, i, this.toastrConfig.resetTimeoutOnDuplicate && s.timeOut > 0, this.toastrConfig.countDuplicates);
                            if ((this.toastrConfig.includeTitleDuplicates && r || i) && this.toastrConfig.preventDuplicates && null !== o) return o;
                            this.previousToastMessage = i;
                            let a = !1;
                            this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened && (a = !0, this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
                            const l = this.overlay.create(s.positionClass, this.overlayContainer);
                            this.index = this.index + 1;
                            let c = i;
                            i && s.enableHtml && (c = this.sanitizer.sanitize(it.HTML, i));
                            const d = new M9(l),
                                h = new bp(this.index, s, c, r, e, d),
                                m = new S9(h, this._injector),
                                _ = new x9(s.toastComponent, m),
                                v = l.attach(_, this.toastrConfig.newestOnTop);
                            d.componentInstance = v.instance;
                            const D = {
                                toastId: this.index,
                                title: r || "",
                                message: i || "",
                                toastRef: d,
                                onShown: d.afterActivate(),
                                onHidden: d.afterClosed(),
                                onTap: h.onTap(),
                                onAction: h.onAction(),
                                portal: v
                            };
                            return a || (this.currentlyActive = this.currentlyActive + 1, setTimeout(() => {
                                D.toastRef.activate()
                            })), this.toasts.push(D), D
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(dI), C(T9), C(Ct), C(qs), C(ce))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            const I9 = {
                maxOpened: 0,
                autoDismiss: !1,
                newestOnTop: !0,
                preventDuplicates: !1,
                countDuplicates: !1,
                resetTimeoutOnDuplicate: !1,
                includeTitleDuplicates: !1,
                iconClasses: {
                    error: "toast-error",
                    info: "toast-info",
                    success: "toast-success",
                    warning: "toast-warning"
                },
                closeButton: !1,
                disableTimeOut: !1,
                timeOut: 5e3,
                extendedTimeOut: 1e3,
                enableHtml: !1,
                progressBar: !1,
                toastClass: "ngx-toastr",
                positionClass: "toast-top-right",
                titleClass: "toast-title",
                messageClass: "toast-message",
                easing: "ease-in",
                easeTime: 300,
                tapToDismiss: !0,
                onActivateTick: !1,
                progressAnimation: "decreasing",
                payload: null,
                toastComponent: (() => {
                    class t {
                        constructor(e, i, r) {
                            this.toastrService = e, this.toastPackage = i, this.ngZone = r, this.width = -1, this.toastClasses = "", this.state = {
                                value: "inactive",
                                params: {
                                    easeTime: this.toastPackage.config.easeTime,
                                    easing: "ease-in"
                                }
                            }, this.message = i.message, this.title = i.title, this.options = i.config, this.originalTimeout = i.config.timeOut, this.toastClasses = `${i.toastType} ${i.config.toastClass}`, this.sub = i.toastRef.afterActivate().subscribe(() => {
                                this.activateToast()
                            }), this.sub1 = i.toastRef.manualClosed().subscribe(() => {
                                this.remove()
                            }), this.sub2 = i.toastRef.timeoutReset().subscribe(() => {
                                this.resetTimeout()
                            }), this.sub3 = i.toastRef.countDuplicate().subscribe(s => {
                                this.duplicatesCount = s
                            })
                        }
                        get displayStyle() {
                            if ("inactive" === this.state.value) return "none"
                        }
                        ngOnDestroy() {
                            this.sub.unsubscribe(), this.sub1.unsubscribe(), this.sub2.unsubscribe(), this.sub3.unsubscribe(), clearInterval(this.intervalId), clearTimeout(this.timeout)
                        }
                        activateToast() {
                            this.state = { ...this.state,
                                value: "active"
                            }, !0 !== this.options.disableTimeOut && "timeOut" !== this.options.disableTimeOut && this.options.timeOut && (this.outsideTimeout(() => this.remove(), this.options.timeOut), this.hideTime = (new Date).getTime() + this.options.timeOut, this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10))
                        }
                        updateProgress() {
                            if (0 === this.width || 100 === this.width || !this.options.timeOut) return;
                            const e = (new Date).getTime();
                            this.width = (this.hideTime - e) / this.options.timeOut * 100, "increasing" === this.options.progressAnimation && (this.width = 100 - this.width), this.width <= 0 && (this.width = 0), this.width >= 100 && (this.width = 100)
                        }
                        resetTimeout() {
                            clearTimeout(this.timeout), clearInterval(this.intervalId), this.state = { ...this.state,
                                value: "active"
                            }, this.outsideTimeout(() => this.remove(), this.originalTimeout), this.options.timeOut = this.originalTimeout, this.hideTime = (new Date).getTime() + (this.options.timeOut || 0), this.width = -1, this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10)
                        }
                        remove() {
                            "removed" !== this.state.value && (clearTimeout(this.timeout), this.state = { ...this.state,
                                value: "removed"
                            }, this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime))
                        }
                        tapToast() {
                            "removed" !== this.state.value && (this.toastPackage.triggerTap(), this.options.tapToDismiss && this.remove())
                        }
                        stickAround() {
                            "removed" !== this.state.value && (clearTimeout(this.timeout), this.options.timeOut = 0, this.hideTime = 0, clearInterval(this.intervalId), this.width = 0)
                        }
                        delayedHideToast() {
                            !0 === this.options.disableTimeOut || "extendedTimeOut" === this.options.disableTimeOut || 0 === this.options.extendedTimeOut || "removed" === this.state.value || (this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut), this.options.timeOut = this.options.extendedTimeOut, this.hideTime = (new Date).getTime() + (this.options.timeOut || 0), this.width = -1, this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10))
                        }
                        outsideTimeout(e, i) {
                            this.ngZone ? this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(e), i)) : this.timeout = setTimeout(() => e(), i)
                        }
                        outsideInterval(e, i) {
                            this.ngZone ? this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(e), i)) : this.intervalId = setInterval(() => e(), i)
                        }
                        runInsideAngular(e) {
                            this.ngZone ? this.ngZone.run(() => e()) : e()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ur), u(bp), u(ce))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["", "toast-component", ""]
                        ],
                        hostVars: 5,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i.tapToast()
                            })("mouseenter", function() {
                                return i.stickAround()
                            })("mouseleave", function() {
                                return i.delayedHideToast()
                            }), 2 & e && (ll("@flyInOut", i.state), Fr(i.toastClasses), Kt("display", i.displayStyle))
                        },
                        attrs: lI,
                        decls: 5,
                        vars: 5,
                        consts: [
                            ["type", "button", "class", "toast-close-button", "aria-label", "Close", 3, "click", 4, "ngIf"],
                            [3, "class", 4, "ngIf"],
                            ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
                            ["role", "alert", 3, "class", 4, "ngIf"],
                            [4, "ngIf"],
                            ["type", "button", "aria-label", "Close", 1, "toast-close-button", 3, "click"],
                            ["aria-hidden", "true"],
                            ["role", "alert", 3, "innerHTML"],
                            ["role", "alert"],
                            [1, "toast-progress"]
                        ],
                        template: function(e, i) {
                            1 & e && (b(0, u9, 3, 0, "button", 0), b(1, f9, 3, 5, "div", 1), b(2, p9, 1, 3, "div", 2), b(3, m9, 2, 4, "div", 3), b(4, g9, 2, 2, "div", 4)), 2 & e && (y("ngIf", i.options.closeButton), p(1), y("ngIf", i.title), p(1), y("ngIf", i.message && i.options.enableHtml), p(1), y("ngIf", i.message && !i.options.enableHtml), p(1), y("ngIf", i.options.progressBar))
                        },
                        dependencies: [at],
                        encapsulation: 2,
                        data: {
                            animation: [Nt("flyInOut", [Oe("inactive", ee({
                                opacity: 0
                            })), Oe("active", ee({
                                opacity: 1
                            })), Oe("removed", ee({
                                opacity: 0
                            })), Ue("inactive => active", Ye("{{ easeTime }}ms {{ easing }}")), Ue("active => removed", Ye("{{ easeTime }}ms {{ easing }}"))])]
                        }
                    }), t
                })()
            };
            let R9 = (() => {
                    class t {
                        static forRoot(e = {}) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: dI,
                                    useValue: {
                                        default: I9,
                                        config: e
                                    }
                                }]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [
                            [ut]
                        ]
                    }), t
                })(),
                Bn = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this.http = e, this.cachedHttp = i, this.router = r, this.toastr = s, this.cache = o, this.subs = new co, this.currentPlayerSubject = new Te(this.loadPlayer()), this.currentUserSubject = new Te(this.loadUser()), this.isLoggedIn$ = this.currentUserSubject.pipe(Z(a => this.isLoggedIn(a))), this.currentUser$ = this.currentUserSubject.asObservable(), this.currentPlayer$ = this.currentPlayerSubject.asObservable(), this.isStaff$ = this.currentUserSubject.pipe(Z(a => this.isStaff())), this.canManageUsers$ = this.currentPlayerSubject.pipe(Z(a => this.canManageUsers())), this.isBoss$ = this.currentPlayerSubject.pipe(Z(a => this.isBoss())), this.helper = new jW, this.lastRequest = new Te(null), window.onstorage = a => {
                                if ("currentUser" === a.key) {
                                    const l = this.loadUser();
                                    null == l ? this.logout() : this.currentUserSubject.next(l)
                                }
                                if ("currentPlayer" === a.key) {
                                    const l = this.loadPlayer();
                                    this.currentPlayerSubject.next(l)
                                }
                            }, setTimeout(() => {
                                this.subs.sink = this.currentUser$.subscribe(a => {
                                    null != a && null != a.steamid && this.fetchPlayer(a)
                                })
                            }, 0)
                        }
                        handleError(e) {
                            throw e
                        }
                        ngOnDestroy() {
                            this.subs.unsubscribe()
                        }
                        savePlayer(e) {
                            e ? localStorage.setItem("currentPlayer", JSON.stringify(e)) : localStorage.removeItem("currentPlayer")
                        }
                        fetchPlayer(e) {
                            this.cachedHttp.get(`/api/Players/${e.steamid}/`, {
                                cacheMins: 60,
                                refreshAfter: 10
                            }).subscribe({
                                next: i => {
                                    this.updatePlayer(i)
                                },
                                error: i => {
                                    console.error(i)
                                }
                            })
                        }
                        loadPlayer() {
                            const e = localStorage.getItem("currentPlayer");
                            return e ? JSON.parse(e) : null
                        }
                        loadUser() {
                            const e = localStorage.getItem("currentUser");
                            return e ? JSON.parse(e) : null
                        }
                        get currentUserValue() {
                            return this.currentUserSubject.value
                        }
                        get currentPlayerValue() {
                            return this.currentPlayerSubject.value
                        }
                        get currentUserId() {
                            return null != this.currentUserValue ? this.currentUserValue.id : null
                        }
                        login(e, i) {
                            return this.http.post("/api/login", {
                                username: e,
                                password: i
                            }, {
                                observe: "response"
                            }).pipe(Z(r => (200 === r.status && null != r.body && null != r.body.token && (this.updateUser(r.body), this.router.navigate(["/"])), r)))
                        }
                        updateUser(e) {
                            e ? localStorage.setItem("currentUser", JSON.stringify(e)) : localStorage.removeItem("currentUser"), this.currentUserSubject.next(e)
                        }
                        updatePlayer(e) {
                            this.savePlayer(e), this.currentPlayerSubject.next(e)
                        }
                        isStaff() {
                            return this.currentUserValue ? .staff ? ? !1
                        }
                        isAmbulanceManagement() {
                            return !!this.hasJob("ambulance", "offambulance") && this.hasJobGrade("geneeskundehoofd", "psychologieteamleider", "psychologiehoofd", "geneeskundeteamleider", "boss")
                        }
                        isLawEnforcement() {
                            return this.hasJob("kmar", "police", "offkmar", "offpolice") || this.isStaff()
                        }
                        get isLawEnforcement$() {
                            return this.currentUser$.pipe(Z(e => this.isLawEnforcement()))
                        }
                        hasJob(...e) {
                            const i = this.currentUserValue;
                            return null != i && e.includes(i.job)
                        }
                        hasRole(...e) {
                            const i = this.currentUserValue;
                            return null != i && e.includes(i.rang)
                        }
                        hasJobGrade(...e) {
                            const i = this.currentPlayerValue;
                            return !(!i || !i.jobGradeName) && e.includes(i.jobGradeName)
                        }
                        isBoss() {
                            return null != this.currentUserValue && (this.hasRole("owner", "superadmin", "admin", "headstaff") || this.hasJobGrade("boss"))
                        }
                        canManageStaffUsers() {
                            return this.hasRole("owner", "superadmin")
                        }
                        canManageUser(e) {
                            const i = this.currentUserValue;
                            return !(null == i || !this.isBoss()) && (e.staff ? this.canManageStaffUsers() : e.job == i.job)
                        }
                        canManageUsers() {
                            return this.isBoss()
                        }
                        logout() {
                            if (!this.currentUserValue ? .token) return this.router.navigate(["/login"]), void this.toastr.success("U bent uitgelogd!");
                            this.http.post("/api/logout", {
                                accessToken: this.currentUserValue ? .token
                            }).subscribe(), localStorage.removeItem("currentPlayer"), this.updatePlayer(null), this.updateUser(null), this.cache.reset(), this.router.navigate(["/login"]), this.toastr.success("U bent uitgelogd!")
                        }
                        refreshToken() {
                            return this.requestBusy || (console.log("Refreshing token!"), this.lastRequest.next(null), this.requestBusy = !0, this.http.post("/api/refresh", {
                                accessToken: this.currentUserValue ? .token,
                                refreshToken: this.currentUserValue ? .refreshToken.token
                            }).subscribe({
                                next: e => {
                                    if (console.log(e), this.requestBusy = !1, null == e) return this.toastr.error("Je sessie is verlopen, log aub opnieuw in!"), this.logout(), void this.lastRequest.next(!1);
                                    this.updateUser(e), this.lastRequest.next(!0)
                                },
                                error: e => {
                                    console.error(e), this.requestBusy = !1, this.lastRequest.next(!1), this.logout()
                                }
                            })), this.lastRequest
                        }
                        isLoggedIn(e = null) {
                            return null != (e = e ? ? this.currentUserSubject.value) && null != e.token && !e.firstLogon && !this.isRefreshTokenExpired()
                        }
                        isTokenExpired() {
                            const e = this.currentUserSubject.value;
                            return !e || this.helper.isTokenExpired(e.token)
                        }
                        isRefreshTokenExpired() {
                            const e = this.currentUserSubject.value;
                            return !e ? .refreshToken ? .expirationDate || new Date(e.refreshToken.expirationDate) < new Date
                        }
                        canActivate() {
                            return !!this.isLoggedIn() || (this.router.navigate(["/login"]), !1)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(wr), C(yp), C(gt), C(Ur), C(aI))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();

            function uI(t) {
                for (let n in t) {
                    let e = t[n] ? ? "";
                    switch (n) {
                        case "display":
                            t.display = "flex" === e ? ["-webkit-flex", "flex"] : "inline-flex" === e ? ["-webkit-inline-flex", "inline-flex"] : e;
                            break;
                        case "align-items":
                        case "align-self":
                        case "align-content":
                        case "flex":
                        case "flex-basis":
                        case "flex-flow":
                        case "flex-grow":
                        case "flex-shrink":
                        case "flex-wrap":
                        case "justify-content":
                            t["-webkit-" + n] = e;
                            break;
                        case "flex-direction":
                            t["-webkit-flex-direction"] = e, t["flex-direction"] = e;
                            break;
                        case "order":
                            t.order = t["-webkit-" + n] = isNaN(+e) ? "0" : e
                    }
                }
                return t
            }
            const Dv = "inline",
                vp = ["row", "column", "row-reverse", "column-reverse"];

            function hI(t) {
                let [n, e, i] = fI(t);
                return function O9(t, n = null, e = !1) {
                    return {
                        display: e ? "inline-flex" : "flex",
                        "box-sizing": "border-box",
                        "flex-direction": t,
                        "flex-wrap": n || null
                    }
                }(n, e, i)
            }

            function fI(t) {
                t = t ? .toLowerCase() ? ? "";
                let [n, e, i] = t.split(" ");
                return vp.find(r => r === n) || (n = vp[0]), e === Dv && (e = i !== Dv ? i : "", i = Dv), [n, F9(e), !!i]
            }

            function Qd(t) {
                let [n] = fI(t);
                return n.indexOf("row") > -1
            }

            function F9(t) {
                if (t) switch (t.toLowerCase()) {
                    case "reverse":
                    case "wrap-reverse":
                    case "reverse-wrap":
                        t = "wrap-reverse";
                        break;
                    case "no":
                    case "none":
                    case "nowrap":
                        t = "nowrap";
                        break;
                    default:
                        t = "wrap"
                }
                return t
            }

            function Ms(t, ...n) {
                if (null == t) throw TypeError("Cannot convert undefined or null to object");
                for (let e of n)
                    if (null != e)
                        for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                return t
            }
            const L9 = {
                    provide: ey,
                    useFactory: function P9(t, n) {
                        return () => {
                            if (_n(n)) {
                                const e = Array.from(t.querySelectorAll(`[class*=${pI}]`)),
                                    i = /\bflex-layout-.+?\b/g;
                                e.forEach(r => {
                                    r.classList.contains(`${pI}ssr`) && r.parentNode ? r.parentNode.removeChild(r) : r.className.replace(i, "")
                                })
                            }
                        }
                    },
                    deps: [pe, On],
                    multi: !0
                },
                pI = "flex-layout-";
            let Mv = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    providers: [L9]
                }), t
            })();
            class uo {
                constructor(n = !1, e = "all", i = "", r = "", s = 0) {
                    this.matches = n, this.mediaQuery = e, this.mqAlias = i, this.suffix = r, this.priority = s, this.property = ""
                }
                clone() {
                    return new uo(this.matches, this.mediaQuery, this.mqAlias, this.suffix)
                }
            }
            let N9 = (() => {
                class t {
                    constructor() {
                        this.stylesheet = new Map
                    }
                    addStyleToElement(e, i, r) {
                        const s = this.stylesheet.get(e);
                        s ? s.set(i, r) : this.stylesheet.set(e, new Map([
                            [i, r]
                        ]))
                    }
                    clearStyles() {
                        this.stylesheet.clear()
                    }
                    getStyleForElement(e, i) {
                        const r = this.stylesheet.get(e);
                        let s = "";
                        if (r) {
                            const o = r.get(i);
                            ("number" == typeof o || "string" == typeof o) && (s = o + "")
                        }
                        return s
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const Sv = {
                    addFlexToParent: !0,
                    addOrientationBps: !1,
                    disableDefaultBps: !1,
                    disableVendorPrefixes: !1,
                    serverLoaded: !1,
                    useColumnBasisZero: !0,
                    printWithBreakpoints: [],
                    mediaTriggerAutoRestore: !0,
                    ssrObserveBreakpoints: [],
                    multiplier: void 0,
                    defaultUnit: "px",
                    detectLayoutDisplay: !1
                },
                xr = new R("Flex Layout token, config options for the library", {
                    providedIn: "root",
                    factory: () => Sv
                }),
                Gl = new R("FlexLayoutServerLoaded", {
                    providedIn: "root",
                    factory: () => !1
                }),
                wp = new R("Flex Layout token, collect all breakpoints into one provider", {
                    providedIn: "root",
                    factory: () => null
                });

            function kv(t, n) {
                return t = t ? .clone() ? ? new uo, n && (t.mqAlias = n.alias, t.mediaQuery = n.mediaQuery, t.suffix = n.suffix, t.priority = n.priority), t
            }
            class Yt {
                constructor() {
                    this.shouldCache = !0
                }
                sideEffect(n, e, i) {}
            }
            let Ot = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._serverStylesheet = e, this._serverModuleLoaded = i, this._platformId = r, this.layoutConfig = s
                    }
                    applyStyleToElement(e, i, r = null) {
                        let s = {};
                        "string" == typeof i && (s[i] = r, i = s), s = this.layoutConfig.disableVendorPrefixes ? i : uI(i), this._applyMultiValueStyleToElement(s, e)
                    }
                    applyStyleToElements(e, i = []) {
                        const r = this.layoutConfig.disableVendorPrefixes ? e : uI(e);
                        i.forEach(s => {
                            this._applyMultiValueStyleToElement(r, s)
                        })
                    }
                    getFlowDirection(e) {
                        const i = "flex-direction";
                        let r = this.lookupStyle(e, i);
                        return [r || "row", this.lookupInlineStyle(e, i) || ml(this._platformId) && this._serverModuleLoaded ? r : ""]
                    }
                    hasWrap(e) {
                        return "wrap" === this.lookupStyle(e, "flex-wrap")
                    }
                    lookupAttributeValue(e, i) {
                        return e.getAttribute(i) ? ? ""
                    }
                    lookupInlineStyle(e, i) {
                        return _n(this._platformId) ? e.style.getPropertyValue(i) : function B9(t, n) {
                            return mI(t)[n] ? ? ""
                        }(e, i)
                    }
                    lookupStyle(e, i, r = !1) {
                        let s = "";
                        return e && ((s = this.lookupInlineStyle(e, i)) || (_n(this._platformId) ? r || (s = getComputedStyle(e).getPropertyValue(i)) : this._serverModuleLoaded && (s = this._serverStylesheet.getStyleForElement(e, i)))), s ? s.trim() : ""
                    }
                    _applyMultiValueStyleToElement(e, i) {
                        Object.keys(e).sort().forEach(r => {
                            const s = e[r],
                                o = Array.isArray(s) ? s : [s];
                            o.sort();
                            for (let a of o) a = a ? a + "" : "", _n(this._platformId) || !this._serverModuleLoaded ? _n(this._platformId) ? i.style.setProperty(r, a) : V9(i, r, a) : this._serverStylesheet.addStyleToElement(i, r, a)
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(N9), C(Gl), C(On), C(xr))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function V9(t, n, e) {
                n = n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
                const i = mI(t);
                i[n] = e ? ? "",
                    function H9(t, n) {
                        let e = "";
                        for (const i in n) n[i] && (e += `${i}:${n[i]};`);
                        t.setAttribute("style", e)
                    }(t, i)
            }

            function mI(t) {
                const n = {},
                    e = t.getAttribute("style");
                if (e) {
                    const i = e.split(/;+/g);
                    for (let r = 0; r < i.length; r++) {
                        const s = i[r].trim();
                        if (s.length > 0) {
                            const o = s.indexOf(":");
                            if (-1 === o) throw new Error(`Invalid CSS style: ${s}`);
                            n[s.substr(0, o).trim()] = s.substr(o + 1).trim()
                        }
                    }
                }
                return n
            }

            function Wl(t, n) {
                return (n && n.priority || 0) - (t && t.priority || 0)
            }

            function $9(t, n) {
                return (t.priority || 0) - (n.priority || 0)
            }
            let Cp = (() => {
                class t {
                    constructor(e, i, r) {
                        this._zone = e, this._platformId = i, this._document = r, this.source = new Te(new uo(!0)), this.registry = new Map, this.pendingRemoveListenerFns = [], this._observable$ = this.source.asObservable()
                    }
                    get activations() {
                        const e = [];
                        return this.registry.forEach((i, r) => {
                            i.matches && e.push(r)
                        }), e
                    }
                    isActive(e) {
                        return this.registry.get(e) ? .matches ? ? this.registerQuery(e).some(r => r.matches)
                    }
                    observe(e, i = !1) {
                        if (e && e.length) {
                            const r = this._observable$.pipe(Ie(o => !i || e.indexOf(o.mediaQuery) > -1));
                            return tt(new Ze(o => {
                                const a = this.registerQuery(e);
                                if (a.length) {
                                    const l = a.pop();
                                    a.forEach(c => {
                                        o.next(c)
                                    }), this.source.next(l)
                                }
                                o.complete()
                            }), r)
                        }
                        return this._observable$
                    }
                    registerQuery(e) {
                        const i = Array.isArray(e) ? e : [e],
                            r = [];
                        return function j9(t, n) {
                            const e = t.filter(i => !gI[i]);
                            if (e.length > 0) {
                                const i = e.join(", ");
                                try {
                                    const r = n.createElement("style");
                                    r.setAttribute("type", "text/css"), r.styleSheet || r.appendChild(n.createTextNode(`\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${i} {.fx-query-test{ }}\n`)), n.head.appendChild(r), e.forEach(s => gI[s] = r)
                                } catch (r) {
                                    console.error(r)
                                }
                            }
                        }(i, this._document), i.forEach(s => {
                            const o = l => {
                                this._zone.run(() => this.source.next(new uo(l.matches, s)))
                            };
                            let a = this.registry.get(s);
                            a || (a = this.buildMQL(s), a.addListener(o), this.pendingRemoveListenerFns.push(() => a.removeListener(o)), this.registry.set(s, a)), a.matches && r.push(new uo(!0, s))
                        }), r
                    }
                    ngOnDestroy() {
                        let e;
                        for (; e = this.pendingRemoveListenerFns.pop();) e()
                    }
                    buildMQL(e) {
                        return function U9(t, n) {
                            return n && window.matchMedia("all").addListener ? window.matchMedia(t) : function z9(t) {
                                const n = new EventTarget;
                                return n.matches = "all" === t || "" === t, n.media = t, n.addListener = () => {}, n.removeListener = () => {}, n.addEventListener = () => {}, n.dispatchEvent = () => !1, n.onchange = null, n
                            }(t)
                        }(e, _n(this._platformId))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(ce), C(On), C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const gI = {},
                G9 = [{
                    alias: "xs",
                    mediaQuery: "screen and (min-width: 0px) and (max-width: 599.98px)",
                    priority: 1e3
                }, {
                    alias: "sm",
                    mediaQuery: "screen and (min-width: 600px) and (max-width: 959.98px)",
                    priority: 900
                }, {
                    alias: "md",
                    mediaQuery: "screen and (min-width: 960px) and (max-width: 1279.98px)",
                    priority: 800
                }, {
                    alias: "lg",
                    mediaQuery: "screen and (min-width: 1280px) and (max-width: 1919.98px)",
                    priority: 700
                }, {
                    alias: "xl",
                    mediaQuery: "screen and (min-width: 1920px) and (max-width: 4999.98px)",
                    priority: 600
                }, {
                    alias: "lt-sm",
                    overlapping: !0,
                    mediaQuery: "screen and (max-width: 599.98px)",
                    priority: 950
                }, {
                    alias: "lt-md",
                    overlapping: !0,
                    mediaQuery: "screen and (max-width: 959.98px)",
                    priority: 850
                }, {
                    alias: "lt-lg",
                    overlapping: !0,
                    mediaQuery: "screen and (max-width: 1279.98px)",
                    priority: 750
                }, {
                    alias: "lt-xl",
                    overlapping: !0,
                    priority: 650,
                    mediaQuery: "screen and (max-width: 1919.98px)"
                }, {
                    alias: "gt-xs",
                    overlapping: !0,
                    mediaQuery: "screen and (min-width: 600px)",
                    priority: -950
                }, {
                    alias: "gt-sm",
                    overlapping: !0,
                    mediaQuery: "screen and (min-width: 960px)",
                    priority: -850
                }, {
                    alias: "gt-md",
                    overlapping: !0,
                    mediaQuery: "screen and (min-width: 1280px)",
                    priority: -750
                }, {
                    alias: "gt-lg",
                    overlapping: !0,
                    mediaQuery: "screen and (min-width: 1920px)",
                    priority: -650
                }],
                _I = "(orientation: portrait) and (max-width: 599.98px)",
                yI = "(orientation: landscape) and (max-width: 959.98px)",
                bI = "(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)",
                vI = "(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)",
                wI = "(orientation: portrait) and (min-width: 840px)",
                CI = "(orientation: landscape) and (min-width: 1280px)",
                Ss = {
                    HANDSET: `${_I}, ${yI}`,
                    TABLET: `${bI} , ${vI}`,
                    WEB: `${wI}, ${CI} `,
                    HANDSET_PORTRAIT: `${_I}`,
                    TABLET_PORTRAIT: `${bI} `,
                    WEB_PORTRAIT: `${wI}`,
                    HANDSET_LANDSCAPE: `${yI}`,
                    TABLET_LANDSCAPE: `${vI}`,
                    WEB_LANDSCAPE: `${CI}`
                },
                W9 = [{
                    alias: "handset",
                    priority: 2e3,
                    mediaQuery: Ss.HANDSET
                }, {
                    alias: "handset.landscape",
                    priority: 2e3,
                    mediaQuery: Ss.HANDSET_LANDSCAPE
                }, {
                    alias: "handset.portrait",
                    priority: 2e3,
                    mediaQuery: Ss.HANDSET_PORTRAIT
                }, {
                    alias: "tablet",
                    priority: 2100,
                    mediaQuery: Ss.TABLET
                }, {
                    alias: "tablet.landscape",
                    priority: 2100,
                    mediaQuery: Ss.TABLET_LANDSCAPE
                }, {
                    alias: "tablet.portrait",
                    priority: 2100,
                    mediaQuery: Ss.TABLET_PORTRAIT
                }, {
                    alias: "web",
                    priority: 2200,
                    mediaQuery: Ss.WEB,
                    overlapping: !0
                }, {
                    alias: "web.landscape",
                    priority: 2200,
                    mediaQuery: Ss.WEB_LANDSCAPE,
                    overlapping: !0
                }, {
                    alias: "web.portrait",
                    priority: 2200,
                    mediaQuery: Ss.WEB_PORTRAIT,
                    overlapping: !0
                }],
                q9 = /(\.|-|_)/g;

            function Y9(t) {
                let n = t.length > 0 ? t.charAt(0) : "",
                    e = t.length > 1 ? t.slice(1) : "";
                return n.toUpperCase() + e
            }
            const X9 = new R("Token (@angular/flex-layout) Breakpoints", {
                providedIn: "root",
                factory: () => {
                    const t = st(wp),
                        n = st(xr),
                        e = [].concat.apply([], (t || []).map(r => Array.isArray(r) ? r : [r]));
                    return function Z9(t, n = []) {
                        const e = {};
                        return t.forEach(i => {
                                e[i.alias] = i
                            }), n.forEach(i => {
                                e[i.alias] ? Ms(e[i.alias], i) : e[i.alias] = i
                            }),
                            function K9(t) {
                                return t.forEach(n => {
                                    n.suffix || (n.suffix = function Q9(t) {
                                        return t.replace(q9, "|").split("|").map(Y9).join("")
                                    }(n.alias), n.overlapping = !!n.overlapping)
                                }), t
                            }(Object.keys(e).map(i => e[i]))
                    }((n.disableDefaultBps ? [] : G9).concat(n.addOrientationBps ? W9 : []), e)
                }
            });
            let xp = (() => {
                class t {
                    constructor(e) {
                        this.findByMap = new Map, this.items = [...e].sort($9)
                    }
                    findByAlias(e) {
                        return e ? this.findWithPredicate(e, i => i.alias === e) : null
                    }
                    findByQuery(e) {
                        return this.findWithPredicate(e, i => i.mediaQuery === e)
                    }
                    get overlappings() {
                        return this.items.filter(e => e.overlapping)
                    }
                    get aliases() {
                        return this.items.map(e => e.alias)
                    }
                    get suffixes() {
                        return this.items.map(e => e ? .suffix ? ? "")
                    }
                    findWithPredicate(e, i) {
                        let r = this.findByMap.get(e);
                        return r || (r = this.items.find(i) ? ? null, this.findByMap.set(e, r)), r ? ? null
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(X9))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const ql = "print",
                J9 = {
                    alias: ql,
                    mediaQuery: ql,
                    priority: 1e3
                };
            let xI = (() => {
                class t {
                    constructor(e, i, r) {
                        this.breakpoints = e, this.layoutConfig = i, this._document = r, this.registeredBeforeAfterPrintHooks = !1, this.isPrintingBeforeAfterEvent = !1, this.beforePrintEventListeners = [], this.afterPrintEventListeners = [], this.formerActivations = null, this.isPrinting = !1, this.queue = new eq, this.deactivations = []
                    }
                    withPrintQuery(e) {
                        return [...e, ql]
                    }
                    isPrintEvent(e) {
                        return e.mediaQuery.startsWith(ql)
                    }
                    get printAlias() {
                        return [...this.layoutConfig.printWithBreakpoints ? ? []]
                    }
                    get printBreakPoints() {
                        return this.printAlias.map(e => this.breakpoints.findByAlias(e)).filter(e => null !== e)
                    }
                    getEventBreakpoints({
                        mediaQuery: e
                    }) {
                        const i = this.breakpoints.findByQuery(e);
                        return (i ? [...this.printBreakPoints, i] : this.printBreakPoints).sort(Wl)
                    }
                    updateEvent(e) {
                        let i = this.breakpoints.findByQuery(e.mediaQuery);
                        return this.isPrintEvent(e) && (i = this.getEventBreakpoints(e)[0], e.mediaQuery = i ? .mediaQuery ? ? ""), kv(e, i)
                    }
                    registerBeforeAfterPrintHooks(e) {
                        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) return;
                        this.registeredBeforeAfterPrintHooks = !0;
                        const i = () => {
                                this.isPrinting || (this.isPrintingBeforeAfterEvent = !0, this.startPrinting(e, this.getEventBreakpoints(new uo(!0, ql))), e.updateStyles())
                            },
                            r = () => {
                                this.isPrintingBeforeAfterEvent = !1, this.isPrinting && (this.stopPrinting(e), e.updateStyles())
                            };
                        this._document.defaultView.addEventListener("beforeprint", i), this._document.defaultView.addEventListener("afterprint", r), this.beforePrintEventListeners.push(i), this.afterPrintEventListeners.push(r)
                    }
                    interceptEvents(e) {
                        return i => {
                            this.isPrintEvent(i) ? i.matches && !this.isPrinting ? (this.startPrinting(e, this.getEventBreakpoints(i)), e.updateStyles()) : !i.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent && (this.stopPrinting(e), e.updateStyles()) : this.collectActivations(e, i)
                        }
                    }
                    blockPropagation() {
                        return e => !(this.isPrinting || this.isPrintEvent(e))
                    }
                    startPrinting(e, i) {
                        this.isPrinting = !0, this.formerActivations = e.activatedBreakpoints, e.activatedBreakpoints = this.queue.addPrintBreakpoints(i)
                    }
                    stopPrinting(e) {
                        e.activatedBreakpoints = this.deactivations, this.deactivations = [], this.formerActivations = null, this.queue.clear(), this.isPrinting = !1
                    }
                    collectActivations(e, i) {
                        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {
                            if (!this.isPrintingBeforeAfterEvent) return void(this.deactivations = []);
                            if (!i.matches) {
                                const r = this.breakpoints.findByQuery(i.mediaQuery);
                                if (r) {
                                    const s = this.formerActivations && this.formerActivations.includes(r),
                                        o = !this.formerActivations && e.activatedBreakpoints.includes(r);
                                    (s || o) && (this.deactivations.push(r), this.deactivations.sort(Wl))
                                }
                            }
                        }
                    }
                    ngOnDestroy() {
                        this._document.defaultView && (this.beforePrintEventListeners.forEach(e => this._document.defaultView.removeEventListener("beforeprint", e)), this.afterPrintEventListeners.forEach(e => this._document.defaultView.removeEventListener("afterprint", e)))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(xp), C(xr), C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            class eq {
                constructor() {
                    this.printBreakpoints = []
                }
                addPrintBreakpoints(n) {
                    return n.push(J9), n.sort(Wl), n.forEach(e => this.addBreakpoint(e)), this.printBreakpoints
                }
                addBreakpoint(n) {
                    n && void 0 === this.printBreakpoints.find(i => i.mediaQuery === n.mediaQuery) && (this.printBreakpoints = function tq(t) {
                        return t ? .mediaQuery.startsWith(ql) ? ? !1
                    }(n) ? [n, ...this.printBreakpoints] : [...this.printBreakpoints, n])
                }
                clear() {
                    this.printBreakpoints = []
                }
            }
            let Bt = (() => {
                class t {
                    constructor(e, i, r) {
                        this.matchMedia = e, this.breakpoints = i, this.hook = r, this._useFallbacks = !0, this._activatedBreakpoints = [], this.elementMap = new Map, this.elementKeyMap = new WeakMap, this.watcherMap = new WeakMap, this.updateMap = new WeakMap, this.clearMap = new WeakMap, this.subject = new H, this.observeActivations()
                    }
                    get activatedAlias() {
                        return this.activatedBreakpoints[0] ? .alias ? ? ""
                    }
                    set activatedBreakpoints(e) {
                        this._activatedBreakpoints = [...e]
                    }
                    get activatedBreakpoints() {
                        return [...this._activatedBreakpoints]
                    }
                    set useFallbacks(e) {
                        this._useFallbacks = e
                    }
                    onMediaChange(e) {
                        const i = this.findByQuery(e.mediaQuery);
                        if (i) {
                            e = kv(e, i);
                            const r = this.activatedBreakpoints.indexOf(i);
                            e.matches && -1 === r ? (this._activatedBreakpoints.push(i), this._activatedBreakpoints.sort(Wl), this.updateStyles()) : !e.matches && -1 !== r && (this._activatedBreakpoints.splice(r, 1), this._activatedBreakpoints.sort(Wl), this.updateStyles())
                        }
                    }
                    init(e, i, r, s, o = []) {
                        DI(this.updateMap, e, i, r), DI(this.clearMap, e, i, s), this.buildElementKeyMap(e, i), this.watchExtraTriggers(e, i, o)
                    }
                    getValue(e, i, r) {
                        const s = this.elementMap.get(e);
                        if (s) {
                            const o = void 0 !== r ? s.get(r) : this.getActivatedValues(s, i);
                            if (o) return o.get(i)
                        }
                    }
                    hasValue(e, i) {
                        const r = this.elementMap.get(e);
                        if (r) {
                            const s = this.getActivatedValues(r, i);
                            if (s) return void 0 !== s.get(i) || !1
                        }
                        return !1
                    }
                    setValue(e, i, r, s) {
                        let o = this.elementMap.get(e);
                        if (o) {
                            const l = (o.get(s) ? ? new Map).set(i, r);
                            o.set(s, l), this.elementMap.set(e, o)
                        } else o = (new Map).set(s, (new Map).set(i, r)), this.elementMap.set(e, o);
                        const a = this.getValue(e, i);
                        void 0 !== a && this.updateElement(e, i, a)
                    }
                    trackValue(e, i) {
                        return this.subject.asObservable().pipe(Ie(r => r.element === e && r.key === i))
                    }
                    updateStyles() {
                        this.elementMap.forEach((e, i) => {
                            const r = new Set(this.elementKeyMap.get(i));
                            let s = this.getActivatedValues(e);
                            s && s.forEach((o, a) => {
                                this.updateElement(i, a, o), r.delete(a)
                            }), r.forEach(o => {
                                if (s = this.getActivatedValues(e, o), s) {
                                    const a = s.get(o);
                                    this.updateElement(i, o, a)
                                } else this.clearElement(i, o)
                            })
                        })
                    }
                    clearElement(e, i) {
                        const r = this.clearMap.get(e);
                        if (r) {
                            const s = r.get(i);
                            s && (s(), this.subject.next({
                                element: e,
                                key: i,
                                value: ""
                            }))
                        }
                    }
                    updateElement(e, i, r) {
                        const s = this.updateMap.get(e);
                        if (s) {
                            const o = s.get(i);
                            o && (o(r), this.subject.next({
                                element: e,
                                key: i,
                                value: r
                            }))
                        }
                    }
                    releaseElement(e) {
                        const i = this.watcherMap.get(e);
                        i && (i.forEach(s => s.unsubscribe()), this.watcherMap.delete(e));
                        const r = this.elementMap.get(e);
                        r && (r.forEach((s, o) => r.delete(o)), this.elementMap.delete(e))
                    }
                    triggerUpdate(e, i) {
                        const r = this.elementMap.get(e);
                        if (r) {
                            const s = this.getActivatedValues(r, i);
                            s && (i ? this.updateElement(e, i, s.get(i)) : s.forEach((o, a) => this.updateElement(e, a, o)))
                        }
                    }
                    buildElementKeyMap(e, i) {
                        let r = this.elementKeyMap.get(e);
                        r || (r = new Set, this.elementKeyMap.set(e, r)), r.add(i)
                    }
                    watchExtraTriggers(e, i, r) {
                        if (r && r.length) {
                            let s = this.watcherMap.get(e);
                            if (s || (s = new Map, this.watcherMap.set(e, s)), !s.get(i)) {
                                const a = tt(...r).subscribe(() => {
                                    const l = this.getValue(e, i);
                                    this.updateElement(e, i, l)
                                });
                                s.set(i, a)
                            }
                        }
                    }
                    findByQuery(e) {
                        return this.breakpoints.findByQuery(e)
                    }
                    getActivatedValues(e, i) {
                        for (let s = 0; s < this.activatedBreakpoints.length; s++) {
                            const a = e.get(this.activatedBreakpoints[s].alias);
                            if (a && (void 0 === i || a.has(i) && null != a.get(i))) return a
                        }
                        if (!this._useFallbacks) return;
                        const r = e.get("");
                        return void 0 === i || r && r.has(i) ? r : void 0
                    }
                    observeActivations() {
                        const e = this.breakpoints.items.map(i => i.mediaQuery);
                        this.hook.registerBeforeAfterPrintHooks(this), this.matchMedia.observe(this.hook.withPrintQuery(e)).pipe(mt(this.hook.interceptEvents(this)), Ie(this.hook.blockPropagation())).subscribe(this.onMediaChange.bind(this))
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Cp), C(xp), C(xI))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function DI(t, n, e, i) {
                if (void 0 !== i) {
                    const r = t.get(n) ? ? new Map;
                    r.set(e, i), t.set(n, r)
                }
            }
            let zt = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this.elementRef = e, this.styleBuilder = i, this.styler = r, this.marshal = s, this.DIRECTIVE_KEY = "", this.inputs = [], this.mru = {}, this.destroySubject = new H, this.styleCache = new Map
                    }
                    get parentElement() {
                        return this.elementRef.nativeElement.parentElement
                    }
                    get nativeElement() {
                        return this.elementRef.nativeElement
                    }
                    get activatedValue() {
                        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY)
                    }
                    set activatedValue(e) {
                        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, e, this.marshal.activatedAlias)
                    }
                    ngOnChanges(e) {
                        Object.keys(e).forEach(i => {
                            if (-1 !== this.inputs.indexOf(i)) {
                                const r = i.split(".").slice(1).join(".");
                                this.setValue(e[i].currentValue, r)
                            }
                        })
                    }
                    ngOnDestroy() {
                        this.destroySubject.next(), this.destroySubject.complete(), this.marshal.releaseElement(this.nativeElement)
                    }
                    init(e = []) {
                        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), e)
                    }
                    addStyles(e, i) {
                        const r = this.styleBuilder,
                            s = r.shouldCache;
                        let o = this.styleCache.get(e);
                        (!o || !s) && (o = r.buildStyles(e, i), s && this.styleCache.set(e, o)), this.mru = { ...o
                        }, this.applyStyleToElement(o), r.sideEffect(e, o, i)
                    }
                    clearStyles() {
                        Object.keys(this.mru).forEach(e => {
                            this.mru[e] = ""
                        }), this.applyStyleToElement(this.mru), this.mru = {}, this.currentValue = void 0
                    }
                    triggerUpdate() {
                        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY)
                    }
                    getFlexFlowDirection(e, i = !1) {
                        if (e) {
                            const [r, s] = this.styler.getFlowDirection(e);
                            if (!s && i) {
                                const o = hI(r);
                                this.styler.applyStyleToElements(o, [e])
                            }
                            return r.trim()
                        }
                        return "row"
                    }
                    hasWrap(e) {
                        return this.styler.hasWrap(e)
                    }
                    applyStyleToElement(e, i, r = this.nativeElement) {
                        this.styler.applyStyleToElement(r, e, i)
                    }
                    setValue(e, i) {
                        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, e, i)
                    }
                    updateWithValue(e) {
                        this.currentValue !== e && (this.addStyles(e), this.currentValue = e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(Yt), u(Ot), u(Bt))
                }, t.\u0275dir = M({
                    type: t,
                    features: [ze]
                }), t
            })();
            EventTarget;
            let Av = (() => {
                class t {
                    constructor(e, i, r) {
                        this.breakpoints = e, this.matchMedia = i, this.hook = r, this.filterOverlaps = !1, this.destroyed$ = new H, this._media$ = this.watchActivations()
                    }
                    ngOnDestroy() {
                        this.destroyed$.next(), this.destroyed$.complete()
                    }
                    asObservable() {
                        return this._media$
                    }
                    isActive(e) {
                        return function oq(t) {
                            return t.flatMap(n => n.split(",")).map(n => n.trim())
                        }(function rq(t) {
                            return Array.isArray(t) ? t : [t]
                        }(e)).some(r => {
                            const s = function sq(t, n) {
                                return (n.findByAlias(t) ? ? n.findByQuery(t)) ? .mediaQuery ? ? null
                            }(r, this.breakpoints);
                            return null !== s && this.matchMedia.isActive(s)
                        })
                    }
                    watchActivations() {
                        const e = this.breakpoints.items.map(i => i.mediaQuery);
                        return this.buildObservable(e)
                    }
                    buildObservable(e) {
                        return this.matchMedia.observe(this.hook.withPrintQuery(e)).pipe(Ie(o => o.matches), Rl(0, jf), vt(o => z(this.findAllActivations())), Z(o => this.filterOverlaps ? o.filter(a => this.breakpoints.findByQuery(a.mediaQuery) ? .overlapping ? ? !0) : o), Ie(o => o.filter(l => l.mediaQuery.length > 0).length > 0), Js((o, a) => {
                            if (o.length !== a.length) return !1;
                            const l = o.map(h => h.mediaQuery),
                                c = new Set(a.map(h => h.mediaQuery));
                            return 0 === new Set(l.filter(h => !c.has(h))).size
                        }), le(this.destroyed$))
                    }
                    findAllActivations() {
                        return this.matchMedia.activations.map(r => new uo(!0, r)).map(r => this.hook.isPrintEvent(r) ? this.hook.updateEvent(r) : r).map(r => kv(r, this.breakpoints.findByQuery(r.mediaQuery))).sort(Wl)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(xp), C(Cp), C(xI))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function MI(t, n = "1", e = "1") {
                let i = [n, e, t],
                    r = t.indexOf("calc");
                if (r > 0) {
                    i[2] = SI(t.substring(r).trim());
                    let s = t.substr(0, r).trim().split(" ");
                    2 == s.length && (i[0] = s[0], i[1] = s[1])
                } else if (0 == r) i[2] = SI(t.trim());
                else {
                    let s = t.split(" ");
                    i = 3 === s.length ? s : [n, e, t]
                }
                return i
            }

            function SI(t) {
                return t.replace(/[\s]/g, "").replace(/[\/\*\+\-]/g, " $& ")
            }

            function Dp(t, n) {
                if (void 0 === n) return t;
                const e = i => {
                    const r = +i.slice(0, -"x".length);
                    return t.endsWith("x") && !isNaN(r) ? `${r*n.value}${n.unit}` : t
                };
                return t.includes(" ") ? t.split(" ").map(e).join(" ") : e(t)
            }
            let Ei = (() => {
                    class t {
                        constructor(e) {
                            this.authService = e
                        }
                        isAllowed() {
                            return !!(this.authService.isLawEnforcement() || this.authService.isBoss() || this.authService.isAmbulanceManagement())
                        }
                        canActivate(e, i) {
                            return this.isAllowed()
                        }
                        canActivateChild(e, i) {
                            return this.isAllowed()
                        }
                        canLoad(e, i) {
                            return this.isAllowed()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Bn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                da = (() => {
                    class t {
                        constructor(e) {
                            this.authService = e
                        }
                        isAllowed() {
                            return !(!this.authService.isLawEnforcement() && !this.authService.isBoss())
                        }
                        canActivate(e, i) {
                            return this.isAllowed()
                        }
                        canActivateChild(e, i) {
                            return this.isAllowed()
                        }
                        canLoad(e, i) {
                            return this.isAllowed()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Bn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Gr = (() => {
                    class t {
                        constructor(e) {
                            this.authService = e
                        }
                        canActivate(e, i) {
                            return this.authService.canManageUsers()
                        }
                        canActivateChild(e, i) {
                            return this.authService.canManageUsers()
                        }
                        canLoad(e, i) {
                            return this.authService.canManageUsers()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Bn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                AI = (() => {
                    class t {
                        constructor(e, i) {
                            this.router = e, this.document = i
                        }
                        get window() {
                            return this.document.defaultView
                        }
                        external(e) {
                            return /^http(?:s)?:\/{2}\S+$/.test(e)
                        }
                        redirect(e, i = "_blank") {
                            if (!this.window) throw new Error("Window is null!");
                            return new Promise((r, s) => {
                                try {
                                    r(!!this.window ? .open(e, i))
                                } catch (o) {
                                    s(o)
                                }
                            })
                        }
                        navigate(e) {
                            return this.external(e) ? this.redirect(e) : this.router.navigateByUrl(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(gt), C(pe))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            const aq = ["*"];
            let Mp;

            function Kd(t) {
                return function lq() {
                    if (void 0 === Mp && (Mp = null, typeof window < "u")) {
                        const t = window;
                        void 0 !== t.trustedTypes && (Mp = t.trustedTypes.createPolicy("angular#components", {
                            createHTML: n => n
                        }))
                    }
                    return Mp
                }() ? .createHTML(t) || t
            }

            function EI(t) {
                return Error(`Unable to find icon with the name "${t}"`)
            }

            function TI(t) {
                return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${t}".`)
            }

            function II(t) {
                return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${t}".`)
            }
            class ua {
                constructor(n, e, i) {
                    this.url = n, this.svgText = e, this.options = i
                }
            }
            let Sp = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._httpClient = e, this._sanitizer = i, this._errorHandler = s, this._svgIconConfigs = new Map, this._iconSetConfigs = new Map, this._cachedIconsByUrl = new Map, this._inProgressUrlFetches = new Map, this._fontCssClassesByAlias = new Map, this._resolvers = [], this._defaultFontSetClass = ["material-icons", "mat-ligature-font"], this._document = r
                    }
                    addSvgIcon(e, i, r) {
                        return this.addSvgIconInNamespace("", e, i, r)
                    }
                    addSvgIconLiteral(e, i, r) {
                        return this.addSvgIconLiteralInNamespace("", e, i, r)
                    }
                    addSvgIconInNamespace(e, i, r, s) {
                        return this._addSvgIconConfig(e, i, new ua(r, null, s))
                    }
                    addSvgIconResolver(e) {
                        return this._resolvers.push(e), this
                    }
                    addSvgIconLiteralInNamespace(e, i, r, s) {
                        const o = this._sanitizer.sanitize(it.HTML, r);
                        if (!o) throw II(r);
                        const a = Kd(o);
                        return this._addSvgIconConfig(e, i, new ua("", a, s))
                    }
                    addSvgIconSet(e, i) {
                        return this.addSvgIconSetInNamespace("", e, i)
                    }
                    addSvgIconSetLiteral(e, i) {
                        return this.addSvgIconSetLiteralInNamespace("", e, i)
                    }
                    addSvgIconSetInNamespace(e, i, r) {
                        return this._addSvgIconSetConfig(e, new ua(i, null, r))
                    }
                    addSvgIconSetLiteralInNamespace(e, i, r) {
                        const s = this._sanitizer.sanitize(it.HTML, i);
                        if (!s) throw II(i);
                        const o = Kd(s);
                        return this._addSvgIconSetConfig(e, new ua("", o, r))
                    }
                    registerFontClassAlias(e, i = e) {
                        return this._fontCssClassesByAlias.set(e, i), this
                    }
                    classNameForFontAlias(e) {
                        return this._fontCssClassesByAlias.get(e) || e
                    }
                    setDefaultFontSetClass(...e) {
                        return this._defaultFontSetClass = e, this
                    }
                    getDefaultFontSetClass() {
                        return this._defaultFontSetClass
                    }
                    getSvgIconFromUrl(e) {
                        const i = this._sanitizer.sanitize(it.RESOURCE_URL, e);
                        if (!i) throw TI(e);
                        const r = this._cachedIconsByUrl.get(i);
                        return r ? z(kp(r)) : this._loadSvgIconFromConfig(new ua(e, null)).pipe(mt(s => this._cachedIconsByUrl.set(i, s)), Z(s => kp(s)))
                    }
                    getNamedSvgIcon(e, i = "") {
                        const r = RI(i, e);
                        let s = this._svgIconConfigs.get(r);
                        if (s) return this._getSvgFromConfig(s);
                        if (s = this._getIconConfigFromResolvers(i, e), s) return this._svgIconConfigs.set(r, s), this._getSvgFromConfig(s);
                        const o = this._iconSetConfigs.get(i);
                        return o ? this._getSvgFromIconSetConfigs(e, o) : Ln(EI(r))
                    }
                    ngOnDestroy() {
                        this._resolvers = [], this._svgIconConfigs.clear(), this._iconSetConfigs.clear(), this._cachedIconsByUrl.clear()
                    }
                    _getSvgFromConfig(e) {
                        return e.svgText ? z(kp(this._svgElementFromConfig(e))) : this._loadSvgIconFromConfig(e).pipe(Z(i => kp(i)))
                    }
                    _getSvgFromIconSetConfigs(e, i) {
                        const r = this._extractIconWithNameFromAnySet(e, i);
                        return r ? z(r) : P1(i.filter(o => !o.svgText).map(o => this._loadSvgIconSetFromConfig(o).pipe(oi(a => {
                            const c = `Loading icon set URL: ${this._sanitizer.sanitize(it.RESOURCE_URL,o.url)} failed: ${a.message}`;
                            return this._errorHandler.handleError(new Error(c)), z(null)
                        })))).pipe(Z(() => {
                            const o = this._extractIconWithNameFromAnySet(e, i);
                            if (!o) throw EI(e);
                            return o
                        }))
                    }
                    _extractIconWithNameFromAnySet(e, i) {
                        for (let r = i.length - 1; r >= 0; r--) {
                            const s = i[r];
                            if (s.svgText && s.svgText.toString().indexOf(e) > -1) {
                                const o = this._svgElementFromConfig(s),
                                    a = this._extractSvgIconFromSet(o, e, s.options);
                                if (a) return a
                            }
                        }
                        return null
                    }
                    _loadSvgIconFromConfig(e) {
                        return this._fetchIcon(e).pipe(mt(i => e.svgText = i), Z(() => this._svgElementFromConfig(e)))
                    }
                    _loadSvgIconSetFromConfig(e) {
                        return e.svgText ? z(null) : this._fetchIcon(e).pipe(mt(i => e.svgText = i))
                    }
                    _extractSvgIconFromSet(e, i, r) {
                        const s = e.querySelector(`[id="${i}"]`);
                        if (!s) return null;
                        const o = s.cloneNode(!0);
                        if (o.removeAttribute("id"), "svg" === o.nodeName.toLowerCase()) return this._setSvgAttributes(o, r);
                        if ("symbol" === o.nodeName.toLowerCase()) return this._setSvgAttributes(this._toSvgElement(o), r);
                        const a = this._svgElementFromString(Kd("<svg></svg>"));
                        return a.appendChild(o), this._setSvgAttributes(a, r)
                    }
                    _svgElementFromString(e) {
                        const i = this._document.createElement("DIV");
                        i.innerHTML = e;
                        const r = i.querySelector("svg");
                        if (!r) throw Error("<svg> tag not found");
                        return r
                    }
                    _toSvgElement(e) {
                        const i = this._svgElementFromString(Kd("<svg></svg>")),
                            r = e.attributes;
                        for (let s = 0; s < r.length; s++) {
                            const {
                                name: o,
                                value: a
                            } = r[s];
                            "id" !== o && i.setAttribute(o, a)
                        }
                        for (let s = 0; s < e.childNodes.length; s++) e.childNodes[s].nodeType === this._document.ELEMENT_NODE && i.appendChild(e.childNodes[s].cloneNode(!0));
                        return i
                    }
                    _setSvgAttributes(e, i) {
                        return e.setAttribute("fit", ""), e.setAttribute("height", "100%"), e.setAttribute("width", "100%"), e.setAttribute("preserveAspectRatio", "xMidYMid meet"), e.setAttribute("focusable", "false"), i && i.viewBox && e.setAttribute("viewBox", i.viewBox), e
                    }
                    _fetchIcon(e) {
                        const {
                            url: i,
                            options: r
                        } = e, s = r ? .withCredentials ? ? !1;
                        if (!this._httpClient) throw function cq() {
                            return Error("Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.")
                        }();
                        if (null == i) throw Error(`Cannot fetch icon from URL "${i}".`);
                        const o = this._sanitizer.sanitize(it.RESOURCE_URL, i);
                        if (!o) throw TI(i);
                        const a = this._inProgressUrlFetches.get(o);
                        if (a) return a;
                        const l = this._httpClient.get(o, {
                            responseType: "text",
                            withCredentials: s
                        }).pipe(Z(c => Kd(c)), yl(() => this._inProgressUrlFetches.delete(o)), Pm());
                        return this._inProgressUrlFetches.set(o, l), l
                    }
                    _addSvgIconConfig(e, i, r) {
                        return this._svgIconConfigs.set(RI(e, i), r), this
                    }
                    _addSvgIconSetConfig(e, i) {
                        const r = this._iconSetConfigs.get(e);
                        return r ? r.push(i) : this._iconSetConfigs.set(e, [i]), this
                    }
                    _svgElementFromConfig(e) {
                        if (!e.svgElement) {
                            const i = this._svgElementFromString(e.svgText);
                            this._setSvgAttributes(i, e.options), e.svgElement = i
                        }
                        return e.svgElement
                    }
                    _getIconConfigFromResolvers(e, i) {
                        for (let r = 0; r < this._resolvers.length; r++) {
                            const s = this._resolvers[r](i, e);
                            if (s) return uq(s) ? new ua(s.url, null, s.options) : new ua(s, null)
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(wr, 8), C(qs), C(pe, 8), C(ss))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function kp(t) {
                return t.cloneNode(!0)
            }

            function RI(t, n) {
                return t + ":" + n
            }

            function uq(t) {
                return !(!t.url || !t.options)
            }
            const hq = Zi(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                }),
                fq = new R("MAT_ICON_DEFAULT_OPTIONS"),
                pq = new R("mat-icon-location", {
                    providedIn: "root",
                    factory: function mq() {
                        const t = st(pe),
                            n = t ? t.location : null;
                        return {
                            getPathname: () => n ? n.pathname + n.search : ""
                        }
                    }
                }),
                FI = ["clip-path", "color-profile", "src", "cursor", "fill", "filter", "marker", "marker-start", "marker-mid", "marker-end", "mask", "stroke"],
                gq = FI.map(t => `[${t}]`).join(", "),
                _q = /^url\(['"]?#(.*?)['"]?\)$/;
            let Yl = (() => {
                    class t extends hq {
                        constructor(e, i, r, s, o, a) {
                            super(e), this._iconRegistry = i, this._location = s, this._errorHandler = o, this._inline = !1, this._previousFontSetClass = [], this._currentIconFetch = Re.EMPTY, a && (a.color && (this.color = this.defaultColor = a.color), a.fontSet && (this.fontSet = a.fontSet)), r || e.nativeElement.setAttribute("aria-hidden", "true")
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = G(e)
                        }
                        get svgIcon() {
                            return this._svgIcon
                        }
                        set svgIcon(e) {
                            e !== this._svgIcon && (e ? this._updateSvgIcon(e) : this._svgIcon && this._clearSvgElement(), this._svgIcon = e)
                        }
                        get fontSet() {
                            return this._fontSet
                        }
                        set fontSet(e) {
                            const i = this._cleanupFontValue(e);
                            i !== this._fontSet && (this._fontSet = i, this._updateFontIconClasses())
                        }
                        get fontIcon() {
                            return this._fontIcon
                        }
                        set fontIcon(e) {
                            const i = this._cleanupFontValue(e);
                            i !== this._fontIcon && (this._fontIcon = i, this._updateFontIconClasses())
                        }
                        _splitIconName(e) {
                            if (!e) return ["", ""];
                            const i = e.split(":");
                            switch (i.length) {
                                case 1:
                                    return ["", i[0]];
                                case 2:
                                    return i;
                                default:
                                    throw Error(`Invalid icon name: "${e}"`)
                            }
                        }
                        ngOnInit() {
                            this._updateFontIconClasses()
                        }
                        ngAfterViewChecked() {
                            const e = this._elementsWithExternalReferences;
                            if (e && e.size) {
                                const i = this._location.getPathname();
                                i !== this._previousPath && (this._previousPath = i, this._prependPathToReferences(i))
                            }
                        }
                        ngOnDestroy() {
                            this._currentIconFetch.unsubscribe(), this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear()
                        }
                        _usingFontIcon() {
                            return !this.svgIcon
                        }
                        _setSvgElement(e) {
                            this._clearSvgElement();
                            const i = this._location.getPathname();
                            this._previousPath = i, this._cacheChildrenWithExternalReferences(e), this._prependPathToReferences(i), this._elementRef.nativeElement.appendChild(e)
                        }
                        _clearSvgElement() {
                            const e = this._elementRef.nativeElement;
                            let i = e.childNodes.length;
                            for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); i--;) {
                                const r = e.childNodes[i];
                                (1 !== r.nodeType || "svg" === r.nodeName.toLowerCase()) && r.remove()
                            }
                        }
                        _updateFontIconClasses() {
                            if (!this._usingFontIcon()) return;
                            const e = this._elementRef.nativeElement,
                                i = (this.fontSet ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/) : this._iconRegistry.getDefaultFontSetClass()).filter(r => r.length > 0);
                            this._previousFontSetClass.forEach(r => e.classList.remove(r)), i.forEach(r => e.classList.add(r)), this._previousFontSetClass = i, this.fontIcon !== this._previousFontIconClass && !i.includes("mat-ligature-font") && (this._previousFontIconClass && e.classList.remove(this._previousFontIconClass), this.fontIcon && e.classList.add(this.fontIcon), this._previousFontIconClass = this.fontIcon)
                        }
                        _cleanupFontValue(e) {
                            return "string" == typeof e ? e.trim().split(" ")[0] : e
                        }
                        _prependPathToReferences(e) {
                            const i = this._elementsWithExternalReferences;
                            i && i.forEach((r, s) => {
                                r.forEach(o => {
                                    s.setAttribute(o.name, `url('${e}#${o.value}')`)
                                })
                            })
                        }
                        _cacheChildrenWithExternalReferences(e) {
                            const i = e.querySelectorAll(gq),
                                r = this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map;
                            for (let s = 0; s < i.length; s++) FI.forEach(o => {
                                const a = i[s],
                                    l = a.getAttribute(o),
                                    c = l ? l.match(_q) : null;
                                if (c) {
                                    let d = r.get(a);
                                    d || (d = [], r.set(a, d)), d.push({
                                        name: o,
                                        value: c[1]
                                    })
                                }
                            })
                        }
                        _updateSvgIcon(e) {
                            if (this._svgNamespace = null, this._svgName = null, this._currentIconFetch.unsubscribe(), e) {
                                const [i, r] = this._splitIconName(e);
                                i && (this._svgNamespace = i), r && (this._svgName = r), this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(r, i).pipe(Fe(1)).subscribe(s => this._setSvgElement(s), s => {
                                    this._errorHandler.handleError(new Error(`Error retrieving icon ${i}:${r}! ${s.message}`))
                                })
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Sp), Qt("aria-hidden"), u(pq), u(ss), u(fq, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-icon"]
                        ],
                        hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
                        hostVars: 8,
                        hostBindings: function(e, i) {
                            2 & e && (q("data-mat-icon-type", i._usingFontIcon() ? "font" : "svg")("data-mat-icon-name", i._svgName || i.fontIcon)("data-mat-icon-namespace", i._svgNamespace || i.fontSet)("fontIcon", i._usingFontIcon() ? i.fontIcon : null), re("mat-icon-inline", i.inline)("mat-icon-no-color", "primary" !== i.color && "accent" !== i.color && "warn" !== i.color))
                        },
                        inputs: {
                            color: "color",
                            inline: "inline",
                            svgIcon: "svgIcon",
                            fontSet: "fontSet",
                            fontIcon: "fontIcon"
                        },
                        exportAs: ["matIcon"],
                        features: [A],
                        ngContentSelectors: aq,
                        decls: 1,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Xe(), me(0))
                        },
                        styles: [".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Ql = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, de]
                    }), t
                })();
            const yq = ["tooltip"],
                OI = "tooltip-panel",
                PI = Zs({
                    passive: !0
                }),
                LI = new R("mat-tooltip-scroll-strategy"),
                Cq = {
                    provide: LI,
                    deps: [vn],
                    useFactory: function wq(t) {
                        return () => t.scrollStrategies.reposition({
                            scrollThrottle: 20
                        })
                    }
                },
                xq = new R("mat-tooltip-default-options", {
                    providedIn: "root",
                    factory: function Dq() {
                        return {
                            showDelay: 0,
                            hideDelay: 0,
                            touchendHideDelay: 1500
                        }
                    }
                });
            let Mq = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l, c, d, h, m, _) {
                            this._overlay = e, this._elementRef = i, this._scrollDispatcher = r, this._viewContainerRef = s, this._ngZone = o, this._platform = a, this._ariaDescriber = l, this._focusMonitor = c, this._dir = h, this._defaultOptions = m, this._position = "below", this._disabled = !1, this._viewInitialized = !1, this._pointerExitEventsInitialized = !1, this._viewportMargin = 8, this._cssClassPrefix = "mat", this._showDelay = this._defaultOptions.showDelay, this._hideDelay = this._defaultOptions.hideDelay, this.touchGestures = "auto", this._message = "", this._passiveListeners = [], this._destroyed = new H, this._scrollStrategy = d, this._document = _, m && (m.position && (this.position = m.position), m.touchGestures && (this.touchGestures = m.touchGestures)), h.change.pipe(le(this._destroyed)).subscribe(() => {
                                this._overlayRef && this._updatePosition(this._overlayRef)
                            })
                        }
                        get position() {
                            return this._position
                        }
                        set position(e) {
                            e !== this._position && (this._position = e, this._overlayRef && (this._updatePosition(this._overlayRef), this._tooltipInstance ? .show(0), this._overlayRef.updatePosition()))
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e), this._disabled ? this.hide(0) : this._setupPointerEnterEventsIfNeeded()
                        }
                        get showDelay() {
                            return this._showDelay
                        }
                        set showDelay(e) {
                            this._showDelay = ht(e)
                        }
                        get hideDelay() {
                            return this._hideDelay
                        }
                        set hideDelay(e) {
                            this._hideDelay = ht(e), this._tooltipInstance && (this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay)
                        }
                        get message() {
                            return this._message
                        }
                        set message(e) {
                            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, "tooltip"), this._message = null != e ? String(e).trim() : "", !this._message && this._isTooltipVisible() ? this.hide(0) : (this._setupPointerEnterEventsIfNeeded(), this._updateTooltipMessage(), this._ngZone.runOutsideAngular(() => {
                                Promise.resolve().then(() => {
                                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, "tooltip")
                                })
                            }))
                        }
                        get tooltipClass() {
                            return this._tooltipClass
                        }
                        set tooltipClass(e) {
                            this._tooltipClass = e, this._tooltipInstance && this._setTooltipClass(this._tooltipClass)
                        }
                        ngAfterViewInit() {
                            this._viewInitialized = !0, this._setupPointerEnterEventsIfNeeded(), this._focusMonitor.monitor(this._elementRef).pipe(le(this._destroyed)).subscribe(e => {
                                e ? "keyboard" === e && this._ngZone.run(() => this.show()) : this._ngZone.run(() => this.hide(0))
                            })
                        }
                        ngOnDestroy() {
                            const e = this._elementRef.nativeElement;
                            clearTimeout(this._touchstartTimeout), this._overlayRef && (this._overlayRef.dispose(), this._tooltipInstance = null), this._passiveListeners.forEach(([i, r]) => {
                                e.removeEventListener(i, r, PI)
                            }), this._passiveListeners.length = 0, this._destroyed.next(), this._destroyed.complete(), this._ariaDescriber.removeDescription(e, this.message, "tooltip"), this._focusMonitor.stopMonitoring(e)
                        }
                        show(e = this.showDelay) {
                            if (this.disabled || !this.message || this._isTooltipVisible()) return void this._tooltipInstance ? ._cancelPendingAnimations();
                            const i = this._createOverlay();
                            this._detach(), this._portal = this._portal || new eo(this._tooltipComponent, this._viewContainerRef);
                            const r = this._tooltipInstance = i.attach(this._portal).instance;
                            r._triggerElement = this._elementRef.nativeElement, r._mouseLeaveHideDelay = this._hideDelay, r.afterHidden().pipe(le(this._destroyed)).subscribe(() => this._detach()), this._setTooltipClass(this._tooltipClass), this._updateTooltipMessage(), r.show(e)
                        }
                        hide(e = this.hideDelay) {
                            const i = this._tooltipInstance;
                            i && (i.isVisible() ? i.hide(e) : (i._cancelPendingAnimations(), this._detach()))
                        }
                        toggle() {
                            this._isTooltipVisible() ? this.hide() : this.show()
                        }
                        _isTooltipVisible() {
                            return !!this._tooltipInstance && this._tooltipInstance.isVisible()
                        }
                        _createOverlay() {
                            if (this._overlayRef) return this._overlayRef;
                            const e = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),
                                i = this._overlay.position().flexibleConnectedTo(this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(!1).withViewportMargin(this._viewportMargin).withScrollableContainers(e);
                            return i.positionChanges.pipe(le(this._destroyed)).subscribe(r => {
                                this._updateCurrentPositionClass(r.connectionPair), this._tooltipInstance && r.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible() && this._ngZone.run(() => this.hide(0))
                            }), this._overlayRef = this._overlay.create({
                                direction: this._dir,
                                positionStrategy: i,
                                panelClass: `${this._cssClassPrefix}-${OI}`,
                                scrollStrategy: this._scrollStrategy()
                            }), this._updatePosition(this._overlayRef), this._overlayRef.detachments().pipe(le(this._destroyed)).subscribe(() => this._detach()), this._overlayRef.outsidePointerEvents().pipe(le(this._destroyed)).subscribe(() => this._tooltipInstance ? ._handleBodyInteraction()), this._overlayRef.keydownEvents().pipe(le(this._destroyed)).subscribe(r => {
                                this._isTooltipVisible() && 27 === r.keyCode && !$t(r) && (r.preventDefault(), r.stopPropagation(), this._ngZone.run(() => this.hide(0)))
                            }), this._defaultOptions ? .disableTooltipInteractivity && this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`), this._overlayRef
                        }
                        _detach() {
                            this._overlayRef && this._overlayRef.hasAttached() && this._overlayRef.detach(), this._tooltipInstance = null
                        }
                        _updatePosition(e) {
                            const i = e.getConfig().positionStrategy,
                                r = this._getOrigin(),
                                s = this._getOverlayPosition();
                            i.withPositions([this._addOffset({ ...r.main,
                                ...s.main
                            }), this._addOffset({ ...r.fallback,
                                ...s.fallback
                            })])
                        }
                        _addOffset(e) {
                            return e
                        }
                        _getOrigin() {
                            const e = !this._dir || "ltr" == this._dir.value,
                                i = this.position;
                            let r;
                            "above" == i || "below" == i ? r = {
                                originX: "center",
                                originY: "above" == i ? "top" : "bottom"
                            } : "before" == i || "left" == i && e || "right" == i && !e ? r = {
                                originX: "start",
                                originY: "center"
                            } : ("after" == i || "right" == i && e || "left" == i && !e) && (r = {
                                originX: "end",
                                originY: "center"
                            });
                            const {
                                x: s,
                                y: o
                            } = this._invertPosition(r.originX, r.originY);
                            return {
                                main: r,
                                fallback: {
                                    originX: s,
                                    originY: o
                                }
                            }
                        }
                        _getOverlayPosition() {
                            const e = !this._dir || "ltr" == this._dir.value,
                                i = this.position;
                            let r;
                            "above" == i ? r = {
                                overlayX: "center",
                                overlayY: "bottom"
                            } : "below" == i ? r = {
                                overlayX: "center",
                                overlayY: "top"
                            } : "before" == i || "left" == i && e || "right" == i && !e ? r = {
                                overlayX: "end",
                                overlayY: "center"
                            } : ("after" == i || "right" == i && e || "left" == i && !e) && (r = {
                                overlayX: "start",
                                overlayY: "center"
                            });
                            const {
                                x: s,
                                y: o
                            } = this._invertPosition(r.overlayX, r.overlayY);
                            return {
                                main: r,
                                fallback: {
                                    overlayX: s,
                                    overlayY: o
                                }
                            }
                        }
                        _updateTooltipMessage() {
                            this._tooltipInstance && (this._tooltipInstance.message = this.message, this._tooltipInstance._markForCheck(), this._ngZone.onMicrotaskEmpty.pipe(Fe(1), le(this._destroyed)).subscribe(() => {
                                this._tooltipInstance && this._overlayRef.updatePosition()
                            }))
                        }
                        _setTooltipClass(e) {
                            this._tooltipInstance && (this._tooltipInstance.tooltipClass = e, this._tooltipInstance._markForCheck())
                        }
                        _invertPosition(e, i) {
                            return "above" === this.position || "below" === this.position ? "top" === i ? i = "bottom" : "bottom" === i && (i = "top") : "end" === e ? e = "start" : "start" === e && (e = "end"), {
                                x: e,
                                y: i
                            }
                        }
                        _updateCurrentPositionClass(e) {
                            const {
                                overlayY: i,
                                originX: r,
                                originY: s
                            } = e;
                            let o;
                            if (o = "center" === i ? this._dir && "rtl" === this._dir.value ? "end" === r ? "left" : "right" : "start" === r ? "left" : "right" : "bottom" === i && "top" === s ? "above" : "below", o !== this._currentPosition) {
                                const a = this._overlayRef;
                                if (a) {
                                    const l = `${this._cssClassPrefix}-${OI}-`;
                                    a.removePanelClass(l + this._currentPosition), a.addPanelClass(l + o)
                                }
                                this._currentPosition = o
                            }
                        }
                        _setupPointerEnterEventsIfNeeded() {
                            this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length || (this._platformSupportsMouseEvents() ? this._passiveListeners.push(["mouseenter", () => {
                                this._setupPointerExitEventsIfNeeded(), this.show()
                            }]) : "off" !== this.touchGestures && (this._disableNativeGesturesIfNecessary(), this._passiveListeners.push(["touchstart", () => {
                                this._setupPointerExitEventsIfNeeded(), clearTimeout(this._touchstartTimeout), this._touchstartTimeout = setTimeout(() => this.show(), 500)
                            }])), this._addListeners(this._passiveListeners))
                        }
                        _setupPointerExitEventsIfNeeded() {
                            if (this._pointerExitEventsInitialized) return;
                            this._pointerExitEventsInitialized = !0;
                            const e = [];
                            if (this._platformSupportsMouseEvents()) e.push(["mouseleave", i => {
                                const r = i.relatedTarget;
                                (!r || !this._overlayRef ? .overlayElement.contains(r)) && this.hide()
                            }], ["wheel", i => this._wheelListener(i)]);
                            else if ("off" !== this.touchGestures) {
                                this._disableNativeGesturesIfNecessary();
                                const i = () => {
                                    clearTimeout(this._touchstartTimeout), this.hide(this._defaultOptions.touchendHideDelay)
                                };
                                e.push(["touchend", i], ["touchcancel", i])
                            }
                            this._addListeners(e), this._passiveListeners.push(...e)
                        }
                        _addListeners(e) {
                            e.forEach(([i, r]) => {
                                this._elementRef.nativeElement.addEventListener(i, r, PI)
                            })
                        }
                        _platformSupportsMouseEvents() {
                            return !this._platform.IOS && !this._platform.ANDROID
                        }
                        _wheelListener(e) {
                            if (this._isTooltipVisible()) {
                                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                                    r = this._elementRef.nativeElement;
                                i !== r && !r.contains(i) && this.hide()
                            }
                        }
                        _disableNativeGesturesIfNecessary() {
                            const e = this.touchGestures;
                            if ("off" !== e) {
                                const i = this._elementRef.nativeElement,
                                    r = i.style;
                                ("on" === e || "INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName) && (r.userSelect = r.msUserSelect = r.webkitUserSelect = r.MozUserSelect = "none"), ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"), r.touchAction = "none", r.webkitTapHighlightColor = "transparent"
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            position: ["matTooltipPosition", "position"],
                            disabled: ["matTooltipDisabled", "disabled"],
                            showDelay: ["matTooltipShowDelay", "showDelay"],
                            hideDelay: ["matTooltipHideDelay", "hideDelay"],
                            touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                            message: ["matTooltip", "message"],
                            tooltipClass: ["matTooltipClass", "tooltipClass"]
                        }
                    }), t
                })(),
                Ev = (() => {
                    class t extends Mq {
                        constructor(e, i, r, s, o, a, l, c, d, h, m, _) {
                            super(e, i, r, s, o, a, l, c, d, h, m, _), this._tooltipComponent = kq
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(vn), u(N), u(jE), u(Je), u(ce), u(Ft), u(TE), u(dn), u(LI), u(Mt, 8), u(xq, 8), u(pe))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matTooltip", ""]
                        ],
                        hostAttrs: [1, "mat-tooltip-trigger"],
                        exportAs: ["matTooltip"],
                        features: [A]
                    }), t
                })(),
                Sq = (() => {
                    class t {
                        constructor(e, i) {
                            this._changeDetectorRef = e, this._closeOnInteraction = !1, this._isVisible = !1, this._onHide = new H, this._animationsDisabled = "NoopAnimations" === i
                        }
                        show(e) {
                            clearTimeout(this._hideTimeoutId), this._showTimeoutId = setTimeout(() => {
                                this._toggleVisibility(!0), this._showTimeoutId = void 0
                            }, e)
                        }
                        hide(e) {
                            clearTimeout(this._showTimeoutId), this._hideTimeoutId = setTimeout(() => {
                                this._toggleVisibility(!1), this._hideTimeoutId = void 0
                            }, e)
                        }
                        afterHidden() {
                            return this._onHide
                        }
                        isVisible() {
                            return this._isVisible
                        }
                        ngOnDestroy() {
                            this._cancelPendingAnimations(), this._onHide.complete(), this._triggerElement = null
                        }
                        _handleBodyInteraction() {
                            this._closeOnInteraction && this.hide(0)
                        }
                        _markForCheck() {
                            this._changeDetectorRef.markForCheck()
                        }
                        _handleMouseLeave({
                            relatedTarget: e
                        }) {
                            (!e || !this._triggerElement.contains(e)) && (this.isVisible() ? this.hide(this._mouseLeaveHideDelay) : this._finalizeAnimation(!1))
                        }
                        _onShow() {}
                        _handleAnimationEnd({
                            animationName: e
                        }) {
                            (e === this._showAnimation || e === this._hideAnimation) && this._finalizeAnimation(e === this._showAnimation)
                        }
                        _cancelPendingAnimations() {
                            clearTimeout(this._showTimeoutId), clearTimeout(this._hideTimeoutId), this._showTimeoutId = this._hideTimeoutId = void 0
                        }
                        _finalizeAnimation(e) {
                            e ? this._closeOnInteraction = !0 : this.isVisible() || this._onHide.next()
                        }
                        _toggleVisibility(e) {
                            const i = this._tooltip.nativeElement,
                                r = this._showAnimation,
                                s = this._hideAnimation;
                            if (i.classList.remove(e ? s : r), i.classList.add(e ? r : s), this._isVisible = e, e && !this._animationsDisabled && "function" == typeof getComputedStyle) {
                                const o = getComputedStyle(i);
                                ("0s" === o.getPropertyValue("animation-duration") || "none" === o.getPropertyValue("animation-name")) && (this._animationsDisabled = !0)
                            }
                            e && this._onShow(), this._animationsDisabled && (i.classList.add("_mat-animation-noopable"), this._finalizeAnimation(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge), u(Tt, 8))
                    }, t.\u0275dir = M({
                        type: t
                    }), t
                })(),
                kq = (() => {
                    class t extends Sq {
                        constructor(e, i, r) {
                            super(e, r), this._breakpointObserver = i, this._isHandset = this._breakpointObserver.observe("(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)"), this._showAnimation = "mat-tooltip-show", this._hideAnimation = "mat-tooltip-hide"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge), u(Ff), u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-tooltip-component"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(yq, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i._tooltip = r.first)
                            }
                        },
                        hostAttrs: ["aria-hidden", "true"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            1 & e && T("mouseleave", function(s) {
                                return i._handleMouseLeave(s)
                            }), 2 & e && Kt("zoom", i.isVisible() ? 1 : null)
                        },
                        features: [A],
                        decls: 4,
                        vars: 6,
                        consts: [
                            [1, "mat-tooltip", 3, "ngClass", "animationend"],
                            ["tooltip", ""]
                        ],
                        template: function(e, i) {
                            if (1 & e && (f(0, "div", 0, 1), T("animationend", function(s) {
                                    return i._handleAnimationEnd(s)
                                }), ue(2, "async"), w(3), g()), 2 & e) {
                                let r;
                                re("mat-tooltip-handset", null == (r = De(2, 4, i._isHandset)) ? null : r.matches), y("ngClass", i.tooltipClass), p(3), ve(i.message)
                            }
                        },
                        dependencies: [gr, Kn],
                        styles: [".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Zd = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [Cq],
                        imports: [Fd, ut, to, de, de, vs]
                    }), t
                })();
            const Aq = ["*", [
                    ["mat-card-footer"]
                ]],
                Eq = ["*", "mat-card-footer"],
                Tq = [
                    [
                        ["", "mat-card-avatar", ""],
                        ["", "matCardAvatar", ""]
                    ],
                    [
                        ["mat-card-title"],
                        ["mat-card-subtitle"],
                        ["", "mat-card-title", ""],
                        ["", "mat-card-subtitle", ""],
                        ["", "matCardTitle", ""],
                        ["", "matCardSubtitle", ""]
                    ], "*"
                ],
                Iq = ["[mat-card-avatar], [matCardAvatar]", "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]", "*"];
            let Rq = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-card-content"],
                            ["", "mat-card-content", ""],
                            ["", "matCardContent", ""]
                        ],
                        hostAttrs: [1, "mat-card-content"]
                    }), t
                })(),
                Fq = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-card-title"],
                            ["", "mat-card-title", ""],
                            ["", "matCardTitle", ""]
                        ],
                        hostAttrs: [1, "mat-card-title"]
                    }), t
                })(),
                Oq = (() => {
                    class t {
                        constructor() {
                            this.align = "start"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-card-actions"]
                        ],
                        hostAttrs: [1, "mat-card-actions"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-card-actions-align-end", "end" === i.align)
                        },
                        inputs: {
                            align: "align"
                        },
                        exportAs: ["matCardActions"]
                    }), t
                })(),
                Kl = (() => {
                    class t {
                        constructor(e) {
                            this._animationMode = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-card"]
                        ],
                        hostAttrs: [1, "mat-card", "mat-focus-indicator"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("_mat-animation-noopable", "NoopAnimations" === i._animationMode)
                        },
                        exportAs: ["matCard"],
                        ngContentSelectors: Eq,
                        decls: 2,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Xe(Aq), me(0), me(1, 1))
                        },
                        styles: [".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Pq = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-card-header"]
                        ],
                        hostAttrs: [1, "mat-card-header"],
                        ngContentSelectors: Iq,
                        decls: 4,
                        vars: 0,
                        consts: [
                            [1, "mat-card-header-text"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(Tq), me(0), f(1, "div", 0), me(2, 1), g(), me(3, 2))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Lq = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, de]
                    }), t
                })(),
                Nq = (() => {
                    class t extends Yt {
                        buildStyles(e, {
                            display: i
                        }) {
                            const r = hI(e);
                            return { ...r,
                                display: "none" === i ? i : r.display
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            const Bq = ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"];
            let Vq = (() => {
                    class t extends zt {
                        constructor(e, i, r, s, o) {
                            super(e, r, i, s), this._config = o, this.DIRECTIVE_KEY = "layout", this.init()
                        }
                        updateWithValue(e) {
                            const r = this._config.detectLayoutDisplay ? this.styler.lookupStyle(this.nativeElement, "display") : "";
                            this.styleCache = NI.get(r) ? ? new Map, NI.set(r, this.styleCache), this.currentValue !== e && (this.addStyles(e, {
                                display: r
                            }), this.currentValue = e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(Nq), u(Bt), u(xr))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })(),
                ha = (() => {
                    class t extends Vq {
                        constructor() {
                            super(...arguments), this.inputs = Bq
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "fxLayout", ""],
                            ["", "fxLayout.xs", ""],
                            ["", "fxLayout.sm", ""],
                            ["", "fxLayout.md", ""],
                            ["", "fxLayout.lg", ""],
                            ["", "fxLayout.xl", ""],
                            ["", "fxLayout.lt-sm", ""],
                            ["", "fxLayout.lt-md", ""],
                            ["", "fxLayout.lt-lg", ""],
                            ["", "fxLayout.lt-xl", ""],
                            ["", "fxLayout.gt-xs", ""],
                            ["", "fxLayout.gt-sm", ""],
                            ["", "fxLayout.gt-md", ""],
                            ["", "fxLayout.gt-lg", ""]
                        ],
                        inputs: {
                            fxLayout: "fxLayout",
                            "fxLayout.xs": "fxLayout.xs",
                            "fxLayout.sm": "fxLayout.sm",
                            "fxLayout.md": "fxLayout.md",
                            "fxLayout.lg": "fxLayout.lg",
                            "fxLayout.xl": "fxLayout.xl",
                            "fxLayout.lt-sm": "fxLayout.lt-sm",
                            "fxLayout.lt-md": "fxLayout.lt-md",
                            "fxLayout.lt-lg": "fxLayout.lt-lg",
                            "fxLayout.lt-xl": "fxLayout.lt-xl",
                            "fxLayout.gt-xs": "fxLayout.gt-xs",
                            "fxLayout.gt-sm": "fxLayout.gt-sm",
                            "fxLayout.gt-md": "fxLayout.gt-md",
                            "fxLayout.gt-lg": "fxLayout.gt-lg"
                        },
                        features: [A]
                    }), t
                })();
            const NI = new Map,
                BI = {
                    "margin-left": null,
                    "margin-right": null,
                    "margin-top": null,
                    "margin-bottom": null
                };
            let Hq = (() => {
                class t extends Yt {
                    constructor(e, i) {
                        super(), this._styler = e, this._config = i
                    }
                    buildStyles(e, i) {
                        return e.endsWith(Ap) ? function Yq(t, n) {
                            const [e, i] = t.split(" "), s = c => `-${c}`;
                            let o = "0px",
                                a = s(i ? ? e),
                                l = "0px";
                            return "rtl" === n ? l = s(e) : o = s(e), {
                                margin: `0px ${o} ${a} ${l}`
                            }
                        }(e = Dp(e = e.slice(0, e.indexOf(Ap)), this._config.multiplier), i.directionality) : {}
                    }
                    sideEffect(e, i, r) {
                        const s = r.items;
                        if (e.endsWith(Ap)) {
                            const o = function qq(t, n) {
                                const [e, i] = t.split(" ");
                                let s = "0px",
                                    a = "0px";
                                return "rtl" === n ? a = e : s = e, {
                                    padding: `0px ${s} ${i??e} ${a}`
                                }
                            }(e = Dp(e = e.slice(0, e.indexOf(Ap)), this._config.multiplier), r.directionality);
                            this._styler.applyStyleToElements(o, r.items)
                        } else {
                            e = Dp(e, this._config.multiplier), e = this.addFallbackUnit(e);
                            const o = s.pop(),
                                a = function Qq(t, n) {
                                    const e = HI(n.directionality, n.layout),
                                        i = { ...BI
                                        };
                                    return i[e] = t, i
                                }(e, r);
                            this._styler.applyStyleToElements(a, s), this._styler.applyStyleToElements(BI, [o])
                        }
                    }
                    addFallbackUnit(e) {
                        return isNaN(+e) ? e : `${e}${this._config.defaultUnit}`
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Ot), C(xr))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const $q = ["fxLayoutGap", "fxLayoutGap.xs", "fxLayoutGap.sm", "fxLayoutGap.md", "fxLayoutGap.lg", "fxLayoutGap.xl", "fxLayoutGap.lt-sm", "fxLayoutGap.lt-md", "fxLayoutGap.lt-lg", "fxLayoutGap.lt-xl", "fxLayoutGap.gt-xs", "fxLayoutGap.gt-sm", "fxLayoutGap.gt-md", "fxLayoutGap.gt-lg"];
            let jq = (() => {
                    class t extends zt {
                        constructor(e, i, r, s, o, a) {
                            super(e, o, s, a), this.zone = i, this.directionality = r, this.styleUtils = s, this.layout = "row", this.DIRECTIVE_KEY = "layout-gap", this.observerSubject = new H;
                            const l = [this.directionality.change, this.observerSubject.asObservable()];
                            this.init(l), this.marshal.trackValue(this.nativeElement, "layout").pipe(le(this.destroySubject)).subscribe(this.onLayoutChange.bind(this))
                        }
                        get childrenNodes() {
                            const e = this.nativeElement.children,
                                i = [];
                            for (let r = e.length; r--;) i[r] = e[r];
                            return i
                        }
                        ngAfterContentInit() {
                            this.buildChildObservable(), this.triggerUpdate()
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(), this.observer && this.observer.disconnect()
                        }
                        onLayoutChange(e) {
                            const r = e.value.split(" ");
                            this.layout = r[0], vp.find(s => s === this.layout) || (this.layout = "row"), this.triggerUpdate()
                        }
                        updateWithValue(e) {
                            const i = this.childrenNodes.filter(r => 1 === r.nodeType && this.willDisplay(r)).sort((r, s) => {
                                const o = +this.styler.lookupStyle(r, "order"),
                                    a = +this.styler.lookupStyle(s, "order");
                                return isNaN(o) || isNaN(a) || o === a ? 0 : o > a ? 1 : -1
                            });
                            if (i.length > 0) {
                                const r = this.directionality.value,
                                    s = this.layout;
                                "row" === s && "rtl" === r ? this.styleCache = zq : "row" === s && "rtl" !== r ? this.styleCache = Gq : "column" === s && "rtl" === r ? this.styleCache = Uq : "column" === s && "rtl" !== r && (this.styleCache = Wq), this.addStyles(e, {
                                    directionality: r,
                                    items: i,
                                    layout: s
                                })
                            }
                        }
                        clearStyles() {
                            const e = Object.keys(this.mru).length > 0,
                                i = e ? "padding" : HI(this.directionality.value, this.layout);
                            e && super.clearStyles(), this.styleUtils.applyStyleToElements({
                                [i]: ""
                            }, this.childrenNodes)
                        }
                        willDisplay(e) {
                            const i = this.marshal.getValue(e, "show-hide");
                            return !0 === i || void 0 === i && "none" !== this.styleUtils.lookupStyle(e, "display")
                        }
                        buildChildObservable() {
                            this.zone.runOutsideAngular(() => {
                                typeof MutationObserver < "u" && (this.observer = new MutationObserver(e => {
                                    e.some(r => r.addedNodes && r.addedNodes.length > 0 || r.removedNodes && r.removedNodes.length > 0) && this.observerSubject.next()
                                }), this.observer.observe(this.nativeElement, {
                                    childList: !0
                                }))
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ce), u(Mt), u(Ot), u(Hq), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })(),
                VI = (() => {
                    class t extends jq {
                        constructor() {
                            super(...arguments), this.inputs = $q
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "fxLayoutGap", ""],
                            ["", "fxLayoutGap.xs", ""],
                            ["", "fxLayoutGap.sm", ""],
                            ["", "fxLayoutGap.md", ""],
                            ["", "fxLayoutGap.lg", ""],
                            ["", "fxLayoutGap.xl", ""],
                            ["", "fxLayoutGap.lt-sm", ""],
                            ["", "fxLayoutGap.lt-md", ""],
                            ["", "fxLayoutGap.lt-lg", ""],
                            ["", "fxLayoutGap.lt-xl", ""],
                            ["", "fxLayoutGap.gt-xs", ""],
                            ["", "fxLayoutGap.gt-sm", ""],
                            ["", "fxLayoutGap.gt-md", ""],
                            ["", "fxLayoutGap.gt-lg", ""]
                        ],
                        inputs: {
                            fxLayoutGap: "fxLayoutGap",
                            "fxLayoutGap.xs": "fxLayoutGap.xs",
                            "fxLayoutGap.sm": "fxLayoutGap.sm",
                            "fxLayoutGap.md": "fxLayoutGap.md",
                            "fxLayoutGap.lg": "fxLayoutGap.lg",
                            "fxLayoutGap.xl": "fxLayoutGap.xl",
                            "fxLayoutGap.lt-sm": "fxLayoutGap.lt-sm",
                            "fxLayoutGap.lt-md": "fxLayoutGap.lt-md",
                            "fxLayoutGap.lt-lg": "fxLayoutGap.lt-lg",
                            "fxLayoutGap.lt-xl": "fxLayoutGap.lt-xl",
                            "fxLayoutGap.gt-xs": "fxLayoutGap.gt-xs",
                            "fxLayoutGap.gt-sm": "fxLayoutGap.gt-sm",
                            "fxLayoutGap.gt-md": "fxLayoutGap.gt-md",
                            "fxLayoutGap.gt-lg": "fxLayoutGap.gt-lg"
                        },
                        features: [A]
                    }), t
                })();
            const zq = new Map,
                Uq = new Map,
                Gq = new Map,
                Wq = new Map,
                Ap = " grid";

            function HI(t, n) {
                switch (n) {
                    case "column":
                        return "margin-bottom";
                    case "column-reverse":
                        return "margin-top";
                    case "row":
                    default:
                        return "rtl" === t ? "margin-left" : "margin-right";
                    case "row-reverse":
                        return "rtl" === t ? "margin-right" : "margin-left"
                }
            }
            let Kq = (() => {
                class t extends Yt {
                    constructor(e) {
                        super(), this.layoutConfig = e
                    }
                    buildStyles(e, i) {
                        let [r, s, ...o] = e.split(" "), a = o.join(" ");
                        const l = i.direction.indexOf("column") > -1 ? "column" : "row",
                            c = Qd(l) ? "max-width" : "max-height",
                            d = Qd(l) ? "min-width" : "min-height",
                            h = String(a).indexOf("calc") > -1,
                            m = h || "auto" === a,
                            _ = String(a).indexOf("%") > -1 && !h,
                            v = String(a).indexOf("px") > -1 || String(a).indexOf("rem") > -1 || String(a).indexOf("em") > -1 || String(a).indexOf("vw") > -1 || String(a).indexOf("vh") > -1;
                        let D = h || v;
                        r = "0" == r ? 0 : r, s = "0" == s ? 0 : s;
                        const k = !r && !s;
                        let S = {};
                        const L = {
                            "max-width": null,
                            "max-height": null,
                            "min-width": null,
                            "min-height": null
                        };
                        switch (a || "") {
                            case "":
                                const F = !1 !== this.layoutConfig.useColumnBasisZero;
                                a = "row" === l ? "0%" : F ? "0.000000001px" : "auto";
                                break;
                            case "initial":
                            case "nogrow":
                                r = 0, a = "auto";
                                break;
                            case "grow":
                                a = "100%";
                                break;
                            case "noshrink":
                                s = 0, a = "auto";
                                break;
                            case "auto":
                                break;
                            case "none":
                                r = 0, s = 0, a = "auto";
                                break;
                            default:
                                !D && !_ && !isNaN(a) && (a += "%"), "0%" === a && (D = !0), "0px" === a && (a = "0%"), S = Ms(L, h ? {
                                    "flex-grow": r,
                                    "flex-shrink": s,
                                    "flex-basis": D ? a : "100%"
                                } : {
                                    flex: `${r} ${s} ${D?a:"100%"}`
                                })
                        }
                        return S.flex || S["flex-grow"] || (S = Ms(L, h ? {
                            "flex-grow": r,
                            "flex-shrink": s,
                            "flex-basis": a
                        } : {
                            flex: `${r} ${s} ${a}`
                        })), "0%" !== a && "0px" !== a && "0.000000001px" !== a && "auto" !== a && (S[d] = k || D && r ? a : null, S[c] = k || !m && s ? a : null), S[d] || S[c] ? i.hasWrap && (S[h ? "flex-basis" : "flex"] = S[c] ? h ? S[c] : `${r} ${s} ${S[c]}` : h ? S[d] : `${r} ${s} ${S[d]}`) : S = Ms(L, h ? {
                            "flex-grow": r,
                            "flex-shrink": s,
                            "flex-basis": a
                        } : {
                            flex: `${r} ${s} ${a}`
                        }), Ms(S, {
                            "box-sizing": "border-box"
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(xr))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const Zq = ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"];
            let Xq = (() => {
                    class t extends zt {
                        constructor(e, i, r, s, o) {
                            super(e, s, i, o), this.layoutConfig = r, this.marshal = o, this.DIRECTIVE_KEY = "flex", this.direction = void 0, this.wrap = void 0, this.flexGrow = "1", this.flexShrink = "1", this.init()
                        }
                        get shrink() {
                            return this.flexShrink
                        }
                        set shrink(e) {
                            this.flexShrink = e || "1", this.triggerReflow()
                        }
                        get grow() {
                            return this.flexGrow
                        }
                        set grow(e) {
                            this.flexGrow = e || "1", this.triggerReflow()
                        }
                        ngOnInit() {
                            this.parentElement && (this.marshal.trackValue(this.parentElement, "layout").pipe(le(this.destroySubject)).subscribe(this.onLayoutChange.bind(this)), this.marshal.trackValue(this.nativeElement, "layout-align").pipe(le(this.destroySubject)).subscribe(this.triggerReflow.bind(this)))
                        }
                        onLayoutChange(e) {
                            const r = e.value.split(" ");
                            this.direction = r[0], this.wrap = void 0 !== r[1] && "wrap" === r[1], this.triggerUpdate()
                        }
                        updateWithValue(e) {
                            void 0 === this.direction && (this.direction = this.getFlexFlowDirection(this.parentElement, !1 !== this.layoutConfig.addFlexToParent)), void 0 === this.wrap && (this.wrap = this.hasWrap(this.parentElement));
                            const r = this.direction,
                                s = r.startsWith("row"),
                                o = this.wrap;
                            s && o ? this.styleCache = t7 : s && !o ? this.styleCache = Jq : !s && o ? this.styleCache = n7 : !s && !o && (this.styleCache = e7);
                            const l = MI(String(e).replace(";", ""), this.flexGrow, this.flexShrink);
                            this.addStyles(l.join(" "), {
                                direction: r,
                                hasWrap: o
                            })
                        }
                        triggerReflow() {
                            const e = this.activatedValue;
                            if (void 0 !== e) {
                                const i = MI(e + "", this.flexGrow, this.flexShrink);
                                this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, i.join(" "))
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(xr), u(Kq), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            shrink: ["fxShrink", "shrink"],
                            grow: ["fxGrow", "grow"]
                        },
                        features: [A]
                    }), t
                })(),
                fa = (() => {
                    class t extends Xq {
                        constructor() {
                            super(...arguments), this.inputs = Zq
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "fxFlex", ""],
                            ["", "fxFlex.xs", ""],
                            ["", "fxFlex.sm", ""],
                            ["", "fxFlex.md", ""],
                            ["", "fxFlex.lg", ""],
                            ["", "fxFlex.xl", ""],
                            ["", "fxFlex.lt-sm", ""],
                            ["", "fxFlex.lt-md", ""],
                            ["", "fxFlex.lt-lg", ""],
                            ["", "fxFlex.lt-xl", ""],
                            ["", "fxFlex.gt-xs", ""],
                            ["", "fxFlex.gt-sm", ""],
                            ["", "fxFlex.gt-md", ""],
                            ["", "fxFlex.gt-lg", ""]
                        ],
                        inputs: {
                            fxFlex: "fxFlex",
                            "fxFlex.xs": "fxFlex.xs",
                            "fxFlex.sm": "fxFlex.sm",
                            "fxFlex.md": "fxFlex.md",
                            "fxFlex.lg": "fxFlex.lg",
                            "fxFlex.xl": "fxFlex.xl",
                            "fxFlex.lt-sm": "fxFlex.lt-sm",
                            "fxFlex.lt-md": "fxFlex.lt-md",
                            "fxFlex.lt-lg": "fxFlex.lt-lg",
                            "fxFlex.lt-xl": "fxFlex.lt-xl",
                            "fxFlex.gt-xs": "fxFlex.gt-xs",
                            "fxFlex.gt-sm": "fxFlex.gt-sm",
                            "fxFlex.gt-md": "fxFlex.gt-md",
                            "fxFlex.gt-lg": "fxFlex.gt-lg"
                        },
                        features: [A]
                    }), t
                })();
            const Jq = new Map,
                e7 = new Map,
                t7 = new Map,
                n7 = new Map;
            let _7 = (() => {
                class t extends Yt {
                    buildStyles(e) {
                        const i = {};
                        switch (e = e || "stretch") {
                            case "start":
                                i["align-self"] = "flex-start";
                                break;
                            case "end":
                                i["align-self"] = "flex-end";
                                break;
                            default:
                                i["align-self"] = e
                        }
                        return i
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = U(t)))(i || t)
                    }
                }(), t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const y7 = ["fxFlexAlign", "fxFlexAlign.xs", "fxFlexAlign.sm", "fxFlexAlign.md", "fxFlexAlign.lg", "fxFlexAlign.xl", "fxFlexAlign.lt-sm", "fxFlexAlign.lt-md", "fxFlexAlign.lt-lg", "fxFlexAlign.lt-xl", "fxFlexAlign.gt-xs", "fxFlexAlign.gt-sm", "fxFlexAlign.gt-md", "fxFlexAlign.gt-lg"];
            let b7 = (() => {
                class t extends zt {
                    constructor(e, i, r, s) {
                        super(e, r, i, s), this.DIRECTIVE_KEY = "flex-align", this.styleCache = v7, this.init()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(Ot), u(_7), u(Bt))
                }, t.\u0275dir = M({
                    type: t,
                    features: [A]
                }), t
            })();
            const v7 = new Map;
            let Tv = (() => {
                class t extends b7 {
                    constructor() {
                        super(...arguments), this.inputs = y7
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = U(t)))(i || t)
                    }
                }(), t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "fxFlexAlign", ""],
                        ["", "fxFlexAlign.xs", ""],
                        ["", "fxFlexAlign.sm", ""],
                        ["", "fxFlexAlign.md", ""],
                        ["", "fxFlexAlign.lg", ""],
                        ["", "fxFlexAlign.xl", ""],
                        ["", "fxFlexAlign.lt-sm", ""],
                        ["", "fxFlexAlign.lt-md", ""],
                        ["", "fxFlexAlign.lt-lg", ""],
                        ["", "fxFlexAlign.lt-xl", ""],
                        ["", "fxFlexAlign.gt-xs", ""],
                        ["", "fxFlexAlign.gt-sm", ""],
                        ["", "fxFlexAlign.gt-md", ""],
                        ["", "fxFlexAlign.gt-lg", ""]
                    ],
                    inputs: {
                        fxFlexAlign: "fxFlexAlign",
                        "fxFlexAlign.xs": "fxFlexAlign.xs",
                        "fxFlexAlign.sm": "fxFlexAlign.sm",
                        "fxFlexAlign.md": "fxFlexAlign.md",
                        "fxFlexAlign.lg": "fxFlexAlign.lg",
                        "fxFlexAlign.xl": "fxFlexAlign.xl",
                        "fxFlexAlign.lt-sm": "fxFlexAlign.lt-sm",
                        "fxFlexAlign.lt-md": "fxFlexAlign.lt-md",
                        "fxFlexAlign.lt-lg": "fxFlexAlign.lt-lg",
                        "fxFlexAlign.lt-xl": "fxFlexAlign.lt-xl",
                        "fxFlexAlign.gt-xs": "fxFlexAlign.gt-xs",
                        "fxFlexAlign.gt-sm": "fxFlexAlign.gt-sm",
                        "fxFlexAlign.gt-md": "fxFlexAlign.gt-md",
                        "fxFlexAlign.gt-lg": "fxFlexAlign.gt-lg"
                    },
                    features: [A]
                }), t
            })();
            const w7 = {
                margin: 0,
                width: "100%",
                height: "100%",
                "min-width": "100%",
                "min-height": "100%"
            };
            let C7 = (() => {
                    class t extends Yt {
                        buildStyles(e) {
                            return w7
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Iv = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, r, i, s), this.styleCache = x7, this.addStyles("")
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(C7), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "fxFill", ""],
                            ["", "fxFlexFill", ""]
                        ],
                        features: [A]
                    }), t
                })();
            const x7 = new Map;
            let D7 = (() => {
                class t extends Yt {
                    buildStyles(e, i) {
                        const r = {},
                            [s, o] = e.split(" ");
                        switch (s) {
                            case "center":
                                r["justify-content"] = "center";
                                break;
                            case "space-around":
                                r["justify-content"] = "space-around";
                                break;
                            case "space-between":
                                r["justify-content"] = "space-between";
                                break;
                            case "space-evenly":
                                r["justify-content"] = "space-evenly";
                                break;
                            case "end":
                            case "flex-end":
                                r["justify-content"] = "flex-end";
                                break;
                            default:
                                r["justify-content"] = "flex-start"
                        }
                        switch (o) {
                            case "start":
                            case "flex-start":
                                r["align-items"] = r["align-content"] = "flex-start";
                                break;
                            case "center":
                                r["align-items"] = r["align-content"] = "center";
                                break;
                            case "end":
                            case "flex-end":
                                r["align-items"] = r["align-content"] = "flex-end";
                                break;
                            case "space-between":
                                r["align-content"] = "space-between", r["align-items"] = "stretch";
                                break;
                            case "space-around":
                                r["align-content"] = "space-around", r["align-items"] = "stretch";
                                break;
                            case "baseline":
                                r["align-content"] = "stretch", r["align-items"] = "baseline";
                                break;
                            default:
                                r["align-items"] = r["align-content"] = "stretch"
                        }
                        return Ms(r, {
                            display: i.inline ? "inline-flex" : "flex",
                            "flex-direction": i.layout,
                            "box-sizing": "border-box",
                            "max-width": "stretch" === o ? Qd(i.layout) ? null : "100%" : null,
                            "max-height": "stretch" === o && Qd(i.layout) ? "100%" : null
                        })
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = U(t)))(i || t)
                    }
                }(), t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const M7 = ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"];
            let S7 = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, r, i, s), this.DIRECTIVE_KEY = "layout-align", this.layout = "row", this.inline = !1, this.init(), this.marshal.trackValue(this.nativeElement, "layout").pipe(le(this.destroySubject)).subscribe(this.onLayoutChange.bind(this))
                        }
                        updateWithValue(e) {
                            const i = this.layout || "row",
                                r = this.inline;
                            "row" === i && r ? this.styleCache = I7 : "row" !== i || r ? "row-reverse" === i && r ? this.styleCache = F7 : "row-reverse" !== i || r ? "column" === i && r ? this.styleCache = R7 : "column" !== i || r ? "column-reverse" === i && r ? this.styleCache = O7 : "column-reverse" === i && !r && (this.styleCache = T7) : this.styleCache = A7 : this.styleCache = E7 : this.styleCache = k7, this.addStyles(e, {
                                layout: i,
                                inline: r
                            })
                        }
                        onLayoutChange(e) {
                            const i = e.value.split(" ");
                            this.layout = i[0], this.inline = e.value.includes("inline"), vp.find(r => r === this.layout) || (this.layout = "row"), this.triggerUpdate()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(D7), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })(),
                ho = (() => {
                    class t extends S7 {
                        constructor() {
                            super(...arguments), this.inputs = M7
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "fxLayoutAlign", ""],
                            ["", "fxLayoutAlign.xs", ""],
                            ["", "fxLayoutAlign.sm", ""],
                            ["", "fxLayoutAlign.md", ""],
                            ["", "fxLayoutAlign.lg", ""],
                            ["", "fxLayoutAlign.xl", ""],
                            ["", "fxLayoutAlign.lt-sm", ""],
                            ["", "fxLayoutAlign.lt-md", ""],
                            ["", "fxLayoutAlign.lt-lg", ""],
                            ["", "fxLayoutAlign.lt-xl", ""],
                            ["", "fxLayoutAlign.gt-xs", ""],
                            ["", "fxLayoutAlign.gt-sm", ""],
                            ["", "fxLayoutAlign.gt-md", ""],
                            ["", "fxLayoutAlign.gt-lg", ""]
                        ],
                        inputs: {
                            fxLayoutAlign: "fxLayoutAlign",
                            "fxLayoutAlign.xs": "fxLayoutAlign.xs",
                            "fxLayoutAlign.sm": "fxLayoutAlign.sm",
                            "fxLayoutAlign.md": "fxLayoutAlign.md",
                            "fxLayoutAlign.lg": "fxLayoutAlign.lg",
                            "fxLayoutAlign.xl": "fxLayoutAlign.xl",
                            "fxLayoutAlign.lt-sm": "fxLayoutAlign.lt-sm",
                            "fxLayoutAlign.lt-md": "fxLayoutAlign.lt-md",
                            "fxLayoutAlign.lt-lg": "fxLayoutAlign.lt-lg",
                            "fxLayoutAlign.lt-xl": "fxLayoutAlign.lt-xl",
                            "fxLayoutAlign.gt-xs": "fxLayoutAlign.gt-xs",
                            "fxLayoutAlign.gt-sm": "fxLayoutAlign.gt-sm",
                            "fxLayoutAlign.gt-md": "fxLayoutAlign.gt-md",
                            "fxLayoutAlign.gt-lg": "fxLayoutAlign.gt-lg"
                        },
                        features: [A]
                    }), t
                })();
            const k7 = new Map,
                A7 = new Map,
                E7 = new Map,
                T7 = new Map,
                I7 = new Map,
                R7 = new Map,
                F7 = new Map,
                O7 = new Map;
            let $I = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Mv, ta]
                    }), t
                })(),
                H7 = (() => {
                    class t extends zt {
                        constructor(e, i, r, s, o, a, l) {
                            super(e, null, i, r), this.ngClassInstance = l, this.DIRECTIVE_KEY = "ngClass", this.ngClassInstance || (this.ngClassInstance = new gr(s, o, e, a)), this.init(), this.setValue("", "")
                        }
                        set klass(e) {
                            this.ngClassInstance.klass = e, this.setValue(e, "")
                        }
                        updateWithValue(e) {
                            this.ngClassInstance.ngClass = e, this.ngClassInstance.ngDoCheck()
                        }
                        ngDoCheck() {
                            this.ngClassInstance.ngDoCheck()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(Bt), u(Di), u(Wo), u(qn), u(gr, 10))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            klass: ["class", "klass"]
                        },
                        features: [A]
                    }), t
                })();
            const $7 = ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"];
            let jI = (() => {
                class t extends H7 {
                    constructor() {
                        super(...arguments), this.inputs = $7
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = U(t)))(i || t)
                    }
                }(), t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngClass", ""],
                        ["", "ngClass.xs", ""],
                        ["", "ngClass.sm", ""],
                        ["", "ngClass.md", ""],
                        ["", "ngClass.lg", ""],
                        ["", "ngClass.xl", ""],
                        ["", "ngClass.lt-sm", ""],
                        ["", "ngClass.lt-md", ""],
                        ["", "ngClass.lt-lg", ""],
                        ["", "ngClass.lt-xl", ""],
                        ["", "ngClass.gt-xs", ""],
                        ["", "ngClass.gt-sm", ""],
                        ["", "ngClass.gt-md", ""],
                        ["", "ngClass.gt-lg", ""]
                    ],
                    inputs: {
                        ngClass: "ngClass",
                        "ngClass.xs": "ngClass.xs",
                        "ngClass.sm": "ngClass.sm",
                        "ngClass.md": "ngClass.md",
                        "ngClass.lg": "ngClass.lg",
                        "ngClass.xl": "ngClass.xl",
                        "ngClass.lt-sm": "ngClass.lt-sm",
                        "ngClass.lt-md": "ngClass.lt-md",
                        "ngClass.lt-lg": "ngClass.lt-lg",
                        "ngClass.lt-xl": "ngClass.lt-xl",
                        "ngClass.gt-xs": "ngClass.gt-xs",
                        "ngClass.gt-sm": "ngClass.gt-sm",
                        "ngClass.gt-md": "ngClass.gt-md",
                        "ngClass.gt-lg": "ngClass.gt-lg"
                    },
                    features: [A]
                }), t
            })();
            class W7 {
                constructor(n, e, i = !0) {
                    this.key = n, this.value = e, this.key = i ? n.replace(/['"]/g, "").trim() : n.trim(), this.value = i ? e.replace(/['"]/g, "").trim() : e.trim(), this.value = this.value.replace(/;/, "")
                }
            }

            function zI(t) {
                let n = typeof t;
                return "object" === n ? t.constructor === Array ? "array" : t.constructor === Set ? "set" : "object" : n
            }

            function GI(t) {
                const [n, ...e] = t.split(":");
                return new W7(n, e.join(":"))
            }

            function WI(t, n) {
                return n.key && (t[n.key] = n.value), t
            }
            let Q7 = (() => {
                class t extends zt {
                    constructor(e, i, r, s, o, a, l, c, d) {
                        super(e, null, i, r), this.sanitizer = s, this.ngStyleInstance = l, this.DIRECTIVE_KEY = "ngStyle", this.ngStyleInstance || (this.ngStyleInstance = new Gs(e, o, a)), this.init();
                        const h = this.nativeElement.getAttribute("style") ? ? "";
                        this.fallbackStyles = this.buildStyleMap(h), this.isServer = c && ml(d)
                    }
                    updateWithValue(e) {
                        const i = this.buildStyleMap(e);
                        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles,
                            ...i
                        }, this.isServer && this.applyStyleToElement(i), this.ngStyleInstance.ngDoCheck()
                    }
                    clearStyles() {
                        this.ngStyleInstance.ngStyle = this.fallbackStyles, this.ngStyleInstance.ngDoCheck()
                    }
                    buildStyleMap(e) {
                        const i = r => this.sanitizer.sanitize(it.STYLE, r) ? ? "";
                        if (e) switch (zI(e)) {
                            case "string":
                                return qI(function q7(t, n = ";") {
                                    return String(t).trim().split(n).map(e => e.trim()).filter(e => "" !== e)
                                }(e), i);
                            case "array":
                                return qI(e, i);
                            default:
                                return function UI(t, n) {
                                    let e = [];
                                    return "set" === zI(t) ? t.forEach(i => e.push(i)) : Object.keys(t).forEach(i => {
                                            e.push(`${i}:${t[i]}`)
                                        }),
                                        function Y7(t, n) {
                                            return t.map(GI).filter(i => !!i).map(i => (n && (i.value = n(i.value)), i)).reduce(WI, {})
                                        }(e, n)
                                }(e, i)
                        }
                        return {}
                    }
                    ngDoCheck() {
                        this.ngStyleInstance.ngDoCheck()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(Ot), u(Bt), u(qs), u(Wo), u(qn), u(Gs, 10), u(Gl), u(On))
                }, t.\u0275dir = M({
                    type: t,
                    features: [A]
                }), t
            })();
            const K7 = ["ngStyle", "ngStyle.xs", "ngStyle.sm", "ngStyle.md", "ngStyle.lg", "ngStyle.xl", "ngStyle.lt-sm", "ngStyle.lt-md", "ngStyle.lt-lg", "ngStyle.lt-xl", "ngStyle.gt-xs", "ngStyle.gt-sm", "ngStyle.gt-md", "ngStyle.gt-lg"];
            let Ep = (() => {
                class t extends Q7 {
                    constructor() {
                        super(...arguments), this.inputs = K7
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = U(t)))(i || t)
                    }
                }(), t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngStyle", ""],
                        ["", "ngStyle.xs", ""],
                        ["", "ngStyle.sm", ""],
                        ["", "ngStyle.md", ""],
                        ["", "ngStyle.lg", ""],
                        ["", "ngStyle.xl", ""],
                        ["", "ngStyle.lt-sm", ""],
                        ["", "ngStyle.lt-md", ""],
                        ["", "ngStyle.lt-lg", ""],
                        ["", "ngStyle.lt-xl", ""],
                        ["", "ngStyle.gt-xs", ""],
                        ["", "ngStyle.gt-sm", ""],
                        ["", "ngStyle.gt-md", ""],
                        ["", "ngStyle.gt-lg", ""]
                    ],
                    inputs: {
                        ngStyle: "ngStyle",
                        "ngStyle.xs": "ngStyle.xs",
                        "ngStyle.sm": "ngStyle.sm",
                        "ngStyle.md": "ngStyle.md",
                        "ngStyle.lg": "ngStyle.lg",
                        "ngStyle.xl": "ngStyle.xl",
                        "ngStyle.lt-sm": "ngStyle.lt-sm",
                        "ngStyle.lt-md": "ngStyle.lt-md",
                        "ngStyle.lt-lg": "ngStyle.lt-lg",
                        "ngStyle.lt-xl": "ngStyle.lt-xl",
                        "ngStyle.gt-xs": "ngStyle.gt-xs",
                        "ngStyle.gt-sm": "ngStyle.gt-sm",
                        "ngStyle.gt-md": "ngStyle.gt-md",
                        "ngStyle.gt-lg": "ngStyle.gt-lg"
                    },
                    features: [A]
                }), t
            })();

            function qI(t, n) {
                return t.map(GI).filter(i => !!i).map(i => (n && (i.value = n(i.value)), i)).reduce(WI, {})
            }
            let YI = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Mv]
                    }), t
                })(),
                bY = (() => {
                    class t extends Yt {
                        buildStyles(e) {
                            return {
                                "grid-area": e || "auto"
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                vY = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, r, i, s), this.DIRECTIVE_KEY = "grid-area", this.styleCache = wY, this.init()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(bY), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })();
            const wY = new Map,
                CY = ["gdArea", "gdArea.xs", "gdArea.sm", "gdArea.md", "gdArea.lg", "gdArea.xl", "gdArea.lt-sm", "gdArea.lt-md", "gdArea.lt-lg", "gdArea.lt-xl", "gdArea.gt-xs", "gdArea.gt-sm", "gdArea.gt-md", "gdArea.gt-lg"];
            let Fv = (() => {
                    class t extends vY {
                        constructor() {
                            super(...arguments), this.inputs = CY
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdArea", ""],
                            ["", "gdArea.xs", ""],
                            ["", "gdArea.sm", ""],
                            ["", "gdArea.md", ""],
                            ["", "gdArea.lg", ""],
                            ["", "gdArea.xl", ""],
                            ["", "gdArea.lt-sm", ""],
                            ["", "gdArea.lt-md", ""],
                            ["", "gdArea.lt-lg", ""],
                            ["", "gdArea.lt-xl", ""],
                            ["", "gdArea.gt-xs", ""],
                            ["", "gdArea.gt-sm", ""],
                            ["", "gdArea.gt-md", ""],
                            ["", "gdArea.gt-lg", ""]
                        ],
                        inputs: {
                            gdArea: "gdArea",
                            "gdArea.xs": "gdArea.xs",
                            "gdArea.sm": "gdArea.sm",
                            "gdArea.md": "gdArea.md",
                            "gdArea.lg": "gdArea.lg",
                            "gdArea.xl": "gdArea.xl",
                            "gdArea.lt-sm": "gdArea.lt-sm",
                            "gdArea.lt-md": "gdArea.lt-md",
                            "gdArea.lt-lg": "gdArea.lt-lg",
                            "gdArea.lt-xl": "gdArea.lt-xl",
                            "gdArea.gt-xs": "gdArea.gt-xs",
                            "gdArea.gt-sm": "gdArea.gt-sm",
                            "gdArea.gt-md": "gdArea.gt-md",
                            "gdArea.gt-lg": "gdArea.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                MY = (() => {
                    class t extends Yt {
                        buildStyles(e, i) {
                            const r = (e || "none").split("|").map(s => `"${s.trim()}"`);
                            return {
                                display: i.inline ? "inline-grid" : "grid",
                                "grid-template-areas": r.join(" ")
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                SY = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, r, i, s), this.DIRECTIVE_KEY = "grid-areas", this._inline = !1, this.init()
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = G(e)
                        }
                        updateWithValue(e) {
                            this.styleCache = this.inline ? AY : kY, this.addStyles(e, {
                                inline: this.inline
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Ot), u(MY), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            inline: ["gdInline", "inline"]
                        },
                        features: [A]
                    }), t
                })();
            const kY = new Map,
                AY = new Map,
                EY = ["gdAreas", "gdAreas.xs", "gdAreas.sm", "gdAreas.md", "gdAreas.lg", "gdAreas.xl", "gdAreas.lt-sm", "gdAreas.lt-md", "gdAreas.lt-lg", "gdAreas.lt-xl", "gdAreas.gt-xs", "gdAreas.gt-sm", "gdAreas.gt-md", "gdAreas.gt-lg"];
            let Ov = (() => {
                    class t extends SY {
                        constructor() {
                            super(...arguments), this.inputs = EY
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdAreas", ""],
                            ["", "gdAreas.xs", ""],
                            ["", "gdAreas.sm", ""],
                            ["", "gdAreas.md", ""],
                            ["", "gdAreas.lg", ""],
                            ["", "gdAreas.xl", ""],
                            ["", "gdAreas.lt-sm", ""],
                            ["", "gdAreas.lt-md", ""],
                            ["", "gdAreas.lt-lg", ""],
                            ["", "gdAreas.lt-xl", ""],
                            ["", "gdAreas.gt-xs", ""],
                            ["", "gdAreas.gt-sm", ""],
                            ["", "gdAreas.gt-md", ""],
                            ["", "gdAreas.gt-lg", ""]
                        ],
                        inputs: {
                            gdAreas: "gdAreas",
                            "gdAreas.xs": "gdAreas.xs",
                            "gdAreas.sm": "gdAreas.sm",
                            "gdAreas.md": "gdAreas.md",
                            "gdAreas.lg": "gdAreas.lg",
                            "gdAreas.xl": "gdAreas.xl",
                            "gdAreas.lt-sm": "gdAreas.lt-sm",
                            "gdAreas.lt-md": "gdAreas.lt-md",
                            "gdAreas.lt-lg": "gdAreas.lt-lg",
                            "gdAreas.lt-xl": "gdAreas.lt-xl",
                            "gdAreas.gt-xs": "gdAreas.gt-xs",
                            "gdAreas.gt-sm": "gdAreas.gt-sm",
                            "gdAreas.gt-md": "gdAreas.gt-md",
                            "gdAreas.gt-lg": "gdAreas.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                IY = (() => {
                    class t extends Yt {
                        buildStyles(e, i) {
                            let [r, s] = (e || "initial").split(" ");
                            return "column" !== r && "row" !== r && "dense" !== r && (r = "row"), s = "dense" === s && "dense" !== r ? " dense" : "", {
                                display: i.inline ? "inline-grid" : "grid",
                                "grid-auto-flow": r + s
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                RY = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, i, r, s), this._inline = !1, this.DIRECTIVE_KEY = "grid-auto", this.init()
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = G(e)
                        }
                        updateWithValue(e) {
                            this.styleCache = this.inline ? OY : FY, this.addStyles(e, {
                                inline: this.inline
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(IY), u(Ot), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            inline: ["gdInline", "inline"]
                        },
                        features: [A]
                    }), t
                })();
            const FY = new Map,
                OY = new Map,
                PY = ["gdAuto", "gdAuto.xs", "gdAuto.sm", "gdAuto.md", "gdAuto.lg", "gdAuto.xl", "gdAuto.lt-sm", "gdAuto.lt-md", "gdAuto.lt-lg", "gdAuto.lt-xl", "gdAuto.gt-xs", "gdAuto.gt-sm", "gdAuto.gt-md", "gdAuto.gt-lg"];
            let Pv = (() => {
                    class t extends RY {
                        constructor() {
                            super(...arguments), this.inputs = PY
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdAuto", ""],
                            ["", "gdAuto.xs", ""],
                            ["", "gdAuto.sm", ""],
                            ["", "gdAuto.md", ""],
                            ["", "gdAuto.lg", ""],
                            ["", "gdAuto.xl", ""],
                            ["", "gdAuto.lt-sm", ""],
                            ["", "gdAuto.lt-md", ""],
                            ["", "gdAuto.lt-lg", ""],
                            ["", "gdAuto.lt-xl", ""],
                            ["", "gdAuto.gt-xs", ""],
                            ["", "gdAuto.gt-sm", ""],
                            ["", "gdAuto.gt-md", ""],
                            ["", "gdAuto.gt-lg", ""]
                        ],
                        inputs: {
                            gdAuto: "gdAuto",
                            "gdAuto.xs": "gdAuto.xs",
                            "gdAuto.sm": "gdAuto.sm",
                            "gdAuto.md": "gdAuto.md",
                            "gdAuto.lg": "gdAuto.lg",
                            "gdAuto.xl": "gdAuto.xl",
                            "gdAuto.lt-sm": "gdAuto.lt-sm",
                            "gdAuto.lt-md": "gdAuto.lt-md",
                            "gdAuto.lt-lg": "gdAuto.lt-lg",
                            "gdAuto.lt-xl": "gdAuto.lt-xl",
                            "gdAuto.gt-xs": "gdAuto.gt-xs",
                            "gdAuto.gt-sm": "gdAuto.gt-sm",
                            "gdAuto.gt-md": "gdAuto.gt-md",
                            "gdAuto.gt-lg": "gdAuto.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                NY = (() => {
                    class t extends Yt {
                        buildStyles(e) {
                            return {
                                "grid-column": e || "auto"
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                BY = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, i, r, s), this.DIRECTIVE_KEY = "grid-column", this.styleCache = VY, this.init()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(NY), u(Ot), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [A]
                    }), t
                })();
            const VY = new Map,
                HY = ["gdColumn", "gdColumn.xs", "gdColumn.sm", "gdColumn.md", "gdColumn.lg", "gdColumn.xl", "gdColumn.lt-sm", "gdColumn.lt-md", "gdColumn.lt-lg", "gdColumn.lt-xl", "gdColumn.gt-xs", "gdColumn.gt-sm", "gdColumn.gt-md", "gdColumn.gt-lg"];
            let eR = (() => {
                    class t extends BY {
                        constructor() {
                            super(...arguments), this.inputs = HY
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdColumn", ""],
                            ["", "gdColumn.xs", ""],
                            ["", "gdColumn.sm", ""],
                            ["", "gdColumn.md", ""],
                            ["", "gdColumn.lg", ""],
                            ["", "gdColumn.xl", ""],
                            ["", "gdColumn.lt-sm", ""],
                            ["", "gdColumn.lt-md", ""],
                            ["", "gdColumn.lt-lg", ""],
                            ["", "gdColumn.lt-xl", ""],
                            ["", "gdColumn.gt-xs", ""],
                            ["", "gdColumn.gt-sm", ""],
                            ["", "gdColumn.gt-md", ""],
                            ["", "gdColumn.gt-lg", ""]
                        ],
                        inputs: {
                            gdColumn: "gdColumn",
                            "gdColumn.xs": "gdColumn.xs",
                            "gdColumn.sm": "gdColumn.sm",
                            "gdColumn.md": "gdColumn.md",
                            "gdColumn.lg": "gdColumn.lg",
                            "gdColumn.xl": "gdColumn.xl",
                            "gdColumn.lt-sm": "gdColumn.lt-sm",
                            "gdColumn.lt-md": "gdColumn.lt-md",
                            "gdColumn.lt-lg": "gdColumn.lt-lg",
                            "gdColumn.lt-xl": "gdColumn.lt-xl",
                            "gdColumn.gt-xs": "gdColumn.gt-xs",
                            "gdColumn.gt-sm": "gdColumn.gt-sm",
                            "gdColumn.gt-md": "gdColumn.gt-md",
                            "gdColumn.gt-lg": "gdColumn.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                jY = (() => {
                    class t extends Yt {
                        buildStyles(e, i) {
                            let r = !1;
                            (e = e || "none").endsWith("!") && (e = e.substring(0, e.indexOf("!")), r = !0);
                            const s = {
                                display: i.inline ? "inline-grid" : "grid",
                                "grid-auto-columns": "",
                                "grid-template-columns": ""
                            };
                            return s[r ? "grid-auto-columns" : "grid-template-columns"] = e, s
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                zY = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, i, r, s), this.DIRECTIVE_KEY = "grid-columns", this._inline = !1, this.init()
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = G(e)
                        }
                        updateWithValue(e) {
                            this.styleCache = this.inline ? GY : UY, this.addStyles(e, {
                                inline: this.inline
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(jY), u(Ot), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            inline: ["gdInline", "inline"]
                        },
                        features: [A]
                    }), t
                })();
            const UY = new Map,
                GY = new Map,
                WY = ["gdColumns", "gdColumns.xs", "gdColumns.sm", "gdColumns.md", "gdColumns.lg", "gdColumns.xl", "gdColumns.lt-sm", "gdColumns.lt-md", "gdColumns.lt-lg", "gdColumns.lt-xl", "gdColumns.gt-xs", "gdColumns.gt-sm", "gdColumns.gt-md", "gdColumns.gt-lg"];
            let Tp = (() => {
                    class t extends zY {
                        constructor() {
                            super(...arguments), this.inputs = WY
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdColumns", ""],
                            ["", "gdColumns.xs", ""],
                            ["", "gdColumns.sm", ""],
                            ["", "gdColumns.md", ""],
                            ["", "gdColumns.lg", ""],
                            ["", "gdColumns.xl", ""],
                            ["", "gdColumns.lt-sm", ""],
                            ["", "gdColumns.lt-md", ""],
                            ["", "gdColumns.lt-lg", ""],
                            ["", "gdColumns.lt-xl", ""],
                            ["", "gdColumns.gt-xs", ""],
                            ["", "gdColumns.gt-sm", ""],
                            ["", "gdColumns.gt-md", ""],
                            ["", "gdColumns.gt-lg", ""]
                        ],
                        inputs: {
                            gdColumns: "gdColumns",
                            "gdColumns.xs": "gdColumns.xs",
                            "gdColumns.sm": "gdColumns.sm",
                            "gdColumns.md": "gdColumns.md",
                            "gdColumns.lg": "gdColumns.lg",
                            "gdColumns.xl": "gdColumns.xl",
                            "gdColumns.lt-sm": "gdColumns.lt-sm",
                            "gdColumns.lt-md": "gdColumns.lt-md",
                            "gdColumns.lt-lg": "gdColumns.lt-lg",
                            "gdColumns.lt-xl": "gdColumns.lt-xl",
                            "gdColumns.gt-xs": "gdColumns.gt-xs",
                            "gdColumns.gt-sm": "gdColumns.gt-sm",
                            "gdColumns.gt-md": "gdColumns.gt-md",
                            "gdColumns.gt-lg": "gdColumns.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                aQ = (() => {
                    class t extends Yt {
                        buildStyles(e, i) {
                            let r = !1;
                            (e = e || "none").endsWith("!") && (e = e.substring(0, e.indexOf("!")), r = !0);
                            const s = {
                                display: i.inline ? "inline-grid" : "grid",
                                "grid-auto-rows": "",
                                "grid-template-rows": ""
                            };
                            return s[r ? "grid-auto-rows" : "grid-template-rows"] = e, s
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                lQ = (() => {
                    class t extends zt {
                        constructor(e, i, r, s) {
                            super(e, i, r, s), this.DIRECTIVE_KEY = "grid-rows", this._inline = !1, this.init()
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = G(e)
                        }
                        updateWithValue(e) {
                            this.styleCache = this.inline ? dQ : cQ, this.addStyles(e, {
                                inline: this.inline
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(aQ), u(Ot), u(Bt))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            inline: ["gdInline", "inline"]
                        },
                        features: [A]
                    }), t
                })();
            const cQ = new Map,
                dQ = new Map,
                uQ = ["gdRows", "gdRows.xs", "gdRows.sm", "gdRows.md", "gdRows.lg", "gdRows.xl", "gdRows.lt-sm", "gdRows.lt-md", "gdRows.lt-lg", "gdRows.lt-xl", "gdRows.gt-xs", "gdRows.gt-sm", "gdRows.gt-md", "gdRows.gt-lg"];
            let Lv = (() => {
                    class t extends lQ {
                        constructor() {
                            super(...arguments), this.inputs = uQ
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "gdRows", ""],
                            ["", "gdRows.xs", ""],
                            ["", "gdRows.sm", ""],
                            ["", "gdRows.md", ""],
                            ["", "gdRows.lg", ""],
                            ["", "gdRows.xl", ""],
                            ["", "gdRows.lt-sm", ""],
                            ["", "gdRows.lt-md", ""],
                            ["", "gdRows.lt-lg", ""],
                            ["", "gdRows.lt-xl", ""],
                            ["", "gdRows.gt-xs", ""],
                            ["", "gdRows.gt-sm", ""],
                            ["", "gdRows.gt-md", ""],
                            ["", "gdRows.gt-lg", ""]
                        ],
                        inputs: {
                            gdRows: "gdRows",
                            "gdRows.xs": "gdRows.xs",
                            "gdRows.sm": "gdRows.sm",
                            "gdRows.md": "gdRows.md",
                            "gdRows.lg": "gdRows.lg",
                            "gdRows.xl": "gdRows.xl",
                            "gdRows.lt-sm": "gdRows.lt-sm",
                            "gdRows.lt-md": "gdRows.lt-md",
                            "gdRows.lt-lg": "gdRows.lt-lg",
                            "gdRows.lt-xl": "gdRows.lt-xl",
                            "gdRows.gt-xs": "gdRows.gt-xs",
                            "gdRows.gt-sm": "gdRows.gt-sm",
                            "gdRows.gt-md": "gdRows.gt-md",
                            "gdRows.gt-lg": "gdRows.gt-lg"
                        },
                        features: [A]
                    }), t
                })(),
                iR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Mv]
                    }), t
                })();

            function hQ(t, n) {
                if (1 & t && (f(0, "div", 3)(1, "button", 17, 5)(3, "mat-icon", 6), w(4, "person"), g()()()), 2 & t) {
                    const e = x();
                    p(3), Fn("max-width: " + e.sideBarWidth + "; max-height: " + e.sideBarWidth + ";")
                }
            }

            function fQ(t, n) {
                if (1 & t && (f(0, "div", 3)(1, "button", 18, 5)(3, "mat-icon", 6), w(4, "directions_car"), g()()()), 2 & t) {
                    const e = x();
                    p(3), Fn("max-width: " + e.sideBarWidth + "; max-height: " + e.sideBarWidth + ";")
                }
            }

            function pQ(t, n) {
                if (1 & t && (f(0, "div", 3)(1, "button", 19, 5)(3, "mat-icon", 6), w(4, "person_add"), g()()()), 2 & t) {
                    const e = x();
                    p(3), Fn("max-width: " + e.sideBarWidth + "; max-height: " + e.sideBarWidth + ";")
                }
            }

            function mQ(t, n) {
                if (1 & t && (f(0, "div", 3)(1, "button", 20, 5)(3, "mat-icon", 6), w(4, "manage_accounts"), g()()()), 2 & t) {
                    const e = x();
                    p(3), Fn("max-width: " + e.sideBarWidth + "; max-height: " + e.sideBarWidth + ";")
                }
            }
            let gQ = (() => {
                class t {
                    constructor(e, i, r, s, o, a, l, c) {
                        this.router = e, this.dialog = i, this.authservice = r, this.mediaObserver = s, this.playerManagementGuard = o, this.vehicleManagementGuard = a, this.userManagementGuard = l, this.redirection = c, this.flexButton = "1 1 3.5vw", this.sideBarWidth = "90px", this.porto = !1, this.numChange = 0, this.containerStyle = {}, this.canManageUsers$ = this.authservice.canManageUsers$, this.watcher = this.mediaObserver.asObservable().subscribe({
                            next: () => {
                                this.sideBarWidth = this.mediaObserver.isActive("navbar") ? "60px" : "90px"
                            }
                        })
                    }
                    ngOnDestroy() {
                        this.watcher.unsubscribe()
                    }
                    onActivate(e) {
                        if (this.containerStyle = {}, e.addStyle)
                            for (const i in e.addStyle) Object.prototype.hasOwnProperty.call(e.addStyle, i) && (this.containerStyle[i] = e.addStyle[i]);
                        void 0 !== e.containerStyle && (this.containerStyle = e.containerStyle), console.log(e)
                    }
                    onDeactivate(e) {
                        console.log(e)
                    }
                    Route(e) {
                        this.router.navigate([e])
                    }
                    openProfile() {
                        this.dialog.open(VW, {
                            panelClass: "customProfile"
                        }).afterClosed().subscribe(i => {
                            console.log("Dialog result")
                        })
                    }
                    logout() {
                        this.authservice.logout()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(gt), u(Bl), u(Bn), u(Av), u(Ei), u(da), u(Gr), u(AI))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-dashboard"]
                    ],
                    decls: 27,
                    vars: 15,
                    consts: [
                        ["gdAuto", "", "gdAreas", "header header | sidebar content", "gdRows", "60px auto", 1, "containerX", "app-content", "mat-elevation-z8", 2, "height", "100%", "max-height", "100vh", 3, "gdColumns"],
                        ["gdArea", "sidebar", "gdAuto", "", "gdAreas", "start | fill | end", 1, "side-nav", 3, "gdRows"],
                        ["gdArea", "start", 3, "gdRows"],
                        ["fxFlexAlign", "center center", 1, "sidebar-button"],
                        ["mat-button", "", "matTooltip", "Dashboard", "routerLink", "/home", 1, "dashbutton"],
                        ["tooltip", "matTooltip"],
                        [1, "dash-icons"],
                        ["class", "sidebar-button", "fxFlexAlign", "center center", 4, "ngIf"],
                        ["fxFlexAlign", "center center", "gdArea", "fill"],
                        ["gdArea", "end", 3, "gdRows"],
                        ["mat-button", "", "matTooltip", "Uitloggen", 1, "dashbutton", 3, "click"],
                        ["gdArea", "header", "gdAuto", "", "gdAreas", "start middle end", 3, "gdColumns"],
                        ["gdArea", "start", "fxLayoutAlign", "start", 1, "nav-bar", "background"],
                        ["gdArea", "middle", "fxFlexFill", "", 1, "nav-bar"],
                        ["gdArea", "end", 1, "nav-bar"],
                        ["gdArea", "content", 1, "main-content", 3, "ngStyle"],
                        [3, "activate", "deactivate"],
                        ["mat-button", "", "matTooltip", "Personen", "routerLink", "/personen", 1, "dashbutton"],
                        ["mat-button", "", "matTooltip", "Voertuigen", "routerLink", "/voertuigen", 1, "dashbutton"],
                        ["mat-button", "", "matTooltip", "Account aanmaken", "routerLink", "/register", 1, "dashbutton"],
                        ["mat-button", "", "matTooltip", "Accounts beheren", "routerLink", "/users", 1, "dashbutton"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "button", 4, 5)(6, "mat-icon", 6), w(7, "home"), g()()(), b(8, hQ, 5, 2, "div", 7), b(9, fQ, 5, 2, "div", 7), b(10, pQ, 5, 2, "div", 7), b(11, mQ, 5, 2, "div", 7), g(), f(12, "div", 8), E(13, "div"), g(), f(14, "div", 9)(15, "div", 3)(16, "button", 10, 5), T("click", function() {
                            return i.logout()
                        }), f(18, "mat-icon", 6), w(19, "redo"), g()()()()(), f(20, "div", 11), E(21, "div", 12)(22, "div", 13)(23, "div", 14), g(), f(24, "div", 15)(25, "mat-card")(26, "router-outlet", 16), T("activate", function(s) {
                            return i.onActivate(s)
                        })("deactivate", function(s) {
                            return i.onDeactivate(s)
                        }), g()()()()), 2 & e && (y("gdColumns", i.sideBarWidth + " auto"), p(1), Sh("gdRows", "calc(", i.sideBarWidth, " * 6) auto ", i.sideBarWidth, ""), p(1), y("gdRows", "repeat(6, " + i.sideBarWidth + ")"), p(4), Fn("max-width: " + i.sideBarWidth + "; max-height: " + i.sideBarWidth + ";"), p(2), y("ngIf", i.playerManagementGuard.canActivate()), p(1), y("ngIf", i.vehicleManagementGuard.canActivate()), p(1), y("ngIf", i.userManagementGuard.canActivate()), p(1), y("ngIf", i.userManagementGuard.canActivate()), p(3), y("gdRows", i.sideBarWidth), p(4), Fn("max-width: " + i.sideBarWidth + "; max-height: " + i.sideBarWidth + ";"), p(2), y("gdColumns", i.sideBarWidth + " auto 120px"), p(4), y("ngStyle", i.containerStyle))
                    },
                    dependencies: [at, Gs, gf, Ml, Yl, Xt, Ev, Kl, ho, Iv, Tv, Ep, Fv, Ov, Pv, Tp, Lv],
                    styles: [".background[_ngcontent-%COMP%]{background-image:url(politie-logo.22328d29fbe179fc.png);background-position:center;background-repeat:no-repeat;background-size:auto 100%}mat-grid-tile[_ngcontent-%COMP%]{background-color:#01579b}.nav-bar[_ngcontent-%COMP%], .side-nav[_ngcontent-%COMP%]{background-color:#01579b;color:#fff}.sidebar-button[_ngcontent-%COMP%]{border-top:1px solid white;border-bottom:1px solid white}.sidebar-button[_ngcontent-%COMP%] ~ .sidebar-button[_ngcontent-%COMP%]{border-top:none}.example-container[_ngcontent-%COMP%]{position:absolute;inset:60px 0}mat-icon[_ngcontent-%COMP%]{color:#fff}.app-content[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{background-color:#e9ecef}.main-content[_ngcontent-%COMP%]{background-color:#e9ecef;overflow-y:auto;padding:.5%;height:100%;max-height:100%;max-width:100%}.mat-button-wrapper[_ngcontent-%COMP%]{width:100%;height:100%}.dashbutton[_ngcontent-%COMP%]{width:100%;height:100%;padding:0}@media only screen and (max-width: 960px){.dash-icons[_ngcontent-%COMP%]{font-size:2em}}@media only screen and (min-width: 959.98px){.dash-icons[_ngcontent-%COMP%]{font-size:2.5em}}.dash-icons[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;height:-moz-fit-content;height:fit-content}.routeroutlet[_ngcontent-%COMP%]{width:100%;height:100%}.spanbar[_ngcontent-%COMP%]{width:100%;text-align:left;padding:.5%;color:#fff;vertical-align:middle}"]
                }), t
            })();
            const rR = ["*"],
                _Q = [
                    [
                        ["", "mat-grid-avatar", ""],
                        ["", "matGridAvatar", ""]
                    ],
                    [
                        ["", "mat-line", ""],
                        ["", "matLine", ""]
                    ], "*"
                ],
                yQ = ["[mat-grid-avatar], [matGridAvatar]", "[mat-line], [matLine]", "*"];
            class vQ {
                constructor() {
                    this.columnIndex = 0, this.rowIndex = 0
                }
                get rowCount() {
                    return this.rowIndex + 1
                }
                get rowspan() {
                    const n = Math.max(...this.tracker);
                    return n > 1 ? this.rowCount + n - 1 : this.rowCount
                }
                update(n, e) {
                    this.columnIndex = 0, this.rowIndex = 0, this.tracker = new Array(n), this.tracker.fill(0, 0, this.tracker.length), this.positions = e.map(i => this._trackTile(i))
                }
                _trackTile(n) {
                    const e = this._findMatchingGap(n.colspan);
                    return this._markTilePosition(e, n), this.columnIndex = e + n.colspan, new wQ(this.rowIndex, e)
                }
                _findMatchingGap(n) {
                    let e = -1,
                        i = -1;
                    do {
                        this.columnIndex + n > this.tracker.length ? (this._nextRow(), e = this.tracker.indexOf(0, this.columnIndex), i = this._findGapEndIndex(e)) : (e = this.tracker.indexOf(0, this.columnIndex), -1 != e ? (i = this._findGapEndIndex(e), this.columnIndex = e + 1) : (this._nextRow(), e = this.tracker.indexOf(0, this.columnIndex), i = this._findGapEndIndex(e)))
                    } while (i - e < n || 0 == i);
                    return Math.max(e, 0)
                }
                _nextRow() {
                    this.columnIndex = 0, this.rowIndex++;
                    for (let n = 0; n < this.tracker.length; n++) this.tracker[n] = Math.max(0, this.tracker[n] - 1)
                }
                _findGapEndIndex(n) {
                    for (let e = n + 1; e < this.tracker.length; e++)
                        if (0 != this.tracker[e]) return e;
                    return this.tracker.length
                }
                _markTilePosition(n, e) {
                    for (let i = 0; i < e.colspan; i++) this.tracker[n + i] = e.rowspan
                }
            }
            class wQ {
                constructor(n, e) {
                    this.row = n, this.col = e
                }
            }
            const sR = new R("MAT_GRID_LIST");
            let oR = (() => {
                    class t {
                        constructor(e, i) {
                            this._element = e, this._gridList = i, this._rowspan = 1, this._colspan = 1
                        }
                        get rowspan() {
                            return this._rowspan
                        }
                        set rowspan(e) {
                            this._rowspan = Math.round(ht(e))
                        }
                        get colspan() {
                            return this._colspan
                        }
                        set colspan(e) {
                            this._colspan = Math.round(ht(e))
                        }
                        _setStyle(e, i) {
                            this._element.nativeElement.style[e] = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(sR, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-grid-tile"]
                        ],
                        hostAttrs: [1, "mat-grid-tile"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && q("rowspan", i.rowspan)("colspan", i.colspan)
                        },
                        inputs: {
                            rowspan: "rowspan",
                            colspan: "colspan"
                        },
                        exportAs: ["matGridTile"],
                        ngContentSelectors: rR,
                        decls: 2,
                        vars: 0,
                        consts: [
                            [1, "mat-grid-tile-content"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "div", 0), me(1), g())
                        },
                        styles: [".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Nv = (() => {
                    class t {
                        constructor(e) {
                            this._element = e
                        }
                        ngAfterContentInit() {
                            ! function u1(t, n, e = "mat") {
                                t.changes.pipe(pt(t)).subscribe(({
                                    length: i
                                }) => {
                                    Nd(n, `${e}-2-line`, !1), Nd(n, `${e}-3-line`, !1), Nd(n, `${e}-multi-line`, !1), 2 === i || 3 === i ? Nd(n, `${e}-${i}-line`, !0) : i > 3 && Nd(n, `${e}-multi-line`, !0)
                                })
                            }(this._lines, this._element)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-grid-tile-header"],
                            ["mat-grid-tile-footer"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, d1, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i._lines = s)
                            }
                        },
                        ngContentSelectors: yQ,
                        decls: 4,
                        vars: 0,
                        consts: [
                            [1, "mat-grid-list-text"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(_Q), me(0), f(1, "div", 0), me(2, 1), g(), me(3, 2))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Bv = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-grid-tile-footer"]
                        ],
                        hostAttrs: [1, "mat-grid-tile-footer"]
                    }), t
                })();
            const CQ = /^-?\d+((\.\d+)?[A-Za-z%$]?)+$/;
            class Vv {
                constructor() {
                    this._rows = 0, this._rowspan = 0
                }
                init(n, e, i, r) {
                    this._gutterSize = aR(n), this._rows = e.rowCount, this._rowspan = e.rowspan, this._cols = i, this._direction = r
                }
                getBaseTileSize(n, e) {
                    return `(${n}% - (${this._gutterSize} * ${e}))`
                }
                getTilePosition(n, e) {
                    return 0 === e ? "0" : pa(`(${n} + ${this._gutterSize}) * ${e}`)
                }
                getTileSize(n, e) {
                    return `(${n} * ${e}) + (${e-1} * ${this._gutterSize})`
                }
                setStyle(n, e, i) {
                    let r = 100 / this._cols,
                        s = (this._cols - 1) / this._cols;
                    this.setColStyles(n, i, r, s), this.setRowStyles(n, e, r, s)
                }
                setColStyles(n, e, i, r) {
                    let s = this.getBaseTileSize(i, r);
                    n._setStyle("rtl" === this._direction ? "right" : "left", this.getTilePosition(s, e)), n._setStyle("width", pa(this.getTileSize(s, n.colspan)))
                }
                getGutterSpan() {
                    return `${this._gutterSize} * (${this._rowspan} - 1)`
                }
                getTileSpan(n) {
                    return `${this._rowspan} * ${this.getTileSize(n,1)}`
                }
                getComputedHeight() {
                    return null
                }
            }
            class xQ extends Vv {
                constructor(n) {
                    super(), this.fixedRowHeight = n
                }
                init(n, e, i, r) {
                    super.init(n, e, i, r), this.fixedRowHeight = aR(this.fixedRowHeight), CQ.test(this.fixedRowHeight)
                }
                setRowStyles(n, e) {
                    n._setStyle("top", this.getTilePosition(this.fixedRowHeight, e)), n._setStyle("height", pa(this.getTileSize(this.fixedRowHeight, n.rowspan)))
                }
                getComputedHeight() {
                    return ["height", pa(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)]
                }
                reset(n) {
                    n._setListStyle(["height", null]), n._tiles && n._tiles.forEach(e => {
                        e._setStyle("top", null), e._setStyle("height", null)
                    })
                }
            }
            class DQ extends Vv {
                constructor(n) {
                    super(), this._parseRatio(n)
                }
                setRowStyles(n, e, i, r) {
                    this.baseTileHeight = this.getBaseTileSize(i / this.rowHeightRatio, r), n._setStyle("marginTop", this.getTilePosition(this.baseTileHeight, e)), n._setStyle("paddingTop", pa(this.getTileSize(this.baseTileHeight, n.rowspan)))
                }
                getComputedHeight() {
                    return ["paddingBottom", pa(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)]
                }
                reset(n) {
                    n._setListStyle(["paddingBottom", null]), n._tiles.forEach(e => {
                        e._setStyle("marginTop", null), e._setStyle("paddingTop", null)
                    })
                }
                _parseRatio(n) {
                    const e = n.split(":");
                    this.rowHeightRatio = parseFloat(e[0]) / parseFloat(e[1])
                }
            }
            class MQ extends Vv {
                setRowStyles(n, e) {
                    let s = this.getBaseTileSize(100 / this._rowspan, (this._rows - 1) / this._rows);
                    n._setStyle("top", this.getTilePosition(s, e)), n._setStyle("height", pa(this.getTileSize(s, n.rowspan)))
                }
                reset(n) {
                    n._tiles && n._tiles.forEach(e => {
                        e._setStyle("top", null), e._setStyle("height", null)
                    })
                }
            }

            function pa(t) {
                return `calc(${t})`
            }

            function aR(t) {
                return t.match(/([A-Za-z%]+)$/) ? t : `${t}px`
            }
            let kQ = (() => {
                    class t {
                        constructor(e, i) {
                            this._element = e, this._dir = i, this._gutter = "1px"
                        }
                        get cols() {
                            return this._cols
                        }
                        set cols(e) {
                            this._cols = Math.max(1, Math.round(ht(e)))
                        }
                        get gutterSize() {
                            return this._gutter
                        }
                        set gutterSize(e) {
                            this._gutter = `${e??""}`
                        }
                        get rowHeight() {
                            return this._rowHeight
                        }
                        set rowHeight(e) {
                            const i = `${e??""}`;
                            i !== this._rowHeight && (this._rowHeight = i, this._setTileStyler(this._rowHeight))
                        }
                        ngOnInit() {
                            this._checkCols(), this._checkRowHeight()
                        }
                        ngAfterContentChecked() {
                            this._layoutTiles()
                        }
                        _checkCols() {}
                        _checkRowHeight() {
                            this._rowHeight || this._setTileStyler("1:1")
                        }
                        _setTileStyler(e) {
                            this._tileStyler && this._tileStyler.reset(this), this._tileStyler = "fit" === e ? new MQ : e && e.indexOf(":") > -1 ? new DQ(e) : new xQ(e)
                        }
                        _layoutTiles() {
                            this._tileCoordinator || (this._tileCoordinator = new vQ);
                            const e = this._tileCoordinator,
                                i = this._tiles.filter(s => !s._gridList || s._gridList === this),
                                r = this._dir ? this._dir.value : "ltr";
                            this._tileCoordinator.update(this.cols, i), this._tileStyler.init(this.gutterSize, e, this.cols, r), i.forEach((s, o) => {
                                const a = e.positions[o];
                                this._tileStyler.setStyle(s, a.row, a.col)
                            }), this._setListStyle(this._tileStyler.getComputedHeight())
                        }
                        _setListStyle(e) {
                            e && (this._element.nativeElement.style[e[0]] = e[1])
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Mt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-grid-list"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, oR, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i._tiles = s)
                            }
                        },
                        hostAttrs: [1, "mat-grid-list"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && q("cols", i.cols)
                        },
                        inputs: {
                            cols: "cols",
                            gutterSize: "gutterSize",
                            rowHeight: "rowHeight"
                        },
                        exportAs: ["matGridList"],
                        features: [Q([{
                            provide: sR,
                            useExisting: t
                        }])],
                        ngContentSelectors: rR,
                        decls: 2,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "div"), me(1), g())
                        },
                        styles: [".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                lR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [qf, de, qf, de]
                    }), t
                })(),
                AQ = (() => {
                    class t {
                        constructor() {
                            this._vertical = !1, this._inset = !1
                        }
                        get vertical() {
                            return this._vertical
                        }
                        set vertical(e) {
                            this._vertical = G(e)
                        }
                        get inset() {
                            return this._inset
                        }
                        set inset(e) {
                            this._inset = G(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-divider"]
                        ],
                        hostAttrs: ["role", "separator", 1, "mat-divider"],
                        hostVars: 7,
                        hostBindings: function(e, i) {
                            2 & e && (q("aria-orientation", i.vertical ? "vertical" : "horizontal"), re("mat-divider-vertical", i.vertical)("mat-divider-horizontal", !i.vertical)("mat-divider-inset", i.inset))
                        },
                        inputs: {
                            vertical: "vertical",
                            inset: "inset"
                        },
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        styles: [".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                cR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, de]
                    }), t
                })(),
                EQ = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.router = e, this.redirection = i, this.auth = r
                        }
                        ngOnInit() {}
                        clickVehicle() {
                            this.router.navigate(["/login"])
                        }
                        Route(e) {
                            1 === e && this.router.navigate(["/personen"]), 2 === e && this.router.navigate(["/voertuigen"]), 4 === e && (this.auth.hasJob("ambulance") ? this.redirection.navigate("https://porto.tdafivem.nl/") : this.router.navigate(["/porto"]))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(gt), u(AI), u(Bn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-home"]
                        ],
                        decls: 31,
                        vars: 16,
                        consts: [
                            [1, "main"],
                            ["cols", "18", "rowHeight", "2:1"],
                            [3, "colspan", "rowspan"],
                            [1, "spantext"],
                            [1, "headtext"],
                            ["mat-raised-button", "", 1, "mainbutton", 3, "click"],
                            ["mat-raised-button", "", "disabled", "", 1, "mainbutton", 3, "click"],
                            [1, "spanbar"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0)(1, "mat-grid-list", 1)(2, "mat-grid-tile", 2)(3, "span", 3)(4, "p", 4), w(5, "Welkom in TedeaPolis Meos!"), g(), f(6, "p")(7, "strong")(8, "u"), w(9, "systeem is uitsluitend voor geautoriseerd gebruik. Misbruik van dit systeem kan leiden tot ontslag en/of strafvervolging"), g()()()()(), f(10, "mat-grid-tile", 2)(11, "button", 5), T("click", function() {
                                return i.Route(1)
                            }), w(12, "Persoon"), g()(), f(13, "mat-grid-tile", 2)(14, "button", 5), T("click", function() {
                                return i.Route(2)
                            }), w(15, "Voertuigen"), g()(), f(16, "mat-grid-tile", 2)(17, "button", 6), T("click", function() {
                                return i.Route(3)
                            }), w(18, "Arrestanten"), g()(), f(19, "mat-grid-tile", 2)(20, "span", 7), E(21, "mat-divider"), g()(), f(22, "mat-grid-tile", 2)(23, "button", 5), T("click", function() {
                                return i.Route(4)
                            }), w(24, "Porto"), g()(), f(25, "mat-grid-tile", 2)(26, "button", 6), T("click", function() {
                                return i.Route(5)
                            }), w(27, "I8"), g()(), f(28, "mat-grid-tile", 2)(29, "button", 6), T("click", function() {
                                return i.Route(6)
                            }), w(30, "Justitie"), g()()()()), 2 & e && (p(2), y("colspan", 18)("rowspan", 3), p(8), y("colspan", 6)("rowspan", 6), p(3), y("colspan", 6)("rowspan", 6), p(3), y("colspan", 6)("rowspan", 6), p(3), y("colspan", 18)("rowspan", 1), p(3), y("colspan", 6)("rowspan", 6), p(3), y("colspan", 6)("rowspan", 6), p(3), y("colspan", 6)("rowspan", 6))
                        },
                        dependencies: [kQ, oR, Xt, AQ],
                        styles: [".continaer[_ngcontent-%COMP%]{margin:auto}.icon-button[_ngcontent-%COMP%]{height:calc(100% - 1px);width:calc(100% - 1px);text-align:center;box-shadow:none}.homepage-icon-wrapper[_ngcontent-%COMP%] > mat-icon[_ngcontent-%COMP%]{min-width:100px;min-height:100px;font-size:8em;line-height:8em}.homepage-icon-wrapper[_ngcontent-%COMP%]{min-width:100px;min-height:100px}.icon-container[_ngcontent-%COMP%]{width:32%;margin:auto}@media (min-width: 992px),(max-width: 768px){.icon-container[_ngcontent-%COMP%]{min-width:300px;margin-top:4px}.spacer[_ngcontent-%COMP%]{padding:16% 0}}@media (max-width: 992px) and (min-width: 768px){.icon-container[_ngcontent-%COMP%]{min-width:200px;margin-top:4px}.spacer[_ngcontent-%COMP%]{padding:10% 0}}@media (min-width: 768px){.main-home-container[_ngcontent-%COMP%]{margin:10px auto auto;display:flex}}.main[_ngcontent-%COMP%]{width:100%;height:100%;padding:.5%}.mainbutton[_ngcontent-%COMP%]{width:100%;height:100%;margin:3%;color:#fff;background-color:#01579b!important}mat-grid-list[_ngcontent-%COMP%]{width:100%;height:100%}.spantext[_ngcontent-%COMP%]{width:100%;height:100%;text-align:left;padding-left:.5%}.spanbar[_ngcontent-%COMP%]{width:100%;text-align:left;padding:.5%}.headtext[_ngcontent-%COMP%]{font-size:xx-large!important}.tablediv[_ngcontent-%COMP%]{height:10%;width:99.5%;overflow-y:scroll!important}button[_ngcontent-%COMP%]{font-size:xx-large!important}"]
                    }), t
                })();

            function Hv(t, n) {
                return e => function TQ(t, n, e) {
                    const i = t.get(n),
                        r = t.get(e);
                    if (!r) throw new Error("matchingControl is null!");
                    if (!i) throw new Error("control is null!");
                    return r.errors && !r.errors.mustMatch ? null : i.value !== r.value ? (r.setErrors({
                        mustMatch: !0
                    }), {
                        mustMatch: {
                            message: "Wachtwoorden komen niet overeen"
                        }
                    }) : (r.setErrors(null), null)
                }(e, t, n)
            }

            function IQ(t, n, e) {
                const {
                    password: i,
                    passwordConfirm: r
                } = t.value;
                return i ? r && r === i ? null : {
                    fieldMatch: {
                        message: "Wachtwoorden komen niet overeen!"
                    }
                } : null
            }

            function FQ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 2)(1, "button", 3), T("click", function() {
                        return ne(e), ie(x().action())
                    }), w(2), g()()
                }
                if (2 & t) {
                    const e = x();
                    p(2), ve(e.data.action)
                }
            }

            function OQ(t, n) {}
            const dR = new R("MatSnackBarData");
            class Ip {
                constructor() {
                    this.politeness = "assertive", this.announcementMessage = "", this.duration = 0, this.data = null, this.horizontalPosition = "center", this.verticalPosition = "bottom"
                }
            }
            const PQ = Math.pow(2, 31) - 1;
            class $v {
                constructor(n, e) {
                    this._overlayRef = e, this._afterDismissed = new H, this._afterOpened = new H, this._onAction = new H, this._dismissedByAction = !1, this.containerInstance = n, n._onExit.subscribe(() => this._finishDismiss())
                }
                dismiss() {
                    this._afterDismissed.closed || this.containerInstance.exit(), clearTimeout(this._durationTimeoutId)
                }
                dismissWithAction() {
                    this._onAction.closed || (this._dismissedByAction = !0, this._onAction.next(), this._onAction.complete(), this.dismiss()), clearTimeout(this._durationTimeoutId)
                }
                closeWithAction() {
                    this.dismissWithAction()
                }
                _dismissAfter(n) {
                    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(n, PQ))
                }
                _open() {
                    this._afterOpened.closed || (this._afterOpened.next(), this._afterOpened.complete())
                }
                _finishDismiss() {
                    this._overlayRef.dispose(), this._onAction.closed || this._onAction.complete(), this._afterDismissed.next({
                        dismissedByAction: this._dismissedByAction
                    }), this._afterDismissed.complete(), this._dismissedByAction = !1
                }
                afterDismissed() {
                    return this._afterDismissed
                }
                afterOpened() {
                    return this.containerInstance._onEnter
                }
                onAction() {
                    return this._onAction
                }
            }
            let LQ = (() => {
                class t {
                    constructor(e, i) {
                        this.snackBarRef = e, this.data = i
                    }
                    action() {
                        this.snackBarRef.dismissWithAction()
                    }
                    get hasAction() {
                        return !!this.data.action
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u($v), u(dR))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["simple-snack-bar"]
                    ],
                    hostAttrs: [1, "mat-simple-snackbar"],
                    decls: 3,
                    vars: 2,
                    consts: [
                        [1, "mat-simple-snack-bar-content"],
                        ["class", "mat-simple-snackbar-action", 4, "ngIf"],
                        [1, "mat-simple-snackbar-action"],
                        ["mat-button", "", 3, "click"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "span", 0), w(1), g(), b(2, FQ, 3, 1, "div", 1)), 2 & e && (p(1), ve(i.data.message), p(1), y("ngIf", i.hasAction))
                    },
                    dependencies: [at, Xt],
                    styles: [".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}"],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();
            const NQ = {
                snackBarState: Nt("state", [Oe("void, hidden", ee({
                    transform: "scale(0.8)",
                    opacity: 0
                })), Oe("visible", ee({
                    transform: "scale(1)",
                    opacity: 1
                })), Ue("* => visible", Ye("150ms cubic-bezier(0, 0, 0.2, 1)")), Ue("* => void, * => hidden", Ye("75ms cubic-bezier(0.4, 0.0, 1, 1)", ee({
                    opacity: 0
                })))])
            };
            let BQ = (() => {
                    class t extends zf {
                        constructor(e, i, r, s, o) {
                            super(), this._ngZone = e, this._elementRef = i, this._changeDetectorRef = r, this._platform = s, this.snackBarConfig = o, this._announceDelay = 150, this._destroyed = !1, this._onAnnounce = new H, this._onExit = new H, this._onEnter = new H, this._animationState = "void", this.attachDomPortal = a => {
                                this._assertNotAttached();
                                const l = this._portalOutlet.attachDomPortal(a);
                                return this._afterPortalAttached(), l
                            }, this._live = "assertive" !== o.politeness || o.announcementMessage ? "off" === o.politeness ? "off" : "polite" : "assertive", this._platform.FIREFOX && ("polite" === this._live && (this._role = "status"), "assertive" === this._live && (this._role = "alert"))
                        }
                        attachComponentPortal(e) {
                            this._assertNotAttached();
                            const i = this._portalOutlet.attachComponentPortal(e);
                            return this._afterPortalAttached(), i
                        }
                        attachTemplatePortal(e) {
                            this._assertNotAttached();
                            const i = this._portalOutlet.attachTemplatePortal(e);
                            return this._afterPortalAttached(), i
                        }
                        onAnimationEnd(e) {
                            const {
                                fromState: i,
                                toState: r
                            } = e;
                            if (("void" === r && "void" !== i || "hidden" === r) && this._completeExit(), "visible" === r) {
                                const s = this._onEnter;
                                this._ngZone.run(() => {
                                    s.next(), s.complete()
                                })
                            }
                        }
                        enter() {
                            this._destroyed || (this._animationState = "visible", this._changeDetectorRef.detectChanges(), this._screenReaderAnnounce())
                        }
                        exit() {
                            return this._ngZone.run(() => {
                                this._animationState = "hidden", this._elementRef.nativeElement.setAttribute("mat-exit", ""), clearTimeout(this._announceTimeoutId)
                            }), this._onExit
                        }
                        ngOnDestroy() {
                            this._destroyed = !0, this._completeExit()
                        }
                        _completeExit() {
                            this._ngZone.onMicrotaskEmpty.pipe(Fe(1)).subscribe(() => {
                                this._ngZone.run(() => {
                                    this._onExit.next(), this._onExit.complete()
                                })
                            })
                        }
                        _afterPortalAttached() {
                            const e = this._elementRef.nativeElement,
                                i = this.snackBarConfig.panelClass;
                            i && (Array.isArray(i) ? i.forEach(r => e.classList.add(r)) : e.classList.add(i))
                        }
                        _assertNotAttached() {
                            this._portalOutlet.hasAttached()
                        }
                        _screenReaderAnnounce() {
                            this._announceTimeoutId || this._ngZone.runOutsideAngular(() => {
                                this._announceTimeoutId = setTimeout(() => {
                                    const e = this._elementRef.nativeElement.querySelector("[aria-hidden]"),
                                        i = this._elementRef.nativeElement.querySelector("[aria-live]");
                                    if (e && i) {
                                        let r = null;
                                        this._platform.isBrowser && document.activeElement instanceof HTMLElement && e.contains(document.activeElement) && (r = document.activeElement), e.removeAttribute("aria-hidden"), i.appendChild(e), r ? .focus(), this._onAnnounce.next(), this._onAnnounce.complete()
                                    }
                                }, this._announceDelay)
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ce), u(N), u(ge), u(Ft), u(Ip))
                    }, t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && J(Ki, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i._portalOutlet = r.first)
                            }
                        },
                        features: [A]
                    }), t
                })(),
                VQ = (() => {
                    class t extends BQ {
                        _afterPortalAttached() {
                            super._afterPortalAttached(), "center" === this.snackBarConfig.horizontalPosition && this._elementRef.nativeElement.classList.add("mat-snack-bar-center"), "top" === this.snackBarConfig.verticalPosition && this._elementRef.nativeElement.classList.add("mat-snack-bar-top")
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["snack-bar-container"]
                        ],
                        hostAttrs: [1, "mat-snack-bar-container"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            1 & e && qc("@state.done", function(s) {
                                return i.onAnimationEnd(s)
                            }), 2 & e && ll("@state", i._animationState)
                        },
                        features: [A],
                        decls: 3,
                        vars: 2,
                        consts: [
                            ["aria-hidden", "true"],
                            ["cdkPortalOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0), b(1, OQ, 0, 0, "ng-template", 1), g(), E(2, "div")), 2 & e && (p(2), q("aria-live", i._live)("role", i._role))
                        },
                        dependencies: [Ki],
                        styles: [".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}"],
                        encapsulation: 2,
                        data: {
                            animation: [NQ.snackBarState]
                        }
                    }), t
                })(),
                uR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [to, $r, ut, Cs, de, de]
                    }), t
                })();
            const hR = new R("mat-snack-bar-default-options", {
                providedIn: "root",
                factory: function HQ() {
                    return new Ip
                }
            });
            let $Q = (() => {
                    class t {
                        constructor(e, i, r, s, o, a) {
                            this._overlay = e, this._live = i, this._injector = r, this._breakpointObserver = s, this._parentSnackBar = o, this._defaultConfig = a, this._snackBarRefAtThisLevel = null
                        }
                        get _openedSnackBarRef() {
                            const e = this._parentSnackBar;
                            return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel
                        }
                        set _openedSnackBarRef(e) {
                            this._parentSnackBar ? this._parentSnackBar._openedSnackBarRef = e : this._snackBarRefAtThisLevel = e
                        }
                        openFromComponent(e, i) {
                            return this._attach(e, i)
                        }
                        openFromTemplate(e, i) {
                            return this._attach(e, i)
                        }
                        open(e, i = "", r) {
                            const s = { ...this._defaultConfig,
                                ...r
                            };
                            return s.data = {
                                message: e,
                                action: i
                            }, s.announcementMessage === e && (s.announcementMessage = void 0), this.openFromComponent(this.simpleSnackBarComponent, s)
                        }
                        dismiss() {
                            this._openedSnackBarRef && this._openedSnackBarRef.dismiss()
                        }
                        ngOnDestroy() {
                            this._snackBarRefAtThisLevel && this._snackBarRefAtThisLevel.dismiss()
                        }
                        _attachSnackBarContainer(e, i) {
                            const s = Ct.create({
                                    parent: i && i.viewContainerRef && i.viewContainerRef.injector || this._injector,
                                    providers: [{
                                        provide: Ip,
                                        useValue: i
                                    }]
                                }),
                                o = new eo(this.snackBarContainerComponent, i.viewContainerRef, s),
                                a = e.attach(o);
                            return a.instance.snackBarConfig = i, a.instance
                        }
                        _attach(e, i) {
                            const r = { ...new Ip,
                                    ...this._defaultConfig,
                                    ...i
                                },
                                s = this._createOverlay(r),
                                o = this._attachSnackBarContainer(s, r),
                                a = new $v(o, s);
                            if (e instanceof rt) {
                                const l = new yr(e, null, {
                                    $implicit: r.data,
                                    snackBarRef: a
                                });
                                a.instance = o.attachTemplatePortal(l)
                            } else {
                                const l = this._createInjector(r, a),
                                    c = new eo(e, void 0, l),
                                    d = o.attachComponentPortal(c);
                                a.instance = d.instance
                            }
                            return this._breakpointObserver.observe("(max-width: 599.98px) and (orientation: portrait)").pipe(le(s.detachments())).subscribe(l => {
                                s.overlayElement.classList.toggle(this.handsetCssClass, l.matches)
                            }), r.announcementMessage && o._onAnnounce.subscribe(() => {
                                this._live.announce(r.announcementMessage, r.politeness)
                            }), this._animateSnackBar(a, r), this._openedSnackBarRef = a, this._openedSnackBarRef
                        }
                        _animateSnackBar(e, i) {
                            e.afterDismissed().subscribe(() => {
                                this._openedSnackBarRef == e && (this._openedSnackBarRef = null), i.announcementMessage && this._live.clear()
                            }), this._openedSnackBarRef ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                                e.containerInstance.enter()
                            }), this._openedSnackBarRef.dismiss()) : e.containerInstance.enter(), i.duration && i.duration > 0 && e.afterOpened().subscribe(() => e._dismissAfter(i.duration))
                        }
                        _createOverlay(e) {
                            const i = new na;
                            i.direction = e.direction;
                            let r = this._overlay.position().global();
                            const s = "rtl" === e.direction,
                                o = "left" === e.horizontalPosition || "start" === e.horizontalPosition && !s || "end" === e.horizontalPosition && s,
                                a = !o && "center" !== e.horizontalPosition;
                            return o ? r.left("0") : a ? r.right("0") : r.centerHorizontally(), "top" === e.verticalPosition ? r.top("0") : r.bottom("0"), i.positionStrategy = r, this._overlay.create(i)
                        }
                        _createInjector(e, i) {
                            return Ct.create({
                                parent: e && e.viewContainerRef && e.viewContainerRef.injector || this._injector,
                                providers: [{
                                    provide: $v,
                                    useValue: i
                                }, {
                                    provide: dR,
                                    useValue: e.data
                                }]
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(vn), C(Bf), C(Ct), C(Ff), C(t, 12), C(hR))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Xd = (() => {
                    class t extends $Q {
                        constructor(e, i, r, s, o, a) {
                            super(e, i, r, s, o, a), this.simpleSnackBarComponent = LQ, this.snackBarContainerComponent = VQ, this.handsetCssClass = "mat-snack-bar-handset"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(vn), C(Bf), C(Ct), C(Ff), C(t, 12), C(hR))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: uR
                    }), t
                })();

            function jQ(t, n) {
                1 & t && me(0)
            }
            const zQ = ["*"];
            let fR = (() => {
                    class t {
                        constructor(e) {
                            this._elementRef = e
                        }
                        focus() {
                            this._elementRef.nativeElement.focus()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkStepHeader", ""]
                        ],
                        hostAttrs: ["role", "tab"]
                    }), t
                })(),
                pR = (() => {
                    class t {
                        constructor(e) {
                            this.template = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkStepLabel", ""]
                        ]
                    }), t
                })(),
                UQ = 0;
            const mR = new R("STEPPER_GLOBAL_OPTIONS");
            let jv = (() => {
                    class t {
                        constructor(e, i) {
                            this._stepper = e, this.interacted = !1, this.interactedStream = new V, this._editable = !0, this._optional = !1, this._completedOverride = null, this._customError = null, this._stepperOptions = i || {}, this._displayDefaultIndicatorType = !1 !== this._stepperOptions.displayDefaultIndicatorType
                        }
                        get editable() {
                            return this._editable
                        }
                        set editable(e) {
                            this._editable = G(e)
                        }
                        get optional() {
                            return this._optional
                        }
                        set optional(e) {
                            this._optional = G(e)
                        }
                        get completed() {
                            return this._completedOverride ? ? this._getDefaultCompleted()
                        }
                        set completed(e) {
                            this._completedOverride = G(e)
                        }
                        _getDefaultCompleted() {
                            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted
                        }
                        get hasError() {
                            return this._customError ? ? this._getDefaultError()
                        }
                        set hasError(e) {
                            this._customError = G(e)
                        }
                        _getDefaultError() {
                            return this.stepControl && this.stepControl.invalid && this.interacted
                        }
                        select() {
                            this._stepper.selected = this
                        }
                        reset() {
                            this.interacted = !1, null != this._completedOverride && (this._completedOverride = !1), null != this._customError && (this._customError = !1), this.stepControl && this.stepControl.reset()
                        }
                        ngOnChanges() {
                            this._stepper._stateChanged()
                        }
                        _markAsInteracted() {
                            this.interacted || (this.interacted = !0, this.interactedStream.emit(this))
                        }
                        _showError() {
                            return this._stepperOptions.showError ? ? null != this._customError
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ve(() => Jd)), u(mR, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["cdk-step"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, pR, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i.stepLabel = s.first)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && J(rt, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i.content = r.first)
                            }
                        },
                        inputs: {
                            stepControl: "stepControl",
                            label: "label",
                            errorMessage: "errorMessage",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            state: "state",
                            editable: "editable",
                            optional: "optional",
                            completed: "completed",
                            hasError: "hasError"
                        },
                        outputs: {
                            interactedStream: "interacted"
                        },
                        exportAs: ["cdkStep"],
                        features: [ze],
                        ngContentSelectors: zQ,
                        decls: 1,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, jQ, 1, 0, "ng-template"))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Jd = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._dir = e, this._changeDetectorRef = i, this._elementRef = r, this._destroyed = new H, this.steps = new Pr, this._sortedHeaders = new Pr, this._linear = !1, this._selectedIndex = 0, this.selectionChange = new V, this._orientation = "horizontal", this._groupId = UQ++
                        }
                        get linear() {
                            return this._linear
                        }
                        set linear(e) {
                            this._linear = G(e)
                        }
                        get selectedIndex() {
                            return this._selectedIndex
                        }
                        set selectedIndex(e) {
                            const i = ht(e);
                            this.steps && this._steps ? (this._isValidIndex(i), this.selected ? ._markAsInteracted(), this._selectedIndex !== i && !this._anyControlsInvalidOrPending(i) && (i >= this._selectedIndex || this.steps.toArray()[i].editable) && this._updateSelectedItemIndex(i)) : this._selectedIndex = i
                        }
                        get selected() {
                            return this.steps ? this.steps.toArray()[this.selectedIndex] : void 0
                        }
                        set selected(e) {
                            this.selectedIndex = e && this.steps ? this.steps.toArray().indexOf(e) : -1
                        }
                        get orientation() {
                            return this._orientation
                        }
                        set orientation(e) {
                            this._orientation = e, this._keyManager && this._keyManager.withVerticalOrientation("vertical" === e)
                        }
                        ngAfterContentInit() {
                            this._steps.changes.pipe(pt(this._steps), le(this._destroyed)).subscribe(e => {
                                this.steps.reset(e.filter(i => i._stepper === this)), this.steps.notifyOnChanges()
                            })
                        }
                        ngAfterViewInit() {
                            this._stepHeader.changes.pipe(pt(this._stepHeader), le(this._destroyed)).subscribe(e => {
                                this._sortedHeaders.reset(e.toArray().sort((i, r) => i._elementRef.nativeElement.compareDocumentPosition(r._elementRef.nativeElement) & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1)), this._sortedHeaders.notifyOnChanges()
                            }), this._keyManager = new Rd(this._sortedHeaders).withWrap().withHomeAndEnd().withVerticalOrientation("vertical" === this._orientation), (this._dir ? this._dir.change : z()).pipe(pt(this._layoutDirection()), le(this._destroyed)).subscribe(e => this._keyManager.withHorizontalOrientation(e)), this._keyManager.updateActiveItem(this._selectedIndex), this.steps.changes.subscribe(() => {
                                this.selected || (this._selectedIndex = Math.max(this._selectedIndex - 1, 0))
                            }), this._isValidIndex(this._selectedIndex) || (this._selectedIndex = 0)
                        }
                        ngOnDestroy() {
                            this.steps.destroy(), this._sortedHeaders.destroy(), this._destroyed.next(), this._destroyed.complete()
                        }
                        next() {
                            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1)
                        }
                        previous() {
                            this.selectedIndex = Math.max(this._selectedIndex - 1, 0)
                        }
                        reset() {
                            this._updateSelectedItemIndex(0), this.steps.forEach(e => e.reset()), this._stateChanged()
                        }
                        _getStepLabelId(e) {
                            return `cdk-step-label-${this._groupId}-${e}`
                        }
                        _getStepContentId(e) {
                            return `cdk-step-content-${this._groupId}-${e}`
                        }
                        _stateChanged() {
                            this._changeDetectorRef.markForCheck()
                        }
                        _getAnimationDirection(e) {
                            const i = e - this._selectedIndex;
                            return i < 0 ? "rtl" === this._layoutDirection() ? "next" : "previous" : i > 0 ? "rtl" === this._layoutDirection() ? "previous" : "next" : "current"
                        }
                        _getIndicatorType(e, i = "number") {
                            const r = this.steps.toArray()[e],
                                s = this._isCurrentStep(e);
                            return r._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(r, s) : this._getGuidelineLogic(r, s, i)
                        }
                        _getDefaultIndicatorLogic(e, i) {
                            return e._showError() && e.hasError && !i ? "error" : !e.completed || i ? "number" : e.editable ? "edit" : "done"
                        }
                        _getGuidelineLogic(e, i, r = "number") {
                            return e._showError() && e.hasError && !i ? "error" : e.completed && !i ? "done" : e.completed && i ? r : e.editable && i ? "edit" : r
                        }
                        _isCurrentStep(e) {
                            return this._selectedIndex === e
                        }
                        _getFocusIndex() {
                            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex
                        }
                        _updateSelectedItemIndex(e) {
                            const i = this.steps.toArray();
                            this.selectionChange.emit({
                                selectedIndex: e,
                                previouslySelectedIndex: this._selectedIndex,
                                selectedStep: i[e],
                                previouslySelectedStep: i[this._selectedIndex]
                            }), this._containsFocus() ? this._keyManager.setActiveItem(e) : this._keyManager.updateActiveItem(e), this._selectedIndex = e, this._stateChanged()
                        }
                        _onKeydown(e) {
                            const i = $t(e),
                                r = e.keyCode,
                                s = this._keyManager;
                            null == s.activeItemIndex || i || 32 !== r && 13 !== r ? s.onKeydown(e) : (this.selectedIndex = s.activeItemIndex, e.preventDefault())
                        }
                        _anyControlsInvalidOrPending(e) {
                            return !!(this._linear && e >= 0) && this.steps.toArray().slice(0, e).some(i => {
                                const r = i.stepControl;
                                return (r ? r.invalid || r.pending || !i.interacted : !i.completed) && !i.optional && !i._completedOverride
                            })
                        }
                        _layoutDirection() {
                            return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr"
                        }
                        _containsFocus() {
                            const e = this._elementRef.nativeElement,
                                i = Al();
                            return e === i || e.contains(i)
                        }
                        _isValidIndex(e) {
                            return e > -1 && (!this.steps || e < this.steps.length)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Mt, 8), u(ge), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkStepper", ""]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, jv, 5), _e(r, fR, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i._steps = s), O(s = P()) && (i._stepHeader = s)
                            }
                        },
                        inputs: {
                            linear: "linear",
                            selectedIndex: "selectedIndex",
                            selected: "selected",
                            orientation: "orientation"
                        },
                        outputs: {
                            selectionChange: "selectionChange"
                        },
                        exportAs: ["cdkStepper"]
                    }), t
                })(),
                GQ = (() => {
                    class t {
                        constructor(e) {
                            this._stepper = e, this.type = "submit"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Jd))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["button", "cdkStepperNext", ""]
                        ],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i._stepper.next()
                            }), 2 & e && xn("type", i.type)
                        },
                        inputs: {
                            type: "type"
                        }
                    }), t
                })(),
                WQ = (() => {
                    class t {
                        constructor(e) {
                            this._stepper = e, this.type = "button"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Jd))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["button", "cdkStepperPrevious", ""]
                        ],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i._stepper.previous()
                            }), 2 & e && xn("type", i.type)
                        },
                        inputs: {
                            type: "type"
                        }
                    }), t
                })(),
                qQ = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ta]
                    }), t
                })();

            function YQ(t, n) {
                if (1 & t && Wt(0, 8), 2 & t) {
                    const e = x();
                    y("ngTemplateOutlet", e.iconOverrides[e.state])("ngTemplateOutletContext", e._getIconContext())
                }
            }

            function QQ(t, n) {
                if (1 & t && (f(0, "span", 13), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e._getDefaultTextForState(e.state))
                }
            }

            function KQ(t, n) {
                if (1 & t && (f(0, "span", 14), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e._intl.completedLabel)
                }
            }

            function ZQ(t, n) {
                if (1 & t && (f(0, "span", 14), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e._intl.editableLabel)
                }
            }

            function XQ(t, n) {
                if (1 & t && (f(0, "mat-icon", 13), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e._getDefaultTextForState(e.state))
                }
            }

            function JQ(t, n) {
                if (1 & t && (oe(0, 9), b(1, QQ, 2, 1, "span", 10), b(2, KQ, 2, 1, "span", 11), b(3, ZQ, 2, 1, "span", 11), b(4, XQ, 2, 1, "mat-icon", 12), ae()), 2 & t) {
                    const e = x();
                    y("ngSwitch", e.state), p(1), y("ngSwitchCase", "number"), p(1), y("ngIf", "done" === e.state), p(1), y("ngIf", "edit" === e.state)
                }
            }

            function eK(t, n) {
                if (1 & t && (f(0, "div", 15), Wt(1, 16), g()), 2 & t) {
                    const e = x();
                    p(1), y("ngTemplateOutlet", e._templateLabel().template)
                }
            }

            function tK(t, n) {
                if (1 & t && (f(0, "div", 15), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), ve(e.label)
                }
            }

            function nK(t, n) {
                if (1 & t && (f(0, "div", 17), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), ve(e._intl.optionalLabel)
                }
            }

            function iK(t, n) {
                if (1 & t && (f(0, "div", 18), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), ve(e.errorMessage)
                }
            }

            function rK(t, n) {}

            function sK(t, n) {
                if (1 & t && (me(0), b(1, rK, 0, 0, "ng-template", 0)), 2 & t) {
                    const e = x();
                    p(1), y("cdkPortalOutlet", e._portal)
                }
            }
            const oK = ["*"];

            function aK(t, n) {
                1 & t && E(0, "div", 11)
            }
            const gR = function(t, n) {
                return {
                    step: t,
                    i: n
                }
            };

            function lK(t, n) {
                if (1 & t && (oe(0), Wt(1, 9), b(2, aK, 1, 0, "div", 10), ae()), 2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = n.last;
                    x(2);
                    const s = bt(4);
                    p(1), y("ngTemplateOutlet", s)("ngTemplateOutletContext", Uo(3, gR, e, i)), p(1), y("ngIf", !r)
                }
            }
            const _R = function(t) {
                    return {
                        animationDuration: t
                    }
                },
                yR = function(t, n) {
                    return {
                        value: t,
                        params: n
                    }
                };

            function cK(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 12), T("@horizontalStepTransition.done", function(r) {
                        return ne(e), ie(x(2)._animationDone.next(r))
                    }), Wt(1, 13), g()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x(2);
                    re("mat-horizontal-stepper-content-inactive", r.selectedIndex !== i), y("@horizontalStepTransition", Uo(8, yR, r._getAnimationDirection(i), gn(6, _R, r._getAnimationDuration())))("id", r._getStepContentId(i)), q("aria-labelledby", r._getStepLabelId(i)), p(1), y("ngTemplateOutlet", e.content)
                }
            }

            function dK(t, n) {
                if (1 & t && (f(0, "div", 4)(1, "div", 5), b(2, lK, 3, 6, "ng-container", 6), g(), f(3, "div", 7), b(4, cK, 2, 11, "div", 8), g()()), 2 & t) {
                    const e = x();
                    p(2), y("ngForOf", e.steps), p(2), y("ngForOf", e.steps)
                }
            }

            function uK(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 15), Wt(1, 9), f(2, "div", 16)(3, "div", 17), T("@verticalStepTransition.done", function(r) {
                        return ne(e), ie(x(2)._animationDone.next(r))
                    }), f(4, "div", 18), Wt(5, 13), g()()()()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = n.last,
                        s = x(2),
                        o = bt(4);
                    p(1), y("ngTemplateOutlet", o)("ngTemplateOutletContext", Uo(10, gR, e, i)), p(1), re("mat-stepper-vertical-line", !r), p(1), re("mat-vertical-stepper-content-inactive", s.selectedIndex !== i), y("@verticalStepTransition", Uo(15, yR, s._getAnimationDirection(i), gn(13, _R, s._getAnimationDuration())))("id", s._getStepContentId(i)), q("aria-labelledby", s._getStepLabelId(i)), p(2), y("ngTemplateOutlet", e.content)
                }
            }

            function hK(t, n) {
                if (1 & t && (oe(0), b(1, uK, 6, 18, "div", 14), ae()), 2 & t) {
                    const e = x();
                    p(1), y("ngForOf", e.steps)
                }
            }

            function fK(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-step-header", 19), T("click", function() {
                        return ie(ne(e).step.select())
                    })("keydown", function(r) {
                        return ne(e), ie(x()._onKeydown(r))
                    }), g()
                }
                if (2 & t) {
                    const e = n.step,
                        i = n.i,
                        r = x();
                    re("mat-horizontal-stepper-header", "horizontal" === r.orientation)("mat-vertical-stepper-header", "vertical" === r.orientation), y("tabIndex", r._getFocusIndex() === i ? 0 : -1)("id", r._getStepLabelId(i))("index", i)("state", r._getIndicatorType(i, e.state))("label", e.stepLabel || e.label)("selected", r.selectedIndex === i)("active", r._stepIsNavigable(i, e))("optional", e.optional)("errorMessage", e.errorMessage)("iconOverrides", r._iconOverrides)("disableRipple", r.disableRipple || !r._stepIsNavigable(i, e))("color", e.color || r.color), q("aria-posinset", i + 1)("aria-setsize", r.steps.length)("aria-controls", r._getStepContentId(i))("aria-selected", r.selectedIndex == i)("aria-label", e.ariaLabel || null)("aria-labelledby", !e.ariaLabel && e.ariaLabelledby ? e.ariaLabelledby : null)("aria-disabled", !r._stepIsNavigable(i, e) || null)
                }
            }
            let zv = (() => {
                    class t extends pR {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matStepLabel", ""]
                        ],
                        features: [A]
                    }), t
                })(),
                Rp = (() => {
                    class t {
                        constructor() {
                            this.changes = new H, this.optionalLabel = "Optional", this.completedLabel = "Completed", this.editableLabel = "Editable"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            const mK = {
                    provide: Rp,
                    deps: [
                        [new ii, new $i, Rp]
                    ],
                    useFactory: function pK(t) {
                        return t || new Rp
                    }
                },
                gK = Zi(class extends fR {
                    constructor(n) {
                        super(n)
                    }
                }, "primary");
            let bR = (() => {
                class t extends gK {
                    constructor(e, i, r, s) {
                        super(r), this._intl = e, this._focusMonitor = i, this._intlSubscription = e.changes.subscribe(() => s.markForCheck())
                    }
                    ngAfterViewInit() {
                        this._focusMonitor.monitor(this._elementRef, !0)
                    }
                    ngOnDestroy() {
                        this._intlSubscription.unsubscribe(), this._focusMonitor.stopMonitoring(this._elementRef)
                    }
                    focus(e, i) {
                        e ? this._focusMonitor.focusVia(this._elementRef, e, i) : this._elementRef.nativeElement.focus(i)
                    }
                    _stringLabel() {
                        return this.label instanceof zv ? null : this.label
                    }
                    _templateLabel() {
                        return this.label instanceof zv ? this.label : null
                    }
                    _getHostElement() {
                        return this._elementRef.nativeElement
                    }
                    _getIconContext() {
                        return {
                            index: this.index,
                            active: this.active,
                            optional: this.optional
                        }
                    }
                    _getDefaultTextForState(e) {
                        return "number" == e ? `${this.index+1}` : "edit" == e ? "create" : "error" == e ? "warning" : e
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Rp), u(dn), u(N), u(ge))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["mat-step-header"]
                    ],
                    hostAttrs: ["role", "tab", 1, "mat-step-header"],
                    inputs: {
                        color: "color",
                        state: "state",
                        label: "label",
                        errorMessage: "errorMessage",
                        iconOverrides: "iconOverrides",
                        index: "index",
                        selected: "selected",
                        active: "active",
                        optional: "optional",
                        disableRipple: "disableRipple"
                    },
                    features: [A],
                    decls: 10,
                    vars: 19,
                    consts: [
                        ["matRipple", "", 1, "mat-step-header-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled"],
                        [1, "mat-step-icon-content", 3, "ngSwitch"],
                        [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngSwitchCase"],
                        [3, "ngSwitch", 4, "ngSwitchDefault"],
                        [1, "mat-step-label"],
                        ["class", "mat-step-text-label", 4, "ngIf"],
                        ["class", "mat-step-optional", 4, "ngIf"],
                        ["class", "mat-step-sub-label-error", 4, "ngIf"],
                        [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                        [3, "ngSwitch"],
                        ["aria-hidden", "true", 4, "ngSwitchCase"],
                        ["class", "cdk-visually-hidden", 4, "ngIf"],
                        ["aria-hidden", "true", 4, "ngSwitchDefault"],
                        ["aria-hidden", "true"],
                        [1, "cdk-visually-hidden"],
                        [1, "mat-step-text-label"],
                        [3, "ngTemplateOutlet"],
                        [1, "mat-step-optional"],
                        [1, "mat-step-sub-label-error"]
                    ],
                    template: function(e, i) {
                        1 & e && (E(0, "div", 0), f(1, "div")(2, "div", 1), b(3, YQ, 1, 2, "ng-container", 2), b(4, JQ, 5, 4, "ng-container", 3), g()(), f(5, "div", 4), b(6, eK, 2, 1, "div", 5), b(7, tK, 2, 1, "div", 5), b(8, nK, 2, 1, "div", 6), b(9, iK, 2, 1, "div", 7), g()), 2 & e && (y("matRippleTrigger", i._getHostElement())("matRippleDisabled", i.disableRipple), p(1), F_("mat-step-icon-state-", i.state, " mat-step-icon"), re("mat-step-icon-selected", i.selected), p(1), y("ngSwitch", !(!i.iconOverrides || !i.iconOverrides[i.state])), p(1), y("ngSwitchCase", !0), p(2), re("mat-step-label-active", i.active)("mat-step-label-selected", i.selected)("mat-step-label-error", "error" == i.state), p(1), y("ngIf", i._templateLabel()), p(1), y("ngIf", i._stringLabel()), p(1), y("ngIf", i.optional && "error" != i.state), p(1), y("ngIf", "error" == i.state))
                    },
                    dependencies: [at, cd, ps, Yo, Sy, Yl, li],
                    styles: ['.mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:""}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}'],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();
            const CR = {
                horizontalStepTransition: Nt("horizontalStepTransition", [Oe("previous", ee({
                    transform: "translate3d(-100%, 0, 0)",
                    visibility: "hidden"
                })), Oe("current", ee({
                    transform: "none",
                    visibility: "inherit"
                })), Oe("next", ee({
                    transform: "translate3d(100%, 0, 0)",
                    visibility: "hidden"
                })), Ue("* => *", Ye("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)"), {
                    params: {
                        animationDuration: "500ms"
                    }
                })]),
                verticalStepTransition: Nt("verticalStepTransition", [Oe("previous", ee({
                    height: "0px",
                    visibility: "hidden"
                })), Oe("next", ee({
                    height: "0px",
                    visibility: "hidden"
                })), Oe("current", ee({
                    height: "*",
                    visibility: "inherit"
                })), Ue("* <=> current", Ye("{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)"), {
                    params: {
                        animationDuration: "225ms"
                    }
                })])
            };
            let _K = (() => {
                    class t {
                        constructor(e) {
                            this.templateRef = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["ng-template", "matStepperIcon", ""]
                        ],
                        inputs: {
                            name: ["matStepperIcon", "name"]
                        }
                    }), t
                })(),
                yK = (() => {
                    class t {
                        constructor(e) {
                            this._template = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["ng-template", "matStepContent", ""]
                        ]
                    }), t
                })(),
                xR = (() => {
                    class t extends jv {
                        constructor(e, i, r, s) {
                            super(e, s), this._errorStateMatcher = i, this._viewContainerRef = r, this._isSelected = Re.EMPTY
                        }
                        ngAfterContentInit() {
                            this._isSelected = this._stepper.steps.changes.pipe(vt(() => this._stepper.selectionChange.pipe(Z(e => e.selectedStep === this), pt(this._stepper.selected === this)))).subscribe(e => {
                                e && this._lazyContent && !this._portal && (this._portal = new yr(this._lazyContent._template, this._viewContainerRef))
                            })
                        }
                        ngOnDestroy() {
                            this._isSelected.unsubscribe()
                        }
                        isErrorState(e, i) {
                            return this._errorStateMatcher.isErrorState(e, i) || !!(e && e.invalid && this.interacted)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ve(() => DR)), u(io, 4), u(Je), u(mR, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-step"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, zv, 5), _e(r, yK, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i.stepLabel = s.first), O(s = P()) && (i._lazyContent = s.first)
                            }
                        },
                        inputs: {
                            color: "color"
                        },
                        exportAs: ["matStep"],
                        features: [Q([{
                            provide: io,
                            useExisting: t
                        }, {
                            provide: jv,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: oK,
                        decls: 1,
                        vars: 0,
                        consts: [
                            [3, "cdkPortalOutlet"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, sK, 2, 1, "ng-template"))
                        },
                        dependencies: [Ki],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                DR = (() => {
                    class t extends Jd {
                        constructor(e, i, r) {
                            super(e, i, r), this.steps = new Pr, this.animationDone = new V, this.labelPosition = "end", this.headerPosition = "top", this._iconOverrides = {}, this._animationDone = new H, this._animationDuration = "";
                            const s = r.nativeElement.nodeName.toLowerCase();
                            this.orientation = "mat-vertical-stepper" === s ? "vertical" : "horizontal"
                        }
                        get animationDuration() {
                            return this._animationDuration
                        }
                        set animationDuration(e) {
                            this._animationDuration = /^\d+$/.test(e) ? e + "ms" : e
                        }
                        ngAfterContentInit() {
                            super.ngAfterContentInit(), this._icons.forEach(({
                                name: e,
                                templateRef: i
                            }) => this._iconOverrides[e] = i), this.steps.changes.pipe(le(this._destroyed)).subscribe(() => {
                                this._stateChanged()
                            }), this._animationDone.pipe(Js((e, i) => e.fromState === i.fromState && e.toState === i.toState), le(this._destroyed)).subscribe(e => {
                                "current" === e.toState && this.animationDone.emit()
                            })
                        }
                        _stepIsNavigable(e, i) {
                            return i.completed || this.selectedIndex === e || !this.linear
                        }
                        _getAnimationDuration() {
                            return this.animationDuration ? this.animationDuration : "horizontal" === this.orientation ? "500ms" : "225ms"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Mt, 8), u(ge), u(N))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-stepper"],
                            ["mat-vertical-stepper"],
                            ["mat-horizontal-stepper"],
                            ["", "matStepper", ""]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, xR, 5), _e(r, _K, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i._steps = s), O(s = P()) && (i._icons = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && J(bR, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._stepHeader = r)
                            }
                        },
                        hostAttrs: ["role", "tablist"],
                        hostVars: 11,
                        hostBindings: function(e, i) {
                            2 & e && (q("aria-orientation", i.orientation), re("mat-stepper-horizontal", "horizontal" === i.orientation)("mat-stepper-vertical", "vertical" === i.orientation)("mat-stepper-label-position-end", "horizontal" === i.orientation && "end" == i.labelPosition)("mat-stepper-label-position-bottom", "horizontal" === i.orientation && "bottom" == i.labelPosition)("mat-stepper-header-position-bottom", "bottom" === i.headerPosition))
                        },
                        inputs: {
                            selectedIndex: "selectedIndex",
                            disableRipple: "disableRipple",
                            color: "color",
                            labelPosition: "labelPosition",
                            headerPosition: "headerPosition",
                            animationDuration: "animationDuration"
                        },
                        outputs: {
                            animationDone: "animationDone"
                        },
                        exportAs: ["matStepper", "matVerticalStepper", "matHorizontalStepper"],
                        features: [Q([{
                            provide: Jd,
                            useExisting: t
                        }]), A],
                        decls: 5,
                        vars: 3,
                        consts: [
                            [3, "ngSwitch"],
                            ["class", "mat-horizontal-stepper-wrapper", 4, "ngSwitchCase"],
                            [4, "ngSwitchCase"],
                            ["stepTemplate", ""],
                            [1, "mat-horizontal-stepper-wrapper"],
                            [1, "mat-horizontal-stepper-header-container"],
                            [4, "ngFor", "ngForOf"],
                            [1, "mat-horizontal-content-container"],
                            ["class", "mat-horizontal-stepper-content", "role", "tabpanel", 3, "id", "mat-horizontal-stepper-content-inactive", 4, "ngFor", "ngForOf"],
                            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                            ["class", "mat-stepper-horizontal-line", 4, "ngIf"],
                            [1, "mat-stepper-horizontal-line"],
                            ["role", "tabpanel", 1, "mat-horizontal-stepper-content", 3, "id"],
                            [3, "ngTemplateOutlet"],
                            ["class", "mat-step", 4, "ngFor", "ngForOf"],
                            [1, "mat-step"],
                            [1, "mat-vertical-content-container"],
                            ["role", "tabpanel", 1, "mat-vertical-stepper-content", 3, "id"],
                            [1, "mat-vertical-content"],
                            [3, "tabIndex", "id", "index", "state", "label", "selected", "active", "optional", "errorMessage", "iconOverrides", "disableRipple", "color", "click", "keydown"]
                        ],
                        template: function(e, i) {
                            1 & e && (oe(0, 0), b(1, dK, 5, 2, "div", 1), b(2, hK, 2, 1, "ng-container", 2), ae(), b(3, fK, 1, 23, "ng-template", null, 3, Ui)), 2 & e && (y("ngSwitch", i.orientation), p(1), y("ngSwitchCase", "horizontal"), p(1), y("ngSwitchCase", "vertical"))
                        },
                        dependencies: [Dn, at, cd, ps, Yo, bR],
                        styles: ['.mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:"";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:"";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}'],
                        encapsulation: 2,
                        data: {
                            animation: [CR.horizontalStepTransition, CR.verticalStepTransition]
                        },
                        changeDetection: 0
                    }), t
                })(),
                bK = (() => {
                    class t extends GQ {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["button", "matStepperNext", ""]
                        ],
                        hostAttrs: [1, "mat-stepper-next"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && xn("type", i.type)
                        },
                        inputs: {
                            type: "type"
                        },
                        features: [A]
                    }), t
                })(),
                vK = (() => {
                    class t extends WQ {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["button", "matStepperPrevious", ""]
                        ],
                        hostAttrs: [1, "mat-stepper-previous"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && xn("type", i.type)
                        },
                        inputs: {
                            type: "type"
                        },
                        features: [A]
                    }), t
                })(),
                wK = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [mK, io],
                        imports: [de, ut, $r, Cs, qQ, Ql, ki, de]
                    }), t
                })();
            const CK = ["stepper"];

            function xK(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function DK(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function MK(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Wachtwoorden komen niet overeen "), g())
            }
            let SK = (() => {
                class t {
                    constructor(e, i, r, s, o, a) {
                        this.authentication = e, this.formBuilder = i, this.http = r, this.snackBar = s, this.router = o, this.toastr = a, this.timer = 10, this.authentication.currentUserValue ? this.user = this.authentication.currentUserValue : this.router.navigate(["/login"])
                    }
                    ngOnInit() {
                        if (this.toastr.info("Verander aub je wachtwoord"), this.passwordForm = this.formBuilder.group({
                                password: ["", [jt.required]],
                                repeatPassword: ["", [jt.required]]
                            }, {
                                validators: Hv("password", "repeatPassword")
                            }), null === this.user) return this.toastr.error("Probeer opnieuw aub!"), void this.router.navigate(["/login"]);
                        this.http.get(`/api/Players/${this.user.steamid}`).subscribe(e => {
                            this.player = e
                        })
                    }
                    get f() {
                        return this.passwordForm.controls
                    }
                    passwordSubmit() {
                        if (this.passwordForm.valid) {
                            if (null === this.user) return this.toastr.info("Graag eerst inloggen!"), void this.router.navigate(["/login"]);
                            this.http.put(`/api/Users/${this.user.id}`, {
                                password: this.f.password.value,
                                id: this.user.id
                            }).subscribe(e => {
                                this.authentication.updateUser(e),
                                    function RQ(t = 0, n = Il) {
                                        return t < 0 && (t = 0), Pd(t, t, n)
                                    }(1e3).subscribe(i => {
                                        this.timer <= 0 ? this.router.navigate(["../../dashboard/home"]) : this.timer = this.timer - 1
                                    }), this.stepper.next()
                            }, e => {
                                this.snackBar.open(`Er is iets misgegaan bij het updaten van uw wachtwoord, probeer het opnieuw. (${e.status})`)
                            })
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Bn), u(hp), u(wr), u(Xd), u(gt), u(Ur))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-first-login"]
                    ],
                    viewQuery: function(e, i) {
                        if (1 & e && J(CK, 5), 2 & e) {
                            let r;
                            O(r = P()) && (i.stepper = r.first)
                        }
                    },
                    decls: 84,
                    vars: 9,
                    consts: [
                        ["id", "first-login-container", 1, "container", "mat-elevation-z8", 2, "background-color", "#FFFFFF"],
                        ["stepper", ""],
                        ["label", "Welkom"],
                        ["mat-button", "", "matStepperNext", ""],
                        ["label", "Gegevens controle"],
                        ["mat-button", "", "matStepperPrevious", "", "color", "warn"],
                        ["label", "Wachtwoord veranderen", 3, "stepControl"],
                        [3, "formGroup", "submit"],
                        [1, "form-field-wrapper"],
                        ["matInput", "", "placeholder", "Wachtwoord", "formControlName", "password", "type", "password"],
                        [4, "ngIf"],
                        ["matInput", "", "placeholder", "Wachtwoord Herhalen", "formControlName", "repeatPassword", "type", "password"],
                        ["mat-button", "", "type", "submit"],
                        ["mat-button", "", "routerLink", "/"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "div", 0)(1, "mat-horizontal-stepper", null, 1)(3, "mat-step", 2)(4, "mat-card")(5, "mat-card-header")(6, "mat-card-title"), w(7, "Welkom"), g()(), f(8, "mat-card-content")(9, "p"), w(10, "Welkom bij MEOS, gezien dit de eerste keer is dat je inlogd wordt er gevraagd om de gegevens op de volgende pagina te controleren en je wachtwoord te veranderen."), g(), f(11, "p"), w(12, "Als de gegevens niet kloppen kunt u dit melden bij de korpschef en zal dit indien nodig gecorrigeerd worden."), g(), f(13, "p"), w(14, "Voor verdere vragen over MEOS en de werking hiervan kunt u terecht bij de korpschef."), g()(), f(15, "mat-card-actions"), E(16, "div"), f(17, "button", 3), w(18, "Volgende"), g()()()(), f(19, "mat-step", 4)(20, "mat-card")(21, "mat-card-header")(22, "mat-card-title"), w(23, "Gegevens controle"), g()(), f(24, "mat-card-content")(25, "p"), w(26, "Uw rang is: "), f(27, "b"), w(28), g(), w(29, " Als het klopt komt deze overeen met: "), f(30, "b"), w(31), g()(), w(32, " Volgens deze gegevens is uw rang binnen de politie dan: "), f(33, "b"), w(34), g()(), f(35, "mat-card-actions")(36, "button", 5), w(37, "Vorige"), g(), f(38, "button", 3), w(39, "Volgende"), g()()()(), f(40, "mat-step", 6)(41, "form", 7), T("submit", function() {
                            return i.passwordSubmit()
                        }), f(42, "mat-card")(43, "mat-card-header")(44, "mat-card-title"), w(45, "Wachtwoord veranderen"), g()(), f(46, "mat-card-content")(47, "p"), w(48, "Verander aub uw wachtwoord, dit voor de veiligheid van uw eigen account."), g(), f(49, "p"), w(50, "Uw wachtwoord wordt gehashed opgeslagen!"), g(), f(51, "p", 8)(52, "mat-form-field"), E(53, "input", 9), f(54, "mat-label"), w(55, "Wachtwoord"), g(), b(56, xK, 2, 0, "mat-error", 10), g()(), f(57, "p", 8)(58, "mat-form-field"), E(59, "input", 11), f(60, "mat-label"), w(61, "Herhaal wachtwoord"), g(), b(62, DK, 2, 0, "mat-error", 10), b(63, MK, 2, 0, "mat-error", 10), g()()(), f(64, "mat-card-actions")(65, "button", 5), w(66, "Vorige"), g(), f(67, "button", 12), w(68, "Volgende"), g()()()()(), f(69, "mat-step")(70, "mat-card")(71, "mat-card-header")(72, "mat-card-title"), w(73, "Klaar"), g()(), f(74, "mat-card-content"), w(75, " U kunt nu beginnen met het gebruiken van MEOS!"), E(76, "br")(77, "br"), w(78, " Klik op volgende om door te gaan naar de home pagina. "), g(), f(79, "mat-card-actions")(80, "button", 5), w(81, "Vorige"), g(), f(82, "button", 13), w(83), g()()()()()()), 2 & e && (p(28), ve(null == i.user ? null : i.user.rang), p(3), ve(null == i.player ? null : i.player.jobGradeName), p(3), ve(null == i.player ? null : i.player.jobGradeLabel), p(6), y("stepControl", i.passwordForm), p(1), y("formGroup", i.passwordForm), p(15), y("ngIf", i.f.password.hasError("required")), p(6), y("ngIf", i.f.repeatPassword.hasError("required")), p(1), y("ngIf", i.f.repeatPassword.hasError("mustMatch")), p(20), X("Volgende (", i.timer, ")"))
                    },
                    dependencies: [at, Ml, Xt, Kl, Pq, Rq, Fq, Oq, xR, DR, bK, vK, ep, ci, aa, Nn, lo, di, Xn, ao, ui, jl],
                    styles: [".form-field-wrapper[_ngcontent-%COMP%]{width:100%}@media (min-width: 766px){.form-field-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:stretch}}@media (max-width: 766px){mat-form-field[_ngcontent-%COMP%]{width:100%}}mat-form-field[_ngcontent-%COMP%]{flex:1;flex-direction:row;align-items:stretch;margin-right:10px;min-width:50%;min-width:300px;max-width:600px}mat-card-actions[_ngcontent-%COMP%]{justify-content:space-between;display:flex}"]
                }), t
            })();

            function kK(t, n) {
                if (1 & t && (ni(), E(0, "circle", 4)), 2 & t) {
                    const e = x(),
                        i = bt(1);
                    Kt("animation-name", "mat-progress-spinner-stroke-rotate-" + e._spinnerAnimationLabel)("stroke-dashoffset", e._getStrokeDashOffset(), "px")("stroke-dasharray", e._getStrokeCircumference(), "px")("stroke-width", e._getCircleStrokeWidth(), "%")("transform-origin", e._getCircleTransformOrigin(i)), q("r", e._getCircleRadius())
                }
            }

            function AK(t, n) {
                if (1 & t && (ni(), E(0, "circle", 4)), 2 & t) {
                    const e = x(),
                        i = bt(1);
                    Kt("stroke-dashoffset", e._getStrokeDashOffset(), "px")("stroke-dasharray", e._getStrokeCircumference(), "px")("stroke-width", e._getCircleStrokeWidth(), "%")("transform-origin", e._getCircleTransformOrigin(i)), q("r", e._getCircleRadius())
                }
            }
            const TK = Zi(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                }, "primary"),
                IK = new R("mat-progress-spinner-default-options", {
                    providedIn: "root",
                    factory: function RK() {
                        return {
                            diameter: 100
                        }
                    }
                });
            class Dr extends TK {
                constructor(n, e, i, r, s, o, a, l) {
                    super(n), this._document = i, this._diameter = 100, this._value = 0, this._resizeSubscription = Re.EMPTY, this.mode = "determinate";
                    const c = Dr._diameters;
                    this._spinnerAnimationLabel = this._getSpinnerAnimationLabel(), c.has(i.head) || c.set(i.head, new Set([100])), this._noopAnimations = "NoopAnimations" === r && !!s && !s._forceAnimations, "mat-spinner" === n.nativeElement.nodeName.toLowerCase() && (this.mode = "indeterminate"), s && (s.color && (this.color = this.defaultColor = s.color), s.diameter && (this.diameter = s.diameter), s.strokeWidth && (this.strokeWidth = s.strokeWidth)), e.isBrowser && e.SAFARI && a && o && l && (this._resizeSubscription = a.change(150).subscribe(() => {
                        "indeterminate" === this.mode && l.run(() => o.markForCheck())
                    }))
                }
                get diameter() {
                    return this._diameter
                }
                set diameter(n) {
                    this._diameter = ht(n), this._spinnerAnimationLabel = this._getSpinnerAnimationLabel(), this._styleRoot && this._attachStyleNode()
                }
                get strokeWidth() {
                    return this._strokeWidth || this.diameter / 10
                }
                set strokeWidth(n) {
                    this._strokeWidth = ht(n)
                }
                get value() {
                    return "determinate" === this.mode ? this._value : 0
                }
                set value(n) {
                    this._value = Math.max(0, Math.min(100, ht(n)))
                }
                ngOnInit() {
                    const n = this._elementRef.nativeElement;
                    this._styleRoot = bE(n) || this._document.head, this._attachStyleNode(), n.classList.add("mat-progress-spinner-indeterminate-animation")
                }
                ngOnDestroy() {
                    this._resizeSubscription.unsubscribe()
                }
                _getCircleRadius() {
                    return (this.diameter - 10) / 2
                }
                _getViewBox() {
                    const n = 2 * this._getCircleRadius() + this.strokeWidth;
                    return `0 0 ${n} ${n}`
                }
                _getStrokeCircumference() {
                    return 2 * Math.PI * this._getCircleRadius()
                }
                _getStrokeDashOffset() {
                    return "determinate" === this.mode ? this._getStrokeCircumference() * (100 - this._value) / 100 : null
                }
                _getCircleStrokeWidth() {
                    return this.strokeWidth / this.diameter * 100
                }
                _getCircleTransformOrigin(n) {
                    const e = 50 * (n.currentScale ? ? 1);
                    return `${e}% ${e}%`
                }
                _attachStyleNode() {
                    const n = this._styleRoot,
                        e = this._diameter,
                        i = Dr._diameters;
                    let r = i.get(n);
                    if (!r || !r.has(e)) {
                        const s = this._document.createElement("style");
                        s.setAttribute("mat-spinner-animation", this._spinnerAnimationLabel), s.textContent = this._getAnimationText(), n.appendChild(s), r || (r = new Set, i.set(n, r)), r.add(e)
                    }
                }
                _getAnimationText() {
                    const n = this._getStrokeCircumference();
                    return "\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n".replace(/START_VALUE/g, "" + .95 * n).replace(/END_VALUE/g, "" + .2 * n).replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`)
                }
                _getSpinnerAnimationLabel() {
                    return this.diameter.toString().replace(".", "_")
                }
            }
            Dr._diameters = new WeakMap, Dr.\u0275fac = function(n) {
                return new(n || Dr)(u(N), u(Ft), u(pe, 8), u(Tt, 8), u(IK), u(ge), u(Hr), u(ce))
            }, Dr.\u0275cmp = j({
                type: Dr,
                selectors: [
                    ["mat-progress-spinner"],
                    ["mat-spinner"]
                ],
                hostAttrs: ["role", "progressbar", "tabindex", "-1", 1, "mat-progress-spinner", "mat-spinner"],
                hostVars: 10,
                hostBindings: function(n, e) {
                    2 & n && (q("aria-valuemin", "determinate" === e.mode ? 0 : null)("aria-valuemax", "determinate" === e.mode ? 100 : null)("aria-valuenow", "determinate" === e.mode ? e.value : null)("mode", e.mode), Kt("width", e.diameter, "px")("height", e.diameter, "px"), re("_mat-animation-noopable", e._noopAnimations))
                },
                inputs: {
                    color: "color",
                    diameter: "diameter",
                    strokeWidth: "strokeWidth",
                    mode: "mode",
                    value: "value"
                },
                exportAs: ["matProgressSpinner"],
                features: [A],
                decls: 4,
                vars: 8,
                consts: [
                    ["preserveAspectRatio", "xMidYMid meet", "focusable", "false", "aria-hidden", "true", 3, "ngSwitch"],
                    ["svg", ""],
                    ["cx", "50%", "cy", "50%", 3, "animation-name", "stroke-dashoffset", "stroke-dasharray", "stroke-width", "transform-origin", 4, "ngSwitchCase"],
                    ["cx", "50%", "cy", "50%", 3, "stroke-dashoffset", "stroke-dasharray", "stroke-width", "transform-origin", 4, "ngSwitchCase"],
                    ["cx", "50%", "cy", "50%"]
                ],
                template: function(n, e) {
                    1 & n && (ni(), f(0, "svg", 0, 1), b(2, kK, 1, 11, "circle", 2), b(3, AK, 1, 9, "circle", 3), g()), 2 & n && (Kt("width", e.diameter, "px")("height", e.diameter, "px"), y("ngSwitch", "indeterminate" === e.mode), q("viewBox", e._getViewBox()), p(2), y("ngSwitchCase", !0), p(1), y("ngSwitchCase", !1))
                },
                dependencies: [ps, Yo],
                styles: [".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}"],
                encapsulation: 2,
                changeDetection: 0
            });
            let Gv = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [de, ut, de]
                }), t
            })();
            const OK = Dr;

            function PK(t, n) {
                1 & t && E(0, "mat-spinner", 16)
            }
            let MR = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this.formBuilder = e, this.authenticationService = i, this.router = r, this.toastr = s, this.subs = new co, this.isSubmitting = !1, this.loaded = !1, this.authenticationService.isLoggedIn() && r.navigate(["/home"]), this.subs.sink = this.authenticationService.currentUser$.subscribe({
                            next: o => {
                                this.authenticationService.isLoggedIn() && r.navigate(["/home"])
                            }
                        }), this.loaded = !0
                    }
                    ngOnDestroy() {
                        this.subs.unsubscribe()
                    }
                    ngOnInit() {
                        this.setLoginForm()
                    }
                    setLoginForm() {
                        this.loginForm = this.formBuilder.group({
                            email: ["", [jt.required]],
                            password: ["", [jt.required]]
                        })
                    }
                    onKeydown(e) {
                        13 === e.which && this.onSubmit()
                    }
                    getErrorMessage(e) {
                        return e.hasError("invalid") ? "Ongeldige gebruikersnaam en/of wachtwoord" : e.hasError("required") ? "Vul dit veld in" : ""
                    }
                    get f() {
                        return this.loginForm.controls
                    }
                    onSubmit() {
                        this.loginForm.valid ? (this.isSubmitting = !0, this.authenticationService.login(this.f.email.value, this.f.password.value).subscribe({
                            next: e => {
                                console.log(e), this.isSubmitting = !1, e.body ? .firstLogon ? (this.router.navigate(["/firstlogin"]), this.toastr.info("Dit is de eerste keer dat u inlogd, hier kunt u uw wachtwoord veranderen!")) : (this.router.navigate(["/home"]), this.toastr.info("Welkom " + e.body ? .username))
                            },
                            error: e => {
                                if (console.error(e), this.isSubmitting = !1, 0 === e ? .status) this.toastr.error("Er is een onbekende fout opgetreden! Controleer uw internet verbinding!");
                                else if (503 === e ? .status && e.headers.get("retry-after")) {
                                    const i = e.headers.get("retry-after");
                                    if (!i) return void this.toastr.error("Je hebt te vaak geprobeerd in te loggen, probeer het over enkele minuten opnieuw!");
                                    const r = Number.parseInt(i);
                                    this.toastr.error(`Je hebt te vaak geprobeerd in te loggen, probeer het over ${Math.ceil(r/60)} minuten opnieuw!`)
                                } else this.toastr.error(e.error ? .message ? ? e.message)
                            }
                        })) : this.toastr.error("Ongeldige gebruikersnaam en/of wachtwoord")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(hp), u(Bn), u(gt), u(Ur))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-login"]
                    ],
                    decls: 29,
                    vars: 3,
                    consts: [
                        ["gdAuto", "", "gdColumns", "90px auto", "gdAreas", "header header | content content", "gdRows", "60px auto", 1, "containerX", "app-content", 2, "height", "100%"],
                        ["gdArea", "header", "gdAuto", "", "gdColumns", "90px auto 120px'", "gdAreas", "start middle end", 1, "nav-bar"],
                        ["gdArea", "start", "fxLayoutAlign", "start", 1, "nav-bar"],
                        ["gdArea", "middle", "fxFlexFill", "", 1, "nav-bar"],
                        ["gdArea", "end", 1, "nav-bar"],
                        ["gdArea", "content", "fxLayoutAlign", "center center", 1, "main-content", "background"],
                        [2, "max-width", "400px"],
                        ["fxLayout", "column"],
                        ["fxLayout", "column", 3, "formGroup"],
                        [2, "margin-top", "1%"],
                        ["matInput", "", "type", "text", "placeholder", "Gebruikersnaam", "required", "", "formControlName", "email", 3, "keydown"],
                        ["matInput", "", "type", "password", "placeholder", "Wachtwoord", "required", "", "formControlName", "password", 3, "keydown"],
                        [1, "textalert"],
                        ["mat-button", "", 1, "button", 3, "disabled", "click"],
                        [1, "spinner-container"],
                        ["class", "mx-auto my-5", 4, "ngIf"],
                        [1, "mx-auto", "my-5"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "div", 0)(1, "div", 1), E(2, "div", 2)(3, "div", 3)(4, "div", 4), g(), f(5, "div", 5)(6, "mat-card", 6)(7, "div", 7)(8, "div")(9, "h2"), w(10, "Login"), g()(), f(11, "div")(12, "p"), w(13, "Politie Tedeapolis"), g()(), f(14, "div")(15, "form", 8)(16, "mat-form-field", 9)(17, "input", 10), T("keydown", function(s) {
                            return i.onKeydown(s)
                        }), g()(), f(18, "mat-form-field")(19, "input", 11), T("keydown", function(s) {
                            return i.onKeydown(s)
                        }), g()()()(), f(20, "div")(21, "p", 12)(22, "strong"), w(23, "Waarschuwing: Als je gebruik maakt van het MEOS als politieagent, moet je je er van bewust zijn dat je dit doet conform artikel 8 van de Wet politiegegevens."), g()()(), f(24, "div")(25, "button", 13), T("click", function() {
                            return i.onSubmit()
                        }), w(26, "Login"), g()(), f(27, "div", 14), b(28, PK, 1, 0, "mat-spinner", 15), g()()()()()), 2 & e && (p(15), y("formGroup", i.loginForm), p(10), y("disabled", i.isSubmitting), p(3), y("ngIf", i.isSubmitting))
                    },
                    dependencies: [at, Xt, Kl, ci, Nn, Dr, lo, di, Xn, ao, zr, ui, jl, ha, ho, Iv, Fv, Ov, Pv, Tp, Lv],
                    styles: ['.mat-card[_ngcontent-%COMP%]{box-shadow:0 12px 16px -1px #0000004d,0 6px 12px #0003,0 4px 12px #00000024}.background[_ngcontent-%COMP%]{width:100%;height:100%;background-image:url(tda2edited.df652f46de2e6248.jpg);background-image:-webkit-image-set(url(tda2edited.b235ae9528c94529.webp) type("image/webp"),url(tda2edited.df652f46de2e6248.jpg) type("image/jpeg"));background-image:image-set(url(tda2edited.b235ae9528c94529.webp) type("image/webp"),url(tda2edited.df652f46de2e6248.jpg) type("image/jpeg"));background-position:center;background-repeat:no-repeat;background-size:cover}.colorheader[_ngcontent-%COMP%]{background-color:#004682}.nav-bar[_ngcontent-%COMP%]{background-color:#01579b;color:#fff}mat-card[_ngcontent-%COMP%]{max-height:400px;min-width:400px;min-height:400px}.main-content[_ngcontent-%COMP%]{background-color:#e9ecef;overflow-y:auto;padding:.5%;height:100%;width:100%;max-height:100%;max-width:100%}mat-card-title[_ngcontent-%COMP%], mat-card-subtitle[_ngcontent-%COMP%], mat-card-actions[_ngcontent-%COMP%]{text-align:center}.button[_ngcontent-%COMP%]{background-color:#004682!important;color:#fff;width:90%}.textalert[_ngcontent-%COMP%]{text-align:center;font-size:80%}mat-card-actions[_ngcontent-%COMP%]{padding:3%}.loading[_ngcontent-%COMP%]{min-height:50em;opacity:.6}']
                }), t
            })();

            function Fp(t) {
                return t && "function" == typeof t.connect && !(t instanceof rf)
            }
            class SR {
                applyChanges(n, e, i, r, s) {
                    n.forEachOperation((o, a, l) => {
                        let c, d;
                        if (null == o.previousIndex) {
                            const h = i(o, a, l);
                            c = e.createEmbeddedView(h.templateRef, h.context, h.index), d = 1
                        } else null == l ? (e.remove(a), d = 3) : (c = e.get(a), e.move(c, l), d = 2);
                        s && s({
                            context: c ? .context,
                            operation: d,
                            record: o
                        })
                    })
                }
                detach() {}
            }
            class eu {
                constructor(n = !1, e, i = !0, r) {
                    this._multiple = n, this._emitChanges = i, this.compareWith = r, this._selection = new Set, this._deselectedToEmit = [], this._selectedToEmit = [], this.changed = new H, e && e.length && (n ? e.forEach(s => this._markSelected(s)) : this._markSelected(e[0]), this._selectedToEmit.length = 0)
                }
                get selected() {
                    return this._selected || (this._selected = Array.from(this._selection.values())), this._selected
                }
                select(...n) {
                    this._verifyValueAssignment(n), n.forEach(i => this._markSelected(i));
                    const e = this._hasQueuedChanges();
                    return this._emitChangeEvent(), e
                }
                deselect(...n) {
                    this._verifyValueAssignment(n), n.forEach(i => this._unmarkSelected(i));
                    const e = this._hasQueuedChanges();
                    return this._emitChangeEvent(), e
                }
                setSelection(...n) {
                    this._verifyValueAssignment(n);
                    const e = this.selected,
                        i = new Set(n);
                    n.forEach(s => this._markSelected(s)), e.filter(s => !i.has(s)).forEach(s => this._unmarkSelected(s));
                    const r = this._hasQueuedChanges();
                    return this._emitChangeEvent(), r
                }
                toggle(n) {
                    return this.isSelected(n) ? this.deselect(n) : this.select(n)
                }
                clear(n = !0) {
                    this._unmarkAll();
                    const e = this._hasQueuedChanges();
                    return n && this._emitChangeEvent(), e
                }
                isSelected(n) {
                    if (this.compareWith) {
                        for (const e of this._selection)
                            if (this.compareWith(e, n)) return !0;
                        return !1
                    }
                    return this._selection.has(n)
                }
                isEmpty() {
                    return 0 === this._selection.size
                }
                hasValue() {
                    return !this.isEmpty()
                }
                sort(n) {
                    this._multiple && this.selected && this._selected.sort(n)
                }
                isMultipleSelection() {
                    return this._multiple
                }
                _emitChangeEvent() {
                    this._selected = null, (this._selectedToEmit.length || this._deselectedToEmit.length) && (this.changed.next({
                        source: this,
                        added: this._selectedToEmit,
                        removed: this._deselectedToEmit
                    }), this._deselectedToEmit = [], this._selectedToEmit = [])
                }
                _markSelected(n) {
                    this.isSelected(n) || (this._multiple || this._unmarkAll(), this.isSelected(n) || this._selection.add(n), this._emitChanges && this._selectedToEmit.push(n))
                }
                _unmarkSelected(n) {
                    this.isSelected(n) && (this._selection.delete(n), this._emitChanges && this._deselectedToEmit.push(n))
                }
                _unmarkAll() {
                    this.isEmpty() || this._selection.forEach(n => this._unmarkSelected(n))
                }
                _verifyValueAssignment(n) {}
                _hasQueuedChanges() {
                    return !(!this._deselectedToEmit.length && !this._selectedToEmit.length)
                }
            }
            let Wv = (() => {
                class t {
                    constructor() {
                        this._listeners = []
                    }
                    notify(e, i) {
                        for (let r of this._listeners) r(e, i)
                    }
                    listen(e) {
                        return this._listeners.push(e), () => {
                            this._listeners = this._listeners.filter(i => e !== i)
                        }
                    }
                    ngOnDestroy() {
                        this._listeners = []
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const tu = new R("_ViewRepeater"),
                NK = ["trigger"],
                BK = ["panel"];

            function VK(t, n) {
                if (1 & t && (f(0, "span", 8), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), ve(e.placeholder)
                }
            }

            function HK(t, n) {
                if (1 & t && (f(0, "span", 12), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.triggerValue)
                }
            }

            function $K(t, n) {
                1 & t && me(0, 0, ["*ngSwitchCase", "true"])
            }

            function jK(t, n) {
                1 & t && (f(0, "span", 9), b(1, HK, 2, 1, "span", 10), b(2, $K, 1, 0, "ng-content", 11), g()), 2 & t && (y("ngSwitch", !!x().customTrigger), p(2), y("ngSwitchCase", !0))
            }

            function zK(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 13)(1, "div", 14, 15), T("@transformPanel.done", function(r) {
                        return ne(e), ie(x()._panelDoneAnimatingStream.next(r.toState))
                    })("keydown", function(r) {
                        return ne(e), ie(x()._handleKeydown(r))
                    }), me(3, 1), g()()
                }
                if (2 & t) {
                    const e = x();
                    y("@transformPanelWrap", void 0), p(1), F_("mat-select-panel ", e._getPanelTheme(), ""), Kt("transform-origin", e._transformOrigin)("font-size", e._triggerFontSize, "px"), y("ngClass", e.panelClass)("@transformPanel", e.multiple ? "showing-multiple" : "showing"), q("id", e.id + "-panel")("aria-multiselectable", e.multiple)("aria-label", e.ariaLabel || null)("aria-labelledby", e._getPanelAriaLabelledby())
                }
            }
            const UK = [
                    [
                        ["mat-select-trigger"]
                    ], "*"
                ],
                GK = ["mat-select-trigger", "*"],
                AR = {
                    transformPanelWrap: Nt("transformPanelWrap", [Ue("* => void", Ll("@transformPanel", [Pl()], {
                        optional: !0
                    }))]),
                    transformPanel: Nt("transformPanel", [Oe("void", ee({
                        transform: "scaleY(0.8)",
                        minWidth: "100%",
                        opacity: 0
                    })), Oe("showing", ee({
                        opacity: 1,
                        minWidth: "calc(100% + 32px)",
                        transform: "scaleY(1)"
                    })), Oe("showing-multiple", ee({
                        opacity: 1,
                        minWidth: "calc(100% + 64px)",
                        transform: "scaleY(1)"
                    })), Ue("void => *", Ye("120ms cubic-bezier(0, 0, 0.2, 1)")), Ue("* => void", Ye("100ms 25ms linear", ee({
                        opacity: 0
                    })))])
                };
            let ER = 0;
            const IR = new R("mat-select-scroll-strategy"),
                QK = new R("MAT_SELECT_CONFIG"),
                KK = {
                    provide: IR,
                    deps: [vn],
                    useFactory: function YK(t) {
                        return () => t.scrollStrategies.reposition()
                    }
                };
            class ZK {
                constructor(n, e) {
                    this.source = n, this.value = e
                }
            }
            const XK = br(no(Si(Hb(class {
                    constructor(t, n, e, i, r) {
                        this._elementRef = t, this._defaultErrorStateMatcher = n, this._parentForm = e, this._parentFormGroup = i, this.ngControl = r, this.stateChanges = new H
                    }
                })))),
                JK = new R("MatSelectTrigger");
            let eZ = (() => {
                    class t extends XK {
                        constructor(e, i, r, s, o, a, l, c, d, h, m, _, v, D) {
                            super(o, s, l, c, h), this._viewportRuler = e, this._changeDetectorRef = i, this._ngZone = r, this._dir = a, this._parentFormField = d, this._liveAnnouncer = v, this._defaultOptions = D, this._panelOpen = !1, this._compareWith = (k, S) => k === S, this._uid = "mat-select-" + ER++, this._triggerAriaLabelledBy = null, this._destroy = new H, this._onChange = () => {}, this._onTouched = () => {}, this._valueId = "mat-select-value-" + ER++, this._panelDoneAnimatingStream = new H, this._overlayPanelClass = this._defaultOptions ? .overlayPanelClass || "", this._focused = !1, this.controlType = "mat-select", this._multiple = !1, this._disableOptionCentering = this._defaultOptions ? .disableOptionCentering ? ? !1, this.ariaLabel = "", this.optionSelectionChanges = Ys(() => {
                                const k = this.options;
                                return k ? k.changes.pipe(pt(k), vt(() => tt(...k.map(S => S.onSelectionChange)))) : this._ngZone.onStable.pipe(Fe(1), vt(() => this.optionSelectionChanges))
                            }), this.openedChange = new V, this._openedStream = this.openedChange.pipe(Ie(k => k), Z(() => {})), this._closedStream = this.openedChange.pipe(Ie(k => !k), Z(() => {})), this.selectionChange = new V, this.valueChange = new V, this.ngControl && (this.ngControl.valueAccessor = this), null != D ? .typeaheadDebounceInterval && (this._typeaheadDebounceInterval = D.typeaheadDebounceInterval), this._scrollStrategyFactory = _, this._scrollStrategy = this._scrollStrategyFactory(), this.tabIndex = parseInt(m) || 0, this.id = this.id
                        }
                        get focused() {
                            return this._focused || this._panelOpen
                        }
                        get placeholder() {
                            return this._placeholder
                        }
                        set placeholder(e) {
                            this._placeholder = e, this.stateChanges.next()
                        }
                        get required() {
                            return this._required ? ? this.ngControl ? .control ? .hasValidator(jt.required) ? ? !1
                        }
                        set required(e) {
                            this._required = G(e), this.stateChanges.next()
                        }
                        get multiple() {
                            return this._multiple
                        }
                        set multiple(e) {
                            this._multiple = G(e)
                        }
                        get disableOptionCentering() {
                            return this._disableOptionCentering
                        }
                        set disableOptionCentering(e) {
                            this._disableOptionCentering = G(e)
                        }
                        get compareWith() {
                            return this._compareWith
                        }
                        set compareWith(e) {
                            this._compareWith = e, this._selectionModel && this._initializeSelection()
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._assignValue(e) && this._onChange(e)
                        }
                        get typeaheadDebounceInterval() {
                            return this._typeaheadDebounceInterval
                        }
                        set typeaheadDebounceInterval(e) {
                            this._typeaheadDebounceInterval = ht(e)
                        }
                        get id() {
                            return this._id
                        }
                        set id(e) {
                            this._id = e || this._uid, this.stateChanges.next()
                        }
                        ngOnInit() {
                            this._selectionModel = new eu(this.multiple), this.stateChanges.next(), this._panelDoneAnimatingStream.pipe(Js(), le(this._destroy)).subscribe(() => this._panelDoneAnimating(this.panelOpen))
                        }
                        ngAfterContentInit() {
                            this._initKeyManager(), this._selectionModel.changed.pipe(le(this._destroy)).subscribe(e => {
                                e.added.forEach(i => i.select()), e.removed.forEach(i => i.deselect())
                            }), this.options.changes.pipe(pt(null), le(this._destroy)).subscribe(() => {
                                this._resetOptions(), this._initializeSelection()
                            })
                        }
                        ngDoCheck() {
                            const e = this._getTriggerAriaLabelledby(),
                                i = this.ngControl;
                            if (e !== this._triggerAriaLabelledBy) {
                                const r = this._elementRef.nativeElement;
                                this._triggerAriaLabelledBy = e, e ? r.setAttribute("aria-labelledby", e) : r.removeAttribute("aria-labelledby")
                            }
                            i && (this._previousControl !== i.control && (void 0 !== this._previousControl && null !== i.disabled && i.disabled !== this.disabled && (this.disabled = i.disabled), this._previousControl = i.control), this.updateErrorState())
                        }
                        ngOnChanges(e) {
                            (e.disabled || e.userAriaDescribedBy) && this.stateChanges.next(), e.typeaheadDebounceInterval && this._keyManager && this._keyManager.withTypeAhead(this._typeaheadDebounceInterval)
                        }
                        ngOnDestroy() {
                            this._destroy.next(), this._destroy.complete(), this.stateChanges.complete()
                        }
                        toggle() {
                            this.panelOpen ? this.close() : this.open()
                        }
                        open() {
                            this._canOpen() && (this._panelOpen = !0, this._keyManager.withHorizontalOrientation(null), this._highlightCorrectOption(), this._changeDetectorRef.markForCheck())
                        }
                        close() {
                            this._panelOpen && (this._panelOpen = !1, this._keyManager.withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr"), this._changeDetectorRef.markForCheck(), this._onTouched())
                        }
                        writeValue(e) {
                            this._assignValue(e)
                        }
                        registerOnChange(e) {
                            this._onChange = e
                        }
                        registerOnTouched(e) {
                            this._onTouched = e
                        }
                        setDisabledState(e) {
                            this.disabled = e, this._changeDetectorRef.markForCheck(), this.stateChanges.next()
                        }
                        get panelOpen() {
                            return this._panelOpen
                        }
                        get selected() {
                            return this.multiple ? this._selectionModel ? .selected || [] : this._selectionModel ? .selected[0]
                        }
                        get triggerValue() {
                            if (this.empty) return "";
                            if (this._multiple) {
                                const e = this._selectionModel.selected.map(i => i.viewValue);
                                return this._isRtl() && e.reverse(), e.join(", ")
                            }
                            return this._selectionModel.selected[0].viewValue
                        }
                        _isRtl() {
                            return !!this._dir && "rtl" === this._dir.value
                        }
                        _handleKeydown(e) {
                            this.disabled || (this.panelOpen ? this._handleOpenKeydown(e) : this._handleClosedKeydown(e))
                        }
                        _handleClosedKeydown(e) {
                            const i = e.keyCode,
                                r = 40 === i || 38 === i || 37 === i || 39 === i,
                                s = 13 === i || 32 === i,
                                o = this._keyManager;
                            if (!o.isTyping() && s && !$t(e) || (this.multiple || e.altKey) && r) e.preventDefault(), this.open();
                            else if (!this.multiple) {
                                const a = this.selected;
                                o.onKeydown(e);
                                const l = this.selected;
                                l && a !== l && this._liveAnnouncer.announce(l.viewValue, 1e4)
                            }
                        }
                        _handleOpenKeydown(e) {
                            const i = this._keyManager,
                                r = e.keyCode,
                                s = 40 === r || 38 === r,
                                o = i.isTyping();
                            if (s && e.altKey) e.preventDefault(), this.close();
                            else if (o || 13 !== r && 32 !== r || !i.activeItem || $t(e))
                                if (!o && this._multiple && 65 === r && e.ctrlKey) {
                                    e.preventDefault();
                                    const a = this.options.some(l => !l.disabled && !l.selected);
                                    this.options.forEach(l => {
                                        l.disabled || (a ? l.select() : l.deselect())
                                    })
                                } else {
                                    const a = i.activeItemIndex;
                                    i.onKeydown(e), this._multiple && s && e.shiftKey && i.activeItem && i.activeItemIndex !== a && i.activeItem._selectViaInteraction()
                                }
                            else e.preventDefault(), i.activeItem._selectViaInteraction()
                        }
                        _onFocus() {
                            this.disabled || (this._focused = !0, this.stateChanges.next())
                        }
                        _onBlur() {
                            this._focused = !1, !this.disabled && !this.panelOpen && (this._onTouched(), this._changeDetectorRef.markForCheck(), this.stateChanges.next())
                        }
                        _onAttached() {
                            this._overlayDir.positionChange.pipe(Fe(1)).subscribe(() => {
                                this._changeDetectorRef.detectChanges(), this._positioningSettled()
                            })
                        }
                        _getPanelTheme() {
                            return this._parentFormField ? `mat-${this._parentFormField.color}` : ""
                        }
                        get empty() {
                            return !this._selectionModel || this._selectionModel.isEmpty()
                        }
                        _initializeSelection() {
                            Promise.resolve().then(() => {
                                this.ngControl && (this._value = this.ngControl.value), this._setSelectionByValue(this._value), this.stateChanges.next()
                            })
                        }
                        _setSelectionByValue(e) {
                            if (this._selectionModel.selected.forEach(i => i.setInactiveStyles()), this._selectionModel.clear(), this.multiple && e) Array.isArray(e), e.forEach(i => this._selectOptionByValue(i)), this._sortValues();
                            else {
                                const i = this._selectOptionByValue(e);
                                i ? this._keyManager.updateActiveItem(i) : this.panelOpen || this._keyManager.updateActiveItem(-1)
                            }
                            this._changeDetectorRef.markForCheck()
                        }
                        _selectOptionByValue(e) {
                            const i = this.options.find(r => {
                                if (this._selectionModel.isSelected(r)) return !1;
                                try {
                                    return null != r.value && this._compareWith(r.value, e)
                                } catch {
                                    return !1
                                }
                            });
                            return i && this._selectionModel.select(i), i
                        }
                        _assignValue(e) {
                            return !!(e !== this._value || this._multiple && Array.isArray(e)) && (this.options && this._setSelectionByValue(e), this._value = e, !0)
                        }
                        _initKeyManager() {
                            this._keyManager = new gG(this.options).withTypeAhead(this._typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr").withHomeAndEnd().withAllowedModifierKeys(["shiftKey"]), this._keyManager.tabOut.pipe(le(this._destroy)).subscribe(() => {
                                this.panelOpen && (!this.multiple && this._keyManager.activeItem && this._keyManager.activeItem._selectViaInteraction(), this.focus(), this.close())
                            }), this._keyManager.change.pipe(le(this._destroy)).subscribe(() => {
                                this._panelOpen && this.panel ? this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0) : !this._panelOpen && !this.multiple && this._keyManager.activeItem && this._keyManager.activeItem._selectViaInteraction()
                            })
                        }
                        _resetOptions() {
                            const e = tt(this.options.changes, this._destroy);
                            this.optionSelectionChanges.pipe(le(e)).subscribe(i => {
                                this._onSelect(i.source, i.isUserInput), i.isUserInput && !this.multiple && this._panelOpen && (this.close(), this.focus())
                            }), tt(...this.options.map(i => i._stateChanges)).pipe(le(e)).subscribe(() => {
                                this._changeDetectorRef.markForCheck(), this.stateChanges.next()
                            })
                        }
                        _onSelect(e, i) {
                            const r = this._selectionModel.isSelected(e);
                            null != e.value || this._multiple ? (r !== e.selected && (e.selected ? this._selectionModel.select(e) : this._selectionModel.deselect(e)), i && this._keyManager.setActiveItem(e), this.multiple && (this._sortValues(), i && this.focus())) : (e.deselect(), this._selectionModel.clear(), null != this.value && this._propagateChanges(e.value)), r !== this._selectionModel.isSelected(e) && this._propagateChanges(), this.stateChanges.next()
                        }
                        _sortValues() {
                            if (this.multiple) {
                                const e = this.options.toArray();
                                this._selectionModel.sort((i, r) => this.sortComparator ? this.sortComparator(i, r, e) : e.indexOf(i) - e.indexOf(r)), this.stateChanges.next()
                            }
                        }
                        _propagateChanges(e) {
                            let i = null;
                            i = this.multiple ? this.selected.map(r => r.value) : this.selected ? this.selected.value : e, this._value = i, this.valueChange.emit(i), this._onChange(i), this.selectionChange.emit(this._getChangeEvent(i)), this._changeDetectorRef.markForCheck()
                        }
                        _highlightCorrectOption() {
                            this._keyManager && (this.empty ? this._keyManager.setFirstItemActive() : this._keyManager.setActiveItem(this._selectionModel.selected[0]))
                        }
                        _canOpen() {
                            return !this._panelOpen && !this.disabled && this.options ? .length > 0
                        }
                        focus(e) {
                            this._elementRef.nativeElement.focus(e)
                        }
                        _getPanelAriaLabelledby() {
                            if (this.ariaLabel) return null;
                            const e = this._parentFormField ? .getLabelId();
                            return this.ariaLabelledby ? (e ? e + " " : "") + this.ariaLabelledby : e
                        }
                        _getAriaActiveDescendant() {
                            return this.panelOpen && this._keyManager && this._keyManager.activeItem ? this._keyManager.activeItem.id : null
                        }
                        _getTriggerAriaLabelledby() {
                            if (this.ariaLabel) return null;
                            const e = this._parentFormField ? .getLabelId();
                            let i = (e ? e + " " : "") + this._valueId;
                            return this.ariaLabelledby && (i += " " + this.ariaLabelledby), i
                        }
                        _panelDoneAnimating(e) {
                            this.openedChange.emit(e)
                        }
                        setDescribedByIds(e) {
                            e.length ? this._elementRef.nativeElement.setAttribute("aria-describedby", e.join(" ")) : this._elementRef.nativeElement.removeAttribute("aria-describedby")
                        }
                        onContainerClick() {
                            this.focus(), this.open()
                        }
                        get shouldLabelFloat() {
                            return this._panelOpen || !this.empty || this._focused && !!this._placeholder
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Hr), u(ge), u(ce), u(io), u(N), u(Mt, 8), u($l, 8), u(ui, 8), u(Hd, 8), u(vr, 10), Qt("tabindex"), u(IR), u(Bf), u(QK, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && (J(NK, 5), J(BK, 5), J(e1, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i.trigger = r.first), O(r = P()) && (i.panel = r.first), O(r = P()) && (i._overlayDir = r.first)
                            }
                        },
                        inputs: {
                            userAriaDescribedBy: ["aria-describedby", "userAriaDescribedBy"],
                            panelClass: "panelClass",
                            placeholder: "placeholder",
                            required: "required",
                            multiple: "multiple",
                            disableOptionCentering: "disableOptionCentering",
                            compareWith: "compareWith",
                            value: "value",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            errorStateMatcher: "errorStateMatcher",
                            typeaheadDebounceInterval: "typeaheadDebounceInterval",
                            sortComparator: "sortComparator",
                            id: "id"
                        },
                        outputs: {
                            openedChange: "openedChange",
                            _openedStream: "opened",
                            _closedStream: "closed",
                            selectionChange: "selectionChange",
                            valueChange: "valueChange"
                        },
                        features: [A, ze]
                    }), t
                })(),
                fo = (() => {
                    class t extends eZ {
                        constructor() {
                            super(...arguments), this._scrollTop = 0, this._triggerFontSize = 0, this._transformOrigin = "top", this._offsetY = 0, this._positions = [{
                                originX: "start",
                                originY: "top",
                                overlayX: "start",
                                overlayY: "top"
                            }, {
                                originX: "start",
                                originY: "bottom",
                                overlayX: "start",
                                overlayY: "bottom"
                            }]
                        }
                        _calculateOverlayScroll(e, i, r) {
                            const s = this._getItemHeight();
                            return Math.min(Math.max(0, s * e - i + s / 2), r)
                        }
                        ngOnInit() {
                            super.ngOnInit(), this._viewportRuler.change().pipe(le(this._destroy)).subscribe(() => {
                                this.panelOpen && (this._triggerRect = this.trigger.nativeElement.getBoundingClientRect(), this._changeDetectorRef.markForCheck())
                            })
                        }
                        open() {
                            super._canOpen() && (super.open(), this._triggerRect = this.trigger.nativeElement.getBoundingClientRect(), this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || "0"), this._calculateOverlayPosition(), this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                                this._triggerFontSize && this._overlayDir.overlayRef && this._overlayDir.overlayRef.overlayElement && (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`)
                            }))
                        }
                        _scrollOptionIntoView(e) {
                            const i = Qf(e, this.options, this.optionGroups),
                                r = this._getItemHeight();
                            this.panel.nativeElement.scrollTop = 0 === e && 1 === i ? 0 : function y1(t, n, e, i) {
                                return t < e ? t : t + n > e + i ? Math.max(0, t - i + n) : e
                            }((e + i) * r, r, this.panel.nativeElement.scrollTop, 256)
                        }
                        _positioningSettled() {
                            this._calculateOverlayOffsetX(), this.panel.nativeElement.scrollTop = this._scrollTop
                        }
                        _panelDoneAnimating(e) {
                            this.panelOpen ? this._scrollTop = 0 : (this._overlayDir.offsetX = 0, this._changeDetectorRef.markForCheck()), super._panelDoneAnimating(e)
                        }
                        _getChangeEvent(e) {
                            return new ZK(this, e)
                        }
                        _calculateOverlayOffsetX() {
                            const e = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                                i = this._viewportRuler.getViewportSize(),
                                r = this._isRtl(),
                                s = this.multiple ? 56 : 32;
                            let o;
                            if (this.multiple) o = 40;
                            else if (this.disableOptionCentering) o = 16;
                            else {
                                let c = this._selectionModel.selected[0] || this.options.first;
                                o = c && c.group ? 32 : 16
                            }
                            r || (o *= -1);
                            const a = 0 - (e.left + o - (r ? s : 0)),
                                l = e.right + o - i.width + (r ? 0 : s);
                            a > 0 ? o += a + 8 : l > 0 && (o -= l + 8), this._overlayDir.offsetX = Math.round(o), this._overlayDir.overlayRef.updatePosition()
                        }
                        _calculateOverlayOffsetY(e, i, r) {
                            const s = this._getItemHeight(),
                                o = (s - this._triggerRect.height) / 2,
                                a = Math.floor(256 / s);
                            let l;
                            return this.disableOptionCentering ? 0 : (l = 0 === this._scrollTop ? e * s : this._scrollTop === r ? (e - (this._getItemCount() - a)) * s + (s - (this._getItemCount() * s - 256) % s) : i - s / 2, Math.round(-1 * l - o))
                        }
                        _checkOverlayWithinViewport(e) {
                            const i = this._getItemHeight(),
                                r = this._viewportRuler.getViewportSize(),
                                s = this._triggerRect.top - 8,
                                o = r.height - this._triggerRect.bottom - 8,
                                a = Math.abs(this._offsetY),
                                c = Math.min(this._getItemCount() * i, 256) - a - this._triggerRect.height;
                            c > o ? this._adjustPanelUp(c, o) : a > s ? this._adjustPanelDown(a, s, e) : this._transformOrigin = this._getOriginBasedOnOption()
                        }
                        _adjustPanelUp(e, i) {
                            const r = Math.round(e - i);
                            this._scrollTop -= r, this._offsetY -= r, this._transformOrigin = this._getOriginBasedOnOption(), this._scrollTop <= 0 && (this._scrollTop = 0, this._offsetY = 0, this._transformOrigin = "50% bottom 0px")
                        }
                        _adjustPanelDown(e, i, r) {
                            const s = Math.round(e - i);
                            if (this._scrollTop += s, this._offsetY += s, this._transformOrigin = this._getOriginBasedOnOption(), this._scrollTop >= r) return this._scrollTop = r, this._offsetY = 0, void(this._transformOrigin = "50% top 0px")
                        }
                        _calculateOverlayPosition() {
                            const e = this._getItemHeight(),
                                i = this._getItemCount(),
                                r = Math.min(i * e, 256),
                                o = i * e - r;
                            let a;
                            a = this.empty ? 0 : Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0), a += Qf(a, this.options, this.optionGroups);
                            const l = r / 2;
                            this._scrollTop = this._calculateOverlayScroll(a, l, o), this._offsetY = this._calculateOverlayOffsetY(a, l, o), this._checkOverlayWithinViewport(o)
                        }
                        _getOriginBasedOnOption() {
                            const e = this._getItemHeight(),
                                i = (e - this._triggerRect.height) / 2;
                            return `50% ${Math.abs(this._offsetY)-i+e/2}px 0px`
                        }
                        _getItemHeight() {
                            return 3 * this._triggerFontSize
                        }
                        _getItemCount() {
                            return this.options.length + this.optionGroups.length
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-select"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, JK, 5), _e(r, sa, 5), _e(r, Gb, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i.customTrigger = s.first), O(s = P()) && (i.options = s), O(s = P()) && (i.optionGroups = s)
                            }
                        },
                        hostAttrs: ["role", "combobox", "aria-autocomplete", "none", "aria-haspopup", "true", 1, "mat-select"],
                        hostVars: 19,
                        hostBindings: function(e, i) {
                            1 & e && T("keydown", function(s) {
                                return i._handleKeydown(s)
                            })("focus", function() {
                                return i._onFocus()
                            })("blur", function() {
                                return i._onBlur()
                            }), 2 & e && (q("id", i.id)("tabindex", i.tabIndex)("aria-controls", i.panelOpen ? i.id + "-panel" : null)("aria-expanded", i.panelOpen)("aria-label", i.ariaLabel || null)("aria-required", i.required.toString())("aria-disabled", i.disabled.toString())("aria-invalid", i.errorState)("aria-activedescendant", i._getAriaActiveDescendant()), re("mat-select-disabled", i.disabled)("mat-select-invalid", i.errorState)("mat-select-required", i.required)("mat-select-empty", i.empty)("mat-select-multiple", i.multiple))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            tabIndex: "tabIndex"
                        },
                        exportAs: ["matSelect"],
                        features: [Q([{
                            provide: Vl,
                            useExisting: t
                        }, {
                            provide: Ub,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: GK,
                        decls: 9,
                        vars: 12,
                        consts: [
                            ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                            ["origin", "cdkOverlayOrigin", "trigger", ""],
                            [1, "mat-select-value", 3, "ngSwitch"],
                            ["class", "mat-select-placeholder mat-select-min-line", 4, "ngSwitchCase"],
                            ["class", "mat-select-value-text", 3, "ngSwitch", 4, "ngSwitchCase"],
                            [1, "mat-select-arrow-wrapper"],
                            [1, "mat-select-arrow"],
                            ["cdk-connected-overlay", "", "cdkConnectedOverlayLockPosition", "", "cdkConnectedOverlayHasBackdrop", "", "cdkConnectedOverlayBackdropClass", "cdk-overlay-transparent-backdrop", 3, "cdkConnectedOverlayPanelClass", "cdkConnectedOverlayScrollStrategy", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayOpen", "cdkConnectedOverlayPositions", "cdkConnectedOverlayMinWidth", "cdkConnectedOverlayOffsetY", "backdropClick", "attach", "detach"],
                            [1, "mat-select-placeholder", "mat-select-min-line"],
                            [1, "mat-select-value-text", 3, "ngSwitch"],
                            ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                            [4, "ngSwitchCase"],
                            [1, "mat-select-min-line"],
                            [1, "mat-select-panel-wrap"],
                            ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                            ["panel", ""]
                        ],
                        template: function(e, i) {
                            if (1 & e && (Xe(UK), f(0, "div", 0, 1), T("click", function() {
                                    return i.toggle()
                                }), f(3, "div", 2), b(4, VK, 2, 1, "span", 3), b(5, jK, 3, 2, "span", 4), g(), f(6, "div", 5), E(7, "div", 6), g()(), b(8, zK, 4, 14, "ng-template", 7), T("backdropClick", function() {
                                    return i.close()
                                })("attach", function() {
                                    return i._onAttached()
                                })("detach", function() {
                                    return i.close()
                                })), 2 & e) {
                                const r = bt(1);
                                q("aria-owns", i.panelOpen ? i.id + "-panel" : null), p(3), y("ngSwitch", i.empty), q("id", i._valueId), p(1), y("ngSwitchCase", !0), p(1), y("ngSwitchCase", !1), p(3), y("cdkConnectedOverlayPanelClass", i._overlayPanelClass)("cdkConnectedOverlayScrollStrategy", i._scrollStrategy)("cdkConnectedOverlayOrigin", r)("cdkConnectedOverlayOpen", i.panelOpen)("cdkConnectedOverlayPositions", i._positions)("cdkConnectedOverlayMinWidth", null == i._triggerRect ? null : i._triggerRect.width)("cdkConnectedOverlayOffsetY", i._offsetY)
                            }
                        },
                        dependencies: [gr, ps, Yo, Sy, e1, JE],
                        styles: ['.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}'],
                        encapsulation: 2,
                        data: {
                            animation: [AR.transformPanelWrap, AR.transformPanel]
                        },
                        changeDetection: 0
                    }), t
                })(),
                qv = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [KK],
                        imports: [ut, to, Kf, de, vs, $d, Kf, de]
                    }), t
                })();

            function tZ(t, n) {
                if (1 & t && (f(0, "mat-option", 19), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e), p(1), X(" ", e, " ")
                }
            }

            function nZ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-form-field", 16)(1, "mat-select", 17), T("selectionChange", function(r) {
                        return ne(e), ie(x(2)._changePageSize(r.value))
                    }), b(2, tZ, 2, 2, "mat-option", 18), g()()
                }
                if (2 & t) {
                    const e = x(2);
                    y("appearance", e._formFieldAppearance)("color", e.color), p(1), y("value", e.pageSize)("disabled", e.disabled)("panelClass", e.selectConfig.panelClass || "")("disableOptionCentering", e.selectConfig.disableOptionCentering)("aria-label", e._intl.itemsPerPageLabel), p(1), y("ngForOf", e._displayedPageSizeOptions)
                }
            }

            function iZ(t, n) {
                if (1 & t && (f(0, "div", 20), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.pageSize)
                }
            }

            function rZ(t, n) {
                if (1 & t && (f(0, "div", 12)(1, "div", 13), w(2), g(), b(3, nZ, 3, 8, "mat-form-field", 14), b(4, iZ, 2, 1, "div", 15), g()), 2 & t) {
                    const e = x();
                    p(2), X(" ", e._intl.itemsPerPageLabel, " "), p(1), y("ngIf", e._displayedPageSizeOptions.length > 1), p(1), y("ngIf", e._displayedPageSizeOptions.length <= 1)
                }
            }

            function sZ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 21), T("click", function() {
                        return ne(e), ie(x().firstPage())
                    }), ni(), f(1, "svg", 7), E(2, "path", 22), g()()
                }
                if (2 & t) {
                    const e = x();
                    y("matTooltip", e._intl.firstPageLabel)("matTooltipDisabled", e._previousButtonsDisabled())("matTooltipPosition", "above")("disabled", e._previousButtonsDisabled()), q("aria-label", e._intl.firstPageLabel)
                }
            }

            function oZ(t, n) {
                if (1 & t) {
                    const e = ye();
                    ni(), Oa(), f(0, "button", 23), T("click", function() {
                        return ne(e), ie(x().lastPage())
                    }), ni(), f(1, "svg", 7), E(2, "path", 24), g()()
                }
                if (2 & t) {
                    const e = x();
                    y("matTooltip", e._intl.lastPageLabel)("matTooltipDisabled", e._nextButtonsDisabled())("matTooltipPosition", "above")("disabled", e._nextButtonsDisabled()), q("aria-label", e._intl.lastPageLabel)
                }
            }
            let Pp = (() => {
                class t {
                    constructor() {
                        this.changes = new H, this.itemsPerPageLabel = "Items per page:", this.nextPageLabel = "Next page", this.previousPageLabel = "Previous page", this.firstPageLabel = "First page", this.lastPageLabel = "Last page", this.getRangeLabel = (e, i, r) => {
                            if (0 == r || 0 == i) return `0 of ${r}`;
                            const s = e * i;
                            return `${s+1} \u2013 ${s<(r=Math.max(r,0))?Math.min(s+i,r):s+i} of ${r}`
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const lZ = {
                    provide: Pp,
                    deps: [
                        [new ii, new $i, Pp]
                    ],
                    useFactory: function aZ(t) {
                        return t || new Pp
                    }
                },
                dZ = new R("MAT_PAGINATOR_DEFAULT_OPTIONS"),
                uZ = Si(l1(class {}));
            let hZ = (() => {
                    class t extends uZ {
                        constructor(e, i, r) {
                            if (super(), this._intl = e, this._changeDetectorRef = i, this._pageIndex = 0, this._length = 0, this._pageSizeOptions = [], this._hidePageSize = !1, this._showFirstLastButtons = !1, this.selectConfig = {}, this.page = new V, this._intlChanges = e.changes.subscribe(() => this._changeDetectorRef.markForCheck()), r) {
                                const {
                                    pageSize: s,
                                    pageSizeOptions: o,
                                    hidePageSize: a,
                                    showFirstLastButtons: l
                                } = r;
                                null != s && (this._pageSize = s), null != o && (this._pageSizeOptions = o), null != a && (this._hidePageSize = a), null != l && (this._showFirstLastButtons = l)
                            }
                        }
                        get pageIndex() {
                            return this._pageIndex
                        }
                        set pageIndex(e) {
                            this._pageIndex = Math.max(ht(e), 0), this._changeDetectorRef.markForCheck()
                        }
                        get length() {
                            return this._length
                        }
                        set length(e) {
                            this._length = ht(e), this._changeDetectorRef.markForCheck()
                        }
                        get pageSize() {
                            return this._pageSize
                        }
                        set pageSize(e) {
                            this._pageSize = Math.max(ht(e), 0), this._updateDisplayedPageSizeOptions()
                        }
                        get pageSizeOptions() {
                            return this._pageSizeOptions
                        }
                        set pageSizeOptions(e) {
                            this._pageSizeOptions = (e || []).map(i => ht(i)), this._updateDisplayedPageSizeOptions()
                        }
                        get hidePageSize() {
                            return this._hidePageSize
                        }
                        set hidePageSize(e) {
                            this._hidePageSize = G(e)
                        }
                        get showFirstLastButtons() {
                            return this._showFirstLastButtons
                        }
                        set showFirstLastButtons(e) {
                            this._showFirstLastButtons = G(e)
                        }
                        ngOnInit() {
                            this._initialized = !0, this._updateDisplayedPageSizeOptions(), this._markInitialized()
                        }
                        ngOnDestroy() {
                            this._intlChanges.unsubscribe()
                        }
                        nextPage() {
                            if (!this.hasNextPage()) return;
                            const e = this.pageIndex;
                            this.pageIndex = this.pageIndex + 1, this._emitPageEvent(e)
                        }
                        previousPage() {
                            if (!this.hasPreviousPage()) return;
                            const e = this.pageIndex;
                            this.pageIndex = this.pageIndex - 1, this._emitPageEvent(e)
                        }
                        firstPage() {
                            if (!this.hasPreviousPage()) return;
                            const e = this.pageIndex;
                            this.pageIndex = 0, this._emitPageEvent(e)
                        }
                        lastPage() {
                            if (!this.hasNextPage()) return;
                            const e = this.pageIndex;
                            this.pageIndex = this.getNumberOfPages() - 1, this._emitPageEvent(e)
                        }
                        hasPreviousPage() {
                            return this.pageIndex >= 1 && 0 != this.pageSize
                        }
                        hasNextPage() {
                            const e = this.getNumberOfPages() - 1;
                            return this.pageIndex < e && 0 != this.pageSize
                        }
                        getNumberOfPages() {
                            return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0
                        }
                        _changePageSize(e) {
                            const r = this.pageIndex;
                            this.pageIndex = Math.floor(this.pageIndex * this.pageSize / e) || 0, this.pageSize = e, this._emitPageEvent(r)
                        }
                        _nextButtonsDisabled() {
                            return this.disabled || !this.hasNextPage()
                        }
                        _previousButtonsDisabled() {
                            return this.disabled || !this.hasPreviousPage()
                        }
                        _updateDisplayedPageSizeOptions() {
                            !this._initialized || (this.pageSize || (this._pageSize = 0 != this.pageSizeOptions.length ? this.pageSizeOptions[0] : 50), this._displayedPageSizeOptions = this.pageSizeOptions.slice(), -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) && this._displayedPageSizeOptions.push(this.pageSize), this._displayedPageSizeOptions.sort((e, i) => e - i), this._changeDetectorRef.markForCheck())
                        }
                        _emitPageEvent(e) {
                            this.page.emit({
                                previousPageIndex: e,
                                pageIndex: this.pageIndex,
                                pageSize: this.pageSize,
                                length: this.length
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            color: "color",
                            pageIndex: "pageIndex",
                            length: "length",
                            pageSize: "pageSize",
                            pageSizeOptions: "pageSizeOptions",
                            hidePageSize: "hidePageSize",
                            showFirstLastButtons: "showFirstLastButtons",
                            selectConfig: "selectConfig"
                        },
                        outputs: {
                            page: "page"
                        },
                        features: [A]
                    }), t
                })(),
                po = (() => {
                    class t extends hZ {
                        constructor(e, i, r) {
                            super(e, i, r), r && null != r.formFieldAppearance && (this._formFieldAppearance = r.formFieldAppearance)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Pp), u(ge), u(dZ, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-paginator"]
                        ],
                        hostAttrs: ["role", "group", 1, "mat-paginator"],
                        inputs: {
                            disabled: "disabled"
                        },
                        exportAs: ["matPaginator"],
                        features: [A],
                        decls: 14,
                        vars: 14,
                        consts: [
                            [1, "mat-paginator-outer-container"],
                            [1, "mat-paginator-container"],
                            ["class", "mat-paginator-page-size", 4, "ngIf"],
                            [1, "mat-paginator-range-actions"],
                            [1, "mat-paginator-range-label"],
                            ["mat-icon-button", "", "type", "button", "class", "mat-paginator-navigation-first", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click", 4, "ngIf"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-paginator-navigation-previous", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click"],
                            ["viewBox", "0 0 24 24", "focusable", "false", 1, "mat-paginator-icon"],
                            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-paginator-navigation-next", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click"],
                            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
                            ["mat-icon-button", "", "type", "button", "class", "mat-paginator-navigation-last", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click", 4, "ngIf"],
                            [1, "mat-paginator-page-size"],
                            [1, "mat-paginator-page-size-label"],
                            ["class", "mat-paginator-page-size-select", 3, "appearance", "color", 4, "ngIf"],
                            ["class", "mat-paginator-page-size-value", 4, "ngIf"],
                            [1, "mat-paginator-page-size-select", 3, "appearance", "color"],
                            [3, "value", "disabled", "panelClass", "disableOptionCentering", "aria-label", "selectionChange"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            [3, "value"],
                            [1, "mat-paginator-page-size-value"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-paginator-navigation-first", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click"],
                            ["d", "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-paginator-navigation-last", 3, "matTooltip", "matTooltipDisabled", "matTooltipPosition", "disabled", "click"],
                            ["d", "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0)(1, "div", 1), b(2, rZ, 5, 3, "div", 2), f(3, "div", 3)(4, "div", 4), w(5), g(), b(6, sZ, 3, 5, "button", 5), f(7, "button", 6), T("click", function() {
                                return i.previousPage()
                            }), ni(), f(8, "svg", 7), E(9, "path", 8), g()(), Oa(), f(10, "button", 9), T("click", function() {
                                return i.nextPage()
                            }), ni(), f(11, "svg", 7), E(12, "path", 10), g()(), b(13, oZ, 3, 5, "button", 11), g()()()), 2 & e && (p(2), y("ngIf", !i.hidePageSize), p(3), X(" ", i._intl.getRangeLabel(i.pageIndex, i.pageSize, i.length), " "), p(1), y("ngIf", i.showFirstLastButtons), p(1), y("matTooltip", i._intl.previousPageLabel)("matTooltipDisabled", i._previousButtonsDisabled())("matTooltipPosition", "above")("disabled", i._previousButtonsDisabled()), q("aria-label", i._intl.previousPageLabel), p(3), y("matTooltip", i._intl.nextPageLabel)("matTooltipDisabled", i._nextButtonsDisabled())("matTooltipPosition", "above")("disabled", i._nextButtonsDisabled()), q("aria-label", i._intl.nextPageLabel), p(3), y("ngIf", i.showFirstLastButtons))
                        },
                        dependencies: [Dn, at, Xt, ci, fo, sa, Ev],
                        styles: [".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{display:inline-block;width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                fZ = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [lZ],
                        imports: [ut, Cs, qv, Zd, de]
                    }), t
                })();
            const pZ = ["mat-sort-header", ""];

            function mZ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 3), T("@arrowPosition.start", function() {
                        return ne(e), ie(x()._disableViewStateAnimation = !0)
                    })("@arrowPosition.done", function() {
                        return ne(e), ie(x()._disableViewStateAnimation = !1)
                    }), E(1, "div", 4), f(2, "div", 5), E(3, "div", 6)(4, "div", 7)(5, "div", 8), g()()
                }
                if (2 & t) {
                    const e = x();
                    y("@arrowOpacity", e._getArrowViewState())("@arrowPosition", e._getArrowViewState())("@allowChildren", e._getArrowDirectionState()), p(2), y("@indicator", e._getArrowDirectionState()), p(1), y("@leftPointer", e._getArrowDirectionState()), p(1), y("@rightPointer", e._getArrowDirectionState())
                }
            }
            const gZ = ["*"],
                RR = new R("MAT_SORT_DEFAULT_OPTIONS"),
                _Z = l1(Si(class {}));
            let mo = (() => {
                class t extends _Z {
                    constructor(e) {
                        super(), this._defaultOptions = e, this.sortables = new Map, this._stateChanges = new H, this.start = "asc", this._direction = "", this.sortChange = new V
                    }
                    get direction() {
                        return this._direction
                    }
                    set direction(e) {
                        this._direction = e
                    }
                    get disableClear() {
                        return this._disableClear
                    }
                    set disableClear(e) {
                        this._disableClear = G(e)
                    }
                    register(e) {
                        this.sortables.set(e.id, e)
                    }
                    deregister(e) {
                        this.sortables.delete(e.id)
                    }
                    sort(e) {
                        this.active != e.id ? (this.active = e.id, this.direction = e.start ? e.start : this.start) : this.direction = this.getNextSortDirection(e), this.sortChange.emit({
                            active: this.active,
                            direction: this.direction
                        })
                    }
                    getNextSortDirection(e) {
                        if (!e) return "";
                        let r = function yZ(t, n) {
                                let e = ["asc", "desc"];
                                return "desc" == t && e.reverse(), n || e.push(""), e
                            }(e.start || this.start, e ? .disableClear ? ? this.disableClear ? ? !!this._defaultOptions ? .disableClear),
                            s = r.indexOf(this.direction) + 1;
                        return s >= r.length && (s = 0), r[s]
                    }
                    ngOnInit() {
                        this._markInitialized()
                    }
                    ngOnChanges() {
                        this._stateChanges.next()
                    }
                    ngOnDestroy() {
                        this._stateChanges.complete()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(RR, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "matSort", ""]
                    ],
                    hostAttrs: [1, "mat-sort"],
                    inputs: {
                        disabled: ["matSortDisabled", "disabled"],
                        active: ["matSortActive", "active"],
                        start: ["matSortStart", "start"],
                        direction: ["matSortDirection", "direction"],
                        disableClear: ["matSortDisableClear", "disableClear"]
                    },
                    outputs: {
                        sortChange: "matSortChange"
                    },
                    exportAs: ["matSort"],
                    features: [A, ze]
                }), t
            })();
            const go = Vb.ENTERING + " " + Bb.STANDARD_CURVE,
                Xl = {
                    indicator: Nt("indicator", [Oe("active-asc, asc", ee({
                        transform: "translateY(0px)"
                    })), Oe("active-desc, desc", ee({
                        transform: "translateY(10px)"
                    })), Ue("active-asc <=> active-desc", Ye(go))]),
                    leftPointer: Nt("leftPointer", [Oe("active-asc, asc", ee({
                        transform: "rotate(-45deg)"
                    })), Oe("active-desc, desc", ee({
                        transform: "rotate(45deg)"
                    })), Ue("active-asc <=> active-desc", Ye(go))]),
                    rightPointer: Nt("rightPointer", [Oe("active-asc, asc", ee({
                        transform: "rotate(45deg)"
                    })), Oe("active-desc, desc", ee({
                        transform: "rotate(-45deg)"
                    })), Ue("active-asc <=> active-desc", Ye(go))]),
                    arrowOpacity: Nt("arrowOpacity", [Oe("desc-to-active, asc-to-active, active", ee({
                        opacity: 1
                    })), Oe("desc-to-hint, asc-to-hint, hint", ee({
                        opacity: .54
                    })), Oe("hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void", ee({
                        opacity: 0
                    })), Ue("* => asc, * => desc, * => active, * => hint, * => void", Ye("0ms")), Ue("* <=> *", Ye(go))]),
                    arrowPosition: Nt("arrowPosition", [Ue("* => desc-to-hint, * => desc-to-active", Ye(go, oa([ee({
                        transform: "translateY(-25%)"
                    }), ee({
                        transform: "translateY(0)"
                    })]))), Ue("* => hint-to-desc, * => active-to-desc", Ye(go, oa([ee({
                        transform: "translateY(0)"
                    }), ee({
                        transform: "translateY(25%)"
                    })]))), Ue("* => asc-to-hint, * => asc-to-active", Ye(go, oa([ee({
                        transform: "translateY(25%)"
                    }), ee({
                        transform: "translateY(0)"
                    })]))), Ue("* => hint-to-asc, * => active-to-asc", Ye(go, oa([ee({
                        transform: "translateY(0)"
                    }), ee({
                        transform: "translateY(-25%)"
                    })]))), Oe("desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active", ee({
                        transform: "translateY(0)"
                    })), Oe("hint-to-desc, active-to-desc, desc", ee({
                        transform: "translateY(-25%)"
                    })), Oe("hint-to-asc, active-to-asc, asc", ee({
                        transform: "translateY(25%)"
                    }))]),
                    allowChildren: Nt("allowChildren", [Ue("* <=> *", [Ll("@*", Pl(), {
                        optional: !0
                    })])])
                };
            let Lp = (() => {
                class t {
                    constructor() {
                        this.changes = new H
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const vZ = {
                    provide: Lp,
                    deps: [
                        [new ii, new $i, Lp]
                    ],
                    useFactory: function bZ(t) {
                        return t || new Lp
                    }
                },
                wZ = Si(class {});
            let Np = (() => {
                    class t extends wZ {
                        constructor(e, i, r, s, o, a, l, c) {
                            super(), this._intl = e, this._changeDetectorRef = i, this._sort = r, this._columnDef = s, this._focusMonitor = o, this._elementRef = a, this._ariaDescriber = l, this._showIndicatorHint = !1, this._viewState = {}, this._arrowDirection = "", this._disableViewStateAnimation = !1, this.arrowPosition = "after", this._sortActionDescription = "Sort", c ? .arrowPosition && (this.arrowPosition = c ? .arrowPosition), this._handleStateChanges()
                        }
                        get sortActionDescription() {
                            return this._sortActionDescription
                        }
                        set sortActionDescription(e) {
                            this._updateSortActionDescription(e)
                        }
                        get disableClear() {
                            return this._disableClear
                        }
                        set disableClear(e) {
                            this._disableClear = G(e)
                        }
                        ngOnInit() {
                            !this.id && this._columnDef && (this.id = this._columnDef.name), this._updateArrowDirection(), this._setAnimationTransitionState({
                                toState: this._isSorted() ? "active" : this._arrowDirection
                            }), this._sort.register(this), this._sortButton = this._elementRef.nativeElement.querySelector(".mat-sort-header-container"), this._updateSortActionDescription(this._sortActionDescription)
                        }
                        ngAfterViewInit() {
                            this._focusMonitor.monitor(this._elementRef, !0).subscribe(e => {
                                const i = !!e;
                                i !== this._showIndicatorHint && (this._setIndicatorHintVisible(i), this._changeDetectorRef.markForCheck())
                            })
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef), this._sort.deregister(this), this._rerenderSubscription.unsubscribe()
                        }
                        _setIndicatorHintVisible(e) {
                            this._isDisabled() && e || (this._showIndicatorHint = e, this._isSorted() || (this._updateArrowDirection(), this._setAnimationTransitionState(this._showIndicatorHint ? {
                                fromState: this._arrowDirection,
                                toState: "hint"
                            } : {
                                fromState: "hint",
                                toState: this._arrowDirection
                            })))
                        }
                        _setAnimationTransitionState(e) {
                            this._viewState = e || {}, this._disableViewStateAnimation && (this._viewState = {
                                toState: e.toState
                            })
                        }
                        _toggleOnInteraction() {
                            this._sort.sort(this), ("hint" === this._viewState.toState || "active" === this._viewState.toState) && (this._disableViewStateAnimation = !0)
                        }
                        _handleClick() {
                            this._isDisabled() || this._sort.sort(this)
                        }
                        _handleKeydown(e) {
                            !this._isDisabled() && (32 === e.keyCode || 13 === e.keyCode) && (e.preventDefault(), this._toggleOnInteraction())
                        }
                        _isSorted() {
                            return this._sort.active == this.id && ("asc" === this._sort.direction || "desc" === this._sort.direction)
                        }
                        _getArrowDirectionState() {
                            return `${this._isSorted()?"active-":""}${this._arrowDirection}`
                        }
                        _getArrowViewState() {
                            const e = this._viewState.fromState;
                            return (e ? `${e}-to-` : "") + this._viewState.toState
                        }
                        _updateArrowDirection() {
                            this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start
                        }
                        _isDisabled() {
                            return this._sort.disabled || this.disabled
                        }
                        _getAriaSortAttribute() {
                            return this._isSorted() ? "asc" == this._sort.direction ? "ascending" : "descending" : "none"
                        }
                        _renderArrow() {
                            return !this._isDisabled() || this._isSorted()
                        }
                        _updateSortActionDescription(e) {
                            this._sortButton && (this._ariaDescriber ? .removeDescription(this._sortButton, this._sortActionDescription), this._ariaDescriber ? .describe(this._sortButton, e)), this._sortActionDescription = e
                        }
                        _handleStateChanges() {
                            this._rerenderSubscription = tt(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {
                                this._isSorted() && (this._updateArrowDirection(), ("hint" === this._viewState.toState || "active" === this._viewState.toState) && (this._disableViewStateAnimation = !0), this._setAnimationTransitionState({
                                    fromState: this._arrowDirection,
                                    toState: "active"
                                }), this._showIndicatorHint = !1), !this._isSorted() && this._viewState && "active" === this._viewState.toState && (this._disableViewStateAnimation = !1, this._setAnimationTransitionState({
                                    fromState: "active",
                                    toState: this._arrowDirection
                                })), this._changeDetectorRef.markForCheck()
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Lp), u(ge), u(mo, 8), u("MAT_SORT_HEADER_COLUMN_DEF", 8), u(dn), u(N), u(TE, 8), u(RR, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["", "mat-sort-header", ""]
                        ],
                        hostAttrs: [1, "mat-sort-header"],
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i._handleClick()
                            })("keydown", function(s) {
                                return i._handleKeydown(s)
                            })("mouseenter", function() {
                                return i._setIndicatorHintVisible(!0)
                            })("mouseleave", function() {
                                return i._setIndicatorHintVisible(!1)
                            }), 2 & e && (q("aria-sort", i._getAriaSortAttribute()), re("mat-sort-header-disabled", i._isDisabled()))
                        },
                        inputs: {
                            disabled: "disabled",
                            id: ["mat-sort-header", "id"],
                            arrowPosition: "arrowPosition",
                            start: "start",
                            sortActionDescription: "sortActionDescription",
                            disableClear: "disableClear"
                        },
                        exportAs: ["matSortHeader"],
                        features: [A],
                        attrs: pZ,
                        ngContentSelectors: gZ,
                        decls: 4,
                        vars: 7,
                        consts: [
                            [1, "mat-sort-header-container", "mat-focus-indicator"],
                            [1, "mat-sort-header-content"],
                            ["class", "mat-sort-header-arrow", 4, "ngIf"],
                            [1, "mat-sort-header-arrow"],
                            [1, "mat-sort-header-stem"],
                            [1, "mat-sort-header-indicator"],
                            [1, "mat-sort-header-pointer-left"],
                            [1, "mat-sort-header-pointer-right"],
                            [1, "mat-sort-header-pointer-middle"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "div", 0)(1, "div", 1), me(2), g(), b(3, mZ, 6, 6, "div", 2), g()), 2 & e && (re("mat-sort-header-sorted", i._isSorted())("mat-sort-header-position-before", "before" === i.arrowPosition), q("tabindex", i._isDisabled() ? null : 0)("role", i._isDisabled() ? null : "button"), p(3), y("ngIf", i._renderArrow()))
                        },
                        dependencies: [at],
                        styles: [".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}"],
                        encapsulation: 2,
                        data: {
                            animation: [Xl.indicator, Xl.leftPointer, Xl.rightPointer, Xl.arrowOpacity, Xl.arrowPosition, Xl.allowChildren]
                        },
                        changeDetection: 0
                    }), t
                })(),
                CZ = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [vZ],
                        imports: [ut, de]
                    }), t
                })();
            class Yv {
                static jobToString(n, e) {
                    if (!n) return "Onbekend - Onbekend";
                    if (e && e.staff) return `${n.jobLabel||"Onbekend"} - ${n?.jobGradeLabel||"Onbekend"}`;
                    if (n.hideJobInMeos && n.job2Label) return `${n.job2Label||"Onbekend"} - ${n.job2GradeLabel||"Onbekend"}`;
                    switch (n.job) {
                        case "biker":
                        case "yakuza":
                            return "Olie verwerker - Medewerker";
                        case "mafia":
                        case "cartel":
                            return "Vuilnisman - Vuilnisman";
                        case "bratva":
                        case "gang":
                        case "peaky":
                            return "Ramenwasser - Ramenwasser";
                        default:
                            return `${n.jobLabel||"Onbekend"} - ${n.jobGradeLabel||"Onbekend"}`
                    }
                }
                static job2ToString(n, e) {
                    if (!n) return "Onbekend - Onbekend";
                    if (e && e.staff) return `${n.job2Label||"Onbekend"} - ${n?.job2GradeLabel||"Onbekend"}`;
                    if (n.hideJobInMeos && n.job2Label) return `${n.job2Label||"Onbekend"} - ${n.job2GradeLabel||"Onbekend"}`;
                    switch (n.job2) {
                        case "biker":
                        case "yakuza":
                            return "Olie verwerker - Medewerker";
                        case "mafia":
                        case "cartel":
                            return "Vuilnisman - Vuilnisman";
                        case "bratva":
                        case "gang":
                        case "peaky":
                            return "Ramenwasser - Ramenwasser";
                        default:
                            return `${n.job2Label||"Onbekend"} - ${n.job2GradeLabel||"Onbekend"}`
                    }
                }
            }
            class xZ {
                constructor(n, e) {
                    this.playerService = n, this.toastr = e, this.playersSubject = new Te([]), this.loadingSubject = new Te(!1), this.loading$ = this.loadingSubject.asObservable(), this.length = 10
                }
                connect(n) {
                    return this.playersSubject.asObservable()
                }
                disconnect(n) {
                    this.playersSubject.complete(), this.loadingSubject.complete()
                }
                loadPlayers(n = "", e = "", i = "asc", r = 0, s = 20, o = [], a = "") {
                    console.log(o), this.loadingSubject.next(!0), "" === i && (e = ""), this.playerService.findPlayers(n, i, r, s, "normal", "", o, e, a).subscribe({
                        next: l => {
                            null != l && (this.length = l.length, this.playersSubject.next(l.payload))
                        },
                        error: l => {
                            console.error(l), this.toastr.error(`Er ging iets mis bij het ophalen van de personen data! (${l?.statusText??l?.status??l.message}`)
                        },
                        complete: () => {
                            this.loadingSubject.next(!1)
                        }
                    })
                }
            }
            let Qv = (() => {
                class t {
                    constructor(e, i) {
                        this.http = e, this.cachedHttp = i, this.defaultOptions = {
                            cacheMins: 60
                        }
                    }
                    findPlayers(e = "", i = "ASC", r = 0, s = 20, o = "full", a = "", l = [], c = "", d = "") {
                        (s < 1 || r < 0) && console.error("Invalid pageNumber or pageSize!");
                        let h = (new Ai).set("sortOrder", i).set("page", r.toString()).set("pageSize", s.toString()).set("gender", a).set("dataType", o).set("sortColumn", c).set("filter", e).set("id", d);
                        for (const m of l) h = h.append("jobs", m);
                        return this.cachedHttp.get("/api/Players", {
                            params: h,
                            cacheMins: this.defaultOptions.cacheMins
                        }).pipe(Z(m => m))
                    }
                    get(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/`, this.defaultOptions)
                    }
                    getPlayerName(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/Name`, {
                            cacheMins: 1440,
                            refreshAfter: 1440,
                            cacheStatusCodes: [200, 404]
                        })
                    }
                    getCriminalRecords(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/CriminalRecords/`, this.defaultOptions)
                    }
                    postCriminalRecord(e) {
                        return this.http.post("/api/CriminalRecords/", e)
                    }
                    getOwnedProperties(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/OwnedProperties/`, this.defaultOptions)
                    }
                    getOwnedVehicles(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/OwnedVehicles/`, this.defaultOptions)
                    }
                    getBilling(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/Billing/`, this.defaultOptions)
                    }
                    getNotes(e) {
                        return this.cachedHttp.get(`/api/Players/${e}/Notes/`, this.defaultOptions)
                    }
                    addNote(e) {
                        return this.http.post("/api/Notes/", e)
                    }
                    deleteCriminalRecord(e) {
                        return this.http.delete(`/api/CriminalRecords/${e.offense}`)
                    }
                    deleteBill(e) {
                        return this.http.delete(`/api/Billings/${e.id}`)
                    }
                    deleteNote(e) {
                        return this.http.delete(`/api/Notes/${e.id}`)
                    }
                    putNote(e) {
                        return this.http.put(`/api/Notes/${e.id}`, e)
                    }
                    removeWarrant(e) {
                        return this.http.put(`/api/Notes/${e.id}/RemoveWarrant`, {})
                    }
                    addWarrant(e) {
                        return this.http.put(`/api/Notes/${e.id}/AddWarrant`, {})
                    }
                    getJobs() {
                        return this.cachedHttp.get("/api/jobs", {
                            cacheMins: 1440,
                            refreshAfter: 60
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(wr), C(yp))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function FR(t, n) {
                return n ? e => gl(n.pipe(Fe(1), function DZ() {
                    return Pt((t, n) => {
                        t.subscribe(kt(n, gc))
                    })
                }()), e.pipe(FR(t))) : _t((e, i) => t(e, i).pipe(Fe(1), _l(e)))
            }

            function iu(t, n = Il) {
                const e = Pd(t, n);
                return FR(() => e)
            }
            const MZ = ["mat-menu-item", ""];

            function SZ(t, n) {
                1 & t && (ni(), f(0, "svg", 2), E(1, "polygon", 3), g())
            }
            const OR = ["*"];

            function kZ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 0), T("keydown", function(r) {
                        return ne(e), ie(x()._handleKeydown(r))
                    })("click", function() {
                        return ne(e), ie(x().closed.emit("click"))
                    })("@transformMenu.start", function(r) {
                        return ne(e), ie(x()._onAnimationStart(r))
                    })("@transformMenu.done", function(r) {
                        return ne(e), ie(x()._onAnimationDone(r))
                    }), f(1, "div", 1), me(2), g()()
                }
                if (2 & t) {
                    const e = x();
                    y("id", e.panelId)("ngClass", e._classList)("@transformMenu", e._panelAnimationState), q("aria-label", e.ariaLabel || null)("aria-labelledby", e.ariaLabelledby || null)("aria-describedby", e.ariaDescribedby || null)
                }
            }
            const Bp = {
                    transformMenu: Nt("transformMenu", [Oe("void", ee({
                        opacity: 0,
                        transform: "scale(0.8)"
                    })), Ue("void => enter", Ye("120ms cubic-bezier(0, 0, 0.2, 1)", ee({
                        opacity: 1,
                        transform: "scale(1)"
                    }))), Ue("* => void", Ye("100ms 25ms linear", ee({
                        opacity: 0
                    })))]),
                    fadeInItems: Nt("fadeInItems", [Oe("showing", ee({
                        opacity: 1
                    })), Ue("void => *", [ee({
                        opacity: 0
                    }), Ye("400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])
                },
                PR = new R("MatMenuContent");
            let AZ = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l) {
                            this._template = e, this._componentFactoryResolver = i, this._appRef = r, this._injector = s, this._viewContainerRef = o, this._document = a, this._changeDetectorRef = l, this._attached = new H
                        }
                        attach(e = {}) {
                            this._portal || (this._portal = new yr(this._template, this._viewContainerRef)), this.detach(), this._outlet || (this._outlet = new zE(this._document.createElement("div"), this._componentFactoryResolver, this._appRef, this._injector));
                            const i = this._template.elementRef.nativeElement;
                            i.parentNode.insertBefore(this._outlet.outletElement, i), this._changeDetectorRef ? .markForCheck(), this._portal.attach(this._outlet, e), this._attached.next()
                        }
                        detach() {
                            this._portal.isAttached && this._portal.detach()
                        }
                        ngOnDestroy() {
                            this._outlet && this._outlet.dispose()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(Ci), u(Lr), u(Ct), u(Je), u(pe), u(ge))
                    }, t.\u0275dir = M({
                        type: t
                    }), t
                })(),
                Kv = (() => {
                    class t extends AZ {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["ng-template", "matMenuContent", ""]
                        ],
                        features: [Q([{
                            provide: PR,
                            useExisting: t
                        }]), A]
                    }), t
                })();
            const Zv = new R("MAT_MENU_PANEL"),
                EZ = br(Si(class {}));
            let Vp = (() => {
                class t extends EZ {
                    constructor(e, i, r, s, o) {
                        super(), this._elementRef = e, this._document = i, this._focusMonitor = r, this._parentMenu = s, this._changeDetectorRef = o, this.role = "menuitem", this._hovered = new H, this._focused = new H, this._highlighted = !1, this._triggersSubmenu = !1, s ? .addItem ? .(this)
                    }
                    focus(e, i) {
                        this._focusMonitor && e ? this._focusMonitor.focusVia(this._getHostElement(), e, i) : this._getHostElement().focus(i), this._focused.next(this)
                    }
                    ngAfterViewInit() {
                        this._focusMonitor && this._focusMonitor.monitor(this._elementRef, !1)
                    }
                    ngOnDestroy() {
                        this._focusMonitor && this._focusMonitor.stopMonitoring(this._elementRef), this._parentMenu && this._parentMenu.removeItem && this._parentMenu.removeItem(this), this._hovered.complete(), this._focused.complete()
                    }
                    _getTabIndex() {
                        return this.disabled ? "-1" : "0"
                    }
                    _getHostElement() {
                        return this._elementRef.nativeElement
                    }
                    _checkDisabled(e) {
                        this.disabled && (e.preventDefault(), e.stopPropagation())
                    }
                    _handleMouseEnter() {
                        this._hovered.next(this)
                    }
                    getLabel() {
                        const e = this._elementRef.nativeElement.cloneNode(!0),
                            i = e.querySelectorAll("mat-icon, .material-icons");
                        for (let r = 0; r < i.length; r++) i[r].remove();
                        return e.textContent ? .trim() || ""
                    }
                    _setHighlighted(e) {
                        this._highlighted = e, this._changeDetectorRef ? .markForCheck()
                    }
                    _hasFocus() {
                        return this._document && this._document.activeElement === this._getHostElement()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(pe), u(dn), u(Zv, 8), u(ge))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["", "mat-menu-item", ""]
                    ],
                    hostAttrs: [1, "mat-focus-indicator"],
                    hostVars: 10,
                    hostBindings: function(e, i) {
                        1 & e && T("click", function(s) {
                            return i._checkDisabled(s)
                        })("mouseenter", function() {
                            return i._handleMouseEnter()
                        }), 2 & e && (q("role", i.role)("tabindex", i._getTabIndex())("aria-disabled", i.disabled.toString())("disabled", i.disabled || null), re("mat-menu-item", !0)("mat-menu-item-highlighted", i._highlighted)("mat-menu-item-submenu-trigger", i._triggersSubmenu))
                    },
                    inputs: {
                        disabled: "disabled",
                        disableRipple: "disableRipple",
                        role: "role"
                    },
                    exportAs: ["matMenuItem"],
                    features: [A],
                    attrs: MZ,
                    ngContentSelectors: OR,
                    decls: 3,
                    vars: 3,
                    consts: [
                        ["matRipple", "", 1, "mat-menu-ripple", 3, "matRippleDisabled", "matRippleTrigger"],
                        ["class", "mat-menu-submenu-icon", "viewBox", "0 0 5 10", "focusable", "false", 4, "ngIf"],
                        ["viewBox", "0 0 5 10", "focusable", "false", 1, "mat-menu-submenu-icon"],
                        ["points", "0,0 5,5 0,10"]
                    ],
                    template: function(e, i) {
                        1 & e && (Xe(), me(0), E(1, "div", 0), b(2, SZ, 2, 0, "svg", 1)), 2 & e && (p(1), y("matRippleDisabled", i.disableRipple || i.disabled)("matRippleTrigger", i._getHostElement()), p(1), y("ngIf", i._triggersSubmenu))
                    },
                    dependencies: [at, li],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();
            const LR = new R("mat-menu-default-options", {
                providedIn: "root",
                factory: function TZ() {
                    return {
                        overlapTrigger: !1,
                        xPosition: "after",
                        yPosition: "below",
                        backdropClass: "cdk-overlay-transparent-backdrop"
                    }
                }
            });
            let IZ = 0,
                ru = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._elementRef = e, this._ngZone = i, this._defaultOptions = r, this._changeDetectorRef = s, this._xPosition = this._defaultOptions.xPosition, this._yPosition = this._defaultOptions.yPosition, this._directDescendantItems = new Pr, this._tabSubscription = Re.EMPTY, this._classList = {}, this._panelAnimationState = "void", this._animationDone = new H, this.overlayPanelClass = this._defaultOptions.overlayPanelClass || "", this.backdropClass = this._defaultOptions.backdropClass, this._overlapTrigger = this._defaultOptions.overlapTrigger, this._hasBackdrop = this._defaultOptions.hasBackdrop, this.closed = new V, this.close = this.closed, this.panelId = "mat-menu-panel-" + IZ++
                        }
                        get xPosition() {
                            return this._xPosition
                        }
                        set xPosition(e) {
                            this._xPosition = e, this.setPositionClasses()
                        }
                        get yPosition() {
                            return this._yPosition
                        }
                        set yPosition(e) {
                            this._yPosition = e, this.setPositionClasses()
                        }
                        get overlapTrigger() {
                            return this._overlapTrigger
                        }
                        set overlapTrigger(e) {
                            this._overlapTrigger = G(e)
                        }
                        get hasBackdrop() {
                            return this._hasBackdrop
                        }
                        set hasBackdrop(e) {
                            this._hasBackdrop = G(e)
                        }
                        set panelClass(e) {
                            const i = this._previousPanelClass;
                            i && i.length && i.split(" ").forEach(r => {
                                this._classList[r] = !1
                            }), this._previousPanelClass = e, e && e.length && (e.split(" ").forEach(r => {
                                this._classList[r] = !0
                            }), this._elementRef.nativeElement.className = "")
                        }
                        get classList() {
                            return this.panelClass
                        }
                        set classList(e) {
                            this.panelClass = e
                        }
                        ngOnInit() {
                            this.setPositionClasses()
                        }
                        ngAfterContentInit() {
                            this._updateDirectDescendants(), this._keyManager = new Rd(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd(), this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit("tab")), this._directDescendantItems.changes.pipe(pt(this._directDescendantItems), vt(e => tt(...e.map(i => i._focused)))).subscribe(e => this._keyManager.updateActiveItem(e)), this._directDescendantItems.changes.subscribe(e => {
                                const i = this._keyManager;
                                if ("enter" === this._panelAnimationState && i.activeItem ? ._hasFocus()) {
                                    const r = e.toArray(),
                                        s = Math.max(0, Math.min(r.length - 1, i.activeItemIndex || 0));
                                    r[s] && !r[s].disabled ? i.setActiveItem(s) : i.setNextItemActive()
                                }
                            })
                        }
                        ngOnDestroy() {
                            this._directDescendantItems.destroy(), this._tabSubscription.unsubscribe(), this.closed.complete()
                        }
                        _hovered() {
                            return this._directDescendantItems.changes.pipe(pt(this._directDescendantItems), vt(i => tt(...i.map(r => r._hovered))))
                        }
                        addItem(e) {}
                        removeItem(e) {}
                        _handleKeydown(e) {
                            const i = e.keyCode,
                                r = this._keyManager;
                            switch (i) {
                                case 27:
                                    $t(e) || (e.preventDefault(), this.closed.emit("keydown"));
                                    break;
                                case 37:
                                    this.parentMenu && "ltr" === this.direction && this.closed.emit("keydown");
                                    break;
                                case 39:
                                    this.parentMenu && "rtl" === this.direction && this.closed.emit("keydown");
                                    break;
                                default:
                                    return (38 === i || 40 === i) && r.setFocusOrigin("keyboard"), void r.onKeydown(e)
                            }
                            e.stopPropagation()
                        }
                        focusFirstItem(e = "program") {
                            this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                                let i = null;
                                if (this._directDescendantItems.length && (i = this._directDescendantItems.first._getHostElement().closest('[role="menu"]')), !i || !i.contains(document.activeElement)) {
                                    const r = this._keyManager;
                                    r.setFocusOrigin(e).setFirstItemActive(), !r.activeItem && i && i.focus()
                                }
                            })
                        }
                        resetActiveItem() {
                            this._keyManager.setActiveItem(-1)
                        }
                        setElevation(e) {
                            const i = Math.min(this._baseElevation + e, 24),
                                r = `${this._elevationPrefix}${i}`,
                                s = Object.keys(this._classList).find(o => o.startsWith(this._elevationPrefix));
                            (!s || s === this._previousElevation) && (this._previousElevation && (this._classList[this._previousElevation] = !1), this._classList[r] = !0, this._previousElevation = r)
                        }
                        setPositionClasses(e = this.xPosition, i = this.yPosition) {
                            const r = this._classList;
                            r["mat-menu-before"] = "before" === e, r["mat-menu-after"] = "after" === e, r["mat-menu-above"] = "above" === i, r["mat-menu-below"] = "below" === i, this._changeDetectorRef ? .markForCheck()
                        }
                        _startAnimation() {
                            this._panelAnimationState = "enter"
                        }
                        _resetAnimation() {
                            this._panelAnimationState = "void"
                        }
                        _onAnimationDone(e) {
                            this._animationDone.next(e), this._isAnimating = !1
                        }
                        _onAnimationStart(e) {
                            this._isAnimating = !0, "enter" === e.toState && 0 === this._keyManager.activeItemIndex && (e.element.scrollTop = 0)
                        }
                        _updateDirectDescendants() {
                            this._allItems.changes.pipe(pt(this._allItems)).subscribe(e => {
                                this._directDescendantItems.reset(e.filter(i => i._parentMenu === this)), this._directDescendantItems.notifyOnChanges()
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ce), u(LR), u(ge))
                    }, t.\u0275dir = M({
                        type: t,
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, PR, 5), _e(r, Vp, 5), _e(r, Vp, 4)), 2 & e) {
                                let s;
                                O(s = P()) && (i.lazyContent = s.first), O(s = P()) && (i._allItems = s), O(s = P()) && (i.items = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && J(rt, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.templateRef = r.first)
                            }
                        },
                        inputs: {
                            backdropClass: "backdropClass",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
                            xPosition: "xPosition",
                            yPosition: "yPosition",
                            overlapTrigger: "overlapTrigger",
                            hasBackdrop: "hasBackdrop",
                            panelClass: ["class", "panelClass"],
                            classList: "classList"
                        },
                        outputs: {
                            closed: "closed",
                            close: "close"
                        }
                    }), t
                })(),
                Hp = (() => {
                    class t extends ru {
                        constructor(e, i, r, s) {
                            super(e, i, r, s), this._elevationPrefix = "mat-elevation-z", this._baseElevation = 4
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ce), u(LR), u(ge))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-menu"]
                        ],
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            2 & e && q("aria-label", null)("aria-labelledby", null)("aria-describedby", null)
                        },
                        exportAs: ["matMenu"],
                        features: [Q([{
                            provide: Zv,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: OR,
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["tabindex", "-1", "role", "menu", 1, "mat-menu-panel", 3, "id", "ngClass", "keydown", "click"],
                            [1, "mat-menu-content"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, kZ, 3, 6, "ng-template"))
                        },
                        dependencies: [gr],
                        styles: ['mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}'],
                        encapsulation: 2,
                        data: {
                            animation: [Bp.transformMenu, Bp.fadeInItems]
                        },
                        changeDetection: 0
                    }), t
                })();
            const NR = new R("mat-menu-scroll-strategy"),
                FZ = {
                    provide: NR,
                    deps: [vn],
                    useFactory: function RZ(t) {
                        return () => t.scrollStrategies.reposition()
                    }
                },
                BR = Zs({
                    passive: !0
                });
            let OZ = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l, c, d) {
                            this._overlay = e, this._element = i, this._viewContainerRef = r, this._menuItemInstance = a, this._dir = l, this._focusMonitor = c, this._ngZone = d, this._overlayRef = null, this._menuOpen = !1, this._closingActionsSubscription = Re.EMPTY, this._hoverSubscription = Re.EMPTY, this._menuCloseSubscription = Re.EMPTY, this._handleTouchStart = h => {
                                Eb(h) || (this._openedBy = "touch")
                            }, this._openedBy = void 0, this.restoreFocus = !0, this.menuOpened = new V, this.onMenuOpen = this.menuOpened, this.menuClosed = new V, this.onMenuClose = this.menuClosed, this._scrollStrategy = s, this._parentMaterialMenu = o instanceof ru ? o : void 0, i.nativeElement.addEventListener("touchstart", this._handleTouchStart, BR), a && (a._triggersSubmenu = this.triggersSubmenu())
                        }
                        get _deprecatedMatMenuTriggerFor() {
                            return this.menu
                        }
                        set _deprecatedMatMenuTriggerFor(e) {
                            this.menu = e
                        }
                        get menu() {
                            return this._menu
                        }
                        set menu(e) {
                            e !== this._menu && (this._menu = e, this._menuCloseSubscription.unsubscribe(), e && (this._menuCloseSubscription = e.close.subscribe(i => {
                                this._destroyMenu(i), ("click" === i || "tab" === i) && this._parentMaterialMenu && this._parentMaterialMenu.closed.emit(i)
                            })))
                        }
                        ngAfterContentInit() {
                            this._handleHover()
                        }
                        ngOnDestroy() {
                            this._overlayRef && (this._overlayRef.dispose(), this._overlayRef = null), this._element.nativeElement.removeEventListener("touchstart", this._handleTouchStart, BR), this._menuCloseSubscription.unsubscribe(), this._closingActionsSubscription.unsubscribe(), this._hoverSubscription.unsubscribe()
                        }
                        get menuOpen() {
                            return this._menuOpen
                        }
                        get dir() {
                            return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr"
                        }
                        triggersSubmenu() {
                            return !(!this._menuItemInstance || !this._parentMaterialMenu)
                        }
                        toggleMenu() {
                            return this._menuOpen ? this.closeMenu() : this.openMenu()
                        }
                        openMenu() {
                            const e = this.menu;
                            if (this._menuOpen || !e) return;
                            const i = this._createOverlay(e),
                                r = i.getConfig(),
                                s = r.positionStrategy;
                            this._setPosition(e, s), r.hasBackdrop = e.hasBackdrop ? ? !this.triggersSubmenu(), i.attach(this._getPortal(e)), e.lazyContent && e.lazyContent.attach(this.menuData), this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu()), this._initMenu(e), e instanceof ru && (e._startAnimation(), e._directDescendantItems.changes.pipe(le(e.close)).subscribe(() => {
                                s.withLockedPosition(!1).reapplyLastPosition(), s.withLockedPosition(!0)
                            }))
                        }
                        closeMenu() {
                            this.menu ? .close.emit()
                        }
                        focus(e, i) {
                            this._focusMonitor && e ? this._focusMonitor.focusVia(this._element, e, i) : this._element.nativeElement.focus(i)
                        }
                        updatePosition() {
                            this._overlayRef ? .updatePosition()
                        }
                        _destroyMenu(e) {
                            if (!this._overlayRef || !this.menuOpen) return;
                            const i = this.menu;
                            this._closingActionsSubscription.unsubscribe(), this._overlayRef.detach(), this.restoreFocus && ("keydown" === e || !this._openedBy || !this.triggersSubmenu()) && this.focus(this._openedBy), this._openedBy = void 0, i instanceof ru ? (i._resetAnimation(), i.lazyContent ? i._animationDone.pipe(Ie(r => "void" === r.toState), Fe(1), le(i.lazyContent._attached)).subscribe({
                                next: () => i.lazyContent.detach(),
                                complete: () => this._setIsMenuOpen(!1)
                            }) : this._setIsMenuOpen(!1)) : (this._setIsMenuOpen(!1), i ? .lazyContent ? .detach())
                        }
                        _initMenu(e) {
                            e.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : void 0, e.direction = this.dir, this._setMenuElevation(e), e.focusFirstItem(this._openedBy || "program"), this._setIsMenuOpen(!0)
                        }
                        _setMenuElevation(e) {
                            if (e.setElevation) {
                                let i = 0,
                                    r = e.parentMenu;
                                for (; r;) i++, r = r.parentMenu;
                                e.setElevation(i)
                            }
                        }
                        _setIsMenuOpen(e) {
                            this._menuOpen = e, this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit(), this.triggersSubmenu() && this._menuItemInstance._setHighlighted(e)
                        }
                        _createOverlay(e) {
                            if (!this._overlayRef) {
                                const i = this._getOverlayConfig(e);
                                this._subscribeToPositions(e, i.positionStrategy), this._overlayRef = this._overlay.create(i), this._overlayRef.keydownEvents().subscribe()
                            }
                            return this._overlayRef
                        }
                        _getOverlayConfig(e) {
                            return new na({
                                positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn(".mat-menu-panel, .mat-mdc-menu-panel"),
                                backdropClass: e.backdropClass || "cdk-overlay-transparent-backdrop",
                                panelClass: e.overlayPanelClass,
                                scrollStrategy: this._scrollStrategy(),
                                direction: this._dir
                            })
                        }
                        _subscribeToPositions(e, i) {
                            e.setPositionClasses && i.positionChanges.subscribe(r => {
                                const s = "start" === r.connectionPair.overlayX ? "after" : "before",
                                    o = "top" === r.connectionPair.overlayY ? "below" : "above";
                                this._ngZone ? this._ngZone.run(() => e.setPositionClasses(s, o)) : e.setPositionClasses(s, o)
                            })
                        }
                        _setPosition(e, i) {
                            let [r, s] = "before" === e.xPosition ? ["end", "start"] : ["start", "end"], [o, a] = "above" === e.yPosition ? ["bottom", "top"] : ["top", "bottom"], [l, c] = [o, a], [d, h] = [r, s], m = 0;
                            if (this.triggersSubmenu()) {
                                if (h = r = "before" === e.xPosition ? "start" : "end", s = d = "end" === r ? "start" : "end", this._parentMaterialMenu) {
                                    if (null == this._parentInnerPadding) {
                                        const _ = this._parentMaterialMenu.items.first;
                                        this._parentInnerPadding = _ ? _._getHostElement().offsetTop : 0
                                    }
                                    m = "bottom" === o ? this._parentInnerPadding : -this._parentInnerPadding
                                }
                            } else e.overlapTrigger || (l = "top" === o ? "bottom" : "top", c = "top" === a ? "bottom" : "top");
                            i.withPositions([{
                                originX: r,
                                originY: l,
                                overlayX: d,
                                overlayY: o,
                                offsetY: m
                            }, {
                                originX: s,
                                originY: l,
                                overlayX: h,
                                overlayY: o,
                                offsetY: m
                            }, {
                                originX: r,
                                originY: c,
                                overlayX: d,
                                overlayY: a,
                                offsetY: -m
                            }, {
                                originX: s,
                                originY: c,
                                overlayX: h,
                                overlayY: a,
                                offsetY: -m
                            }])
                        }
                        _menuClosingActions() {
                            const e = this._overlayRef.backdropClick(),
                                i = this._overlayRef.detachments();
                            return tt(e, this._parentMaterialMenu ? this._parentMaterialMenu.closed : z(), this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(Ie(o => o !== this._menuItemInstance), Ie(() => this._menuOpen)) : z(), i)
                        }
                        _handleMousedown(e) {
                            Ab(e) || (this._openedBy = 0 === e.button ? "mouse" : void 0, this.triggersSubmenu() && e.preventDefault())
                        }
                        _handleKeydown(e) {
                            const i = e.keyCode;
                            (13 === i || 32 === i) && (this._openedBy = "keyboard"), this.triggersSubmenu() && (39 === i && "ltr" === this.dir || 37 === i && "rtl" === this.dir) && (this._openedBy = "keyboard", this.openMenu())
                        }
                        _handleClick(e) {
                            this.triggersSubmenu() ? (e.stopPropagation(), this.openMenu()) : this.toggleMenu()
                        }
                        _handleHover() {
                            !this.triggersSubmenu() || !this._parentMaterialMenu || (this._hoverSubscription = this._parentMaterialMenu._hovered().pipe(Ie(e => e === this._menuItemInstance && !e.disabled), iu(0, jf)).subscribe(() => {
                                this._openedBy = "mouse", this.menu instanceof ru && this.menu._isAnimating ? this.menu._animationDone.pipe(Fe(1), iu(0, jf), le(this._parentMaterialMenu._hovered())).subscribe(() => this.openMenu()) : this.openMenu()
                            }))
                        }
                        _getPortal(e) {
                            return (!this._portal || this._portal.templateRef !== e.templateRef) && (this._portal = new yr(e.templateRef, this._viewContainerRef)), this._portal
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(vn), u(N), u(Je), u(NR), u(Zv, 8), u(Vp, 10), u(Mt, 8), u(dn), u(ce))
                    }, t.\u0275dir = M({
                        type: t,
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function(s) {
                                return i._handleClick(s)
                            })("mousedown", function(s) {
                                return i._handleMousedown(s)
                            })("keydown", function(s) {
                                return i._handleKeydown(s)
                            }), 2 & e && q("aria-haspopup", i.menu ? "menu" : null)("aria-expanded", i.menuOpen || null)("aria-controls", i.menuOpen ? i.menu.panelId : null)
                        },
                        inputs: {
                            _deprecatedMatMenuTriggerFor: ["mat-menu-trigger-for", "_deprecatedMatMenuTriggerFor"],
                            menu: ["matMenuTriggerFor", "menu"],
                            menuData: ["matMenuTriggerData", "menuData"],
                            restoreFocus: ["matMenuTriggerRestoreFocus", "restoreFocus"]
                        },
                        outputs: {
                            menuOpened: "menuOpened",
                            onMenuOpen: "onMenuOpen",
                            menuClosed: "menuClosed",
                            onMenuClose: "onMenuClose"
                        }
                    }), t
                })(),
                $p = (() => {
                    class t extends OZ {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "mat-menu-trigger-for", ""],
                            ["", "matMenuTriggerFor", ""]
                        ],
                        hostAttrs: [1, "mat-menu-trigger"],
                        exportAs: ["matMenuTrigger"],
                        features: [A]
                    }), t
                })(),
                Xv = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [FZ],
                        imports: [ut, de, ki, to, vs, de]
                    }), t
                })();

            function _o(t) {
                return !!t && (t instanceof Ze || Qe(t.lift) && Qe(t.subscribe))
            }
            const PZ = [
                    [
                        ["caption"]
                    ],
                    [
                        ["colgroup"],
                        ["col"]
                    ]
                ],
                LZ = ["caption", "colgroup, col"];

            function Jv(t) {
                return class extends t {
                    constructor(...n) {
                        super(...n), this._sticky = !1, this._hasStickyChanged = !1
                    }
                    get sticky() {
                        return this._sticky
                    }
                    set sticky(n) {
                        const e = this._sticky;
                        this._sticky = G(n), this._hasStickyChanged = e !== this._sticky
                    }
                    hasStickyChanged() {
                        const n = this._hasStickyChanged;
                        return this._hasStickyChanged = !1, n
                    }
                    resetStickyChanged() {
                        this._hasStickyChanged = !1
                    }
                }
            }
            const Jl = new R("CDK_TABLE");
            let ec = (() => {
                    class t {
                        constructor(e) {
                            this.template = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkCellDef", ""]
                        ]
                    }), t
                })(),
                tc = (() => {
                    class t {
                        constructor(e) {
                            this.template = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkHeaderCellDef", ""]
                        ]
                    }), t
                })(),
                jp = (() => {
                    class t {
                        constructor(e) {
                            this.template = e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkFooterCellDef", ""]
                        ]
                    }), t
                })();
            class HZ {}
            const $Z = Jv(HZ);
            let As = (() => {
                class t extends $Z {
                    constructor(e) {
                        super(), this._table = e, this._stickyEnd = !1
                    }
                    get name() {
                        return this._name
                    }
                    set name(e) {
                        this._setNameInput(e)
                    }
                    get stickyEnd() {
                        return this._stickyEnd
                    }
                    set stickyEnd(e) {
                        const i = this._stickyEnd;
                        this._stickyEnd = G(e), this._hasStickyChanged = i !== this._stickyEnd
                    }
                    _updateColumnCssClassName() {
                        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`]
                    }
                    _setNameInput(e) {
                        e && (this._name = e, this.cssClassFriendlyName = e.replace(/[^a-z0-9_-]/gi, "-"), this._updateColumnCssClassName())
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Jl, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "cdkColumnDef", ""]
                    ],
                    contentQueries: function(e, i, r) {
                        if (1 & e && (_e(r, ec, 5), _e(r, tc, 5), _e(r, jp, 5)), 2 & e) {
                            let s;
                            O(s = P()) && (i.cell = s.first), O(s = P()) && (i.headerCell = s.first), O(s = P()) && (i.footerCell = s.first)
                        }
                    },
                    inputs: {
                        sticky: "sticky",
                        name: ["cdkColumnDef", "name"],
                        stickyEnd: "stickyEnd"
                    },
                    features: [Q([{
                        provide: "MAT_SORT_HEADER_COLUMN_DEF",
                        useExisting: t
                    }]), A]
                }), t
            })();
            class ew {
                constructor(n, e) {
                    e.nativeElement.classList.add(...n._columnCssClassName)
                }
            }
            let tw = (() => {
                    class t extends ew {
                        constructor(e, i) {
                            super(e, i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(As), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["cdk-header-cell"],
                            ["th", "cdk-header-cell", ""]
                        ],
                        hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
                        features: [A]
                    }), t
                })(),
                nw = (() => {
                    class t extends ew {
                        constructor(e, i) {
                            if (super(e, i), 1 === e._table ? ._elementRef.nativeElement.nodeType) {
                                const r = e._table._elementRef.nativeElement.getAttribute("role");
                                i.nativeElement.setAttribute("role", "grid" === r || "treegrid" === r ? "gridcell" : "cell")
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(As), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["cdk-cell"],
                            ["td", "cdk-cell", ""]
                        ],
                        hostAttrs: [1, "cdk-cell"],
                        features: [A]
                    }), t
                })();
            class HR {
                constructor() {
                    this.tasks = [], this.endTasks = []
                }
            }
            const iw = new R("_COALESCED_STYLE_SCHEDULER");
            let $R = (() => {
                    class t {
                        constructor(e) {
                            this._ngZone = e, this._currentSchedule = null, this._destroyed = new H
                        }
                        schedule(e) {
                            this._createScheduleIfNeeded(), this._currentSchedule.tasks.push(e)
                        }
                        scheduleEnd(e) {
                            this._createScheduleIfNeeded(), this._currentSchedule.endTasks.push(e)
                        }
                        ngOnDestroy() {
                            this._destroyed.next(), this._destroyed.complete()
                        }
                        _createScheduleIfNeeded() {
                            this._currentSchedule || (this._currentSchedule = new HR, this._getScheduleObservable().pipe(le(this._destroyed)).subscribe(() => {
                                for (; this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length;) {
                                    const e = this._currentSchedule;
                                    this._currentSchedule = new HR;
                                    for (const i of e.tasks) i();
                                    for (const i of e.endTasks) i()
                                }
                                this._currentSchedule = null
                            }))
                        }
                        _getScheduleObservable() {
                            return this._ngZone.isStable ? Rt(Promise.resolve(void 0)) : this._ngZone.onStable.pipe(Fe(1))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(ce))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                rw = (() => {
                    class t {
                        constructor(e, i) {
                            this.template = e, this._differs = i
                        }
                        ngOnChanges(e) {
                            if (!this._columnsDiffer) {
                                const i = e.columns && e.columns.currentValue || [];
                                this._columnsDiffer = this._differs.find(i).create(), this._columnsDiffer.diff(i)
                            }
                        }
                        getColumnsDiff() {
                            return this._columnsDiffer.diff(this.columns)
                        }
                        extractCellTemplate(e) {
                            return this instanceof su ? e.headerCell.template : this instanceof ou ? e.footerCell.template : e.cell.template
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(Di))
                    }, t.\u0275dir = M({
                        type: t,
                        features: [ze]
                    }), t
                })();
            class jZ extends rw {}
            const zZ = Jv(jZ);
            let su = (() => {
                class t extends zZ {
                    constructor(e, i, r) {
                        super(e, i), this._table = r
                    }
                    ngOnChanges(e) {
                        super.ngOnChanges(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(rt), u(Di), u(Jl, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "cdkHeaderRowDef", ""]
                    ],
                    inputs: {
                        columns: ["cdkHeaderRowDef", "columns"],
                        sticky: ["cdkHeaderRowDefSticky", "sticky"]
                    },
                    features: [A, ze]
                }), t
            })();
            class UZ extends rw {}
            const GZ = Jv(UZ);
            let ou = (() => {
                    class t extends GZ {
                        constructor(e, i, r) {
                            super(e, i), this._table = r
                        }
                        ngOnChanges(e) {
                            super.ngOnChanges(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(Di), u(Jl, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkFooterRowDef", ""]
                        ],
                        inputs: {
                            columns: ["cdkFooterRowDef", "columns"],
                            sticky: ["cdkFooterRowDefSticky", "sticky"]
                        },
                        features: [A, ze]
                    }), t
                })(),
                zp = (() => {
                    class t extends rw {
                        constructor(e, i, r) {
                            super(e, i), this._table = r
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(Di), u(Jl, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkRowDef", ""]
                        ],
                        inputs: {
                            columns: ["cdkRowDefColumns", "columns"],
                            when: ["cdkRowDefWhen", "when"]
                        },
                        features: [A]
                    }), t
                })(),
                Es = (() => {
                    class t {
                        constructor(e) {
                            this._viewContainer = e, t.mostRecentCellOutlet = this
                        }
                        ngOnDestroy() {
                            t.mostRecentCellOutlet === this && (t.mostRecentCellOutlet = null)
                        }
                    }
                    return t.mostRecentCellOutlet = null, t.\u0275fac = function(e) {
                        return new(e || t)(u(Je))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "cdkCellOutlet", ""]
                        ]
                    }), t
                })(),
                sw = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["cdk-header-row"],
                            ["tr", "cdk-header-row", ""]
                        ],
                        hostAttrs: ["role", "row", 1, "cdk-header-row"],
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["cdkCellOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && Wt(0, 0)
                        },
                        dependencies: [Es],
                        encapsulation: 2
                    }), t
                })(),
                aw = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["cdk-row"],
                            ["tr", "cdk-row", ""]
                        ],
                        hostAttrs: ["role", "row", 1, "cdk-row"],
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["cdkCellOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && Wt(0, 0)
                        },
                        dependencies: [Es],
                        encapsulation: 2
                    }), t
                })(),
                Up = (() => {
                    class t {
                        constructor(e) {
                            this.templateRef = e, this._contentClassName = "cdk-no-data-row"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["ng-template", "cdkNoDataRow", ""]
                        ]
                    }), t
                })();
            const jR = ["top", "bottom", "left", "right"];
            class WZ {
                constructor(n, e, i, r, s = !0, o = !0, a) {
                    this._isNativeHtmlTable = n, this._stickCellCss = e, this.direction = i, this._coalescedStyleScheduler = r, this._isBrowser = s, this._needsPositionStickyOnElement = o, this._positionListener = a, this._cachedCellWidths = [], this._borderCellCss = {
                        top: `${e}-border-elem-top`,
                        bottom: `${e}-border-elem-bottom`,
                        left: `${e}-border-elem-left`,
                        right: `${e}-border-elem-right`
                    }
                }
                clearStickyPositioning(n, e) {
                    const i = [];
                    for (const r of n)
                        if (r.nodeType === r.ELEMENT_NODE) {
                            i.push(r);
                            for (let s = 0; s < r.children.length; s++) i.push(r.children[s])
                        }
                    this._coalescedStyleScheduler.schedule(() => {
                        for (const r of i) this._removeStickyStyle(r, e)
                    })
                }
                updateStickyColumns(n, e, i, r = !0) {
                    if (!n.length || !this._isBrowser || !e.some(m => m) && !i.some(m => m)) return void(this._positionListener && (this._positionListener.stickyColumnsUpdated({
                        sizes: []
                    }), this._positionListener.stickyEndColumnsUpdated({
                        sizes: []
                    })));
                    const s = n[0],
                        o = s.children.length,
                        a = this._getCellWidths(s, r),
                        l = this._getStickyStartColumnPositions(a, e),
                        c = this._getStickyEndColumnPositions(a, i),
                        d = e.lastIndexOf(!0),
                        h = i.indexOf(!0);
                    this._coalescedStyleScheduler.schedule(() => {
                        const m = "rtl" === this.direction,
                            _ = m ? "right" : "left",
                            v = m ? "left" : "right";
                        for (const D of n)
                            for (let k = 0; k < o; k++) {
                                const S = D.children[k];
                                e[k] && this._addStickyStyle(S, _, l[k], k === d), i[k] && this._addStickyStyle(S, v, c[k], k === h)
                            }
                        this._positionListener && (this._positionListener.stickyColumnsUpdated({
                            sizes: -1 === d ? [] : a.slice(0, d + 1).map((D, k) => e[k] ? D : null)
                        }), this._positionListener.stickyEndColumnsUpdated({
                            sizes: -1 === h ? [] : a.slice(h).map((D, k) => i[k + h] ? D : null).reverse()
                        }))
                    })
                }
                stickRows(n, e, i) {
                    if (!this._isBrowser) return;
                    const r = "bottom" === i ? n.slice().reverse() : n,
                        s = "bottom" === i ? e.slice().reverse() : e,
                        o = [],
                        a = [],
                        l = [];
                    for (let d = 0, h = 0; d < r.length; d++) {
                        if (!s[d]) continue;
                        o[d] = h;
                        const m = r[d];
                        l[d] = this._isNativeHtmlTable ? Array.from(m.children) : [m];
                        const _ = m.getBoundingClientRect().height;
                        h += _, a[d] = _
                    }
                    const c = s.lastIndexOf(!0);
                    this._coalescedStyleScheduler.schedule(() => {
                        for (let d = 0; d < r.length; d++) {
                            if (!s[d]) continue;
                            const h = o[d],
                                m = d === c;
                            for (const _ of l[d]) this._addStickyStyle(_, i, h, m)
                        }
                        "top" === i ? this._positionListener ? .stickyHeaderRowsUpdated({
                            sizes: a,
                            offsets: o,
                            elements: l
                        }) : this._positionListener ? .stickyFooterRowsUpdated({
                            sizes: a,
                            offsets: o,
                            elements: l
                        })
                    })
                }
                updateStickyFooterContainer(n, e) {
                    if (!this._isNativeHtmlTable) return;
                    const i = n.querySelector("tfoot");
                    this._coalescedStyleScheduler.schedule(() => {
                        e.some(r => !r) ? this._removeStickyStyle(i, ["bottom"]) : this._addStickyStyle(i, "bottom", 0, !1)
                    })
                }
                _removeStickyStyle(n, e) {
                    for (const r of e) n.style[r] = "", n.classList.remove(this._borderCellCss[r]);
                    jR.some(r => -1 === e.indexOf(r) && n.style[r]) ? n.style.zIndex = this._getCalculatedZIndex(n) : (n.style.zIndex = "", this._needsPositionStickyOnElement && (n.style.position = ""), n.classList.remove(this._stickCellCss))
                }
                _addStickyStyle(n, e, i, r) {
                    n.classList.add(this._stickCellCss), r && n.classList.add(this._borderCellCss[e]), n.style[e] = `${i}px`, n.style.zIndex = this._getCalculatedZIndex(n), this._needsPositionStickyOnElement && (n.style.cssText += "position: -webkit-sticky; position: sticky; ")
                }
                _getCalculatedZIndex(n) {
                    const e = {
                        top: 100,
                        bottom: 10,
                        left: 1,
                        right: 1
                    };
                    let i = 0;
                    for (const r of jR) n.style[r] && (i += e[r]);
                    return i ? `${i}` : ""
                }
                _getCellWidths(n, e = !0) {
                    if (!e && this._cachedCellWidths.length) return this._cachedCellWidths;
                    const i = [],
                        r = n.children;
                    for (let s = 0; s < r.length; s++) i.push(r[s].getBoundingClientRect().width);
                    return this._cachedCellWidths = i, i
                }
                _getStickyStartColumnPositions(n, e) {
                    const i = [];
                    let r = 0;
                    for (let s = 0; s < n.length; s++) e[s] && (i[s] = r, r += n[s]);
                    return i
                }
                _getStickyEndColumnPositions(n, e) {
                    const i = [];
                    let r = 0;
                    for (let s = n.length; s > 0; s--) e[s] && (i[s] = r, r += n[s]);
                    return i
                }
            }
            const lw = new R("CDK_SPL");
            let Gp = (() => {
                    class t {
                        constructor(e, i) {
                            this.viewContainer = e, this.elementRef = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "rowOutlet", ""]
                        ]
                    }), t
                })(),
                Wp = (() => {
                    class t {
                        constructor(e, i) {
                            this.viewContainer = e, this.elementRef = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "headerRowOutlet", ""]
                        ]
                    }), t
                })(),
                qp = (() => {
                    class t {
                        constructor(e, i) {
                            this.viewContainer = e, this.elementRef = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "footerRowOutlet", ""]
                        ]
                    }), t
                })(),
                Yp = (() => {
                    class t {
                        constructor(e, i) {
                            this.viewContainer = e, this.elementRef = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Je), u(N))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "noDataRowOutlet", ""]
                        ]
                    }), t
                })(),
                Qp = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l, c, d, h, m, _) {
                            this._differs = e, this._changeDetectorRef = i, this._elementRef = r, this._dir = o, this._platform = l, this._viewRepeater = c, this._coalescedStyleScheduler = d, this._viewportRuler = h, this._stickyPositioningListener = m, this._ngZone = _, this._onDestroy = new H, this._columnDefsByName = new Map, this._customColumnDefs = new Set, this._customRowDefs = new Set, this._customHeaderRowDefs = new Set, this._customFooterRowDefs = new Set, this._headerRowDefChanged = !0, this._footerRowDefChanged = !0, this._stickyColumnStylesNeedReset = !0, this._forceRecalculateCellWidths = !0, this._cachedRenderRowsMap = new Map, this.stickyCssClass = "cdk-table-sticky", this.needsPositionStickyOnElement = !0, this._isShowingNoDataRow = !1, this._multiTemplateDataRows = !1, this._fixedLayout = !1, this.contentChanged = new V, this.viewChange = new Te({
                                start: 0,
                                end: Number.MAX_VALUE
                            }), s || this._elementRef.nativeElement.setAttribute("role", "table"), this._document = a, this._isNativeHtmlTable = "TABLE" === this._elementRef.nativeElement.nodeName
                        }
                        get trackBy() {
                            return this._trackByFn
                        }
                        set trackBy(e) {
                            this._trackByFn = e
                        }
                        get dataSource() {
                            return this._dataSource
                        }
                        set dataSource(e) {
                            this._dataSource !== e && this._switchDataSource(e)
                        }
                        get multiTemplateDataRows() {
                            return this._multiTemplateDataRows
                        }
                        set multiTemplateDataRows(e) {
                            this._multiTemplateDataRows = G(e), this._rowOutlet && this._rowOutlet.viewContainer.length && (this._forceRenderDataRows(), this.updateStickyColumnStyles())
                        }
                        get fixedLayout() {
                            return this._fixedLayout
                        }
                        set fixedLayout(e) {
                            this._fixedLayout = G(e), this._forceRecalculateCellWidths = !0, this._stickyColumnStylesNeedReset = !0
                        }
                        ngOnInit() {
                            this._setupStickyStyler(), this._isNativeHtmlTable && this._applyNativeTableSections(), this._dataDiffer = this._differs.find([]).create((e, i) => this.trackBy ? this.trackBy(i.dataIndex, i.data) : i), this._viewportRuler.change().pipe(le(this._onDestroy)).subscribe(() => {
                                this._forceRecalculateCellWidths = !0
                            })
                        }
                        ngAfterContentChecked() {
                            this._cacheRowDefs(), this._cacheColumnDefs();
                            const i = this._renderUpdatedColumns() || this._headerRowDefChanged || this._footerRowDefChanged;
                            this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || i, this._forceRecalculateCellWidths = i, this._headerRowDefChanged && (this._forceRenderHeaderRows(), this._headerRowDefChanged = !1), this._footerRowDefChanged && (this._forceRenderFooterRows(), this._footerRowDefChanged = !1), this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription ? this._observeRenderChanges() : this._stickyColumnStylesNeedReset && this.updateStickyColumnStyles(), this._checkStickyStates()
                        }
                        ngOnDestroy() {
                            [this._rowOutlet.viewContainer, this._headerRowOutlet.viewContainer, this._footerRowOutlet.viewContainer, this._cachedRenderRowsMap, this._customColumnDefs, this._customRowDefs, this._customHeaderRowDefs, this._customFooterRowDefs, this._columnDefsByName].forEach(e => {
                                e.clear()
                            }), this._headerRowDefs = [], this._footerRowDefs = [], this._defaultRowDef = null, this._onDestroy.next(), this._onDestroy.complete(), Fp(this.dataSource) && this.dataSource.disconnect(this)
                        }
                        renderRows() {
                            this._renderRows = this._getAllRenderRows();
                            const e = this._dataDiffer.diff(this._renderRows);
                            if (!e) return this._updateNoDataRow(), void this.contentChanged.next();
                            const i = this._rowOutlet.viewContainer;
                            this._viewRepeater.applyChanges(e, i, (r, s, o) => this._getEmbeddedViewArgs(r.item, o), r => r.item.data, r => {
                                1 === r.operation && r.context && this._renderCellTemplateForItem(r.record.item.rowDef, r.context)
                            }), this._updateRowIndexContext(), e.forEachIdentityChange(r => {
                                i.get(r.currentIndex).context.$implicit = r.item.data
                            }), this._updateNoDataRow(), this._ngZone && ce.isInAngularZone() ? this._ngZone.onStable.pipe(Fe(1), le(this._onDestroy)).subscribe(() => {
                                this.updateStickyColumnStyles()
                            }) : this.updateStickyColumnStyles(), this.contentChanged.next()
                        }
                        addColumnDef(e) {
                            this._customColumnDefs.add(e)
                        }
                        removeColumnDef(e) {
                            this._customColumnDefs.delete(e)
                        }
                        addRowDef(e) {
                            this._customRowDefs.add(e)
                        }
                        removeRowDef(e) {
                            this._customRowDefs.delete(e)
                        }
                        addHeaderRowDef(e) {
                            this._customHeaderRowDefs.add(e), this._headerRowDefChanged = !0
                        }
                        removeHeaderRowDef(e) {
                            this._customHeaderRowDefs.delete(e), this._headerRowDefChanged = !0
                        }
                        addFooterRowDef(e) {
                            this._customFooterRowDefs.add(e), this._footerRowDefChanged = !0
                        }
                        removeFooterRowDef(e) {
                            this._customFooterRowDefs.delete(e), this._footerRowDefChanged = !0
                        }
                        setNoDataRow(e) {
                            this._customNoDataRow = e
                        }
                        updateStickyHeaderRowStyles() {
                            const e = this._getRenderedRows(this._headerRowOutlet),
                                r = this._elementRef.nativeElement.querySelector("thead");
                            r && (r.style.display = e.length ? "" : "none");
                            const s = this._headerRowDefs.map(o => o.sticky);
                            this._stickyStyler.clearStickyPositioning(e, ["top"]), this._stickyStyler.stickRows(e, s, "top"), this._headerRowDefs.forEach(o => o.resetStickyChanged())
                        }
                        updateStickyFooterRowStyles() {
                            const e = this._getRenderedRows(this._footerRowOutlet),
                                r = this._elementRef.nativeElement.querySelector("tfoot");
                            r && (r.style.display = e.length ? "" : "none");
                            const s = this._footerRowDefs.map(o => o.sticky);
                            this._stickyStyler.clearStickyPositioning(e, ["bottom"]), this._stickyStyler.stickRows(e, s, "bottom"), this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, s), this._footerRowDefs.forEach(o => o.resetStickyChanged())
                        }
                        updateStickyColumnStyles() {
                            const e = this._getRenderedRows(this._headerRowOutlet),
                                i = this._getRenderedRows(this._rowOutlet),
                                r = this._getRenderedRows(this._footerRowOutlet);
                            (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) && (this._stickyStyler.clearStickyPositioning([...e, ...i, ...r], ["left", "right"]), this._stickyColumnStylesNeedReset = !1), e.forEach((s, o) => {
                                this._addStickyColumnStyles([s], this._headerRowDefs[o])
                            }), this._rowDefs.forEach(s => {
                                const o = [];
                                for (let a = 0; a < i.length; a++) this._renderRows[a].rowDef === s && o.push(i[a]);
                                this._addStickyColumnStyles(o, s)
                            }), r.forEach((s, o) => {
                                this._addStickyColumnStyles([s], this._footerRowDefs[o])
                            }), Array.from(this._columnDefsByName.values()).forEach(s => s.resetStickyChanged())
                        }
                        _getAllRenderRows() {
                            const e = [],
                                i = this._cachedRenderRowsMap;
                            this._cachedRenderRowsMap = new Map;
                            for (let r = 0; r < this._data.length; r++) {
                                let s = this._data[r];
                                const o = this._getRenderRowsForData(s, r, i.get(s));
                                this._cachedRenderRowsMap.has(s) || this._cachedRenderRowsMap.set(s, new WeakMap);
                                for (let a = 0; a < o.length; a++) {
                                    let l = o[a];
                                    const c = this._cachedRenderRowsMap.get(l.data);
                                    c.has(l.rowDef) ? c.get(l.rowDef).push(l) : c.set(l.rowDef, [l]), e.push(l)
                                }
                            }
                            return e
                        }
                        _getRenderRowsForData(e, i, r) {
                            return this._getRowDefs(e, i).map(o => {
                                const a = r && r.has(o) ? r.get(o) : [];
                                if (a.length) {
                                    const l = a.shift();
                                    return l.dataIndex = i, l
                                }
                                return {
                                    data: e,
                                    rowDef: o,
                                    dataIndex: i
                                }
                            })
                        }
                        _cacheColumnDefs() {
                            this._columnDefsByName.clear(), Kp(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs).forEach(i => {
                                this._columnDefsByName.has(i.name), this._columnDefsByName.set(i.name, i)
                            })
                        }
                        _cacheRowDefs() {
                            this._headerRowDefs = Kp(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs), this._footerRowDefs = Kp(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs), this._rowDefs = Kp(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);
                            const e = this._rowDefs.filter(i => !i.when);
                            this._defaultRowDef = e[0]
                        }
                        _renderUpdatedColumns() {
                            const e = (o, a) => o || !!a.getColumnsDiff(),
                                i = this._rowDefs.reduce(e, !1);
                            i && this._forceRenderDataRows();
                            const r = this._headerRowDefs.reduce(e, !1);
                            r && this._forceRenderHeaderRows();
                            const s = this._footerRowDefs.reduce(e, !1);
                            return s && this._forceRenderFooterRows(), i || r || s
                        }
                        _switchDataSource(e) {
                            this._data = [], Fp(this.dataSource) && this.dataSource.disconnect(this), this._renderChangeSubscription && (this._renderChangeSubscription.unsubscribe(), this._renderChangeSubscription = null), e || (this._dataDiffer && this._dataDiffer.diff([]), this._rowOutlet.viewContainer.clear()), this._dataSource = e
                        }
                        _observeRenderChanges() {
                            if (!this.dataSource) return;
                            let e;
                            Fp(this.dataSource) ? e = this.dataSource.connect(this) : _o(this.dataSource) ? e = this.dataSource : Array.isArray(this.dataSource) && (e = z(this.dataSource)), this._renderChangeSubscription = e.pipe(le(this._onDestroy)).subscribe(i => {
                                this._data = i || [], this.renderRows()
                            })
                        }
                        _forceRenderHeaderRows() {
                            this._headerRowOutlet.viewContainer.length > 0 && this._headerRowOutlet.viewContainer.clear(), this._headerRowDefs.forEach((e, i) => this._renderRow(this._headerRowOutlet, e, i)), this.updateStickyHeaderRowStyles()
                        }
                        _forceRenderFooterRows() {
                            this._footerRowOutlet.viewContainer.length > 0 && this._footerRowOutlet.viewContainer.clear(), this._footerRowDefs.forEach((e, i) => this._renderRow(this._footerRowOutlet, e, i)), this.updateStickyFooterRowStyles()
                        }
                        _addStickyColumnStyles(e, i) {
                            const r = Array.from(i.columns || []).map(a => this._columnDefsByName.get(a)),
                                s = r.map(a => a.sticky),
                                o = r.map(a => a.stickyEnd);
                            this._stickyStyler.updateStickyColumns(e, s, o, !this._fixedLayout || this._forceRecalculateCellWidths)
                        }
                        _getRenderedRows(e) {
                            const i = [];
                            for (let r = 0; r < e.viewContainer.length; r++) {
                                const s = e.viewContainer.get(r);
                                i.push(s.rootNodes[0])
                            }
                            return i
                        }
                        _getRowDefs(e, i) {
                            if (1 == this._rowDefs.length) return [this._rowDefs[0]];
                            let r = [];
                            if (this.multiTemplateDataRows) r = this._rowDefs.filter(s => !s.when || s.when(i, e));
                            else {
                                let s = this._rowDefs.find(o => o.when && o.when(i, e)) || this._defaultRowDef;
                                s && r.push(s)
                            }
                            return r
                        }
                        _getEmbeddedViewArgs(e, i) {
                            return {
                                templateRef: e.rowDef.template,
                                context: {
                                    $implicit: e.data
                                },
                                index: i
                            }
                        }
                        _renderRow(e, i, r, s = {}) {
                            const o = e.viewContainer.createEmbeddedView(i.template, s, r);
                            return this._renderCellTemplateForItem(i, s), o
                        }
                        _renderCellTemplateForItem(e, i) {
                            for (let r of this._getCellTemplates(e)) Es.mostRecentCellOutlet && Es.mostRecentCellOutlet._viewContainer.createEmbeddedView(r, i);
                            this._changeDetectorRef.markForCheck()
                        }
                        _updateRowIndexContext() {
                            const e = this._rowOutlet.viewContainer;
                            for (let i = 0, r = e.length; i < r; i++) {
                                const o = e.get(i).context;
                                o.count = r, o.first = 0 === i, o.last = i === r - 1, o.even = i % 2 == 0, o.odd = !o.even, this.multiTemplateDataRows ? (o.dataIndex = this._renderRows[i].dataIndex, o.renderIndex = i) : o.index = this._renderRows[i].dataIndex
                            }
                        }
                        _getCellTemplates(e) {
                            return e && e.columns ? Array.from(e.columns, i => {
                                const r = this._columnDefsByName.get(i);
                                return e.extractCellTemplate(r)
                            }) : []
                        }
                        _applyNativeTableSections() {
                            const e = this._document.createDocumentFragment(),
                                i = [{
                                    tag: "thead",
                                    outlets: [this._headerRowOutlet]
                                }, {
                                    tag: "tbody",
                                    outlets: [this._rowOutlet, this._noDataRowOutlet]
                                }, {
                                    tag: "tfoot",
                                    outlets: [this._footerRowOutlet]
                                }];
                            for (const r of i) {
                                const s = this._document.createElement(r.tag);
                                s.setAttribute("role", "rowgroup");
                                for (const o of r.outlets) s.appendChild(o.elementRef.nativeElement);
                                e.appendChild(s)
                            }
                            this._elementRef.nativeElement.appendChild(e)
                        }
                        _forceRenderDataRows() {
                            this._dataDiffer.diff([]), this._rowOutlet.viewContainer.clear(), this.renderRows()
                        }
                        _checkStickyStates() {
                            const e = (i, r) => i || r.hasStickyChanged();
                            this._headerRowDefs.reduce(e, !1) && this.updateStickyHeaderRowStyles(), this._footerRowDefs.reduce(e, !1) && this.updateStickyFooterRowStyles(), Array.from(this._columnDefsByName.values()).reduce(e, !1) && (this._stickyColumnStylesNeedReset = !0, this.updateStickyColumnStyles())
                        }
                        _setupStickyStyler() {
                            this._stickyStyler = new WZ(this._isNativeHtmlTable, this.stickyCssClass, this._dir ? this._dir.value : "ltr", this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener), (this._dir ? this._dir.change : z()).pipe(le(this._onDestroy)).subscribe(i => {
                                this._stickyStyler.direction = i, this.updateStickyColumnStyles()
                            })
                        }
                        _getOwnDefs(e) {
                            return e.filter(i => !i._table || i._table === this)
                        }
                        _updateNoDataRow() {
                            const e = this._customNoDataRow || this._noDataRow;
                            if (!e) return;
                            const i = 0 === this._rowOutlet.viewContainer.length;
                            if (i === this._isShowingNoDataRow) return;
                            const r = this._noDataRowOutlet.viewContainer;
                            if (i) {
                                const s = r.createEmbeddedView(e.templateRef),
                                    o = s.rootNodes[0];
                                1 === s.rootNodes.length && o ? .nodeType === this._document.ELEMENT_NODE && (o.setAttribute("role", "row"), o.classList.add(e._contentClassName))
                            } else r.clear();
                            this._isShowingNoDataRow = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Di), u(ge), u(N), Qt("role"), u(Mt, 8), u(pe), u(Ft), u(tu), u(iw), u(Hr), u(lw, 12), u(ce, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["cdk-table"],
                            ["table", "cdk-table", ""]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && (_e(r, Up, 5), _e(r, As, 5), _e(r, zp, 5), _e(r, su, 5), _e(r, ou, 5)), 2 & e) {
                                let s;
                                O(s = P()) && (i._noDataRow = s.first), O(s = P()) && (i._contentColumnDefs = s), O(s = P()) && (i._contentRowDefs = s), O(s = P()) && (i._contentHeaderRowDefs = s), O(s = P()) && (i._contentFooterRowDefs = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && (J(Gp, 7), J(Wp, 7), J(qp, 7), J(Yp, 7)), 2 & e) {
                                let r;
                                O(r = P()) && (i._rowOutlet = r.first), O(r = P()) && (i._headerRowOutlet = r.first), O(r = P()) && (i._footerRowOutlet = r.first), O(r = P()) && (i._noDataRowOutlet = r.first)
                            }
                        },
                        hostAttrs: [1, "cdk-table"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("cdk-table-fixed-layout", i.fixedLayout)
                        },
                        inputs: {
                            trackBy: "trackBy",
                            dataSource: "dataSource",
                            multiTemplateDataRows: "multiTemplateDataRows",
                            fixedLayout: "fixedLayout"
                        },
                        outputs: {
                            contentChanged: "contentChanged"
                        },
                        exportAs: ["cdkTable"],
                        features: [Q([{
                            provide: Jl,
                            useExisting: t
                        }, {
                            provide: tu,
                            useClass: SR
                        }, {
                            provide: iw,
                            useClass: $R
                        }, {
                            provide: lw,
                            useValue: null
                        }])],
                        ngContentSelectors: LZ,
                        decls: 6,
                        vars: 0,
                        consts: [
                            ["headerRowOutlet", ""],
                            ["rowOutlet", ""],
                            ["noDataRowOutlet", ""],
                            ["footerRowOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(PZ), me(0), me(1, 1), Wt(2, 0)(3, 1)(4, 2)(5, 3))
                        },
                        dependencies: [Gp, Wp, qp, Yp],
                        styles: [".cdk-table-fixed-layout{table-layout:fixed}"],
                        encapsulation: 2
                    }), t
                })();

            function Kp(t, n) {
                return t.concat(Array.from(n))
            }
            let YZ = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [Fb]
                }), t
            })();
            const QZ = [
                    [
                        ["caption"]
                    ],
                    [
                        ["colgroup"],
                        ["col"]
                    ]
                ],
                KZ = ["caption", "colgroup, col"];
            let nc = (() => {
                    class t extends Qp {
                        constructor() {
                            super(...arguments), this.stickyCssClass = "mat-table-sticky", this.needsPositionStickyOnElement = !1
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-table"],
                            ["table", "mat-table", ""]
                        ],
                        hostAttrs: [1, "mat-table"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-table-fixed-layout", i.fixedLayout)
                        },
                        exportAs: ["matTable"],
                        features: [Q([{
                            provide: tu,
                            useClass: SR
                        }, {
                            provide: Qp,
                            useExisting: t
                        }, {
                            provide: Jl,
                            useExisting: t
                        }, {
                            provide: iw,
                            useClass: $R
                        }, {
                            provide: lw,
                            useValue: null
                        }]), A],
                        ngContentSelectors: KZ,
                        decls: 6,
                        vars: 0,
                        consts: [
                            ["headerRowOutlet", ""],
                            ["rowOutlet", ""],
                            ["noDataRowOutlet", ""],
                            ["footerRowOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(QZ), me(0), me(1, 1), Wt(2, 0)(3, 1)(4, 2)(5, 3))
                        },
                        dependencies: [Gp, Wp, qp, Yp],
                        styles: ["mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}"],
                        encapsulation: 2
                    }), t
                })(),
                ma = (() => {
                    class t extends ec {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matCellDef", ""]
                        ],
                        features: [Q([{
                            provide: ec,
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                ga = (() => {
                    class t extends tc {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matHeaderCellDef", ""]
                        ],
                        features: [Q([{
                            provide: tc,
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                _a = (() => {
                    class t extends As {
                        get name() {
                            return this._name
                        }
                        set name(e) {
                            this._setNameInput(e)
                        }
                        _updateColumnCssClassName() {
                            super._updateColumnCssClassName(), this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`)
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matColumnDef", ""]
                        ],
                        inputs: {
                            sticky: "sticky",
                            name: ["matColumnDef", "name"]
                        },
                        features: [Q([{
                            provide: As,
                            useExisting: t
                        }, {
                            provide: "MAT_SORT_HEADER_COLUMN_DEF",
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                ya = (() => {
                    class t extends tw {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-header-cell"],
                            ["th", "mat-header-cell", ""]
                        ],
                        hostAttrs: ["role", "columnheader", 1, "mat-header-cell"],
                        features: [A]
                    }), t
                })(),
                ba = (() => {
                    class t extends nw {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-cell"],
                            ["td", "mat-cell", ""]
                        ],
                        hostAttrs: ["role", "gridcell", 1, "mat-cell"],
                        features: [A]
                    }), t
                })(),
                ic = (() => {
                    class t extends su {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matHeaderRowDef", ""]
                        ],
                        inputs: {
                            columns: ["matHeaderRowDef", "columns"],
                            sticky: ["matHeaderRowDefSticky", "sticky"]
                        },
                        features: [Q([{
                            provide: su,
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                rc = (() => {
                    class t extends zp {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matRowDef", ""]
                        ],
                        inputs: {
                            columns: ["matRowDefColumns", "columns"],
                            when: ["matRowDefWhen", "when"]
                        },
                        features: [Q([{
                            provide: zp,
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                sc = (() => {
                    class t extends sw {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-header-row"],
                            ["tr", "mat-header-row", ""]
                        ],
                        hostAttrs: ["role", "row", 1, "mat-header-row"],
                        exportAs: ["matHeaderRow"],
                        features: [Q([{
                            provide: sw,
                            useExisting: t
                        }]), A],
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["cdkCellOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && Wt(0, 0)
                        },
                        dependencies: [Es],
                        encapsulation: 2
                    }), t
                })(),
                oc = (() => {
                    class t extends aw {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-row"],
                            ["tr", "mat-row", ""]
                        ],
                        hostAttrs: ["role", "row", 1, "mat-row"],
                        exportAs: ["matRow"],
                        features: [Q([{
                            provide: aw,
                            useExisting: t
                        }]), A],
                        decls: 1,
                        vars: 0,
                        consts: [
                            ["cdkCellOutlet", ""]
                        ],
                        template: function(e, i) {
                            1 & e && Wt(0, 0)
                        },
                        dependencies: [Es],
                        encapsulation: 2
                    }), t
                })(),
                UR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [YZ, de, de]
                    }), t
                })();
            class lX extends class aX extends class LK {} {
                constructor(n = []) {
                    super(), this._renderData = new Te([]), this._filter = new Te(""), this._internalPageChanges = new H, this._renderChangesSubscription = null, this.sortingDataAccessor = (e, i) => {
                        const r = e[i];
                        if (xE(r)) {
                            const s = Number(r);
                            return s < 9007199254740991 ? s : r
                        }
                        return r
                    }, this.sortData = (e, i) => {
                        const r = i.active,
                            s = i.direction;
                        return r && "" != s ? e.sort((o, a) => {
                            let l = this.sortingDataAccessor(o, r),
                                c = this.sortingDataAccessor(a, r);
                            const d = typeof l,
                                h = typeof c;
                            d !== h && ("number" === d && (l += ""), "number" === h && (c += ""));
                            let m = 0;
                            return null != l && null != c ? l > c ? m = 1 : l < c && (m = -1) : null != l ? m = 1 : null != c && (m = -1), m * ("asc" == s ? 1 : -1)
                        }) : e
                    }, this.filterPredicate = (e, i) => {
                        const r = Object.keys(e).reduce((o, a) => o + e[a] + "\u25ec", "").toLowerCase(),
                            s = i.trim().toLowerCase();
                        return -1 != r.indexOf(s)
                    }, this._data = new Te(n), this._updateChangeSubscription()
                }
                get data() {
                    return this._data.value
                }
                set data(n) {
                    n = Array.isArray(n) ? n : [], this._data.next(n), this._renderChangesSubscription || this._filterData(n)
                }
                get filter() {
                    return this._filter.value
                }
                set filter(n) {
                    this._filter.next(n), this._renderChangesSubscription || this._filterData(this.data)
                }
                get sort() {
                    return this._sort
                }
                set sort(n) {
                    this._sort = n, this._updateChangeSubscription()
                }
                get paginator() {
                    return this._paginator
                }
                set paginator(n) {
                    this._paginator = n, this._updateChangeSubscription()
                }
                _updateChangeSubscription() {
                    const n = this._sort ? tt(this._sort.sortChange, this._sort.initialized) : z(null),
                        e = this._paginator ? tt(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : z(null),
                        r = Qo([this._data, this._filter]).pipe(Z(([a]) => this._filterData(a))),
                        s = Qo([r, n]).pipe(Z(([a]) => this._orderData(a))),
                        o = Qo([s, e]).pipe(Z(([a]) => this._pageData(a)));
                    this._renderChangesSubscription ? .unsubscribe(), this._renderChangesSubscription = o.subscribe(a => this._renderData.next(a))
                }
                _filterData(n) {
                    return this.filteredData = null == this.filter || "" === this.filter ? n : n.filter(e => this.filterPredicate(e, this.filter)), this.paginator && this._updatePaginator(this.filteredData.length), this.filteredData
                }
                _orderData(n) {
                    return this.sort ? this.sortData(n.slice(), this.sort) : n
                }
                _pageData(n) {
                    if (!this.paginator) return n;
                    const e = this.paginator.pageIndex * this.paginator.pageSize;
                    return n.slice(e, e + this.paginator.pageSize)
                }
                _updatePaginator(n) {
                    Promise.resolve().then(() => {
                        const e = this.paginator;
                        if (e && (e.length = n, e.pageIndex > 0)) {
                            const i = Math.ceil(e.length / e.pageSize) - 1 || 0,
                                r = Math.min(e.pageIndex, i);
                            r !== e.pageIndex && (e.pageIndex = r, this._internalPageChanges.next())
                        }
                    })
                }
                connect() {
                    return this._renderChangesSubscription || this._updateChangeSubscription(), this._renderData
                }
                disconnect() {
                    this._renderChangesSubscription ? .unsubscribe(), this._renderChangesSubscription = null
                }
            } {}
            const cX = ["input"],
                dX = ["label"],
                uX = function(t) {
                    return {
                        enterDuration: t
                    }
                },
                hX = ["*"],
                fX = new R("mat-checkbox-default-options", {
                    providedIn: "root",
                    factory: GR
                });

            function GR() {
                return {
                    color: "accent",
                    clickAction: "check-indeterminate"
                }
            }
            let pX = 0;
            const WR = GR(),
                mX = {
                    provide: hn,
                    useExisting: Ve(() => Wr),
                    multi: !0
                };
            class gX {}
            const _X = no(Zi(br(Si(class {
                constructor(t) {
                    this._elementRef = t
                }
            }))));
            let yX = (() => {
                    class t extends _X {
                        constructor(e, i, r, s, o, a, l) {
                            super(i), this._changeDetectorRef = r, this._ngZone = s, this._animationMode = a, this._options = l, this.ariaLabel = "", this.ariaLabelledby = null, this.labelPosition = "after", this.name = null, this.change = new V, this.indeterminateChange = new V, this._onTouched = () => {}, this._currentAnimationClass = "", this._currentCheckState = 0, this._controlValueAccessorChangeFn = () => {}, this._checked = !1, this._disabled = !1, this._indeterminate = !1, this._options = this._options || WR, this.color = this.defaultColor = this._options.color || WR.color, this.tabIndex = parseInt(o) || 0, this.id = this._uniqueId = `${e}${++pX}`
                        }
                        get inputId() {
                            return `${this.id||this._uniqueId}-input`
                        }
                        get required() {
                            return this._required
                        }
                        set required(e) {
                            this._required = G(e)
                        }
                        ngAfterViewInit() {
                            this._syncIndeterminate(this._indeterminate)
                        }
                        get checked() {
                            return this._checked
                        }
                        set checked(e) {
                            const i = G(e);
                            i != this.checked && (this._checked = i, this._changeDetectorRef.markForCheck())
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            const i = G(e);
                            i !== this.disabled && (this._disabled = i, this._changeDetectorRef.markForCheck())
                        }
                        get indeterminate() {
                            return this._indeterminate
                        }
                        set indeterminate(e) {
                            const i = e != this._indeterminate;
                            this._indeterminate = G(e), i && (this._transitionCheckState(this._indeterminate ? 3 : this.checked ? 1 : 2), this.indeterminateChange.emit(this._indeterminate)), this._syncIndeterminate(this._indeterminate)
                        }
                        _isRippleDisabled() {
                            return this.disableRipple || this.disabled
                        }
                        _onLabelTextChange() {
                            this._changeDetectorRef.detectChanges()
                        }
                        writeValue(e) {
                            this.checked = !!e
                        }
                        registerOnChange(e) {
                            this._controlValueAccessorChangeFn = e
                        }
                        registerOnTouched(e) {
                            this._onTouched = e
                        }
                        setDisabledState(e) {
                            this.disabled = e
                        }
                        _getAriaChecked() {
                            return this.checked ? "true" : this.indeterminate ? "mixed" : "false"
                        }
                        _transitionCheckState(e) {
                            let i = this._currentCheckState,
                                r = this._getAnimationTargetElement();
                            if (i !== e && r && (this._currentAnimationClass && r.classList.remove(this._currentAnimationClass), this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(i, e), this._currentCheckState = e, this._currentAnimationClass.length > 0)) {
                                r.classList.add(this._currentAnimationClass);
                                const s = this._currentAnimationClass;
                                this._ngZone.runOutsideAngular(() => {
                                    setTimeout(() => {
                                        r.classList.remove(s)
                                    }, 1e3)
                                })
                            }
                        }
                        _emitChangeEvent() {
                            this._controlValueAccessorChangeFn(this.checked), this.change.emit(this._createChangeEvent(this.checked)), this._inputElement && (this._inputElement.nativeElement.checked = this.checked)
                        }
                        toggle() {
                            this.checked = !this.checked, this._controlValueAccessorChangeFn(this.checked)
                        }
                        _handleInputClick() {
                            const e = this._options ? .clickAction;
                            this.disabled || "noop" === e ? !this.disabled && "noop" === e && (this._inputElement.nativeElement.checked = this.checked, this._inputElement.nativeElement.indeterminate = this.indeterminate) : (this.indeterminate && "check" !== e && Promise.resolve().then(() => {
                                this._indeterminate = !1, this.indeterminateChange.emit(this._indeterminate)
                            }), this._checked = !this._checked, this._transitionCheckState(this._checked ? 1 : 2), this._emitChangeEvent())
                        }
                        _onInteractionEvent(e) {
                            e.stopPropagation()
                        }
                        _onBlur() {
                            Promise.resolve().then(() => {
                                this._onTouched(), this._changeDetectorRef.markForCheck()
                            })
                        }
                        _getAnimationClassForCheckStateTransition(e, i) {
                            if ("NoopAnimations" === this._animationMode) return "";
                            switch (e) {
                                case 0:
                                    if (1 === i) return this._animationClasses.uncheckedToChecked;
                                    if (3 == i) return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;
                                    break;
                                case 2:
                                    return 1 === i ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;
                                case 1:
                                    return 2 === i ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;
                                case 3:
                                    return 1 === i ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked
                            }
                            return ""
                        }
                        _syncIndeterminate(e) {
                            const i = this._inputElement;
                            i && (i.nativeElement.indeterminate = e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && (J(cX, 5), J(dX, 5), J(li, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i._inputElement = r.first), O(r = P()) && (i._labelElement = r.first), O(r = P()) && (i.ripple = r.first)
                            }
                        },
                        inputs: {
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
                            id: "id",
                            required: "required",
                            labelPosition: "labelPosition",
                            name: "name",
                            value: "value",
                            checked: "checked",
                            disabled: "disabled",
                            indeterminate: "indeterminate"
                        },
                        outputs: {
                            change: "change",
                            indeterminateChange: "indeterminateChange"
                        },
                        features: [A]
                    }), t
                })(),
                Wr = (() => {
                    class t extends yX {
                        constructor(e, i, r, s, o, a, l) {
                            super("mat-checkbox-", e, i, s, o, a, l), this._focusMonitor = r, this._animationClasses = {
                                uncheckedToChecked: "mat-checkbox-anim-unchecked-checked",
                                uncheckedToIndeterminate: "mat-checkbox-anim-unchecked-indeterminate",
                                checkedToUnchecked: "mat-checkbox-anim-checked-unchecked",
                                checkedToIndeterminate: "mat-checkbox-anim-checked-indeterminate",
                                indeterminateToChecked: "mat-checkbox-anim-indeterminate-checked",
                                indeterminateToUnchecked: "mat-checkbox-anim-indeterminate-unchecked"
                            }
                        }
                        _createChangeEvent(e) {
                            const i = new gX;
                            return i.source = this, i.checked = e, i
                        }
                        _getAnimationTargetElement() {
                            return this._elementRef.nativeElement
                        }
                        ngAfterViewInit() {
                            super.ngAfterViewInit(), this._focusMonitor.monitor(this._elementRef, !0).subscribe(e => {
                                e || this._onBlur()
                            })
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef)
                        }
                        _onInputClick(e) {
                            e.stopPropagation(), super._handleInputClick()
                        }
                        focus(e, i) {
                            e ? this._focusMonitor.focusVia(this._inputElement, e, i) : this._inputElement.nativeElement.focus(i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(dn), u(ce), Qt("tabindex"), u(Tt, 8), u(fX, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-checkbox"]
                        ],
                        hostAttrs: [1, "mat-checkbox"],
                        hostVars: 14,
                        hostBindings: function(e, i) {
                            2 & e && (xn("id", i.id), q("tabindex", null)("aria-label", null)("aria-labelledby", null), re("mat-checkbox-indeterminate", i.indeterminate)("mat-checkbox-checked", i.checked)("mat-checkbox-disabled", i.disabled)("mat-checkbox-label-before", "before" == i.labelPosition)("_mat-animation-noopable", "NoopAnimations" === i._animationMode))
                        },
                        inputs: {
                            disableRipple: "disableRipple",
                            color: "color",
                            tabIndex: "tabIndex"
                        },
                        exportAs: ["matCheckbox"],
                        features: [Q([mX]), A],
                        ngContentSelectors: hX,
                        decls: 17,
                        vars: 21,
                        consts: [
                            [1, "mat-checkbox-layout"],
                            ["label", ""],
                            [1, "mat-checkbox-inner-container"],
                            ["type", "checkbox", 1, "mat-checkbox-input", "cdk-visually-hidden", 3, "id", "required", "checked", "disabled", "tabIndex", "change", "click"],
                            ["input", ""],
                            ["matRipple", "", 1, "mat-checkbox-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleRadius", "matRippleCentered", "matRippleAnimation"],
                            [1, "mat-ripple-element", "mat-checkbox-persistent-ripple"],
                            [1, "mat-checkbox-frame"],
                            [1, "mat-checkbox-background"],
                            ["version", "1.1", "focusable", "false", "viewBox", "0 0 24 24", "aria-hidden", "true", 1, "mat-checkbox-checkmark"],
                            ["fill", "none", "stroke", "white", "d", "M4.1,12.7 9,17.6 20.3,6.3", 1, "mat-checkbox-checkmark-path"],
                            [1, "mat-checkbox-mixedmark"],
                            [1, "mat-checkbox-label", 3, "cdkObserveContent"],
                            ["checkboxLabel", ""],
                            [2, "display", "none"]
                        ],
                        template: function(e, i) {
                            if (1 & e && (Xe(), f(0, "label", 0, 1)(2, "span", 2)(3, "input", 3, 4), T("change", function(s) {
                                    return i._onInteractionEvent(s)
                                })("click", function(s) {
                                    return i._onInputClick(s)
                                }), g(), f(5, "span", 5), E(6, "span", 6), g(), E(7, "span", 7), f(8, "span", 8), ni(), f(9, "svg", 9), E(10, "path", 10), g(), Oa(), E(11, "span", 11), g()(), f(12, "span", 12, 13), T("cdkObserveContent", function() {
                                    return i._onLabelTextChange()
                                }), f(14, "span", 14), w(15, "\xa0"), g(), me(16), g()()), 2 & e) {
                                const r = bt(1),
                                    s = bt(13);
                                q("for", i.inputId), p(2), re("mat-checkbox-inner-container-no-side-margin", !s.textContent || !s.textContent.trim()), p(1), y("id", i.inputId)("required", i.required)("checked", i.checked)("disabled", i.disabled)("tabIndex", i.tabIndex), q("value", i.value)("name", i.name)("aria-label", i.ariaLabel || null)("aria-labelledby", i.ariaLabelledby)("aria-checked", i._getAriaChecked())("aria-describedby", i.ariaDescribedby), p(2), y("matRippleTrigger", r)("matRippleDisabled", i._isRippleDisabled())("matRippleRadius", 20)("matRippleCentered", !0)("matRippleAnimation", gn(19, uX, "NoopAnimations" === i._animationMode ? 0 : 150))
                            }
                        },
                        dependencies: [li, Rf],
                        styles: ['@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:""}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                qR = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })(),
                Zp = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ki, de, Id, qR, de, qR]
                    }), t
                })();
            const wX = ["*"],
                YR = new R("MatChipRemove"),
                QR = new R("MatChipAvatar"),
                KR = new R("MatChipTrailingIcon");
            class CX {
                constructor(n) {
                    this._elementRef = n
                }
            }
            const xX = no(Zi(br(CX), "primary"), -1);
            let au = (() => {
                class t extends xX {
                    constructor(e, i, r, s, o, a, l, c) {
                        super(e), this._ngZone = i, this._changeDetectorRef = o, this._hasFocus = !1, this.chipListSelectable = !0, this._chipListMultiple = !1, this._chipListDisabled = !1, this.role = "option", this._selected = !1, this._selectable = !0, this._disabled = !1, this._removable = !0, this._onFocus = new H, this._onBlur = new H, this.selectionChange = new V, this.destroyed = new V, this.removed = new V, this._addHostClassName(), this._chipRippleTarget = a.createElement("div"), this._chipRippleTarget.classList.add("mat-chip-ripple"), this._elementRef.nativeElement.appendChild(this._chipRippleTarget), this._chipRipple = new m1(this, i, this._chipRippleTarget, r), this._chipRipple.setupTriggerEvents(e), this.rippleConfig = s || {}, this._animationsDisabled = "NoopAnimations" === l, this.tabIndex = null != c && parseInt(c) || -1
                    }
                    get rippleDisabled() {
                        return this.disabled || this.disableRipple || this._animationsDisabled || !!this.rippleConfig.disabled
                    }
                    get selected() {
                        return this._selected
                    }
                    set selected(e) {
                        const i = G(e);
                        i !== this._selected && (this._selected = i, this._dispatchSelectionChange())
                    }
                    get value() {
                        return void 0 !== this._value ? this._value : this._elementRef.nativeElement.textContent
                    }
                    set value(e) {
                        this._value = e
                    }
                    get selectable() {
                        return this._selectable && this.chipListSelectable
                    }
                    set selectable(e) {
                        this._selectable = G(e)
                    }
                    get disabled() {
                        return this._chipListDisabled || this._disabled
                    }
                    set disabled(e) {
                        this._disabled = G(e)
                    }
                    get removable() {
                        return this._removable
                    }
                    set removable(e) {
                        this._removable = G(e)
                    }
                    get ariaSelected() {
                        return this.selectable && (this._chipListMultiple || this.selected) ? this.selected.toString() : null
                    }
                    _addHostClassName() {
                        const e = "mat-basic-chip",
                            i = this._elementRef.nativeElement;
                        i.hasAttribute(e) || i.tagName.toLowerCase() === e ? i.classList.add(e) : i.classList.add("mat-standard-chip")
                    }
                    ngOnDestroy() {
                        this.destroyed.emit({
                            chip: this
                        }), this._chipRipple._removeTriggerEvents()
                    }
                    select() {
                        this._selected || (this._selected = !0, this._dispatchSelectionChange(), this._changeDetectorRef.markForCheck())
                    }
                    deselect() {
                        this._selected && (this._selected = !1, this._dispatchSelectionChange(), this._changeDetectorRef.markForCheck())
                    }
                    selectViaInteraction() {
                        this._selected || (this._selected = !0, this._dispatchSelectionChange(!0), this._changeDetectorRef.markForCheck())
                    }
                    toggleSelected(e = !1) {
                        return this._selected = !this.selected, this._dispatchSelectionChange(e), this._changeDetectorRef.markForCheck(), this.selected
                    }
                    focus() {
                        this._hasFocus || (this._elementRef.nativeElement.focus(), this._onFocus.next({
                            chip: this
                        })), this._hasFocus = !0
                    }
                    remove() {
                        this.removable && this.removed.emit({
                            chip: this
                        })
                    }
                    _handleClick(e) {
                        this.disabled && e.preventDefault()
                    }
                    _handleKeydown(e) {
                        if (!this.disabled) switch (e.keyCode) {
                            case 46:
                            case 8:
                                this.remove(), e.preventDefault();
                                break;
                            case 32:
                                this.selectable && this.toggleSelected(!0), e.preventDefault()
                        }
                    }
                    _blur() {
                        this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                            this._ngZone.run(() => {
                                this._hasFocus = !1, this._onBlur.next({
                                    chip: this
                                })
                            })
                        })
                    }
                    _dispatchSelectionChange(e = !1) {
                        this.selectionChange.emit({
                            source: this,
                            isUserInput: e,
                            selected: this._selected
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(ce), u(Ft), u(g1, 8), u(ge), u(pe), u(Tt, 8), Qt("tabindex"))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["mat-basic-chip"],
                        ["", "mat-basic-chip", ""],
                        ["mat-chip"],
                        ["", "mat-chip", ""]
                    ],
                    contentQueries: function(e, i, r) {
                        if (1 & e && (_e(r, QR, 5), _e(r, KR, 5), _e(r, YR, 5)), 2 & e) {
                            let s;
                            O(s = P()) && (i.avatar = s.first), O(s = P()) && (i.trailingIcon = s.first), O(s = P()) && (i.removeIcon = s.first)
                        }
                    },
                    hostAttrs: [1, "mat-chip", "mat-focus-indicator"],
                    hostVars: 15,
                    hostBindings: function(e, i) {
                        1 & e && T("click", function(s) {
                            return i._handleClick(s)
                        })("keydown", function(s) {
                            return i._handleKeydown(s)
                        })("focus", function() {
                            return i.focus()
                        })("blur", function() {
                            return i._blur()
                        }), 2 & e && (q("tabindex", i.disabled ? null : i.tabIndex)("role", i.role)("disabled", i.disabled || null)("aria-disabled", i.disabled.toString())("aria-selected", i.ariaSelected), re("mat-chip-selected", i.selected)("mat-chip-with-avatar", i.avatar)("mat-chip-with-trailing-icon", i.trailingIcon || i.removeIcon)("mat-chip-disabled", i.disabled)("_mat-animation-noopable", i._animationsDisabled))
                    },
                    inputs: {
                        color: "color",
                        disableRipple: "disableRipple",
                        tabIndex: "tabIndex",
                        role: "role",
                        selected: "selected",
                        value: "value",
                        selectable: "selectable",
                        disabled: "disabled",
                        removable: "removable"
                    },
                    outputs: {
                        selectionChange: "selectionChange",
                        destroyed: "destroyed",
                        removed: "removed"
                    },
                    exportAs: ["matChip"],
                    features: [A]
                }), t
            })();
            const ZR = new R("mat-chips-default-options"),
                kX = Hb(class {
                    constructor(t, n, e, i) {
                        this._defaultErrorStateMatcher = t, this._parentForm = n, this._parentFormGroup = e, this.ngControl = i, this.stateChanges = new H
                    }
                });
            let AX = 0;
            class EX {
                constructor(n, e) {
                    this.source = n, this.value = e
                }
            }
            let cw = (() => {
                    class t extends kX {
                        constructor(e, i, r, s, o, a, l) {
                            super(a, s, o, l), this._elementRef = e, this._changeDetectorRef = i, this._dir = r, this.controlType = "mat-chip-list", this._lastDestroyedChipIndex = null, this._destroyed = new H, this._uid = "mat-chip-list-" + AX++, this._tabIndex = 0, this._userTabIndex = null, this._onTouched = () => {}, this._onChange = () => {}, this._multiple = !1, this._compareWith = (c, d) => c === d, this._disabled = !1, this.ariaOrientation = "horizontal", this._selectable = !0, this.change = new V, this.valueChange = new V, this.ngControl && (this.ngControl.valueAccessor = this)
                        }
                        get selected() {
                            return this.multiple ? this._selectionModel ? .selected || [] : this._selectionModel ? .selected[0]
                        }
                        get role() {
                            return this._explicitRole ? this._explicitRole : this.empty ? null : "listbox"
                        }
                        set role(e) {
                            this._explicitRole = e
                        }
                        get multiple() {
                            return this._multiple
                        }
                        set multiple(e) {
                            this._multiple = G(e), this._syncChipsState()
                        }
                        get compareWith() {
                            return this._compareWith
                        }
                        set compareWith(e) {
                            this._compareWith = e, this._selectionModel && this._initializeSelection()
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this.writeValue(e), this._value = e
                        }
                        get id() {
                            return this._chipInput ? this._chipInput.id : this._uid
                        }
                        get required() {
                            return this._required ? ? this.ngControl ? .control ? .hasValidator(jt.required) ? ? !1
                        }
                        set required(e) {
                            this._required = G(e), this.stateChanges.next()
                        }
                        get placeholder() {
                            return this._chipInput ? this._chipInput.placeholder : this._placeholder
                        }
                        set placeholder(e) {
                            this._placeholder = e, this.stateChanges.next()
                        }
                        get focused() {
                            return this._chipInput && this._chipInput.focused || this._hasFocusedChip()
                        }
                        get empty() {
                            return (!this._chipInput || this._chipInput.empty) && (!this.chips || 0 === this.chips.length)
                        }
                        get shouldLabelFloat() {
                            return !this.empty || this.focused
                        }
                        get disabled() {
                            return this.ngControl ? !!this.ngControl.disabled : this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e), this._syncChipsState()
                        }
                        get selectable() {
                            return this._selectable
                        }
                        set selectable(e) {
                            this._selectable = G(e), this._syncChipsState()
                        }
                        set tabIndex(e) {
                            this._userTabIndex = e, this._tabIndex = e
                        }
                        get chipSelectionChanges() {
                            return tt(...this.chips.map(e => e.selectionChange))
                        }
                        get chipFocusChanges() {
                            return tt(...this.chips.map(e => e._onFocus))
                        }
                        get chipBlurChanges() {
                            return tt(...this.chips.map(e => e._onBlur))
                        }
                        get chipRemoveChanges() {
                            return tt(...this.chips.map(e => e.destroyed))
                        }
                        ngAfterContentInit() {
                            this._keyManager = new Rd(this.chips).withWrap().withVerticalOrientation().withHomeAndEnd().withHorizontalOrientation(this._dir ? this._dir.value : "ltr"), this._dir && this._dir.change.pipe(le(this._destroyed)).subscribe(e => this._keyManager.withHorizontalOrientation(e)), this._keyManager.tabOut.pipe(le(this._destroyed)).subscribe(() => {
                                this._allowFocusEscape()
                            }), this.chips.changes.pipe(pt(null), le(this._destroyed)).subscribe(() => {
                                (this.disabled || !this.selectable) && Promise.resolve().then(() => {
                                    this._syncChipsState()
                                }), this._resetChips(), this._initializeSelection(), this._updateTabIndex(), this._updateFocusForDestroyedChips(), this.stateChanges.next()
                            })
                        }
                        ngOnInit() {
                            this._selectionModel = new eu(this.multiple, void 0, !1), this.stateChanges.next()
                        }
                        ngDoCheck() {
                            this.ngControl && (this.updateErrorState(), this.ngControl.disabled !== this._disabled && (this.disabled = !!this.ngControl.disabled))
                        }
                        ngOnDestroy() {
                            this._destroyed.next(), this._destroyed.complete(), this.stateChanges.complete(), this._dropSubscriptions()
                        }
                        registerInput(e) {
                            this._chipInput = e, this._elementRef.nativeElement.setAttribute("data-mat-chip-input", e.id)
                        }
                        setDescribedByIds(e) {
                            e.length ? this._elementRef.nativeElement.setAttribute("aria-describedby", e.join(" ")) : this._elementRef.nativeElement.removeAttribute("aria-describedby")
                        }
                        writeValue(e) {
                            this.chips && this._setSelectionByValue(e, !1)
                        }
                        registerOnChange(e) {
                            this._onChange = e
                        }
                        registerOnTouched(e) {
                            this._onTouched = e
                        }
                        setDisabledState(e) {
                            this.disabled = e, this.stateChanges.next()
                        }
                        onContainerClick(e) {
                            this._originatesFromChip(e) || this.focus()
                        }
                        focus(e) {
                            this.disabled || this._chipInput && this._chipInput.focused || (this.chips.length > 0 ? (this._keyManager.setFirstItemActive(), this.stateChanges.next()) : (this._focusInput(e), this.stateChanges.next()))
                        }
                        _focusInput(e) {
                            this._chipInput && this._chipInput.focus(e)
                        }
                        _keydown(e) {
                            const i = e.target;
                            i && i.classList.contains("mat-chip") && (this._keyManager.onKeydown(e), this.stateChanges.next())
                        }
                        _updateTabIndex() {
                            this._tabIndex = this._userTabIndex || (0 === this.chips.length ? -1 : 0)
                        }
                        _updateFocusForDestroyedChips() {
                            if (null != this._lastDestroyedChipIndex)
                                if (this.chips.length) {
                                    const e = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);
                                    this._keyManager.setActiveItem(e)
                                } else this.focus();
                            this._lastDestroyedChipIndex = null
                        }
                        _isValidIndex(e) {
                            return e >= 0 && e < this.chips.length
                        }
                        _setSelectionByValue(e, i = !0) {
                            if (this._clearSelection(), this.chips.forEach(r => r.deselect()), Array.isArray(e)) e.forEach(r => this._selectValue(r, i)), this._sortValues();
                            else {
                                const r = this._selectValue(e, i);
                                r && i && this._keyManager.setActiveItem(r)
                            }
                        }
                        _selectValue(e, i = !0) {
                            const r = this.chips.find(s => null != s.value && this._compareWith(s.value, e));
                            return r && (i ? r.selectViaInteraction() : r.select(), this._selectionModel.select(r)), r
                        }
                        _initializeSelection() {
                            Promise.resolve().then(() => {
                                (this.ngControl || this._value) && (this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, !1), this.stateChanges.next())
                            })
                        }
                        _clearSelection(e) {
                            this._selectionModel.clear(), this.chips.forEach(i => {
                                i !== e && i.deselect()
                            }), this.stateChanges.next()
                        }
                        _sortValues() {
                            this._multiple && (this._selectionModel.clear(), this.chips.forEach(e => {
                                e.selected && this._selectionModel.select(e)
                            }), this.stateChanges.next())
                        }
                        _propagateChanges(e) {
                            let i = null;
                            i = Array.isArray(this.selected) ? this.selected.map(r => r.value) : this.selected ? this.selected.value : e, this._value = i, this.change.emit(new EX(this, i)), this.valueChange.emit(i), this._onChange(i), this._changeDetectorRef.markForCheck()
                        }
                        _blur() {
                            this._hasFocusedChip() || this._keyManager.setActiveItem(-1), this.disabled || (this._chipInput ? setTimeout(() => {
                                this.focused || this._markAsTouched()
                            }) : this._markAsTouched())
                        }
                        _markAsTouched() {
                            this._onTouched(), this._changeDetectorRef.markForCheck(), this.stateChanges.next()
                        }
                        _allowFocusEscape() {
                            -1 !== this._tabIndex && (this._tabIndex = -1, setTimeout(() => {
                                this._tabIndex = this._userTabIndex || 0, this._changeDetectorRef.markForCheck()
                            }))
                        }
                        _resetChips() {
                            this._dropSubscriptions(), this._listenToChipsFocus(), this._listenToChipsSelection(), this._listenToChipsRemoved()
                        }
                        _dropSubscriptions() {
                            this._chipFocusSubscription && (this._chipFocusSubscription.unsubscribe(), this._chipFocusSubscription = null), this._chipBlurSubscription && (this._chipBlurSubscription.unsubscribe(), this._chipBlurSubscription = null), this._chipSelectionSubscription && (this._chipSelectionSubscription.unsubscribe(), this._chipSelectionSubscription = null), this._chipRemoveSubscription && (this._chipRemoveSubscription.unsubscribe(), this._chipRemoveSubscription = null)
                        }
                        _listenToChipsSelection() {
                            this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(e => {
                                e.source.selected ? this._selectionModel.select(e.source) : this._selectionModel.deselect(e.source), this.multiple || this.chips.forEach(i => {
                                    !this._selectionModel.isSelected(i) && i.selected && i.deselect()
                                }), e.isUserInput && this._propagateChanges()
                            })
                        }
                        _listenToChipsFocus() {
                            this._chipFocusSubscription = this.chipFocusChanges.subscribe(e => {
                                let i = this.chips.toArray().indexOf(e.chip);
                                this._isValidIndex(i) && this._keyManager.updateActiveItem(i), this.stateChanges.next()
                            }), this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {
                                this._blur(), this.stateChanges.next()
                            })
                        }
                        _listenToChipsRemoved() {
                            this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(e => {
                                const i = e.chip,
                                    r = this.chips.toArray().indexOf(e.chip);
                                this._isValidIndex(r) && i._hasFocus && (this._lastDestroyedChipIndex = r)
                            })
                        }
                        _originatesFromChip(e) {
                            let i = e.target;
                            for (; i && i !== this._elementRef.nativeElement;) {
                                if (i.classList.contains("mat-chip")) return !0;
                                i = i.parentElement
                            }
                            return !1
                        }
                        _hasFocusedChip() {
                            return this.chips && this.chips.some(e => e._hasFocus)
                        }
                        _syncChipsState() {
                            this.chips && this.chips.forEach(e => {
                                e._chipListDisabled = this._disabled, e._chipListMultiple = this.multiple, e.chipListSelectable = this._selectable
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Mt, 8), u($l, 8), u(ui, 8), u(io), u(vr, 10))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-chip-list"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, au, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i.chips = s)
                            }
                        },
                        hostAttrs: [1, "mat-chip-list"],
                        hostVars: 14,
                        hostBindings: function(e, i) {
                            1 & e && T("focus", function() {
                                return i.focus()
                            })("blur", function() {
                                return i._blur()
                            })("keydown", function(s) {
                                return i._keydown(s)
                            }), 2 & e && (xn("id", i._uid), q("tabindex", i.disabled ? null : i._tabIndex)("aria-required", i.role ? i.required : null)("aria-disabled", i.disabled.toString())("aria-invalid", i.errorState)("aria-multiselectable", i.multiple)("role", i.role)("aria-orientation", i.ariaOrientation), re("mat-chip-list-disabled", i.disabled)("mat-chip-list-invalid", i.errorState)("mat-chip-list-required", i.required))
                        },
                        inputs: {
                            role: "role",
                            userAriaDescribedBy: ["aria-describedby", "userAriaDescribedBy"],
                            errorStateMatcher: "errorStateMatcher",
                            multiple: "multiple",
                            compareWith: "compareWith",
                            value: "value",
                            required: "required",
                            placeholder: "placeholder",
                            disabled: "disabled",
                            ariaOrientation: ["aria-orientation", "ariaOrientation"],
                            selectable: "selectable",
                            tabIndex: "tabIndex"
                        },
                        outputs: {
                            change: "change",
                            valueChange: "valueChange"
                        },
                        exportAs: ["matChipList"],
                        features: [Q([{
                            provide: Vl,
                            useExisting: t
                        }]), A],
                        ngContentSelectors: wX,
                        decls: 2,
                        vars: 0,
                        consts: [
                            [1, "mat-chip-list-wrapper"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "div", 0), me(1), g())
                        },
                        styles: ['.mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-chip::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}.mat-standard-chip._mat-animation-noopable{transition:none !important;animation:none !important}.mat-standard-chip .mat-chip-remove{border:none;-webkit-appearance:none;-moz-appearance:none;padding:0;background:none}.mat-standard-chip .mat-chip-remove.mat-icon,.mat-standard-chip .mat-chip-remove .mat-icon{width:18px;height:18px;font-size:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:"";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip.mat-chip-selected{outline-width:3px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden;transform:translateZ(0)}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                RX = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [io, {
                            provide: ZR,
                            useValue: {
                                separatorKeyCodes: [13]
                            }
                        }],
                        imports: [de]
                    }), t
                })();
            const FX = ["primaryValueBar"],
                OX = Zi(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                }, "primary"),
                PX = new R("mat-progress-bar-location", {
                    providedIn: "root",
                    factory: function LX() {
                        const t = st(pe),
                            n = t ? t.location : null;
                        return {
                            getPathname: () => n ? n.pathname + n.search : ""
                        }
                    }
                }),
                NX = new R("MAT_PROGRESS_BAR_DEFAULT_OPTIONS");
            let BX = 0,
                lu = (() => {
                    class t extends OX {
                        constructor(e, i, r, s, o, a) {
                            super(e), this._ngZone = i, this._animationMode = r, this._changeDetectorRef = a, this._isNoopAnimation = !1, this._value = 0, this._bufferValue = 0, this.animationEnd = new V, this._animationEndSubscription = Re.EMPTY, this.mode = "determinate", this.progressbarId = "mat-progress-bar-" + BX++;
                            const l = s ? s.getPathname().split("#")[0] : "";
                            this._rectangleFillValue = `url('${l}#${this.progressbarId}')`, this._isNoopAnimation = "NoopAnimations" === r, o && (o.color && (this.color = this.defaultColor = o.color), this.mode = o.mode || this.mode)
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._value = XR(ht(e) || 0), this._changeDetectorRef ? .markForCheck()
                        }
                        get bufferValue() {
                            return this._bufferValue
                        }
                        set bufferValue(e) {
                            this._bufferValue = XR(e || 0), this._changeDetectorRef ? .markForCheck()
                        }
                        _primaryTransform() {
                            return {
                                transform: `scale3d(${this.value/100}, 1, 1)`
                            }
                        }
                        _bufferTransform() {
                            return "buffer" === this.mode ? {
                                transform: `scale3d(${this.bufferValue/100}, 1, 1)`
                            } : null
                        }
                        ngAfterViewInit() {
                            this._ngZone.runOutsideAngular(() => {
                                const e = this._primaryValueBar.nativeElement;
                                this._animationEndSubscription = un(e, "transitionend").pipe(Ie(i => i.target === e)).subscribe(() => {
                                    0 !== this.animationEnd.observers.length && ("determinate" === this.mode || "buffer" === this.mode) && this._ngZone.run(() => this.animationEnd.next({
                                        value: this.value
                                    }))
                                })
                            })
                        }
                        ngOnDestroy() {
                            this._animationEndSubscription.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ce), u(Tt, 8), u(PX, 8), u(NX, 8), u(ge))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-progress-bar"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(FX, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._primaryValueBar = r.first)
                            }
                        },
                        hostAttrs: ["role", "progressbar", "aria-valuemin", "0", "aria-valuemax", "100", "tabindex", "-1", 1, "mat-progress-bar"],
                        hostVars: 4,
                        hostBindings: function(e, i) {
                            2 & e && (q("aria-valuenow", "indeterminate" === i.mode || "query" === i.mode ? null : i.value)("mode", i.mode), re("_mat-animation-noopable", i._isNoopAnimation))
                        },
                        inputs: {
                            color: "color",
                            value: "value",
                            bufferValue: "bufferValue",
                            mode: "mode"
                        },
                        outputs: {
                            animationEnd: "animationEnd"
                        },
                        exportAs: ["matProgressBar"],
                        features: [A],
                        decls: 10,
                        vars: 4,
                        consts: [
                            ["aria-hidden", "true"],
                            ["width", "100%", "height", "4", "focusable", "false", 1, "mat-progress-bar-background", "mat-progress-bar-element"],
                            ["x", "4", "y", "0", "width", "8", "height", "4", "patternUnits", "userSpaceOnUse", 3, "id"],
                            ["cx", "2", "cy", "2", "r", "2"],
                            ["width", "100%", "height", "100%"],
                            [1, "mat-progress-bar-buffer", "mat-progress-bar-element", 3, "ngStyle"],
                            [1, "mat-progress-bar-primary", "mat-progress-bar-fill", "mat-progress-bar-element", 3, "ngStyle"],
                            ["primaryValueBar", ""],
                            [1, "mat-progress-bar-secondary", "mat-progress-bar-fill", "mat-progress-bar-element"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0), ni(), f(1, "svg", 1)(2, "defs")(3, "pattern", 2), E(4, "circle", 3), g()(), E(5, "rect", 4), g(), Oa(), E(6, "div", 5)(7, "div", 6, 7)(9, "div", 8), g()), 2 & e && (p(3), y("id", i.progressbarId), p(2), q("fill", i._rectangleFillValue), p(1), y("ngStyle", i._bufferTransform()), p(1), y("ngStyle", i._primaryTransform()))
                        },
                        dependencies: [Gs],
                        styles: ['.mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:"";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();

            function XR(t, n = 0, e = 100) {
                return Math.max(n, Math.min(e, t))
            }
            let VX = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    imports: [ut, de, de]
                }), t
            })();

            function HX(t, n) {
                1 & t && E(0, "mat-progress-bar", 15)
            }

            function $X(t, n) {
                if (1 & t && (f(0, "mat-option", 22), w(1), g()), 2 & t) {
                    const e = x().$implicit;
                    y("value", e.name), p(1), X(" ", e.label, " ")
                }
            }

            function jX(t, n) {
                if (1 & t && (oe(0), b(1, $X, 2, 2, "mat-option", 21), ae()), 2 & t) {
                    const e = n.$implicit;
                    p(1), y("ngIf", !e.hideInMeos)
                }
            }

            function zX(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-form-field", 5)(1, "mat-label"), w(2, "Baan"), g(), f(3, "mat-select", 19), T("ngModelChange", function(r) {
                        return ne(e), ie(x(2).jobFilter = r)
                    })("valueChange", function(r) {
                        return ne(e), ie(x(2).jobFilterChanged(r))
                    }), f(4, "mat-option"), w(5, "Alle"), g(), b(6, jX, 2, 1, "ng-container", 20), g()()
                }
                if (2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(3), y("ngModel", i.jobFilter), p(3), y("ngForOf", e)
                }
            }

            function UX(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 16), b(1, zX, 7, 2, "mat-form-field", 17), ue(2, "async"), f(3, "mat-form-field", 5)(4, "mat-label"), w(5, "BSN"), g(), f(6, "input", 18), T("ngModelChange", function(r) {
                        return ne(e), ie(x().idFilter = r)
                    })("ngModelChange", function(r) {
                        return ne(e), ie(x().idFilterChanged(r))
                    }), g()()()
                }
                if (2 & t) {
                    const e = x();
                    p(1), y("ngIf", De(2, 2, e.jobs$)), p(5), y("ngModel", e.idFilter)
                }
            }

            function GX(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.getColumnLabel("firstname"))
                }
            }

            function WX(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.firstname, " ")
                }
            }

            function qX(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.getColumnLabel("lastname"))
                }
            }

            function YX(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.lastname, " ")
                }
            }

            function QX(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.getColumnLabel("sex"))
                }
            }

            function KX(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), X(" ", i.sexToString(e), " ")
                }
            }

            function ZX(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.getColumnLabel("dateofbirth"))
                }
            }

            function XX(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.dateofbirth, " ")
                }
            }

            function JX(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), ve(e.getColumnLabel("joblabel"))
                }
            }

            function eJ(t, n) {
                if (1 & t && (f(0, "td", 40)(1, "mat-chip-list")(2, "mat-chip", 41), w(3), g()()()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(3), ve(i.jobToString(e))
                }
            }

            function tJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("wanted"))
                }
            }

            function nJ(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.isWanted ? "Ja" : "Nee", " ")
                }
            }

            function iJ(t, n) {
                1 & t && (oe(0, 42), b(1, tJ, 2, 1, "th", 25), b(2, nJ, 2, 1, "td", 26), ae())
            }

            function rJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("bank"))
                }
            }

            function sJ(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), ue(2, "currency"), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", zi(2, 1, e.bank, "EUR", "symbol", "1.0-0"), " ")
                }
            }

            function oJ(t, n) {
                1 & t && (oe(0, 43), b(1, rJ, 2, 1, "th", 25), b(2, sJ, 3, 6, "td", 26), ae())
            }

            function aJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("money"))
                }
            }

            function lJ(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), ue(2, "currency"), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", zi(2, 1, e.money, "EUR", "symbol", "1.0-0"), " ")
                }
            }

            function cJ(t, n) {
                1 & t && (oe(0, 44), b(1, aJ, 2, 1, "th", 25), b(2, lJ, 3, 6, "td", 26), ae())
            }

            function dJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("billingtotal"))
                }
            }

            function uJ(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), ue(2, "currency"), g()), 2 & t) {
                    const e = n.$implicit;
                    let i;
                    p(1), X(" ", zi(2, 1, null !== (i = e.billingTotal) && void 0 !== i ? i : 0, "EUR", "symbol", "1.0-0"), " ")
                }
            }

            function hJ(t, n) {
                1 & t && (oe(0, 45), b(1, dJ, 2, 1, "th", 25), b(2, uJ, 3, 6, "td", 26), ae())
            }

            function fJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("billinglength"))
                }
            }

            function pJ(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.billingLength, " ")
                }
            }

            function mJ(t, n) {
                1 & t && (oe(0, 46), b(1, fJ, 2, 1, "th", 25), b(2, pJ, 2, 1, "td", 26), ae())
            }

            function gJ(t, n) {
                if (1 & t && (f(0, "th", 39), w(1), g()), 2 & t) {
                    const e = x(3);
                    p(1), ve(e.getColumnLabel("phonenumber"))
                }
            }

            function _J(t, n) {
                if (1 & t && (f(0, "td", 40), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.phoneNumber, " ")
                }
            }

            function yJ(t, n) {
                1 & t && (oe(0, 47), b(1, gJ, 2, 1, "th", 25), b(2, _J, 2, 1, "td", 26), ae())
            }

            function bJ(t, n) {
                1 & t && E(0, "tr", 48)
            }
            const vJ = function(t) {
                return {
                    isWanted: t
                }
            };

            function wJ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "tr", 49), T("click", function() {
                        const s = ne(e).$implicit;
                        return ie(x(2).openPersoon(s))
                    }), g()
                }
                2 & t && y("ngClass", gn(1, vJ, !!n.$implicit.isWanted))
            }

            function CJ(t, n) {
                if (1 & t && (f(0, "table", 23), oe(1, 24), b(2, GX, 2, 1, "th", 25), b(3, WX, 2, 1, "td", 26), ae(), oe(4, 27), b(5, qX, 2, 1, "th", 25), b(6, YX, 2, 1, "td", 26), ae(), oe(7, 28), b(8, QX, 2, 1, "th", 25), b(9, KX, 2, 1, "td", 26), ae(), oe(10, 29), b(11, ZX, 2, 1, "th", 25), b(12, XX, 2, 1, "td", 26), ae(), oe(13, 30), b(14, JX, 2, 1, "th", 25), b(15, eJ, 4, 1, "td", 26), ae(), b(16, iJ, 3, 0, "ng-container", 31), b(17, oJ, 3, 0, "ng-container", 32), b(18, cJ, 3, 0, "ng-container", 33), b(19, hJ, 3, 0, "ng-container", 34), b(20, mJ, 3, 0, "ng-container", 35), b(21, yJ, 3, 0, "ng-container", 36), b(22, bJ, 1, 0, "tr", 37), b(23, wJ, 1, 3, "tr", 38), g()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    y("dataSource", i.dataSource)("trackBy", i.trackUser)("matSortDirection", i.sortDirection)("matSortActive", i.sortActive), p(16), y("ngIf", i.canShowColumn("wanted")), p(1), y("ngIf", i.canShowColumn("bank")), p(1), y("ngIf", i.canShowColumn("money")), p(1), y("ngIf", i.canShowColumn("billingtotal")), p(1), y("ngIf", i.canShowColumn("billinglength")), p(1), y("ngIf", i.canShowColumn("phonenumber")), p(1), y("matHeaderRowDef", e), p(1), y("matRowDefColumns", e)
                }
            }

            function xJ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 53), T("click", function(r) {
                        return r.stopPropagation()
                    }), f(1, "mat-checkbox", 54), T("change", function(r) {
                        ne(e);
                        const s = x().$implicit;
                        return ie(x(3).selectChange(r, s.key))
                    }), w(2), g()()
                }
                if (2 & t) {
                    const e = x().$implicit,
                        i = x(3);
                    p(1), y("checked", e.value.displayed), p(1), X(" ", i.getColumnLabel(e.key), " ")
                }
            }

            function DJ(t, n) {
                if (1 & t && (oe(0), b(1, xJ, 3, 2, "div", 52), ae()), 2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    p(1), y("ngIf", i.canShowColumn(e.key))
                }
            }

            function MJ(t, n) {
                if (1 & t && (oe(0), b(1, DJ, 2, 1, "ng-container", 51), ue(2, "keyvalue"), ae()), 2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(1), y("ngForOf", De(2, 2, e))("ngForTrackBy", i.trackColumns)
                }
            }

            function SJ(t, n) {
                1 & t && (b(0, MJ, 3, 4, "ng-container", 50), ue(1, "async")), 2 & t && y("ngIf", De(1, 1, x().columns$))
            }
            const kJ = function() {
                return [5, 10, 20, 50, 100]
            };
            let AJ = (() => {
                class t {
                    constructor(e, i, r, s, o) {
                        this.data = e, this.route = i, this.router = r, this.authService = s, this.subs = new co, this.columns = new Map([
                            ["firstname", {
                                canShow: () => !0,
                                label: "Voornaam",
                                getValue: l => l.firstname,
                                displayed: !0
                            }],
                            ["lastname", {
                                canShow: () => !0,
                                label: "Achternaam",
                                getValue: l => l.lastname,
                                displayed: !0
                            }],
                            ["sex", {
                                canShow: () => !0,
                                label: "Geslacht",
                                getValue: l => this.sexToString(l),
                                displayed: !0
                            }],
                            ["dateofbirth", {
                                canShow: () => !0,
                                label: "Geboortedatum",
                                getValue: l => l.dateofbirth,
                                displayed: !0
                            }],
                            ["bank", {
                                canShow: () => this.canShowPersonalInfo(),
                                label: "Bank",
                                getValue: l => l.bank,
                                displayed: !1
                            }],
                            ["money", {
                                canShow: () => this.canShowPersonalInfo(),
                                label: "Contant",
                                getValue: l => l.money,
                                displayed: !1
                            }],
                            ["phonenumber", {
                                canShow: () => this.canShowPersonalInfo(),
                                label: "Telefoonnummer",
                                getValue: l => l.phoneNumber,
                                displayed: !1
                            }],
                            ["joblabel", {
                                canShow: () => this.canShowPersonalInfo(),
                                label: "Werk",
                                getValue: l => this.jobToString(l),
                                displayed: !0
                            }],
                            ["wanted", {
                                canShow: () => !0,
                                label: "Arrestatiebevel",
                                getValue: l => l ? "Ja" : "Nee",
                                displayed: !1
                            }],
                            ["billinglength", {
                                canShow: () => !0,
                                label: "Openstaande boetes",
                                getValue: l => l.billingLength,
                                displayed: !1
                            }],
                            ["billingtotal", {
                                canShow: () => !0,
                                label: "Totaalbedrag boetes",
                                getValue: l => l.billingTotal,
                                displayed: !1
                            }]
                        ]), this.columns$ = new Te(this.columns), this.displayedColumns$ = new Te([]), this.jobFilter = [], this.idFilter = "", this.lastFilterChange = 0, this.filter = "", this.showFilter$ = new Te(!1), this.addStyle = {
                            "overflow-y": "hidden"
                        }, this.dataSource = new xZ(this.data, o);
                        const a = this.displayedColumns$.value;
                        for (const [l, c] of this.columns) c.displayed && (c.canShow() ? a.push(l) : c.displayed = !1);
                        this.loading$ = this.dataSource.loading$, this.jobs$ = this.data.getJobs()
                    }
                    ngOnInit() {
                        this.subs.sink = this.route.queryParams.subscribe(e => {
                            this.jobFilter = e.jobs ? ? [], this.filter = e.filter ? ? "", e.page && (this.paginator.pageIndex = e.page ? ? 0), e.pageSize && (this.paginator.pageSize = Number.parseInt(e.pageSize)), e.sort && (this.sortActive = e.sort), e.sortDir && (this.sortDirection = e.sortDir), setTimeout(() => {
                                this.loadPlayersPage()
                            }, 0)
                        })
                    }
                    ngOnDestroy() {
                        this.subs.unsubscribe()
                    }
                    ngAfterViewInit() {
                        this.subs.sink = this.sort.sortChange.subscribe(() => {
                            this.paginator.pageIndex = 0, this.updateQueryParams()
                        }), this.subs.sink = this.paginator.page.subscribe(() => this.updateQueryParams())
                    }
                    menuTrigger(e) {
                        e.stopPropagation()
                    }
                    toggleFilter() {
                        this.showFilter$.next(!this.showFilter$.value)
                    }
                    jobFilterChanged(e) {
                        this.jobFilter = e;
                        for (const i of e)
                            if (null == i) return void setTimeout(() => {
                                this.jobFilter = [], this.updateQueryParams(), this.jobSelection.close()
                            });
                        this.updateQueryParams(), this.jobSelection.close()
                    }
                    idFilterChanged(e) {
                        this.lastFilterChange = Date.now(), new Promise((i, r) => {
                            this.timer = setTimeout(() => {
                                Date.now() - this.lastFilterChange > 1e3 && i(!0)
                            }, 1e3)
                        }).then(i => {
                            this.idFilter = e ? ? "", this.updateQueryParams()
                        })
                    }
                    trackColumns(e, i) {
                        return i.key
                    }
                    trackUser(e, i) {
                        return i.identifier ? ? ""
                    }
                    selectChange(e, i) {
                        let r = this.displayedColumns$.value;
                        const s = this.columns.get(i);
                        s && (s.displayed = e.checked), e.checked ? (r.push(i), this.displayedColumns$.next(r)) : (r = r.filter(o => o !== i), this.displayedColumns$.next(r)), console.log(e)
                    }
                    canShowPersonalInfo() {
                        return !!this.authService.currentUserValue && !!this.authService.isStaff()
                    }
                    canShowColumn(e) {
                        return this.columns.get(e) ? .canShow.call(this) ? ? !1
                    }
                    getColumnLabel(e) {
                        return this.columns.get(e) ? .label ? ? e
                    }
                    getValue(e, i) {
                        return this.columns.get(e) ? .getValue(i) ? ? "Onbekend"
                    }
                    loadPlayersPage() {
                        this.dataSource.loadPlayers(this.filter, this.sort ? .active ? ? "", this.sort ? .direction ? ? "", this.paginator ? .pageIndex, this.paginator ? .pageSize, this.jobFilter, this.idFilter)
                    }
                    sexToString(e) {
                        const i = e.sex ? .toUpperCase();
                        return "M" === i ? "Man" : "F" === i ? "Vrouw" : "Anders"
                    }
                    jobToString(e) {
                        return Yv.jobToString(e, this.authService.currentUserValue)
                    }
                    updateQueryParams() {
                        const e = {
                                jobs: this.jobFilter,
                                id: this.idFilter
                            },
                            i = this.paginator ? .pageIndex ? ? 0;
                        i > 0 && (e.page = i);
                        const r = this.paginator ? .pageSize ? ? 20;
                        20 != r && (e.pageSize = r);
                        const s = this.filter;
                        "" != s && (e.filter = s);
                        const o = this.sort ? .active ? ? "";
                        "" != o && (e.sort = o);
                        const a = this.sort ? .direction ? ? "";
                        "" != a && (e.sortDir = a), this.router.navigate([], {
                            queryParams: e
                        })
                    }
                    applyFilter(e) {
                        !e || (clearTimeout(this.timer), this.timer = setTimeout(() => {
                            this.filter = e ? .value.trim().toLowerCase(), this.paginator.pageIndex = 0, this.updateQueryParams()
                        }, 1e3))
                    }
                    displayed(e) {
                        return this.displayedColumns$.value.findIndex(r => r === e) > -1
                    }
                    navigateTo(e) {
                        var i = this;
                        return Cr(function*() {
                            Date.now() - i.startTime > 500 || i.router.navigate(["/players/" + e.identifier])
                        })()
                    }
                    openPersoon(e) {
                        this.router.navigate(["persoon/", e.identifier])
                    }
                    start() {
                        this.startTime = Date.now()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Qv), u(Yi), u(gt), u(Bn), u(Ur))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-persoon"]
                    ],
                    viewQuery: function(e, i) {
                        if (1 & e && (J(fo, 5), J(mo, 5), J(po, 7)), 2 & e) {
                            let r;
                            O(r = P()) && (i.jobSelection = r.first), O(r = P()) && (i.sort = r.first), O(r = P()) && (i.paginator = r.first)
                        }
                    },
                    decls: 26,
                    vars: 21,
                    consts: [
                        ["fxLayout", "column", 2, "max-height", "calc(98vh - 60px - 32px)", "overflow-y", "hidden"],
                        ["fxFlex", ""],
                        [2, "background-color", "transparent"],
                        ["mode", "query", 4, "ngIf"],
                        ["fxLayout", "row", "fxLayoutAlign", "end"],
                        [2, "width", "100%"],
                        ["matInput", "", "placeholder", "Filter", 1, "", 3, "value", "disabled", "keyup"],
                        ["mat-icon-button", "", 3, "click"],
                        ["mat-icon-button", "", 3, "disabled", "matMenuTriggerFor", "matMenuTriggerData", "click"],
                        ["fxLayout", "row wrap", 4, "ngIf"],
                        ["id", "players-home-container"],
                        ["mat-table", "", "matSort", "", 3, "dataSource", "trackBy", "matSortDirection", "matSortActive", 4, "ngIf"],
                        ["showFirstLastButtons", "", 3, "pageSize", "length", "pageSizeOptions"],
                        ["columnMenu", "matMenu"],
                        ["matMenuContent", ""],
                        ["mode", "query"],
                        ["fxLayout", "row wrap"],
                        ["style", "width: 100%;", 4, "ngIf"],
                        ["type", "number", "matInput", "", 3, "ngModel", "ngModelChange"],
                        ["multiple", "", 3, "ngModel", "ngModelChange", "valueChange"],
                        [4, "ngFor", "ngForOf"],
                        [3, "value", 4, "ngIf"],
                        [3, "value"],
                        ["mat-table", "", "matSort", "", 3, "dataSource", "trackBy", "matSortDirection", "matSortActive"],
                        ["matColumnDef", "firstname"],
                        ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"],
                        ["mat-cell", "", 4, "matCellDef"],
                        ["matColumnDef", "lastname"],
                        ["matColumnDef", "sex"],
                        ["matColumnDef", "dateofbirth"],
                        ["matColumnDef", "joblabel"],
                        ["matColumnDef", "wanted", 4, "ngIf"],
                        ["matColumnDef", "bank", 4, "ngIf"],
                        ["matColumnDef", "money", 4, "ngIf"],
                        ["matColumnDef", "billingtotal", 4, "ngIf"],
                        ["matColumnDef", "billinglength", 4, "ngIf"],
                        ["matColumnDef", "phonenumber", 4, "ngIf"],
                        ["mat-header-row", "", 4, "matHeaderRowDef"],
                        ["mat-row", "", 3, "ngClass", "click", 4, "matRowDef", "matRowDefColumns"],
                        ["mat-header-cell", "", "mat-sort-header", ""],
                        ["mat-cell", ""],
                        ["color", "primary", "selected", ""],
                        ["matColumnDef", "wanted"],
                        ["matColumnDef", "bank"],
                        ["matColumnDef", "money"],
                        ["matColumnDef", "billingtotal"],
                        ["matColumnDef", "billinglength"],
                        ["matColumnDef", "phonenumber"],
                        ["mat-header-row", ""],
                        ["mat-row", "", 3, "ngClass", "click"],
                        [4, "ngIf"],
                        [4, "ngFor", "ngForOf", "ngForTrackBy"],
                        ["class", "column-checkbox", 3, "click", 4, "ngIf"],
                        [1, "column-checkbox", 3, "click"],
                        [3, "checked", "change"]
                    ],
                    template: function(e, i) {
                        if (1 & e && (f(0, "div", 0)(1, "div", 1)(2, "mat-grid-tile-footer", 2), b(3, HX, 1, 0, "mat-progress-bar", 3), ue(4, "async"), g(), f(5, "div", 4)(6, "mat-form-field", 5)(7, "input", 6), T("keyup", function(s) {
                                return i.applyFilter(s.target)
                            }), ue(8, "async"), g()(), f(9, "button", 7), T("click", function() {
                                return i.toggleFilter()
                            }), f(10, "mat-icon"), w(11, "filter_list"), g()(), f(12, "button", 8), T("click", function(s) {
                                return i.menuTrigger(s)
                            }), ue(13, "async"), f(14, "mat-icon"), w(15, "more_vert"), g()()(), b(16, UX, 7, 4, "div", 9), ue(17, "async"), g(), f(18, "div", 10), b(19, CJ, 24, 12, "table", 11), ue(20, "async"), g(), f(21, "div", 1), E(22, "mat-paginator", 12), g()(), f(23, "mat-menu", null, 13), b(25, SJ, 2, 3, "ng-template", 14), g()), 2 & e) {
                            const r = bt(24);
                            p(3), y("ngIf", De(4, 10, i.loading$)), p(4), y("value", i.filter)("disabled", De(8, 12, i.loading$)), p(5), y("disabled", De(13, 14, i.loading$))("matMenuTriggerFor", r), p(4), y("ngIf", De(17, 16, i.showFilter$)), p(3), y("ngIf", De(20, 18, i.displayedColumns$)), p(3), y("pageSize", 20)("length", null == i.dataSource ? null : i.dataSource.length)("pageSizeOptions", td(20, kJ))
                        }
                    },
                    dependencies: [gr, Dn, at, Nv, Bv, Yl, Hp, $p, Kv, Xt, nc, ga, ic, _a, ma, rc, ya, ba, sc, oc, sa, Wr, cw, au, ci, aa, Nn, po, lu, fo, mo, Np, di, dp, Xn, qd, ha, ho, fa, jI, Kn, Ey, Ay],
                    styles: ["table[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{font-size:1rem;width:100%}.spinner-container[_ngcontent-%COMP%]{position:absolute;opacity:1;top:calc(50% - 48px);left:calc(50% - 48px);z-index:1000}.column-checkbox[_ngcontent-%COMP%]{margin-left:4px;margin-top:4px}.container[_ngcontent-%COMP%]{background-color:#fff;padding:30px}#players-home-container[_ngcontent-%COMP%]{overflow-y:scroll;min-height:0;max-height:90%}.isWanted[_ngcontent-%COMP%]{background-color:#ff000062}.loading[_ngcontent-%COMP%]{min-height:50em;opacity:.6}.inactive[_ngcontent-%COMP%]{opacity:.6}.table-row[_ngcontent-%COMP%]{opacity:1;transition:all .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1);border-radius:4px}.table-row[_ngcontent-%COMP%]:hover{background-color:#d3d3d3}.example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{flex-basis:0}.example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{justify-content:space-between;align-items:center}mat-cell[_ngcontent-%COMP%]{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-o-text-overflow:ellipsis}"],
                    changeDetection: 0
                }), t
            })();

            function JR(t, n) {
                const e = "object" == typeof n;
                return new Promise((i, r) => {
                    let o, s = !1;
                    t.subscribe({
                        next: a => {
                            o = a, s = !0
                        },
                        error: r,
                        complete: () => {
                            s ? i(o) : e ? i(n.defaultValue) : r(new fd)
                        }
                    })
                })
            }
            const EJ = ["searchSelectInput"],
                TJ = ["innerSelectSearch"];

            function IJ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-checkbox", 9), T("change", function(r) {
                        return ne(e), ie(x()._emitSelectAllBooleanToParent(r.checked))
                    }), g()
                }
                if (2 & t) {
                    const e = x();
                    y("color", null == e.matFormField ? null : e.matFormField.color)("checked", e.toggleAllCheckboxChecked)("indeterminate", e.toggleAllCheckboxIndeterminate)("matTooltip", e.toggleAllCheckboxTooltipMessage)("matTooltipPosition", e.toogleAllCheckboxTooltipPosition)
                }
            }

            function RJ(t, n) {
                1 & t && E(0, "mat-spinner", 10)
            }

            function FJ(t, n) {
                1 & t && me(0, 1, ["*ngIf", "clearIcon; else defaultIcon"])
            }

            function OJ(t, n) {
                if (1 & t && (f(0, "mat-icon", 14), w(1), g()), 2 & t) {
                    const e = x(2);
                    y("svgIcon", e.closeSvgIcon), p(1), X(" ", e.closeSvgIcon ? null : e.closeIcon, " ")
                }
            }

            function PJ(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 11), T("click", function() {
                        return ne(e), ie(x()._reset(!0))
                    }), b(1, FJ, 1, 0, "ng-content", 12), b(2, OJ, 2, 2, "ng-template", null, 13, Ui), g()
                }
                if (2 & t) {
                    const e = bt(3),
                        i = x();
                    p(1), y("ngIf", i.clearIcon)("ngIfElse", e)
                }
            }

            function LJ(t, n) {
                if (1 & t && (f(0, "div", 15), w(1), g()), 2 & t) {
                    const e = x();
                    p(1), X(" ", e.noEntriesFoundLabel, "\n")
                }
            }
            const NJ = [
                    [
                        ["", 8, "mat-select-search-custom-header-content"]
                    ],
                    [
                        ["", "ngxMatSelectSearchClear", ""]
                    ]
                ],
                BJ = function(t, n) {
                    return {
                        "mat-select-search-inner-multiple": t,
                        "mat-select-search-inner-toggle-all": n
                    }
                },
                VJ = [".mat-select-search-custom-header-content", "[ngxMatSelectSearchClear]"];
            let HJ = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "ngxMatSelectSearchClear", ""]
                    ]
                }), t
            })();
            const $J = ["ariaLabel", "clearSearchInput", "closeIcon", "closeSvgIcon", "disableInitialFocus", "disableScrollToActiveOnOptionsChanged", "enableClearOnEscapePressed", "hideClearSearchButton", "indexAndLengthScreenReaderText", "noEntriesFoundLabel", "placeholderLabel", "preventHomeEndKeyPropagation", "searching"],
                jJ = new R("mat-selectsearch-default-options");
            let zJ = (() => {
                    class t {
                        constructor(e, i, r, s = null, o, a = null, l) {
                            this.matSelect = e, this.changeDetectorRef = i, this._viewportRuler = r, this.matOption = s, this.liveAnnouncer = o, this.matFormField = a, this.placeholderLabel = "Suche", this.type = "text", this.closeIcon = "close", this.noEntriesFoundLabel = "Keine Optionen gefunden", this.indexAndLengthScreenReaderText = " of ", this.clearSearchInput = !0, this.searching = !1, this.disableInitialFocus = !1, this.enableClearOnEscapePressed = !1, this.preventHomeEndKeyPropagation = !1, this.disableScrollToActiveOnOptionsChanged = !1, this.ariaLabel = "dropdown search", this.showToggleAllCheckbox = !1, this.toggleAllCheckboxChecked = !1, this.toggleAllCheckboxIndeterminate = !1, this.toggleAllCheckboxTooltipMessage = "", this.toogleAllCheckboxTooltipPosition = "below", this.hideClearSearchButton = !1, this.alwaysRestoreSelectedOptionsMulti = !1, this.toggleAll = new V, this.onTouched = c => {}, this._options$ = new Te(null), this.optionsList$ = this._options$.pipe(vt(c => c ? c.changes.pipe(Z(d => d.toArray()), pt(c.toArray())) : z(null))), this.optionsLength$ = this.optionsList$.pipe(Z(c => c ? c.length : 0)), this._formControl = new jr(""), this._showNoEntriesFound$ = Qo([this._formControl.valueChanges, this.optionsLength$]).pipe(Z(([c, d]) => this.noEntriesFoundLabel && c && d === this.getOptionsLengthOffset())), this._onDestroy = new H, this.applyDefaultOptions(l)
                        }
                        get isInsideMatOption() {
                            return !!this.matOption
                        }
                        get value() {
                            return this._formControl.value
                        }
                        set _options(e) {
                            this._options$.next(e)
                        }
                        get _options() {
                            return this._options$.getValue()
                        }
                        applyDefaultOptions(e) {
                            if (e)
                                for (let i of $J) e.hasOwnProperty(i) && (this[i] = e[i])
                        }
                        ngOnInit() {
                            const e = "mat-select-search-panel";
                            this.matSelect.panelClass ? Array.isArray(this.matSelect.panelClass) ? this.matSelect.panelClass.push(e) : "string" == typeof this.matSelect.panelClass ? this.matSelect.panelClass = [this.matSelect.panelClass, e] : "object" == typeof this.matSelect.panelClass && (this.matSelect.panelClass[e] = !0) : this.matSelect.panelClass = e, this.matOption ? (this.matOption.disabled = !0, this.matOption._getHostElement().classList.add("contains-mat-select-search")) : console.error("<ngx-mat-select-search> must be placed inside a <mat-option> element"), this.matSelect.openedChange.pipe(iu(1), le(this._onDestroy)).subscribe(i => {
                                i ? (this.updateInputWidth(), this.disableInitialFocus || this._focus()) : this.clearSearchInput && this._reset()
                            }), this.matSelect.openedChange.pipe(Fe(1)).pipe(le(this._onDestroy)).subscribe(() => {
                                this.matSelect._keyManager ? this.matSelect._keyManager.change.pipe(le(this._onDestroy)).subscribe(() => this.adjustScrollTopToFitActiveOptionIntoView()) : console.log("_keyManager was not initialized."), this._options = this.matSelect.options;
                                let i = this._options.toArray()[this.getOptionsLengthOffset()];
                                this._options.changes.pipe(le(this._onDestroy)).subscribe(() => {
                                    setTimeout(() => {
                                        const r = this._options.toArray(),
                                            s = r[this.getOptionsLengthOffset()],
                                            o = this.matSelect._keyManager;
                                        o && this.matSelect.panelOpen && ((!this.matSelect.compareWith(i, s) || !o.activeItem || !r.find(l => this.matSelect.compareWith(l, o.activeItem))) && o.setFirstItemActive(), setTimeout(() => {
                                            this.updateInputWidth()
                                        }), this.disableScrollToActiveOnOptionsChanged || this.adjustScrollTopToFitActiveOptionIntoView()), i = s
                                    })
                                })
                            }), this._showNoEntriesFound$.pipe(le(this._onDestroy)).subscribe(i => {
                                this.matOption && (i ? this.matOption._getHostElement().classList.add("mat-select-search-no-entries-found") : this.matOption._getHostElement().classList.remove("mat-select-search-no-entries-found"))
                            }), this._viewportRuler.change().pipe(le(this._onDestroy)).subscribe(() => {
                                this.matSelect.panelOpen && this.updateInputWidth()
                            }), this.initMultipleHandling(), this.optionsList$.pipe(le(this._onDestroy)).subscribe(() => {
                                this.changeDetectorRef.markForCheck()
                            })
                        }
                        _emitSelectAllBooleanToParent(e) {
                            this.toggleAll.emit(e)
                        }
                        ngOnDestroy() {
                            this._onDestroy.next(), this._onDestroy.complete()
                        }
                        _isToggleAllCheckboxVisible() {
                            return this.matSelect.multiple && this.showToggleAllCheckbox
                        }
                        _handleKeydown(e) {
                            (e.key && 1 === e.key.length || e.keyCode >= 65 && e.keyCode <= 90 || e.keyCode >= 48 && e.keyCode <= 57 || 32 === e.keyCode || this.preventHomeEndKeyPropagation && (36 === e.keyCode || 35 === e.keyCode)) && e.stopPropagation(), this.matSelect.multiple && e.key && 13 === e.keyCode && setTimeout(() => this._focus()), !0 === this.enableClearOnEscapePressed && 27 === e.keyCode && this.value && (this._reset(!0), e.stopPropagation())
                        }
                        _handleKeyup(e) {
                            if (38 === e.keyCode || 40 === e.keyCode) {
                                const i = this.matSelect._getAriaActiveDescendant(),
                                    r = this._options.toArray().findIndex(s => s.id === i);
                                if (-1 !== r) {
                                    const s = this._options.toArray()[r];
                                    this.liveAnnouncer.announce(s.viewValue + " " + this.getAriaIndex(r) + this.indexAndLengthScreenReaderText + this.getAriaLength())
                                }
                            }
                        }
                        getAriaIndex(e) {
                            return 0 === this.getOptionsLengthOffset() ? e + 1 : e
                        }
                        getAriaLength() {
                            return this._options.toArray().length - this.getOptionsLengthOffset()
                        }
                        writeValue(e) {
                            this._lastExternalInputValue = e, this._formControl.setValue(e), this.changeDetectorRef.markForCheck()
                        }
                        onBlur() {
                            this.onTouched()
                        }
                        registerOnChange(e) {
                            this._formControl.valueChanges.pipe(Ie(i => i !== this._lastExternalInputValue), mt(() => this._lastExternalInputValue = void 0), le(this._onDestroy)).subscribe(e)
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        _focus() {
                            if (!this.searchSelectInput || !this.matSelect.panel) return;
                            const e = this.matSelect.panel.nativeElement,
                                i = e.scrollTop;
                            this.searchSelectInput.nativeElement.focus(), e.scrollTop = i
                        }
                        _reset(e) {
                            this._formControl.setValue(""), e && this._focus()
                        }
                        initMultipleHandling() {
                            this.matSelect.ngControl ? (this.previousSelectedValues = this.matSelect.ngControl.value, this.matSelect.ngControl.valueChanges.pipe(le(this._onDestroy)).subscribe(e => {
                                let i = !1;
                                if (this.matSelect.multiple && (this.alwaysRestoreSelectedOptionsMulti || this._formControl.value && this._formControl.value.length) && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {
                                    (!e || !Array.isArray(e)) && (e = []);
                                    const r = this.matSelect.options.map(s => s.value);
                                    this.previousSelectedValues.forEach(s => {
                                        !e.some(o => this.matSelect.compareWith(o, s)) && !r.some(o => this.matSelect.compareWith(o, s)) && (e.push(s), i = !0)
                                    })
                                }
                                this.previousSelectedValues = e, i && this.matSelect._onChange(e)
                            })) : this.matSelect.multiple && console.error("the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true")
                        }
                        adjustScrollTopToFitActiveOptionIntoView() {
                            if (this.matSelect.panel && this.matSelect.options.length > 0) {
                                const e = this.getMatOptionHeight(),
                                    i = this.matSelect._keyManager.activeItemIndex || 0,
                                    r = Qf(i, this.matSelect.options, this.matSelect.optionGroups),
                                    s = (this.matOption ? -1 : 0) + r + i,
                                    o = this.matSelect.panel.nativeElement.scrollTop,
                                    a = this.innerSelectSearch.nativeElement.offsetHeight,
                                    l = Math.floor((256 - a) / e),
                                    c = Math.round((o + a) / e) - 1;
                                c >= s ? this.matSelect.panel.nativeElement.scrollTop = s * e : c + l <= s && (this.matSelect.panel.nativeElement.scrollTop = (s + 1) * e - (256 - a))
                            }
                        }
                        updateInputWidth() {
                            if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) return;
                            let i, e = this.innerSelectSearch.nativeElement;
                            for (; e = e.parentElement;)
                                if (e.classList.contains("mat-select-panel")) {
                                    i = e;
                                    break
                                }
                            i && (this.innerSelectSearch.nativeElement.style.width = i.clientWidth + "px")
                        }
                        getMatOptionHeight() {
                            return this.matSelect.options.length > 0 ? this.matSelect.options.first._getHostElement().getBoundingClientRect().height : 0
                        }
                        getOptionsLengthOffset() {
                            return this.matOption ? 1 : 0
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(fo), u(ge), u(Hr), u(sa, 8), u(Bf), u(ci, 8), u(jJ, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["ngx-mat-select-search"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, HJ, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i.clearIcon = s.first)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && (J(EJ, 7, N), J(TJ, 7, N)), 2 & e) {
                                let r;
                                O(r = P()) && (i.searchSelectInput = r.first), O(r = P()) && (i.innerSelectSearch = r.first)
                            }
                        },
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-select-search-inside-mat-option", i.isInsideMatOption)
                        },
                        inputs: {
                            placeholderLabel: "placeholderLabel",
                            type: "type",
                            closeIcon: "closeIcon",
                            closeSvgIcon: "closeSvgIcon",
                            noEntriesFoundLabel: "noEntriesFoundLabel",
                            indexAndLengthScreenReaderText: "indexAndLengthScreenReaderText",
                            clearSearchInput: "clearSearchInput",
                            searching: "searching",
                            disableInitialFocus: "disableInitialFocus",
                            enableClearOnEscapePressed: "enableClearOnEscapePressed",
                            preventHomeEndKeyPropagation: "preventHomeEndKeyPropagation",
                            disableScrollToActiveOnOptionsChanged: "disableScrollToActiveOnOptionsChanged",
                            ariaLabel: "ariaLabel",
                            showToggleAllCheckbox: "showToggleAllCheckbox",
                            toggleAllCheckboxChecked: "toggleAllCheckboxChecked",
                            toggleAllCheckboxIndeterminate: "toggleAllCheckboxIndeterminate",
                            toggleAllCheckboxTooltipMessage: "toggleAllCheckboxTooltipMessage",
                            toogleAllCheckboxTooltipPosition: "toogleAllCheckboxTooltipPosition",
                            hideClearSearchButton: "hideClearSearchButton",
                            alwaysRestoreSelectedOptionsMulti: "alwaysRestoreSelectedOptionsMulti"
                        },
                        outputs: {
                            toggleAll: "toggleAll"
                        },
                        features: [Q([{
                            provide: hn,
                            useExisting: Ve(() => t),
                            multi: !0
                        }])],
                        ngContentSelectors: VJ,
                        decls: 11,
                        vars: 14,
                        consts: [
                            ["matInput", "", 1, "mat-select-search-input", "mat-select-search-hidden"],
                            [1, "mat-select-search-inner", "mat-typography", "mat-datepicker-content", "mat-tab-header", 3, "ngClass"],
                            ["innerSelectSearch", ""],
                            ["class", "mat-select-search-toggle-all-checkbox", "matTooltipClass", "ngx-mat-select-search-toggle-all-tooltip", 3, "color", "checked", "indeterminate", "matTooltip", "matTooltipPosition", "change", 4, "ngIf"],
                            ["autocomplete", "off", 1, "mat-select-search-input", "mat-input-element", 3, "type", "formControl", "placeholder", "keydown", "keyup", "blur"],
                            ["searchSelectInput", ""],
                            ["class", "mat-select-search-spinner", "diameter", "16", 4, "ngIf"],
                            ["mat-button", "", "mat-icon-button", "", "aria-label", "Clear", "class", "mat-select-search-clear", 3, "click", 4, "ngIf"],
                            ["class", "mat-select-search-no-entries-found", 4, "ngIf"],
                            ["matTooltipClass", "ngx-mat-select-search-toggle-all-tooltip", 1, "mat-select-search-toggle-all-checkbox", 3, "color", "checked", "indeterminate", "matTooltip", "matTooltipPosition", "change"],
                            ["diameter", "16", 1, "mat-select-search-spinner"],
                            ["mat-button", "", "mat-icon-button", "", "aria-label", "Clear", 1, "mat-select-search-clear", 3, "click"],
                            [4, "ngIf", "ngIfElse"],
                            ["defaultIcon", ""],
                            [3, "svgIcon"],
                            [1, "mat-select-search-no-entries-found"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(NJ), E(0, "input", 0), f(1, "div", 1, 2), b(3, IJ, 1, 5, "mat-checkbox", 3), f(4, "input", 4, 5), T("keydown", function(s) {
                                return i._handleKeydown(s)
                            })("keyup", function(s) {
                                return i._handleKeyup(s)
                            })("blur", function() {
                                return i.onBlur()
                            }), g(), b(6, RJ, 1, 0, "mat-spinner", 6), b(7, PJ, 4, 2, "button", 7), me(8), g(), b(9, LJ, 2, 1, "div", 8), ue(10, "async")), 2 & e && (p(1), y("ngClass", Uo(11, BJ, i.matSelect.multiple, i._isToggleAllCheckboxVisible())), p(2), y("ngIf", i._isToggleAllCheckboxVisible()), p(1), y("type", i.type)("formControl", i._formControl)("placeholder", i.placeholderLabel), q("aria-label", i.ariaLabel), p(2), y("ngIf", i.searching), p(1), y("ngIf", !i.hideClearSearchButton && i.value && !i.searching), p(2), y("ngIf", De(10, 9, i._showNoEntriesFound$)))
                        },
                        dependencies: [Wr, OK, Xt, Yl, gr, at, Ev, di, Xn, xs, Kn],
                        styles: [".mat-select-search-hidden[_ngcontent-%COMP%]{visibility:hidden}.mat-select-search-inner[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;border-bottom-width:1px;border-bottom-style:solid;z-index:100;font-size:inherit;box-shadow:none;border-radius:4px 4px 0 0;-webkit-transform:translate3d(0,0,0)}.mat-select-search-inner.mat-select-search-inner-multiple[_ngcontent-%COMP%]{width:100%}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-select-search-inner[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]{flex-basis:auto}.mat-select-search-inner[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]:-ms-input-placeholder{-ms-user-select:text}  .mat-select-search-panel{transform:none!important;overflow-x:hidden}.mat-select-search-input[_ngcontent-%COMP%]{padding:16px 44px 16px 16px;box-sizing:border-box;width:100%}[dir=rtl][_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-right:16px;padding-left:44px}.mat-select-search-no-entries-found[_ngcontent-%COMP%]{padding:16px}.mat-select-search-clear[_ngcontent-%COMP%]{position:absolute;right:4px;top:5px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{right:auto;left:4px}.mat-select-search-spinner[_ngcontent-%COMP%]{position:absolute;right:16px;top:calc(50% - 8px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%]{right:auto;left:16px}.mat-select-search-inside-mat-option[_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-top:0;padding-bottom:0;height:3em;line-height:3em}.mat-select-search-inside-mat-option[_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{top:3px}  .mat-option[aria-disabled=true].contains-mat-select-search{position:static;padding:0}  .mat-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}  .mat-option[aria-disabled=true].contains-mat-select-search .mat-option-pseudo-checkbox{display:none}  .mat-option[aria-disabled=true].contains-mat-select-search.mat-select-search-no-entries-found{height:6em}.mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:16px;padding-bottom:2px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:0;padding-right:16px}"],
                        changeDetection: 0
                    }), t
                })(),
                UJ = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [
                            [ut, Ji, Cs, Zp, Ql, Gv, Zd]
                        ]
                    }), t
                })();

            function GJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function WJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Vul aub een geldige Gebruikersnaam in"), g())
            }

            function qJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Deze Gebruikersnaam is al in gebruik"), g())
            }

            function YJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function QJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function KJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Wachtwoorden komen niet overeen"), g())
            }

            function ZJ(t, n) {
                if (1 & t && (f(0, "mat-option", 14), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e.identifier), p(1), R_(" ", e.firstname, " ", e.lastname, " ", e.dateofbirth, " ")
                }
            }

            function XJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit veld is vereist"), g())
            }

            function JJ(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Vul aub een geldig steamid in"), g())
            }

            function eee(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit steamid heeft al een MEOS account"), g())
            }

            function tee(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit steamid is niet dezelfde baan als jou"), g())
            }

            function nee(t, n) {
                1 & t && (f(0, "mat-error"), w(1, "Dit steamid bestaat niet"), g())
            }
            let iee = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this.formBuilder = e, this.authenticationService = i, this.http = r, this.snackbar = s, this.submitted = !1, this.searching = !1, this.filteredPlayers = new Jn(1), this.subs = new co
                        }
                        ngOnInit() {
                            var e = this;
                            return Cr(function*() {
                                e.subs.sink = e.authenticationService.currentUser$.subscribe(i => {
                                    !i || (e.user = i)
                                }), e.registerForm = e.formBuilder.group({
                                    username: ["", [jt.required]],
                                    rang: ["", []],
                                    steamid: ["", [jt.required]],
                                    password: ["", [jt.required]],
                                    repeatPassword: ["", [jt.required]],
                                    steamidFilterCtrl: ["", []]
                                }, {
                                    validators: Hv("password", "repeatPassword")
                                }), e.subs.sink = e.registerForm.controls.steamidFilterCtrl.valueChanges.pipe(Ie(i => !!i), mt(() => e.searching = !0), Rl(500), Z(function() {
                                    var i = Cr(function*(r) {
                                        try {
                                            const s = (new Ai).set("sortOrder", "asc").set("pageSize", "50").set("dataType", "minimized").set("sortColumn", "firstname").set("filter", r.toString());
                                            if (!e.user.staff) {
                                                if (!e.authenticationService.currentPlayerValue ? .job) throw new Error("currentPlayer.job is null!");
                                                s.set("job", e.authenticationService.currentPlayerValue ? .job ? .replace("off", ""))
                                            }
                                            const o = yield JR(e.http.get("/api/Players", {
                                                params: s
                                            }));
                                            e.filteredPlayers.next(o ? .payload)
                                        } catch (s) {
                                            if (0 === s ? .status) return void e.snackbar.open("Geen reactie van server. Controleer je internetverbinding!", "OK");
                                            console.error(s), e.snackbar.open(`Er is een fout opgetreden tijdens het laden van de spelers! (${s?.status})`, "OK")
                                        }
                                        e.searching = !1
                                    });
                                    return function(r) {
                                        return i.apply(this, arguments)
                                    }
                                }())).subscribe();
                                try {
                                    const i = yield JR(e.http.get("/api/Players", {
                                        params: (new Ai).set("sortOrder", "asc").set("pageSize", "50").set("dataType", "minimized").set("sortColumn", "firstname").set("job", "police")
                                    }));
                                    e.filteredPlayers.next(i ? .payload)
                                } catch (i) {
                                    if (0 === i ? .status) return void e.snackbar.open("Geen reactie van server. Controleer je internetverbinding!", "OK");
                                    console.error(i), e.snackbar.open(`Er is een fout opgetreden tijdens het laden van de spelers! (${i?.status})`, "OK")
                                }
                            })()
                        }
                        ngOnDestroy() {
                            this.subs.unsubscribe()
                        }
                        get f() {
                            return this.registerForm.controls
                        }
                        onSubmit() {
                            this.submitted = !0, console.log(this.registerForm.valid), this.registerForm.valid && this.http.post("/api/Users", {
                                username: this.registerForm.controls.username.value,
                                rang: this.registerForm.controls.rang.value,
                                password: this.registerForm.controls.password.value,
                                steamid: this.registerForm.controls.steamid.value
                            }, {
                                observe: "response"
                            }).subscribe(i => {
                                if (console.log(i), 409 === i.status) return console.log("Conflict in result"), void this.f.username.setErrors({
                                    conflict: !0
                                });
                                this.result = i.body, console.log(i), this.snackbar.open("Account succesvol aangemaakt!", "OK")
                            }, i => {
                                if (i.error instanceof Array) i.error.forEach(r => {
                                    const s = {};
                                    s[r.type] = !0, this.f[r.field].setErrors(s)
                                });
                                else {
                                    if (null != i.error.type && null != i.error.field) {
                                        const r = {};
                                        return r[i.error.type] = !0, void this.f[i.error.field].setErrors(r)
                                    }
                                    console.error(i), this.snackbar.open("Er is een onbekende fout opgetreden tijdens het aanmaken van het account!Controleer uw internet verbinding of probeer het later opnieuw.", "OK")
                                }
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(hp), u(Bn), u(wr), u(Xd))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-register"]
                        ],
                        decls: 41,
                        vars: 16,
                        consts: [
                            ["id", "register-container", 1, "container", "mat-elevation-z8", 2, "background-color", "#FFFFFF"],
                            [1, "form-register", 3, "formGroup", "ngSubmit"],
                            [1, "h3", "mb-3", "font-weight-normal"],
                            [1, "form-field-wrapper"],
                            ["appearance", "fill"],
                            ["matInput", "", "formControlName", "username", "id", "inputUsername", "type", "text", "placeholder", "Gebruikersnaam", "required", "", "name", "username", "minLength", "2"],
                            [4, "ngIf"],
                            ["matInput", "", "formControlName", "password", "id", "inputPassword", "type", "password", "placeholder", "Wachtwoord", "required", "", "name", "password", "minLength", "2"],
                            ["matInput", "", "formControlName", "repeatPassword", "id", "repeatPassword", "type", "password", "placeholder", "Herhaal wachtwoord", "required", "", "name", "repeatPassword", "minLength", "2"],
                            ["formControlName", "steamid", "placeholder", "RolePlay Naam"],
                            ["formControlName", "steamidFilterCtrl", "placeholderLabel", "Zoek Speler", "noEntriesFoundLabel", "Geen spelers gevonden", 3, "searching"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            [1, "form-field-wrapper", 2, "justify-content", "center"],
                            ["mat-raised-button", "", "type", "submit", "color", "primary", 1, "btn-primary", "btn-block", "submit-button", 2, "margin-bottom", "10px"],
                            [3, "value"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0)(1, "form", 1), T("ngSubmit", function() {
                                return i.onSubmit()
                            }), f(2, "h1", 2), w(3, "Register"), g(), f(4, "p", 3)(5, "mat-form-field", 4), E(6, "input", 5), f(7, "mat-label"), w(8, "Gebruikersnaam"), g(), b(9, GJ, 2, 0, "mat-error", 6), b(10, WJ, 2, 0, "mat-error", 6), b(11, qJ, 2, 0, "mat-error", 6), g()(), f(12, "p", 3)(13, "mat-form-field", 4), E(14, "input", 7), f(15, "mat-label"), w(16, "Wachtwoord"), g(), b(17, YJ, 2, 0, "mat-error", 6), g()(), f(18, "p", 3)(19, "mat-form-field", 4), E(20, "input", 8), f(21, "mat-label"), w(22, "Herhaal wachtwoord"), g(), b(23, QJ, 2, 0, "mat-error", 6), b(24, KJ, 2, 0, "mat-error", 6), g()(), f(25, "p", 3)(26, "mat-form-field", 4)(27, "mat-select", 9)(28, "mat-option")(29, "ngx-mat-select-search", 10), w(30, "SteamID"), g()(), b(31, ZJ, 2, 4, "mat-option", 11), ue(32, "async"), g(), b(33, XJ, 2, 0, "mat-error", 6), b(34, JJ, 2, 0, "mat-error", 6), b(35, eee, 2, 0, "mat-error", 6), b(36, tee, 2, 0, "mat-error", 6), b(37, nee, 2, 0, "mat-error", 6), g()(), f(38, "p", 12)(39, "button", 13), w(40, "Maak account aan"), g()()()()), 2 & e && (p(1), y("formGroup", i.registerForm), p(8), y("ngIf", i.f.username.hasError("required")), p(1), y("ngIf", i.f.username.hasError("pattern")), p(1), y("ngIf", i.f.username.hasError("conflict")), p(6), y("ngIf", i.f.password.hasError("required")), p(6), y("ngIf", i.f.repeatPassword.hasError("required")), p(1), y("ngIf", i.f.repeatPassword.hasError("mustMatch")), p(5), y("searching", i.searching), p(2), y("ngForOf", De(32, 14, i.filteredPlayers)), p(2), y("ngIf", i.f.steamid.hasError("required")), p(1), y("ngIf", i.f.steamid.hasError("pattern")), p(1), y("ngIf", i.f.steamid.hasError("conflict")), p(1), y("ngIf", i.f.steamid.hasError("notpolice")), p(1), y("ngIf", i.f.steamid.hasError("notfound")))
                        },
                        dependencies: [Dn, at, Xt, sa, ep, ci, aa, Nn, fo, lo, di, Xn, ao, zr, ui, jl, zJ, Kn],
                        styles: ["#register-container[_ngcontent-%COMP%]{padding-top:20px;padding-bottom:20px;margin:auto;max-width:660px}@media (min-width: 766px){.form-field-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:stretch}}.form-field-wrapper[_ngcontent-%COMP%]{width:100%}@media (max-width: 766px){mat-form-field[_ngcontent-%COMP%]{width:100%}}mat-form-field[_ngcontent-%COMP%]{flex:1;flex-direction:row;align-items:stretch;margin-right:10px;min-width:50%;min-width:300px}div[_ngcontent-%COMP%] > .ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]{border-left:5px solid #42A948}div[_ngcontent-%COMP%] > .ng-invalid[_ngcontent-%COMP%]:not(form){border-left:5px solid #a94442}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.submit-button[_ngcontent-%COMP%]{max-width:450px}"]
                    }), t
                })(),
                tF = (() => {
                    class t {
                        constructor(e) {
                            this.cachedHttp = e
                        }
                        findUsers(e = 0, i = 20, r = "", s = "asc", o = "") {
                            return (i < 1 || e < 0) && console.error("Invalid pageNumber or pageSize!"), this.cachedHttp.get("/api/Users", {
                                params: (new Ai).set("sortColumn", r).set("filter", o).set("sortDirection", s).set("page", e.toString()).set("pageSize", i.toString())
                            })
                        }
                        getUser(e) {
                            return this.cachedHttp.get(`/api/Users/${e}`)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(yp))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();

            function ree(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x();
                    p(1), X("", e.label, " moet overeenkomen")
                }
            }

            function see(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x();
                    p(1), X("", e.label, " is vereist")
                }
            }

            function oee(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x();
                    p(1), cs("", e.label, " moet minimaal ", e.errors.minlength.requiredLength, " tekens lang zijn")
                }
            }
            let aee = (() => {
                class t {
                    constructor() {}
                    ngOnInit() {
                        console.log(this.errors)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-validation-errors"]
                    ],
                    inputs: {
                        errors: "errors",
                        label: "label"
                    },
                    decls: 3,
                    vars: 3,
                    consts: [
                        [4, "ngIf"]
                    ],
                    template: function(e, i) {
                        1 & e && (b(0, ree, 2, 1, "ng-container", 0), b(1, see, 2, 1, "ng-container", 0), b(2, oee, 2, 2, "ng-container", 0)), 2 & e && (y("ngIf", null == i.errors ? null : i.errors.mustMatch), p(1), y("ngIf", null == i.errors ? null : i.errors.required), p(1), y("ngIf", null == i.errors ? null : i.errors.minlength))
                    },
                    dependencies: [at],
                    changeDetection: 0
                }), t
            })();

            function lee(t, n) {
                if (1 & t && (f(0, "mat-error"), E(1, "app-validation-errors", 20), g()), 2 & t) {
                    const e = x(2);
                    p(1), y("errors", e.f.password.errors)
                }
            }

            function cee(t, n) {
                if (1 & t && (f(0, "mat-error"), E(1, "app-validation-errors", 20), g()), 2 & t) {
                    const e = x(2);
                    p(1), y("errors", e.f.confirmPassword.errors)
                }
            }

            function dee(t, n) {
                1 & t && E(0, "span", 21)
            }

            function uee(t, n) {
                if (1 & t && (f(0, "div", 3)(1, "div", 4)(2, "mat-card", 5)(3, "div", 6)(4, "div", 7), ue(5, "async"), f(6, "div", 8)(7, "h3"), w(8), g()(), f(9, "div")(10, "mat-form-field"), E(11, "input", 9), g()(), f(12, "div")(13, "mat-form-field"), E(14, "input", 10), g()(), f(15, "div")(16, "mat-checkbox", 11), w(17, " Is staff "), g()(), f(18, "div")(19, "mat-checkbox", 12), w(20, " Gedeactiveerd "), g()(), f(21, "div")(22, "mat-form-field"), E(23, "input", 13), g()(), E(24, "div"), f(25, "div")(26, "mat-form-field", 14), E(27, "input", 15), b(28, lee, 2, 1, "mat-error", 16), g()(), f(29, "div")(30, "mat-form-field", 14), E(31, "input", 17), b(32, cee, 2, 1, "mat-error", 16), g()(), f(33, "div")(34, "button", 18), ue(35, "async"), b(36, dee, 1, 0, "span", 19), ue(37, "async"), w(38, " Save "), g()()()()()()()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    let r, s;
                    y("fxLayoutGap", i.gridGap), p(1), y("fxLayoutGap", i.gridGap), p(3), y("gdColumns", De(5, 12, i.columns$)), p(4), cs("Naam: ", e.firstname, " ", e.lastname, ""), p(8), y("checked", null !== (r = e.staff) && void 0 !== r && r), p(3), y("checked", null !== (s = e.deactivated) && void 0 !== s && s), p(4), Ge("value", e.rang), p(5), y("ngIf", i.f.password.errors), p(4), y("ngIf", i.f.confirmPassword.errors), p(2), y("disabled", De(35, 14, i.submitting$)), p(2), y("ngIf", De(37, 16, i.submitting$))
                }
            }

            function hee(t, n) {
                1 & t && E(0, "mat-progress-bar", 23)
            }

            function fee(t, n) {
                if (1 & t && (oe(0), b(1, hee, 1, 0, "mat-progress-bar", 22), ae()), 2 & t) {
                    const e = n.ngIf;
                    p(1), y("ngIf", e)
                }
            }

            function pee(t, n) {
                1 & t && (b(0, fee, 2, 1, "ng-container", 16), ue(1, "async")), 2 & t && y("ngIf", De(1, 1, x().loading$))
            }
            let mee = (() => {
                class t {
                    constructor(e, i, r, s, o) {
                        this.formBuilder = e, this.route = i, this.data = r, this.toastr = s, this.media = o, this.gridGap = "2%", this.subs = new co, this.userId$ = new Jn(1), this.loading$ = new Te(!1), this.submitting$ = new Te(!1), this.submitted = !1, this.user$ = new Jn(1), this.columns$ = new Te("50% 50%"), this.subs.sink = o.asObservable().subscribe({
                            next: a => {
                                console.log(`media.isActive: ${o.isActive("lt-md")}`), o.isActive("lt-sm") ? this.columns$.next("100%") : this.columns$.next("50% 50%")
                            }
                        }), this.form = this.formBuilder.group({
                            id: [null],
                            username: ["", jt.required],
                            job: [""],
                            staff: [""],
                            deactivated: [""],
                            password: ["", [jt.minLength(6)]],
                            confirmPassword: [""]
                        }, {
                            validators: [Hv("password", "confirmPassword")]
                        }), this.user$.subscribe(a => {
                            console.log(a), a ? this.form.patchValue(a) : this.form.reset()
                        }), this.subs.sink = this.userId$.subscribe(a => {
                            this.subs.sink = this.data.getUser(a).subscribe({
                                next: l => {
                                    this.user$.next(l)
                                },
                                complete: () => {
                                    this.loading$.next(!1)
                                },
                                error: l => {
                                    if (this.loading$.next(!1), console.error(l), 404 === l ? .status) this.toastr.error("Gebruiker niet gevonden!");
                                    else {
                                        const c = l;
                                        this.toastr.error(`Er ging iets mis bij het ophalen van de gebruiker! (${c?.statusText??c?.status??l.message}`)
                                    }
                                    this.loading$.next(!1), this.user$.next(null)
                                }
                            })
                        })
                    }
                    get f() {
                        return this.form.controls
                    }
                    getErrorMessage(e) {
                        if (e.errors) return e.errors
                    }
                    onSubmit() {
                        var e = this;
                        return Cr(function*() {
                            e.submitted = !0
                        })()
                    }
                    ngOnDestroy() {
                        console.log("Component destroyed"), this.subs.unsubscribe()
                    }
                    ngOnInit() {
                        this.subs.sink = this.route.paramMap.subscribe(e => {
                            this.userId$.next(Number.parseInt(e.get("id") ? ? "0"))
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(hp), u(Yi), u(tF), u(Ur), u(Av))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-user"]
                    ],
                    decls: 5,
                    vars: 5,
                    consts: [
                        [3, "formGroup", "ngSubmit"],
                        ["fxFlex", "", "fxLayout", "column", "class", "main-user-content", 3, "fxLayoutGap", 4, "ngIf", "ngIfElse"],
                        ["elseBlock", ""],
                        ["fxFlex", "", "fxLayout", "column", 1, "main-user-content", 3, "fxLayoutGap"],
                        ["fxFlex", "1 1", "fxLayout", "row", "fxLayout.lt-lg", "column", 3, "fxLayoutGap"],
                        ["fxFlex", "1 1 50%", "fxFlex.lt-lg", "1 1 100%", 1, "user-card"],
                        [1, "containerX"],
                        [2, "margin-bottom", "2%", 3, "gdColumns"],
                        ["gdColumn", "1 / -1"],
                        ["matInput", "", "placeholder", "Username", "formControlName", "username"],
                        ["matInput", "", "placeholder", "Beroep", "formControlName", "job"],
                        ["formControlName", "staff", 3, "checked"],
                        ["formControlName", "deactivated", 3, "checked"],
                        ["matInput", "", "placeholder", "Rang", "disabled", "", 3, "value"],
                        ["appearance", "fill"],
                        ["matInput", "", "type", "password", "formControlName", "password", "placeholder", "Wachtwoord"],
                        [4, "ngIf"],
                        ["matInput", "", "type", "password", "formControlName", "confirmPassword", "placeholder", "Herhaal wachtwoord"],
                        [1, "btn", "btn-primary", 3, "disabled"],
                        ["class", "spinner-border spinner-border-sm mr-1", 4, "ngIf"],
                        ["label", "Wachtwoord", 3, "errors"],
                        [1, "spinner-border", "spinner-border-sm", "mr-1"],
                        ["mode", "indeterminate", 4, "ngIf"],
                        ["mode", "indeterminate"]
                    ],
                    template: function(e, i) {
                        if (1 & e && (f(0, "form", 0), T("ngSubmit", function() {
                                return i.onSubmit()
                            }), b(1, uee, 39, 18, "div", 1), ue(2, "async"), g(), b(3, pee, 2, 3, "ng-template", null, 2, Ui)), 2 & e) {
                            const r = bt(4);
                            y("formGroup", i.form), p(1), y("ngIf", De(2, 3, i.user$))("ngIfElse", r)
                        }
                    },
                    dependencies: [at, Kl, Wr, ep, ci, Nn, lu, lo, di, Xn, ao, ui, jl, ha, VI, fa, eR, Tp, aee, Kn],
                    styles: [".main-user-content[_ngcontent-%COMP%]{max-width:100%}.user-card[_ngcontent-%COMP%]{min-width:48%;height:auto;height:initial}mat-card[_ngcontent-%COMP%]{height:96%;width:96%}.card-content-header[_ngcontent-%COMP%]{padding-top:1em}mat-checkbox[_ngcontent-%COMP%]{padding-bottom:1.25em;color:#000!important}.mat-checkbox-label[_ngcontent-%COMP%]   .mat-checkbox-disabled[_ngcontent-%COMP%]{color:#000!important}input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], mat-checkbox[_ngcontent-%COMP%]{color:#000!important}"],
                    changeDetection: 0
                }), t
            })();
            class gee {
                constructor(n) {
                    this.usersService = n, this.usersSubject = new Te([]), this.loadingSubject = new Te(!1), this.loading$ = this.loadingSubject.asObservable(), this.length = 10
                }
                connect(n) {
                    return this.usersSubject.asObservable()
                }
                disconnect(n) {
                    this.usersSubject.complete(), this.loadingSubject.complete()
                }
                loadUsers(n = 0, e = 20, i = "name", r = "asc", s = "") {
                    this.loadingSubject.next(!0), this.usersService.findUsers(n, e, i, r, s).subscribe({
                        next: o => {
                            console.log(o), null != o && (this.length = o.length, this.usersSubject.next(o.payload)), this.loadingSubject.next(!1)
                        },
                        error: o => {
                            this.loadingSubject.next(!1)
                        }
                    })
                }
            }
            const dw = {
                owner: "Sys Admin",
                superadmin: "Super Admin",
                admin: "Admin",
                moderator: "Moderator",
                korpschef: "korpschef",
                recruit: "Aspirant",
                officer: "Surveillant",
                sergeant: "Agent",
                intendent: "Hoofdagent",
                militar: "DSI",
                lieutenant: "Brigadier",
                inspecteur: "Inspecteur",
                hoofdinspecteur: "Hoofd inspecteur",
                commisaris: "Commissaris",
                chef: "Hoofd commissaris",
                boss: "Eerste Hoofd commissaris",
                cyber: "Cyber",
                officiervanjustitie: "Officier van Justitie",
                user: "Gebruiker",
                none: "Geen"
            };
            let ac = {
                async: !1,
                baseUrl: null,
                breaks: !1,
                extensions: null,
                gfm: !0,
                headerIds: !0,
                headerPrefix: "",
                highlight: null,
                langPrefix: "language-",
                mangle: !0,
                pedantic: !1,
                renderer: null,
                sanitize: !1,
                sanitizer: null,
                silent: !1,
                smartypants: !1,
                tokenizer: null,
                walkTokens: null,
                xhtml: !1
            };
            const iF = /[&<>"']/,
                bee = new RegExp(iF.source, "g"),
                rF = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,
                vee = new RegExp(rF.source, "g"),
                wee = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;"
                },
                sF = t => wee[t];

            function An(t, n) {
                if (n) {
                    if (iF.test(t)) return t.replace(bee, sF)
                } else if (rF.test(t)) return t.replace(vee, sF);
                return t
            }
            const Cee = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;

            function oF(t) {
                return t.replace(Cee, (n, e) => "colon" === (e = e.toLowerCase()) ? ":" : "#" === e.charAt(0) ? "x" === e.charAt(1) ? String.fromCharCode(parseInt(e.substring(2), 16)) : String.fromCharCode(+e.substring(1)) : "")
            }
            const xee = /(^|[^\[])\^/g;

            function St(t, n) {
                t = "string" == typeof t ? t : t.source, n = n || "";
                const e = {
                    replace: (i, r) => (r = (r = r.source || r).replace(xee, "$1"), t = t.replace(i, r), e),
                    getRegex: () => new RegExp(t, n)
                };
                return e
            }
            const Dee = /[^\w:]/g,
                Mee = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;

            function aF(t, n, e) {
                if (t) {
                    let i;
                    try {
                        i = decodeURIComponent(oF(e)).replace(Dee, "").toLowerCase()
                    } catch {
                        return null
                    }
                    if (0 === i.indexOf("javascript:") || 0 === i.indexOf("vbscript:") || 0 === i.indexOf("data:")) return null
                }
                n && !Mee.test(e) && (e = function Eee(t, n) {
                    Xp[" " + t] || (Xp[" " + t] = See.test(t) ? t + "/" : em(t, "/", !0));
                    const e = -1 === (t = Xp[" " + t]).indexOf(":");
                    return "//" === n.substring(0, 2) ? e ? n : t.replace(kee, "$1") + n : "/" === n.charAt(0) ? e ? n : t.replace(Aee, "$1") + n : t + n
                }(n, e));
                try {
                    e = encodeURI(e).replace(/%25/g, "%")
                } catch {
                    return null
                }
                return e
            }
            const Xp = {},
                See = /^[^:]+:\/*[^/]*$/,
                kee = /^([^:]+:)[\s\S]*$/,
                Aee = /^([^:]+:\/*[^/]*)[\s\S]*$/,
                Jp = {
                    exec: function() {}
                };

            function Mr(t) {
                let e, i, n = 1;
                for (; n < arguments.length; n++)
                    for (i in e = arguments[n], e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                return t
            }

            function lF(t, n) {
                const i = t.replace(/\|/g, (s, o, a) => {
                    let l = !1,
                        c = o;
                    for (; --c >= 0 && "\\" === a[c];) l = !l;
                    return l ? "|" : " |"
                }).split(/ \|/);
                let r = 0;
                if (i[0].trim() || i.shift(), i.length > 0 && !i[i.length - 1].trim() && i.pop(), i.length > n) i.splice(n);
                else
                    for (; i.length < n;) i.push("");
                for (; r < i.length; r++) i[r] = i[r].trim().replace(/\\\|/g, "|");
                return i
            }

            function em(t, n, e) {
                const i = t.length;
                if (0 === i) return "";
                let r = 0;
                for (; r < i;) {
                    const s = t.charAt(i - r - 1);
                    if (s !== n || e) {
                        if (s === n || !e) break;
                        r++
                    } else r++
                }
                return t.slice(0, i - r)
            }

            function cF(t) {
                t && t.sanitize && !t.silent && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")
            }

            function dF(t, n) {
                if (n < 1) return "";
                let e = "";
                for (; n > 1;) 1 & n && (e += t), n >>= 1, t += t;
                return e + t
            }

            function uF(t, n, e, i) {
                const r = n.href,
                    s = n.title ? An(n.title) : null,
                    o = t[1].replace(/\\([\[\]])/g, "$1");
                if ("!" !== t[0].charAt(0)) {
                    i.state.inLink = !0;
                    const a = {
                        type: "link",
                        raw: e,
                        href: r,
                        title: s,
                        text: o,
                        tokens: i.inlineTokens(o)
                    };
                    return i.state.inLink = !1, a
                }
                return {
                    type: "image",
                    raw: e,
                    href: r,
                    title: s,
                    text: An(o)
                }
            }
            class uw {
                constructor(n) {
                    this.options = n || ac
                }
                space(n) {
                    const e = this.rules.block.newline.exec(n);
                    if (e && e[0].length > 0) return {
                        type: "space",
                        raw: e[0]
                    }
                }
                code(n) {
                    const e = this.rules.block.code.exec(n);
                    if (e) {
                        const i = e[0].replace(/^ {1,4}/gm, "");
                        return {
                            type: "code",
                            raw: e[0],
                            codeBlockStyle: "indented",
                            text: this.options.pedantic ? i : em(i, "\n")
                        }
                    }
                }
                fences(n) {
                    const e = this.rules.block.fences.exec(n);
                    if (e) {
                        const i = e[0],
                            r = function Iee(t, n) {
                                const e = t.match(/^(\s+)(?:```)/);
                                if (null === e) return n;
                                const i = e[1];
                                return n.split("\n").map(r => {
                                    const s = r.match(/^\s+/);
                                    if (null === s) return r;
                                    const [o] = s;
                                    return o.length >= i.length ? r.slice(i.length) : r
                                }).join("\n")
                            }(i, e[3] || "");
                        return {
                            type: "code",
                            raw: i,
                            lang: e[2] ? e[2].trim().replace(this.rules.inline._escapes, "$1") : e[2],
                            text: r
                        }
                    }
                }
                heading(n) {
                    const e = this.rules.block.heading.exec(n);
                    if (e) {
                        let i = e[2].trim();
                        if (/#$/.test(i)) {
                            const r = em(i, "#");
                            (this.options.pedantic || !r || / $/.test(r)) && (i = r.trim())
                        }
                        return {
                            type: "heading",
                            raw: e[0],
                            depth: e[1].length,
                            text: i,
                            tokens: this.lexer.inline(i)
                        }
                    }
                }
                hr(n) {
                    const e = this.rules.block.hr.exec(n);
                    if (e) return {
                        type: "hr",
                        raw: e[0]
                    }
                }
                blockquote(n) {
                    const e = this.rules.block.blockquote.exec(n);
                    if (e) {
                        const i = e[0].replace(/^ *>[ \t]?/gm, ""),
                            r = this.lexer.state.top;
                        this.lexer.state.top = !0;
                        const s = this.lexer.blockTokens(i);
                        return this.lexer.state.top = r, {
                            type: "blockquote",
                            raw: e[0],
                            tokens: s,
                            text: i
                        }
                    }
                }
                list(n) {
                    let e = this.rules.block.list.exec(n);
                    if (e) {
                        let i, r, s, o, a, l, c, d, h, m, _, v, D = e[1].trim();
                        const k = D.length > 1,
                            S = {
                                type: "list",
                                raw: "",
                                ordered: k,
                                start: k ? +D.slice(0, -1) : "",
                                loose: !1,
                                items: []
                            };
                        D = k ? `\\d{1,9}\\${D.slice(-1)}` : `\\${D}`, this.options.pedantic && (D = k ? D : "[*+-]");
                        const L = new RegExp(`^( {0,3}${D})((?:[\t ][^\\n]*)?(?:\\n|$))`);
                        for (; n && (v = !1, (e = L.exec(n)) && !this.rules.block.hr.test(n));) {
                            if (i = e[0], n = n.substring(i.length), d = e[2].split("\n", 1)[0].replace(/^\t+/, K => " ".repeat(3 * K.length)), h = n.split("\n", 1)[0], this.options.pedantic ? (o = 2, _ = d.trimLeft()) : (o = e[2].search(/[^ ]/), o = o > 4 ? 1 : o, _ = d.slice(o), o += e[1].length), l = !1, !d && /^ *$/.test(h) && (i += h + "\n", n = n.substring(h.length + 1), v = !0), !v) {
                                const K = new RegExp(`^ {0,${Math.min(3,o-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))`),
                                    Ce = new RegExp(`^ {0,${Math.min(3,o-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),
                                    Pe = new RegExp(`^ {0,${Math.min(3,o-1)}}(?:\`\`\`|~~~)`),
                                    wt = new RegExp(`^ {0,${Math.min(3,o-1)}}#`);
                                for (; n && (m = n.split("\n", 1)[0], h = m, this.options.pedantic && (h = h.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ")), !(Pe.test(h) || wt.test(h) || K.test(h) || Ce.test(n)));) {
                                    if (h.search(/[^ ]/) >= o || !h.trim()) _ += "\n" + h.slice(o);
                                    else {
                                        if (l || d.search(/[^ ]/) >= 4 || Pe.test(d) || wt.test(d) || Ce.test(d)) break;
                                        _ += "\n" + h
                                    }!l && !h.trim() && (l = !0), i += m + "\n", n = n.substring(m.length + 1), d = h.slice(o)
                                }
                            }
                            S.loose || (c ? S.loose = !0 : /\n *\n *$/.test(i) && (c = !0)), this.options.gfm && (r = /^\[[ xX]\] /.exec(_), r && (s = "[ ] " !== r[0], _ = _.replace(/^\[[ xX]\] +/, ""))), S.items.push({
                                type: "list_item",
                                raw: i,
                                task: !!r,
                                checked: s,
                                loose: !1,
                                text: _
                            }), S.raw += i
                        }
                        S.items[S.items.length - 1].raw = i.trimRight(), S.items[S.items.length - 1].text = _.trimRight(), S.raw = S.raw.trimRight();
                        const F = S.items.length;
                        for (a = 0; a < F; a++)
                            if (this.lexer.state.top = !1, S.items[a].tokens = this.lexer.blockTokens(S.items[a].text, []), !S.loose) {
                                const K = S.items[a].tokens.filter(Pe => "space" === Pe.type),
                                    Ce = K.length > 0 && K.some(Pe => /\n.*\n/.test(Pe.raw));
                                S.loose = Ce
                            }
                        if (S.loose)
                            for (a = 0; a < F; a++) S.items[a].loose = !0;
                        return S
                    }
                }
                html(n) {
                    const e = this.rules.block.html.exec(n);
                    if (e) {
                        const i = {
                            type: "html",
                            raw: e[0],
                            pre: !this.options.sanitizer && ("pre" === e[1] || "script" === e[1] || "style" === e[1]),
                            text: e[0]
                        };
                        if (this.options.sanitize) {
                            const r = this.options.sanitizer ? this.options.sanitizer(e[0]) : An(e[0]);
                            i.type = "paragraph", i.text = r, i.tokens = this.lexer.inline(r)
                        }
                        return i
                    }
                }
                def(n) {
                    const e = this.rules.block.def.exec(n);
                    if (e) {
                        const i = e[1].toLowerCase().replace(/\s+/g, " "),
                            r = e[2] ? e[2].replace(/^<(.*)>$/, "$1").replace(this.rules.inline._escapes, "$1") : "",
                            s = e[3] ? e[3].substring(1, e[3].length - 1).replace(this.rules.inline._escapes, "$1") : e[3];
                        return {
                            type: "def",
                            tag: i,
                            raw: e[0],
                            href: r,
                            title: s
                        }
                    }
                }
                table(n) {
                    const e = this.rules.block.table.exec(n);
                    if (e) {
                        const i = {
                            type: "table",
                            header: lF(e[1]).map(r => ({
                                text: r
                            })),
                            align: e[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                            rows: e[3] && e[3].trim() ? e[3].replace(/\n[ \t]*$/, "").split("\n") : []
                        };
                        if (i.header.length === i.align.length) {
                            i.raw = e[0];
                            let s, o, a, l, r = i.align.length;
                            for (s = 0; s < r; s++) i.align[s] = /^ *-+: *$/.test(i.align[s]) ? "right" : /^ *:-+: *$/.test(i.align[s]) ? "center" : /^ *:-+ *$/.test(i.align[s]) ? "left" : null;
                            for (r = i.rows.length, s = 0; s < r; s++) i.rows[s] = lF(i.rows[s], i.header.length).map(c => ({
                                text: c
                            }));
                            for (r = i.header.length, o = 0; o < r; o++) i.header[o].tokens = this.lexer.inline(i.header[o].text);
                            for (r = i.rows.length, o = 0; o < r; o++)
                                for (l = i.rows[o], a = 0; a < l.length; a++) l[a].tokens = this.lexer.inline(l[a].text);
                            return i
                        }
                    }
                }
                lheading(n) {
                    const e = this.rules.block.lheading.exec(n);
                    if (e) return {
                        type: "heading",
                        raw: e[0],
                        depth: "=" === e[2].charAt(0) ? 1 : 2,
                        text: e[1],
                        tokens: this.lexer.inline(e[1])
                    }
                }
                paragraph(n) {
                    const e = this.rules.block.paragraph.exec(n);
                    if (e) {
                        const i = "\n" === e[1].charAt(e[1].length - 1) ? e[1].slice(0, -1) : e[1];
                        return {
                            type: "paragraph",
                            raw: e[0],
                            text: i,
                            tokens: this.lexer.inline(i)
                        }
                    }
                }
                text(n) {
                    const e = this.rules.block.text.exec(n);
                    if (e) return {
                        type: "text",
                        raw: e[0],
                        text: e[0],
                        tokens: this.lexer.inline(e[0])
                    }
                }
                escape(n) {
                    const e = this.rules.inline.escape.exec(n);
                    if (e) return {
                        type: "escape",
                        raw: e[0],
                        text: An(e[1])
                    }
                }
                tag(n) {
                    const e = this.rules.inline.tag.exec(n);
                    if (e) return !this.lexer.state.inLink && /^<a /i.test(e[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && /^<\/a>/i.test(e[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(e[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(e[0]) && (this.lexer.state.inRawBlock = !1), {
                        type: this.options.sanitize ? "text" : "html",
                        raw: e[0],
                        inLink: this.lexer.state.inLink,
                        inRawBlock: this.lexer.state.inRawBlock,
                        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(e[0]) : An(e[0]) : e[0]
                    }
                }
                link(n) {
                    const e = this.rules.inline.link.exec(n);
                    if (e) {
                        const i = e[2].trim();
                        if (!this.options.pedantic && /^</.test(i)) {
                            if (!/>$/.test(i)) return;
                            const o = em(i.slice(0, -1), "\\");
                            if ((i.length - o.length) % 2 == 0) return
                        } else {
                            const o = function Tee(t, n) {
                                if (-1 === t.indexOf(n[1])) return -1;
                                const e = t.length;
                                let i = 0,
                                    r = 0;
                                for (; r < e; r++)
                                    if ("\\" === t[r]) r++;
                                    else if (t[r] === n[0]) i++;
                                else if (t[r] === n[1] && (i--, i < 0)) return r;
                                return -1
                            }(e[2], "()");
                            if (o > -1) {
                                const l = (0 === e[0].indexOf("!") ? 5 : 4) + e[1].length + o;
                                e[2] = e[2].substring(0, o), e[0] = e[0].substring(0, l).trim(), e[3] = ""
                            }
                        }
                        let r = e[2],
                            s = "";
                        if (this.options.pedantic) {
                            const o = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(r);
                            o && (r = o[1], s = o[3])
                        } else s = e[3] ? e[3].slice(1, -1) : "";
                        return r = r.trim(), /^</.test(r) && (r = this.options.pedantic && !/>$/.test(i) ? r.slice(1) : r.slice(1, -1)), uF(e, {
                            href: r && r.replace(this.rules.inline._escapes, "$1"),
                            title: s && s.replace(this.rules.inline._escapes, "$1")
                        }, e[0], this.lexer)
                    }
                }
                reflink(n, e) {
                    let i;
                    if ((i = this.rules.inline.reflink.exec(n)) || (i = this.rules.inline.nolink.exec(n))) {
                        let r = (i[2] || i[1]).replace(/\s+/g, " ");
                        if (r = e[r.toLowerCase()], !r) {
                            const s = i[0].charAt(0);
                            return {
                                type: "text",
                                raw: s,
                                text: s
                            }
                        }
                        return uF(i, r, i[0], this.lexer)
                    }
                }
                emStrong(n, e, i = "") {
                    let r = this.rules.inline.emStrong.lDelim.exec(n);
                    if (!r || r[3] && i.match(/[\p{L}\p{N}]/u)) return;
                    const s = r[1] || r[2] || "";
                    if (!s || s && ("" === i || this.rules.inline.punctuation.exec(i))) {
                        const o = r[0].length - 1;
                        let a, l, c = o,
                            d = 0;
                        const h = "*" === r[0][0] ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
                        for (h.lastIndex = 0, e = e.slice(-1 * n.length + o); null != (r = h.exec(e));) {
                            if (a = r[1] || r[2] || r[3] || r[4] || r[5] || r[6], !a) continue;
                            if (l = a.length, r[3] || r[4]) {
                                c += l;
                                continue
                            }
                            if ((r[5] || r[6]) && o % 3 && !((o + l) % 3)) {
                                d += l;
                                continue
                            }
                            if (c -= l, c > 0) continue;
                            l = Math.min(l, l + c + d);
                            const m = n.slice(0, o + r.index + (r[0].length - a.length) + l);
                            if (Math.min(o, l) % 2) {
                                const v = m.slice(1, -1);
                                return {
                                    type: "em",
                                    raw: m,
                                    text: v,
                                    tokens: this.lexer.inlineTokens(v)
                                }
                            }
                            const _ = m.slice(2, -2);
                            return {
                                type: "strong",
                                raw: m,
                                text: _,
                                tokens: this.lexer.inlineTokens(_)
                            }
                        }
                    }
                }
                codespan(n) {
                    const e = this.rules.inline.code.exec(n);
                    if (e) {
                        let i = e[2].replace(/\n/g, " ");
                        const r = /[^ ]/.test(i),
                            s = /^ /.test(i) && / $/.test(i);
                        return r && s && (i = i.substring(1, i.length - 1)), i = An(i, !0), {
                            type: "codespan",
                            raw: e[0],
                            text: i
                        }
                    }
                }
                br(n) {
                    const e = this.rules.inline.br.exec(n);
                    if (e) return {
                        type: "br",
                        raw: e[0]
                    }
                }
                del(n) {
                    const e = this.rules.inline.del.exec(n);
                    if (e) return {
                        type: "del",
                        raw: e[0],
                        text: e[2],
                        tokens: this.lexer.inlineTokens(e[2])
                    }
                }
                autolink(n, e) {
                    const i = this.rules.inline.autolink.exec(n);
                    if (i) {
                        let r, s;
                        return "@" === i[2] ? (r = An(this.options.mangle ? e(i[1]) : i[1]), s = "mailto:" + r) : (r = An(i[1]), s = r), {
                            type: "link",
                            raw: i[0],
                            text: r,
                            href: s,
                            tokens: [{
                                type: "text",
                                raw: r,
                                text: r
                            }]
                        }
                    }
                }
                url(n, e) {
                    let i;
                    if (i = this.rules.inline.url.exec(n)) {
                        let r, s;
                        if ("@" === i[2]) r = An(this.options.mangle ? e(i[0]) : i[0]), s = "mailto:" + r;
                        else {
                            let o;
                            do {
                                o = i[0], i[0] = this.rules.inline._backpedal.exec(i[0])[0]
                            } while (o !== i[0]);
                            r = An(i[0]), s = "www." === i[1] ? "http://" + i[0] : i[0]
                        }
                        return {
                            type: "link",
                            raw: i[0],
                            text: r,
                            href: s,
                            tokens: [{
                                type: "text",
                                raw: r,
                                text: r
                            }]
                        }
                    }
                }
                inlineText(n, e) {
                    const i = this.rules.inline.text.exec(n);
                    if (i) {
                        let r;
                        return r = this.lexer.state.inRawBlock ? this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(i[0]) : An(i[0]) : i[0] : An(this.options.smartypants ? e(i[0]) : i[0]), {
                            type: "text",
                            raw: i[0],
                            text: r
                        }
                    }
                }
            }
            const we = {
                newline: /^(?: *(?:\n|$))+/,
                code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
                fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
                hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
                heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
                blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
                list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
                html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
                def: /^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
                table: Jp,
                lheading: /^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
                _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
                text: /^[^\n]+/,
                _label: /(?!\s*\])(?:\\.|[^\[\]\\])+/,
                _title: /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/
            };
            we.def = St(we.def).replace("label", we._label).replace("title", we._title).getRegex(), we.bullet = /(?:[*+-]|\d{1,9}[.)])/, we.listItemStart = St(/^( *)(bull) */).replace("bull", we.bullet).getRegex(), we.list = St(we.list).replace(/bull/g, we.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + we.def.source + ")").getRegex(), we._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul", we._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/, we.html = St(we.html, "i").replace("comment", we._comment).replace("tag", we._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(), we.paragraph = St(we._paragraph).replace("hr", we.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", we._tag).getRegex(), we.blockquote = St(we.blockquote).replace("paragraph", we.paragraph).getRegex(), we.normal = Mr({}, we), we.gfm = Mr({}, we.normal, {
                table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
            }), we.gfm.table = St(we.gfm.table).replace("hr", we.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", we._tag).getRegex(), we.gfm.paragraph = St(we._paragraph).replace("hr", we.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", we.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", we._tag).getRegex(), we.pedantic = Mr({}, we.normal, {
                html: St("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment", we._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
                def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
                heading: /^(#{1,6})(.*)(?:\n+|$)/,
                fences: Jp,
                lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
                paragraph: St(we.normal._paragraph).replace("hr", we.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", we.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
            });
            const he = {
                escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
                autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
                url: Jp,
                tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
                link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
                reflink: /^!?\[(label)\]\[(ref)\]/,
                nolink: /^!?\[(ref)\](?:\[\])?/,
                reflinkSearch: "reflink|nolink(?!\\()",
                emStrong: {
                    lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
                    rDelimAst: /^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,
                    rDelimUnd: /^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
                },
                code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
                br: /^( {2,}|\\)\n(?!\s*$)/,
                del: Jp,
                text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
                punctuation: /^([\spunctuation])/
            };

            function Ree(t) {
                return t.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201c").replace(/"/g, "\u201d").replace(/\.{3}/g, "\u2026")
            }

            function hF(t) {
                let e, i, n = "";
                const r = t.length;
                for (e = 0; e < r; e++) i = t.charCodeAt(e), Math.random() > .5 && (i = "x" + i.toString(16)), n += "&#" + i + ";";
                return n
            }
            he._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~", he.punctuation = St(he.punctuation).replace(/punctuation/g, he._punctuation).getRegex(), he.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g, he.escapedEmSt = /(?:^|[^\\])(?:\\\\)*\\[*_]/g, he._comment = St(we._comment).replace("(?:--\x3e|$)", "--\x3e").getRegex(), he.emStrong.lDelim = St(he.emStrong.lDelim).replace(/punct/g, he._punctuation).getRegex(), he.emStrong.rDelimAst = St(he.emStrong.rDelimAst, "g").replace(/punct/g, he._punctuation).getRegex(), he.emStrong.rDelimUnd = St(he.emStrong.rDelimUnd, "g").replace(/punct/g, he._punctuation).getRegex(), he._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g, he._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/, he._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/, he.autolink = St(he.autolink).replace("scheme", he._scheme).replace("email", he._email).getRegex(), he._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/, he.tag = St(he.tag).replace("comment", he._comment).replace("attribute", he._attribute).getRegex(), he._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/, he._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/, he._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/, he.link = St(he.link).replace("label", he._label).replace("href", he._href).replace("title", he._title).getRegex(), he.reflink = St(he.reflink).replace("label", he._label).replace("ref", we._label).getRegex(), he.nolink = St(he.nolink).replace("ref", we._label).getRegex(), he.reflinkSearch = St(he.reflinkSearch, "g").replace("reflink", he.reflink).replace("nolink", he.nolink).getRegex(), he.normal = Mr({}, he), he.pedantic = Mr({}, he.normal, {
                strong: {
                    start: /^__|\*\*/,
                    middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
                    endAst: /\*\*(?!\*)/g,
                    endUnd: /__(?!_)/g
                },
                em: {
                    start: /^_|\*/,
                    middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
                    endAst: /\*(?!\*)/g,
                    endUnd: /_(?!_)/g
                },
                link: St(/^!?\[(label)\]\((.*?)\)/).replace("label", he._label).getRegex(),
                reflink: St(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", he._label).getRegex()
            }), he.gfm = Mr({}, he.normal, {
                escape: St(he.escape).replace("])", "~|])").getRegex(),
                _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
                url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
                _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
                del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
                text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
            }), he.gfm.url = St(he.gfm.url, "i").replace("email", he.gfm._extended_email).getRegex(), he.breaks = Mr({}, he.gfm, {
                br: St(he.br).replace("{2,}", "*").getRegex(),
                text: St(he.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
            });
            class Ts {
                constructor(n) {
                    this.tokens = [], this.tokens.links = Object.create(null), this.options = n || ac, this.options.tokenizer = this.options.tokenizer || new uw, this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = {
                        inLink: !1,
                        inRawBlock: !1,
                        top: !0
                    };
                    const e = {
                        block: we.normal,
                        inline: he.normal
                    };
                    this.options.pedantic ? (e.block = we.pedantic, e.inline = he.pedantic) : this.options.gfm && (e.block = we.gfm, e.inline = this.options.breaks ? he.breaks : he.gfm), this.tokenizer.rules = e
                }
                static get rules() {
                    return {
                        block: we,
                        inline: he
                    }
                }
                static lex(n, e) {
                    return new Ts(e).lex(n)
                }
                static lexInline(n, e) {
                    return new Ts(e).inlineTokens(n)
                }
                lex(n) {
                    let e;
                    for (n = n.replace(/\r\n|\r/g, "\n"), this.blockTokens(n, this.tokens); e = this.inlineQueue.shift();) this.inlineTokens(e.src, e.tokens);
                    return this.tokens
                }
                blockTokens(n, e = []) {
                    let i, r, s, o;
                    for (n = this.options.pedantic ? n.replace(/\t/g, "    ").replace(/^ +$/gm, "") : n.replace(/^( *)(\t+)/gm, (a, l, c) => l + "    ".repeat(c.length)); n;)
                        if (!(this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(a => !!(i = a.call({
                                lexer: this
                            }, n, e)) && (n = n.substring(i.raw.length), e.push(i), !0)))) {
                            if (i = this.tokenizer.space(n)) {
                                n = n.substring(i.raw.length), 1 === i.raw.length && e.length > 0 ? e[e.length - 1].raw += "\n" : e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.code(n)) {
                                n = n.substring(i.raw.length), r = e[e.length - 1], !r || "paragraph" !== r.type && "text" !== r.type ? e.push(i) : (r.raw += "\n" + i.raw, r.text += "\n" + i.text, this.inlineQueue[this.inlineQueue.length - 1].src = r.text);
                                continue
                            }
                            if (i = this.tokenizer.fences(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.heading(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.hr(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.blockquote(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.list(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.html(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.def(n)) {
                                n = n.substring(i.raw.length), r = e[e.length - 1], !r || "paragraph" !== r.type && "text" !== r.type ? this.tokens.links[i.tag] || (this.tokens.links[i.tag] = {
                                    href: i.href,
                                    title: i.title
                                }) : (r.raw += "\n" + i.raw, r.text += "\n" + i.raw, this.inlineQueue[this.inlineQueue.length - 1].src = r.text);
                                continue
                            }
                            if (i = this.tokenizer.table(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.lheading(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (s = n, this.options.extensions && this.options.extensions.startBlock) {
                                let a = 1 / 0;
                                const l = n.slice(1);
                                let c;
                                this.options.extensions.startBlock.forEach(function(d) {
                                    c = d.call({
                                        lexer: this
                                    }, l), "number" == typeof c && c >= 0 && (a = Math.min(a, c))
                                }), a < 1 / 0 && a >= 0 && (s = n.substring(0, a + 1))
                            }
                            if (this.state.top && (i = this.tokenizer.paragraph(s))) {
                                r = e[e.length - 1], o && "paragraph" === r.type ? (r.raw += "\n" + i.raw, r.text += "\n" + i.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = r.text) : e.push(i), o = s.length !== n.length, n = n.substring(i.raw.length);
                                continue
                            }
                            if (i = this.tokenizer.text(n)) {
                                n = n.substring(i.raw.length), r = e[e.length - 1], r && "text" === r.type ? (r.raw += "\n" + i.raw, r.text += "\n" + i.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = r.text) : e.push(i);
                                continue
                            }
                            if (n) {
                                const a = "Infinite loop on byte: " + n.charCodeAt(0);
                                if (this.options.silent) {
                                    console.error(a);
                                    break
                                }
                                throw new Error(a)
                            }
                        }
                    return this.state.top = !0, e
                }
                inline(n, e = []) {
                    return this.inlineQueue.push({
                        src: n,
                        tokens: e
                    }), e
                }
                inlineTokens(n, e = []) {
                    let i, r, s, a, l, c, o = n;
                    if (this.tokens.links) {
                        const d = Object.keys(this.tokens.links);
                        if (d.length > 0)
                            for (; null != (a = this.tokenizer.rules.inline.reflinkSearch.exec(o));) d.includes(a[0].slice(a[0].lastIndexOf("[") + 1, -1)) && (o = o.slice(0, a.index) + "[" + dF("a", a[0].length - 2) + "]" + o.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))
                    }
                    for (; null != (a = this.tokenizer.rules.inline.blockSkip.exec(o));) o = o.slice(0, a.index) + "[" + dF("a", a[0].length - 2) + "]" + o.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
                    for (; null != (a = this.tokenizer.rules.inline.escapedEmSt.exec(o));) o = o.slice(0, a.index + a[0].length - 2) + "++" + o.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex), this.tokenizer.rules.inline.escapedEmSt.lastIndex--;
                    for (; n;)
                        if (l || (c = ""), l = !1, !(this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(d => !!(i = d.call({
                                lexer: this
                            }, n, e)) && (n = n.substring(i.raw.length), e.push(i), !0)))) {
                            if (i = this.tokenizer.escape(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.tag(n)) {
                                n = n.substring(i.raw.length), r = e[e.length - 1], r && "text" === i.type && "text" === r.type ? (r.raw += i.raw, r.text += i.text) : e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.link(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.reflink(n, this.tokens.links)) {
                                n = n.substring(i.raw.length), r = e[e.length - 1], r && "text" === i.type && "text" === r.type ? (r.raw += i.raw, r.text += i.text) : e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.emStrong(n, o, c)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.codespan(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.br(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.del(n)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (i = this.tokenizer.autolink(n, hF)) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (!this.state.inLink && (i = this.tokenizer.url(n, hF))) {
                                n = n.substring(i.raw.length), e.push(i);
                                continue
                            }
                            if (s = n, this.options.extensions && this.options.extensions.startInline) {
                                let d = 1 / 0;
                                const h = n.slice(1);
                                let m;
                                this.options.extensions.startInline.forEach(function(_) {
                                    m = _.call({
                                        lexer: this
                                    }, h), "number" == typeof m && m >= 0 && (d = Math.min(d, m))
                                }), d < 1 / 0 && d >= 0 && (s = n.substring(0, d + 1))
                            }
                            if (i = this.tokenizer.inlineText(s, Ree)) {
                                n = n.substring(i.raw.length), "_" !== i.raw.slice(-1) && (c = i.raw.slice(-1)), l = !0, r = e[e.length - 1], r && "text" === r.type ? (r.raw += i.raw, r.text += i.text) : e.push(i);
                                continue
                            }
                            if (n) {
                                const d = "Infinite loop on byte: " + n.charCodeAt(0);
                                if (this.options.silent) {
                                    console.error(d);
                                    break
                                }
                                throw new Error(d)
                            }
                        }
                    return e
                }
            }
            class cu {
                constructor(n) {
                    this.options = n || ac
                }
                code(n, e, i) {
                    const r = (e || "").match(/\S*/)[0];
                    if (this.options.highlight) {
                        const s = this.options.highlight(n, r);
                        null != s && s !== n && (i = !0, n = s)
                    }
                    return n = n.replace(/\n$/, "") + "\n", r ? '<pre><code class="' + this.options.langPrefix + An(r) + '">' + (i ? n : An(n, !0)) + "</code></pre>\n" : "<pre><code>" + (i ? n : An(n, !0)) + "</code></pre>\n"
                }
                blockquote(n) {
                    return `<blockquote>\n${n}</blockquote>\n`
                }
                html(n) {
                    return n
                }
                heading(n, e, i, r) {
                    return this.options.headerIds ? `<h${e} id="${this.options.headerPrefix+r.slug(i)}">${n}</h${e}>\n` : `<h${e}>${n}</h${e}>\n`
                }
                hr() {
                    return this.options.xhtml ? "<hr/>\n" : "<hr>\n"
                }
                list(n, e, i) {
                    const r = e ? "ol" : "ul";
                    return "<" + r + (e && 1 !== i ? ' start="' + i + '"' : "") + ">\n" + n + "</" + r + ">\n"
                }
                listitem(n) {
                    return `<li>${n}</li>\n`
                }
                checkbox(n) {
                    return "<input " + (n ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> "
                }
                paragraph(n) {
                    return `<p>${n}</p>\n`
                }
                table(n, e) {
                    return e && (e = `<tbody>${e}</tbody>`), "<table>\n<thead>\n" + n + "</thead>\n" + e + "</table>\n"
                }
                tablerow(n) {
                    return `<tr>\n${n}</tr>\n`
                }
                tablecell(n, e) {
                    const i = e.header ? "th" : "td";
                    return (e.align ? `<${i} align="${e.align}">` : `<${i}>`) + n + `</${i}>\n`
                }
                strong(n) {
                    return `<strong>${n}</strong>`
                }
                em(n) {
                    return `<em>${n}</em>`
                }
                codespan(n) {
                    return `<code>${n}</code>`
                }
                br() {
                    return this.options.xhtml ? "<br/>" : "<br>"
                }
                del(n) {
                    return `<del>${n}</del>`
                }
                link(n, e, i) {
                    if (null === (n = aF(this.options.sanitize, this.options.baseUrl, n))) return i;
                    let r = '<a href="' + n + '"';
                    return e && (r += ' title="' + e + '"'), r += ">" + i + "</a>", r
                }
                image(n, e, i) {
                    if (null === (n = aF(this.options.sanitize, this.options.baseUrl, n))) return i;
                    let r = `<img src="${n}" alt="${i}"`;
                    return e && (r += ` title="${e}"`), r += this.options.xhtml ? "/>" : ">", r
                }
                text(n) {
                    return n
                }
            }
            class fF {
                strong(n) {
                    return n
                }
                em(n) {
                    return n
                }
                codespan(n) {
                    return n
                }
                del(n) {
                    return n
                }
                html(n) {
                    return n
                }
                text(n) {
                    return n
                }
                link(n, e, i) {
                    return "" + i
                }
                image(n, e, i) {
                    return "" + i
                }
                br() {
                    return ""
                }
            }
            class pF {
                constructor() {
                    this.seen = {}
                }
                serialize(n) {
                    return n.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-")
                }
                getNextSafeSlug(n, e) {
                    let i = n,
                        r = 0;
                    if (this.seen.hasOwnProperty(i)) {
                        r = this.seen[n];
                        do {
                            r++, i = n + "-" + r
                        } while (this.seen.hasOwnProperty(i))
                    }
                    return e || (this.seen[n] = r, this.seen[i] = 0), i
                }
                slug(n, e = {}) {
                    const i = this.serialize(n);
                    return this.getNextSafeSlug(i, e.dryrun)
                }
            }
            class qr {
                constructor(n) {
                    this.options = n || ac, this.options.renderer = this.options.renderer || new cu, this.renderer = this.options.renderer, this.renderer.options = this.options, this.textRenderer = new fF, this.slugger = new pF
                }
                static parse(n, e) {
                    return new qr(e).parse(n)
                }
                static parseInline(n, e) {
                    return new qr(e).parseInline(n)
                }
                parse(n, e = !0) {
                    let r, s, o, a, l, c, d, h, m, _, v, D, k, S, L, F, K, Ce, Pe, i = "";
                    const wt = n.length;
                    for (r = 0; r < wt; r++)
                        if (_ = n[r], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[_.type] && (Pe = this.options.extensions.renderers[_.type].call({
                                parser: this
                            }, _), !1 !== Pe || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(_.type))) i += Pe || "";
                        else switch (_.type) {
                            case "space":
                                continue;
                            case "hr":
                                i += this.renderer.hr();
                                continue;
                            case "heading":
                                i += this.renderer.heading(this.parseInline(_.tokens), _.depth, oF(this.parseInline(_.tokens, this.textRenderer)), this.slugger);
                                continue;
                            case "code":
                                i += this.renderer.code(_.text, _.lang, _.escaped);
                                continue;
                            case "table":
                                for (h = "", d = "", a = _.header.length, s = 0; s < a; s++) d += this.renderer.tablecell(this.parseInline(_.header[s].tokens), {
                                    header: !0,
                                    align: _.align[s]
                                });
                                for (h += this.renderer.tablerow(d), m = "", a = _.rows.length, s = 0; s < a; s++) {
                                    for (c = _.rows[s], d = "", l = c.length, o = 0; o < l; o++) d += this.renderer.tablecell(this.parseInline(c[o].tokens), {
                                        header: !1,
                                        align: _.align[o]
                                    });
                                    m += this.renderer.tablerow(d)
                                }
                                i += this.renderer.table(h, m);
                                continue;
                            case "blockquote":
                                m = this.parse(_.tokens), i += this.renderer.blockquote(m);
                                continue;
                            case "list":
                                for (v = _.ordered, D = _.start, k = _.loose, a = _.items.length, m = "", s = 0; s < a; s++) L = _.items[s], F = L.checked, K = L.task, S = "", L.task && (Ce = this.renderer.checkbox(F), k ? L.tokens.length > 0 && "paragraph" === L.tokens[0].type ? (L.tokens[0].text = Ce + " " + L.tokens[0].text, L.tokens[0].tokens && L.tokens[0].tokens.length > 0 && "text" === L.tokens[0].tokens[0].type && (L.tokens[0].tokens[0].text = Ce + " " + L.tokens[0].tokens[0].text)) : L.tokens.unshift({
                                    type: "text",
                                    text: Ce
                                }) : S += Ce), S += this.parse(L.tokens, k), m += this.renderer.listitem(S, K, F);
                                i += this.renderer.list(m, v, D);
                                continue;
                            case "html":
                                i += this.renderer.html(_.text);
                                continue;
                            case "paragraph":
                                i += this.renderer.paragraph(this.parseInline(_.tokens));
                                continue;
                            case "text":
                                for (m = _.tokens ? this.parseInline(_.tokens) : _.text; r + 1 < wt && "text" === n[r + 1].type;) _ = n[++r], m += "\n" + (_.tokens ? this.parseInline(_.tokens) : _.text);
                                i += e ? this.renderer.paragraph(m) : m;
                                continue;
                            default:
                                {
                                    const Vn = 'Token with "' + _.type + '" type was not found.';
                                    if (this.options.silent) return void console.error(Vn);
                                    throw new Error(Vn)
                                }
                        }
                    return i
                }
                parseInline(n, e) {
                    e = e || this.renderer;
                    let r, s, o, i = "";
                    const a = n.length;
                    for (r = 0; r < a; r++)
                        if (s = n[r], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[s.type] && (o = this.options.extensions.renderers[s.type].call({
                                parser: this
                            }, s), !1 !== o || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(s.type))) i += o || "";
                        else switch (s.type) {
                            case "escape":
                            case "text":
                                i += e.text(s.text);
                                break;
                            case "html":
                                i += e.html(s.text);
                                break;
                            case "link":
                                i += e.link(s.href, s.title, this.parseInline(s.tokens, e));
                                break;
                            case "image":
                                i += e.image(s.href, s.title, s.text);
                                break;
                            case "strong":
                                i += e.strong(this.parseInline(s.tokens, e));
                                break;
                            case "em":
                                i += e.em(this.parseInline(s.tokens, e));
                                break;
                            case "codespan":
                                i += e.codespan(s.text);
                                break;
                            case "br":
                                i += e.br();
                                break;
                            case "del":
                                i += e.del(this.parseInline(s.tokens, e));
                                break;
                            default:
                                {
                                    const l = 'Token with "' + s.type + '" type was not found.';
                                    if (this.options.silent) return void console.error(l);
                                    throw new Error(l)
                                }
                        }
                    return i
                }
            }

            function Se(t, n, e) {
                if (typeof t > "u" || null === t) throw new Error("marked(): input parameter is undefined or null");
                if ("string" != typeof t) throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(t) + ", string expected");
                if ("function" == typeof n && (e = n, n = null), cF(n = Mr({}, Se.defaults, n || {})), e) {
                    const r = n.highlight;
                    let s;
                    try {
                        s = Ts.lex(t, n)
                    } catch (l) {
                        return e(l)
                    }
                    const o = function(l) {
                        let c;
                        if (!l) try {
                            n.walkTokens && Se.walkTokens(s, n.walkTokens), c = qr.parse(s, n)
                        } catch (d) {
                            l = d
                        }
                        return n.highlight = r, l ? e(l) : e(null, c)
                    };
                    if (!r || r.length < 3 || (delete n.highlight, !s.length)) return o();
                    let a = 0;
                    return Se.walkTokens(s, function(l) {
                        "code" === l.type && (a++, setTimeout(() => {
                            r(l.text, l.lang, function(c, d) {
                                if (c) return o(c);
                                null != d && d !== l.text && (l.text = d, l.escaped = !0), a--, 0 === a && o()
                            })
                        }, 0))
                    }), void(0 === a && o())
                }

                function i(r) {
                    if (r.message += "\nPlease report this to https://github.com/markedjs/marked.", n.silent) return "<p>An error occurred:</p><pre>" + An(r.message + "", !0) + "</pre>";
                    throw r
                }
                try {
                    const r = Ts.lex(t, n);
                    if (n.walkTokens) {
                        if (n.async) return Promise.all(Se.walkTokens(r, n.walkTokens)).then(() => qr.parse(r, n)).catch(i);
                        Se.walkTokens(r, n.walkTokens)
                    }
                    return qr.parse(r, n)
                } catch (r) {
                    i(r)
                }
            }
            Se.options = Se.setOptions = function(t) {
                return Mr(Se.defaults, t),
                    function yee(t) {
                        ac = t
                    }(Se.defaults), Se
            }, Se.getDefaults = function nF() {
                return {
                    async: !1,
                    baseUrl: null,
                    breaks: !1,
                    extensions: null,
                    gfm: !0,
                    headerIds: !0,
                    headerPrefix: "",
                    highlight: null,
                    langPrefix: "language-",
                    mangle: !0,
                    pedantic: !1,
                    renderer: null,
                    sanitize: !1,
                    sanitizer: null,
                    silent: !1,
                    smartypants: !1,
                    tokenizer: null,
                    walkTokens: null,
                    xhtml: !1
                }
            }, Se.defaults = ac, Se.use = function(...t) {
                const n = Se.defaults.extensions || {
                    renderers: {},
                    childTokens: {}
                };
                t.forEach(e => {
                    const i = Mr({}, e);
                    if (i.async = Se.defaults.async || i.async, e.extensions && (e.extensions.forEach(r => {
                            if (!r.name) throw new Error("extension name required");
                            if (r.renderer) {
                                const s = n.renderers[r.name];
                                n.renderers[r.name] = s ? function(...o) {
                                    let a = r.renderer.apply(this, o);
                                    return !1 === a && (a = s.apply(this, o)), a
                                } : r.renderer
                            }
                            if (r.tokenizer) {
                                if (!r.level || "block" !== r.level && "inline" !== r.level) throw new Error("extension level must be 'block' or 'inline'");
                                n[r.level] ? n[r.level].unshift(r.tokenizer) : n[r.level] = [r.tokenizer], r.start && ("block" === r.level ? n.startBlock ? n.startBlock.push(r.start) : n.startBlock = [r.start] : "inline" === r.level && (n.startInline ? n.startInline.push(r.start) : n.startInline = [r.start]))
                            }
                            r.childTokens && (n.childTokens[r.name] = r.childTokens)
                        }), i.extensions = n), e.renderer) {
                        const r = Se.defaults.renderer || new cu;
                        for (const s in e.renderer) {
                            const o = r[s];
                            r[s] = (...a) => {
                                let l = e.renderer[s].apply(r, a);
                                return !1 === l && (l = o.apply(r, a)), l
                            }
                        }
                        i.renderer = r
                    }
                    if (e.tokenizer) {
                        const r = Se.defaults.tokenizer || new uw;
                        for (const s in e.tokenizer) {
                            const o = r[s];
                            r[s] = (...a) => {
                                let l = e.tokenizer[s].apply(r, a);
                                return !1 === l && (l = o.apply(r, a)), l
                            }
                        }
                        i.tokenizer = r
                    }
                    if (e.walkTokens) {
                        const r = Se.defaults.walkTokens;
                        i.walkTokens = function(s) {
                            let o = [];
                            return o.push(e.walkTokens.call(this, s)), r && (o = o.concat(r.call(this, s))), o
                        }
                    }
                    Se.setOptions(i)
                })
            }, Se.walkTokens = function(t, n) {
                let e = [];
                for (const i of t) switch (e = e.concat(n.call(Se, i)), i.type) {
                    case "table":
                        for (const r of i.header) e = e.concat(Se.walkTokens(r.tokens, n));
                        for (const r of i.rows)
                            for (const s of r) e = e.concat(Se.walkTokens(s.tokens, n));
                        break;
                    case "list":
                        e = e.concat(Se.walkTokens(i.items, n));
                        break;
                    default:
                        Se.defaults.extensions && Se.defaults.extensions.childTokens && Se.defaults.extensions.childTokens[i.type] ? Se.defaults.extensions.childTokens[i.type].forEach(function(r) {
                            e = e.concat(Se.walkTokens(i[r], n))
                        }) : i.tokens && (e = e.concat(Se.walkTokens(i.tokens, n)))
                }
                return e
            }, Se.parseInline = function(t, n) {
                if (typeof t > "u" || null === t) throw new Error("marked.parseInline(): input parameter is undefined or null");
                if ("string" != typeof t) throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(t) + ", string expected");
                cF(n = Mr({}, Se.defaults, n || {}));
                try {
                    const e = Ts.lexInline(t, n);
                    return n.walkTokens && Se.walkTokens(e, n.walkTokens), qr.parseInline(e, n)
                } catch (e) {
                    if (e.message += "\nPlease report this to https://github.com/markedjs/marked.", n.silent) return "<p>An error occurred:</p><pre>" + An(e.message + "", !0) + "</pre>";
                    throw e
                }
            }, Se.Parser = qr, Se.parser = qr.parse, Se.Renderer = cu, Se.TextRenderer = fF, Se.Lexer = Ts, Se.lexer = Ts.lex, Se.Tokenizer = uw, Se.Slugger = pF, Se.parse = Se;
            const Fee = ["*"];
            let hw = (() => {
                class t {
                    constructor() {
                        this._buttonClick$ = new H, this.copied$ = this._buttonClick$.pipe(vt(() => tt(z(!0), Pd(3e3).pipe(_l(!1)))), Js(), function _ee(t, n, e) {
                            let i, r = !1;
                            return t && "object" == typeof t ? ({
                                bufferSize: i = 1 / 0,
                                windowTime: n = 1 / 0,
                                refCount: r = !1,
                                scheduler: e
                            } = t) : i = t ? ? 1 / 0, Pm({
                                connector: () => new Jn(i, n, e),
                                resetOnError: !0,
                                resetOnComplete: !1,
                                resetOnRefCountZero: r
                            })
                        }(1)), this.copiedText$ = this.copied$.pipe(pt(!1), Z(e => e ? "Copied" : "Copy"))
                    }
                    onCopyToClipboardClick() {
                        this._buttonClick$.next()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["markdown-clipboard"]
                    ],
                    decls: 4,
                    vars: 7,
                    consts: [
                        [1, "markdown-clipboard-button", 3, "click"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "button", 0), T("click", function() {
                            return i.onCopyToClipboardClick()
                        }), ue(1, "async"), w(2), ue(3, "async"), g()), 2 & e && (re("copied", De(1, 3, i.copied$)), p(2), ve(De(3, 5, i.copiedText$)))
                    },
                    dependencies: [Kn],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();
            class Lee {}
            var du = (() => {
                return (t = du || (du = {})).CommandLine = "command-line", t.LineHighlight = "line-highlight", t.LineNumbers = "line-numbers", du;
                var t
            })();
            class Bee {}
            const mF = new R("SECURITY_CONTEXT");
            let fw = (() => {
                    class t {
                        constructor(e, i, r, s, o, a) {
                            this.platform = e, this.securityContext = i, this.http = r, this.clipboardOptions = s, this.sanitizer = a, this.DEFAULT_PARSE_OPTIONS = {
                                decodeHtml: !1,
                                inline: !1,
                                emoji: !1,
                                mermaid: !1,
                                markedOptions: void 0
                            }, this.DEFAULT_RENDER_OPTIONS = {
                                clipboard: !1,
                                clipboardOptions: void 0,
                                katex: !1,
                                katexOptions: void 0,
                                mermaid: !1,
                                mermaidOptions: void 0
                            }, this.DEFAULT_MARKED_OPTIONS = {
                                renderer: new cu
                            }, this.DEFAULT_KATEX_OPTIONS = {
                                delimiters: [{
                                    left: "$$",
                                    right: "$$",
                                    display: !0
                                }, {
                                    left: "$",
                                    right: "$",
                                    display: !1
                                }, {
                                    left: "\\(",
                                    right: "\\)",
                                    display: !1
                                }, {
                                    left: "\\begin{equation}",
                                    right: "\\end{equation}",
                                    display: !0
                                }, {
                                    left: "\\begin{align}",
                                    right: "\\end{align}",
                                    display: !0
                                }, {
                                    left: "\\begin{alignat}",
                                    right: "\\end{alignat}",
                                    display: !0
                                }, {
                                    left: "\\begin{gather}",
                                    right: "\\end{gather}",
                                    display: !0
                                }, {
                                    left: "\\begin{CD}",
                                    right: "\\end{CD}",
                                    display: !0
                                }, {
                                    left: "\\[",
                                    right: "\\]",
                                    display: !0
                                }]
                            }, this.DEFAULT_MERMAID_OPTIONS = {
                                startOnLoad: !1
                            }, this.DEFAULT_CLIPBOARD_OPTIONS = {
                                buttonComponent: void 0
                            }, this._reload$ = new H, this.reload$ = this._reload$.asObservable(), this.options = o
                        }
                        get options() {
                            return this._options
                        }
                        set options(e) {
                            this._options = { ...this.DEFAULT_MARKED_OPTIONS,
                                ...e
                            }
                        }
                        get renderer() {
                            return this.options.renderer
                        }
                        set renderer(e) {
                            this.options.renderer = e
                        }
                        parse(e, i = this.DEFAULT_PARSE_OPTIONS) {
                            const {
                                decodeHtml: r,
                                inline: s,
                                emoji: o,
                                mermaid: a,
                                markedOptions: l = this.options
                            } = i;
                            a && (this.renderer = this.extendRenderer(l.renderer || new cu));
                            const c = this.trimIndentation(e),
                                d = r ? this.decodeHtml(c) : c,
                                h = o ? this.parseEmoji(d) : d,
                                m = this.parseMarked(h, l, s);
                            return this.sanitizer.sanitize(this.securityContext, m) || ""
                        }
                        render(e, i = this.DEFAULT_RENDER_OPTIONS, r) {
                            const {
                                clipboard: s,
                                clipboardOptions: o,
                                katex: a,
                                katexOptions: l,
                                mermaid: c,
                                mermaidOptions: d
                            } = i;
                            s && this.renderClipboard(e, r, { ...this.DEFAULT_CLIPBOARD_OPTIONS,
                                ...this.clipboardOptions,
                                ...o
                            }), a && this.renderKatex(e, { ...this.DEFAULT_KATEX_OPTIONS,
                                ...l
                            }), c && this.renderMermaid(e, { ...this.DEFAULT_MERMAID_OPTIONS,
                                ...d
                            }), this.highlight(e)
                        }
                        reload() {
                            this._reload$.next()
                        }
                        getSource(e) {
                            if (!this.http) throw new Error("[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information");
                            return this.http.get(e, {
                                responseType: "text"
                            }).pipe(Z(i => this.handleExtension(e, i)))
                        }
                        highlight(e) {
                            if (!_n(this.platform) || typeof Prism > "u" || typeof Prism.highlightAllUnder > "u") return;
                            e || (e = document);
                            const i = e.querySelectorAll('pre code:not([class*="language-"])');
                            Array.prototype.forEach.call(i, r => r.classList.add("language-none")), Prism.highlightAllUnder(e)
                        }
                        decodeHtml(e) {
                            if (!_n(this.platform)) return e;
                            const i = document.createElement("textarea");
                            return i.innerHTML = e, i.value
                        }
                        extendRenderer(e) {
                            const i = e;
                            if (!0 === i.\u0275NgxMarkdownRendererExtended) return e;
                            const r = e.code;
                            return e.code = function(s, o, a) {
                                return "mermaid" === o ? `<div class="mermaid">${s}</div>` : r.call(this, s, o, a)
                            }, i.\u0275NgxMarkdownRendererExtended = !0, e
                        }
                        handleExtension(e, i) {
                            const r = e.lastIndexOf("://"),
                                s = r > -1 ? e.substring(r + 4) : e,
                                o = s.lastIndexOf("/"),
                                a = o > -1 ? s.substring(o + 1).split("?")[0] : "",
                                l = a.lastIndexOf("."),
                                c = l > -1 ? a.substring(l + 1) : "";
                            return c && "md" !== c ? "```" + c + "\n" + i + "\n```" : i
                        }
                        parseMarked(e, i, r = !1) {
                            return _n(this.platform) ? r ? Se.parseInline(e, i) : Se.parse(e, i) : e
                        }
                        parseEmoji(e) {
                            if (!_n(this.platform)) return e;
                            if (typeof joypixels > "u" || typeof joypixels.shortnameToUnicode > "u") throw new Error("[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information");
                            return joypixels.shortnameToUnicode(e)
                        }
                        renderKatex(e, i) {
                            if (_n(this.platform)) {
                                if (typeof katex > "u" || typeof renderMathInElement > "u") throw new Error("[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information");
                                renderMathInElement(e, i)
                            }
                        }
                        renderClipboard(e, i, r) {
                            if (!_n(this.platform)) return;
                            if (typeof ClipboardJS > "u") throw new Error("[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information");
                            if (!i) throw new Error("[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function");
                            const {
                                buttonComponent: s,
                                buttonTemplate: o
                            } = r, a = e.querySelectorAll("pre");
                            for (let l = 0; l < a.length; l++) {
                                const c = a.item(l),
                                    d = document.createElement("div");
                                d.style.position = "relative", c.parentNode.insertBefore(d, c), d.appendChild(c);
                                const h = document.createElement("div");
                                let m, _;
                                h.style.position = "absolute", h.style.top = ".5em", h.style.right = ".5em", h.style.opacity = "0", h.style.transition = "opacity 250ms ease-out", d.insertAdjacentElement("beforeend", h), c.onmouseover = () => h.style.opacity = "1", c.onmouseout = () => h.style.opacity = "0", m = s ? i.createComponent(s).hostView : o ? i.createEmbeddedView(o) : i.createComponent(hw).hostView, m.rootNodes.forEach(v => {
                                    v.onmouseover = () => h.style.opacity = "1", h.appendChild(v), _ = new ClipboardJS(v, {
                                        text: () => c.innerText
                                    })
                                }), m.onDestroy(() => _.destroy())
                            }
                        }
                        renderMermaid(e, i = this.DEFAULT_MERMAID_OPTIONS) {
                            if (!_n(this.platform)) return;
                            if (typeof mermaid > "u" || typeof mermaid.init > "u") throw new Error("[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information");
                            const r = e.querySelectorAll(".mermaid");
                            0 !== r.length && (mermaid.initialize(i), mermaid.init(r))
                        }
                        trimIndentation(e) {
                            if (!e) return "";
                            let i;
                            return e.split("\n").map(r => {
                                let s = i;
                                return r.length > 0 && (s = isNaN(s) ? r.search(/\S|$/) : Math.min(r.search(/\S|$/), s)), isNaN(i) && (i = s), s ? r.substring(s) : r
                            }).join("\n")
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(On), C(mF), C(wr, 8), C(Lee, 8), C(Bee, 8), C(qs))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                gF = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.element = e, this.markdownService = i, this.viewContainerRef = r, this.error = new V, this.load = new V, this.ready = new V, this._commandLine = !1, this._clipboard = !1, this._emoji = !1, this._inline = !1, this._katex = !1, this._lineHighlight = !1, this._lineNumbers = !1, this._mermaid = !1, this.destroyed$ = new H
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = this.coerceBooleanProperty(e)
                        }
                        get clipboard() {
                            return this._clipboard
                        }
                        set clipboard(e) {
                            this._clipboard = this.coerceBooleanProperty(e)
                        }
                        get emoji() {
                            return this._emoji
                        }
                        set emoji(e) {
                            this._emoji = this.coerceBooleanProperty(e)
                        }
                        get katex() {
                            return this._katex
                        }
                        set katex(e) {
                            this._katex = this.coerceBooleanProperty(e)
                        }
                        get mermaid() {
                            return this._mermaid
                        }
                        set mermaid(e) {
                            this._mermaid = this.coerceBooleanProperty(e)
                        }
                        get lineHighlight() {
                            return this._lineHighlight
                        }
                        set lineHighlight(e) {
                            this._lineHighlight = this.coerceBooleanProperty(e)
                        }
                        get lineNumbers() {
                            return this._lineNumbers
                        }
                        set lineNumbers(e) {
                            this._lineNumbers = this.coerceBooleanProperty(e)
                        }
                        get commandLine() {
                            return this._commandLine
                        }
                        set commandLine(e) {
                            this._commandLine = this.coerceBooleanProperty(e)
                        }
                        ngOnChanges() {
                            this.loadContent()
                        }
                        loadContent() {
                            null == this.data ? null == this.src || this.handleSrc() : this.handleData()
                        }
                        ngAfterViewInit() {
                            !this.data && !this.src && this.handleTransclusion(), this.markdownService.reload$.pipe(le(this.destroyed$)).subscribe(() => this.loadContent())
                        }
                        ngOnDestroy() {
                            this.destroyed$.next(), this.destroyed$.complete()
                        }
                        render(e, i = !1) {
                            const s = {
                                    clipboard: this.clipboard,
                                    clipboardOptions: {
                                        buttonComponent: this.clipboardButtonComponent,
                                        buttonTemplate: this.clipboardButtonTemplate
                                    },
                                    katex: this.katex,
                                    katexOptions: this.katexOptions,
                                    mermaid: this.mermaid,
                                    mermaidOptions: this.mermaidOptions
                                },
                                o = this.markdownService.parse(e, {
                                    decodeHtml: i,
                                    inline: this.inline,
                                    emoji: this.emoji,
                                    mermaid: this.mermaid
                                });
                            this.element.nativeElement.innerHTML = o, this.handlePlugins(), this.markdownService.render(this.element.nativeElement, s, this.viewContainerRef), this.ready.emit()
                        }
                        coerceBooleanProperty(e) {
                            return null != e && "false" != `${String(e)}`
                        }
                        handleData() {
                            this.render(this.data)
                        }
                        handleSrc() {
                            this.markdownService.getSource(this.src).subscribe({
                                next: e => {
                                    this.render(e), this.load.emit(e)
                                },
                                error: e => this.error.emit(e)
                            })
                        }
                        handleTransclusion() {
                            this.render(this.element.nativeElement.innerHTML, !0)
                        }
                        handlePlugins() {
                            this.commandLine && (this.setPluginClass(this.element.nativeElement, du.CommandLine), this.setPluginOptions(this.element.nativeElement, {
                                dataFilterOutput: this.filterOutput,
                                dataHost: this.host,
                                dataPrompt: this.prompt,
                                dataOutput: this.output,
                                dataUser: this.user
                            })), this.lineHighlight && this.setPluginOptions(this.element.nativeElement, {
                                dataLine: this.line,
                                dataLineOffset: this.lineOffset
                            }), this.lineNumbers && (this.setPluginClass(this.element.nativeElement, du.LineNumbers), this.setPluginOptions(this.element.nativeElement, {
                                dataStart: this.start
                            }))
                        }
                        setPluginClass(e, i) {
                            const r = e.querySelectorAll("pre");
                            for (let s = 0; s < r.length; s++) {
                                const o = i instanceof Array ? i : [i];
                                r.item(s).classList.add(...o)
                            }
                        }
                        setPluginOptions(e, i) {
                            const r = e.querySelectorAll("pre");
                            for (let s = 0; s < r.length; s++) Object.keys(i).forEach(o => {
                                const a = i[o];
                                if (a) {
                                    const l = this.toLispCase(o);
                                    r.item(s).setAttribute(l, a.toString())
                                }
                            })
                        }
                        toLispCase(e) {
                            const i = e.match(/([A-Z])/g);
                            if (!i) return e;
                            let r = e.toString();
                            for (let s = 0, o = i.length; s < o; s++) r = r.replace(new RegExp(i[s]), "-" + i[s].toLowerCase());
                            return "-" === r.slice(0, 1) && (r = r.slice(1)), r
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(fw), u(Je))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["markdown"],
                            ["", "markdown", ""]
                        ],
                        inputs: {
                            data: "data",
                            src: "src",
                            inline: "inline",
                            clipboard: "clipboard",
                            clipboardButtonComponent: "clipboardButtonComponent",
                            clipboardButtonTemplate: "clipboardButtonTemplate",
                            emoji: "emoji",
                            katex: "katex",
                            katexOptions: "katexOptions",
                            mermaid: "mermaid",
                            mermaidOptions: "mermaidOptions",
                            lineHighlight: "lineHighlight",
                            line: "line",
                            lineOffset: "lineOffset",
                            lineNumbers: "lineNumbers",
                            start: "start",
                            commandLine: "commandLine",
                            filterOutput: "filterOutput",
                            host: "host",
                            prompt: "prompt",
                            output: "output",
                            user: "user"
                        },
                        outputs: {
                            error: "error",
                            load: "load",
                            ready: "ready"
                        },
                        features: [ze],
                        ngContentSelectors: Fee,
                        decls: 1,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Xe(), me(0))
                        },
                        encapsulation: 2
                    }), t
                })(),
                Gee = (() => {
                    class t {
                        static forRoot(e) {
                            return {
                                ngModule: t,
                                providers: [fw, e && e.loader || [], e && e.clipboardOptions || [], e && e.markedOptions || [], {
                                    provide: mF,
                                    useValue: e && null != e.sanitize ? e.sanitize : it.HTML
                                }]
                            }
                        }
                        static forChild() {
                            return {
                                ngModule: t
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut]
                    }), t
                })();
            var _F;
            ! function(t) {
                let n;
                var r;
                let e, i;
                (r = n = t.SecurityLevel || (t.SecurityLevel = {})).Strict = "strict", r.Loose = "loose", r.Antiscript = "antiscript", r.Sandbox = "sandbox",
                    function(r) {
                        r.Base = "base", r.Forest = "forest", r.Dark = "dark", r.Default = "default", r.Neutral = "neutral"
                    }(e = t.Theme || (t.Theme = {})),
                    function(r) {
                        r[r.Debug = 1] = "Debug", r[r.Info = 2] = "Info", r[r.Warn = 3] = "Warn", r[r.Error = 4] = "Error", r[r.Fatal = 5] = "Fatal"
                    }(i = t.LogLevel || (t.LogLevel = {}))
            }(_F || (_F = {}));
            let uu = (() => {
                class t {
                    constructor(e, i) {
                        this.dialogRef = e, this.confirmMessage = i.confirmMessage
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(ro), u(Vd))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-confirm-dialog"]
                    ],
                    decls: 9,
                    vars: 1,
                    consts: [
                        ["mat-dialog-title", ""],
                        ["mat-dialog-content", "", "markdown", ""],
                        ["mat-dialog-actions", "", "fxLayoutAlign", "space-between"],
                        ["mat-button", "", "color", "primary", 3, "click"],
                        ["mat-button", "", 3, "click"]
                    ],
                    template: function(e, i) {
                        1 & e && (f(0, "h1", 0), w(1, "Confirm"), g(), f(2, "div", 1), w(3), g(), f(4, "div", 2)(5, "button", 3), T("click", function() {
                            return i.dialogRef.close(!0)
                        }), w(6, "Bevestigen"), g(), f(7, "button", 4), T("click", function() {
                            return i.dialogRef.close(!1)
                        }), w(8, "Annuleren"), g()()), 2 & e && (p(3), ve(i.confirmMessage))
                    },
                    dependencies: [Xt, o6, a6, Jf, ho, gF]
                }), t
            })();

            function mw(t, n) {
                var e = {};
                for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && n.indexOf(i) < 0 && (e[i] = t[i]);
                if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
                    var r = 0;
                    for (i = Object.getOwnPropertySymbols(t); r < i.length; r++) n.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[r]) && (e[i[r]] = t[i[r]])
                }
                return e
            }
            const qee = ["content"];

            function Yee(t, n) {
                if (1 & t && E(0, "formly-field", 2), 2 & t) {
                    const e = n.$implicit;
                    y("form", e.form)("options", e.options)("model", e.model)("field", e)
                }
            }
            const vF = ["*"],
                Qee = ["container"];

            function Kee(t, n) {}
            const Zee = ["fieldComponent"];

            function Xee(t, n) {
                1 & t && E(0, "formly-field", 1), 2 & t && y("field", n.$implicit)
            }

            function ete(t, n, e) {
                if (n.id) return n.id;
                let i = n.type;
                return !i && n.template && (i = "template"), mu(i) && (i = i.prototype.constructor.name), [t, i, n.key, e].join("_")
            }

            function yo(t) {
                if (!t.key) return [];
                if (!t._keyPath || t._keyPath.key !== t.key) {
                    let n = [];
                    if ("string" == typeof t.key) {
                        const e = -1 === t.key.indexOf("[") ? t.key : t.key.replace(/\[(\w+)\]/g, ".$1");
                        n = -1 !== e.indexOf(".") ? e.split(".") : [e]
                    } else n = Array.isArray(t.key) ? t.key.slice(0) : [`${t.key}`];
                    t._keyPath = {
                        key: t.key,
                        path: n
                    }
                }
                return t._keyPath.path.slice(0)
            }
            const wF = ["required", "pattern", "minLength", "maxLength", "min", "max"];

            function hu(t, n) {
                let e = yo(t);
                if (0 === e.length) return;
                let i = t;
                for (; i.parent;) i = i.parent, e = [...yo(i), ...e];
                if (void 0 === n && t.resetOnHide) {
                    const r = e.pop();
                    delete e.reduce((o, a) => o[a] || {}, i.model)[r]
                } else ! function tte(t, n, e) {
                    for (let i = 0; i < n.length - 1; i++) {
                        const r = n[i];
                        (!t[r] || !vo(t[r])) && (t[r] = /^\d+$/.test(n[i + 1]) ? [] : {}), t = t[r]
                    }
                    t[n[n.length - 1]] = ei(e)
                }(i.model, e, n)
            }

            function fu(t) {
                let n = t.parent.model;
                for (const e of yo(t)) {
                    if (!n) return n;
                    n = n[e]
                }
                return n
            }

            function lc(t, ...n) {
                return n.forEach(e => {
                    for (let i in e) bo(t[i]) || nte(t[i]) ? t[i] = ei(e[i]) : ite(t[i], e[i]) && lc(t[i], e[i])
                }), t
            }

            function bo(t) {
                return null == t
            }

            function pu(t) {
                return void 0 === t
            }

            function nte(t) {
                return "" === t
            }

            function mu(t) {
                return "function" == typeof t
            }

            function ite(t, n) {
                return vo(t) && vo(n) && Object.getPrototypeOf(t) === Object.getPrototypeOf(n) && !(Array.isArray(t) || Array.isArray(n))
            }

            function vo(t) {
                return null != t && "object" == typeof t
            }

            function ei(t) {
                if (!vo(t) || _o(t) || t instanceof rt || t.changingThisBreaksApplicationSecurity || -1 !== ["RegExp", "FileList", "File", "Blob"].indexOf(t.constructor.name)) return t;
                if (t instanceof Set) return new Set(t);
                if (t instanceof Map) return new Map(t);
                if (t._isAMomentObject && mu(t.clone)) return t.clone();
                if (t instanceof Ud) return null;
                if (t instanceof Date) return new Date(t.getTime());
                if (Array.isArray(t)) return t.slice(0).map(i => ei(i));
                const n = Object.getPrototypeOf(t);
                let e = Object.create(n);
                return e = Object.setPrototypeOf(e, n), Object.keys(t).reduce((i, r) => {
                    const s = Object.getOwnPropertyDescriptor(t, r);
                    return s.get ? Object.defineProperty(i, r, s) : i[r] = ei(t[r]), i
                }, e)
            }

            function sn(t, n, e) {
                Object.defineProperty(t, n, {
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }), t[n] = e
            }

            function Sr(t, n, e) {
                t._observers || sn(t, "_observers", {}), t._observers[n] || (t._observers[n] = []);
                let i = t._observers[n];
                return -1 === i.indexOf(e) && (i.push(e), e({
                    currentValue: t[n],
                    firstChange: !0
                }), 1 === i.length && (sn(t, `___$${n}`, t[n]), Object.defineProperty(t, n, {
                    configurable: !0,
                    get: () => t[`___$${n}`],
                    set: r => {
                        if (r !== t[`___$${n}`]) {
                            const s = t[`___$${n}`];
                            t[`___$${n}`] = r, i.forEach(o => o({
                                previousValue: s,
                                currentValue: r,
                                firstChange: !1
                            }))
                        }
                    }
                }))), () => i.splice(i.indexOf(e), 1)
            }
            const cc = new R("FORMLY_CONFIG");
            class pn {
                constructor() {
                    this.types = {}, this.validators = {}, this.wrappers = {}, this.messages = {}, this.templateManipulators = {
                        preWrapper: [],
                        postWrapper: []
                    }, this.extras = {
                        checkExpressionOn: "changeDetectionCheck",
                        lazyRender: !1,
                        showError: function(n) {
                            return n.formControl && n.formControl.invalid && (n.formControl.touched || n.options.parentForm && n.options.parentForm.submitted || !(!n.field.validation || !n.field.validation.show))
                        }
                    }, this.extensions = {}
                }
                addConfig(n) {
                    n.types && n.types.forEach(e => this.setType(e)), n.validators && n.validators.forEach(e => this.setValidator(e)), n.wrappers && n.wrappers.forEach(e => this.setWrapper(e)), n.manipulators && (console.warn("NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead."), n.manipulators.forEach(e => this.setManipulator(e))), n.validationMessages && n.validationMessages.forEach(e => this.addValidatorMessage(e.name, e.message)), n.extensions && n.extensions.forEach(e => this.extensions[e.name] = e.extension), n.extras && (this.extras = Object.assign({}, this.extras, n.extras))
                }
                setType(n) {
                    Array.isArray(n) ? n.forEach(e => this.setType(e)) : (this.types[n.name] || (this.types[n.name] = {
                        name: n.name
                    }), ["component", "extends", "defaultOptions", "wrappers"].forEach(e => {
                        n.hasOwnProperty(e) && (this.types[n.name][e] = n[e])
                    }))
                }
                getType(n) {
                    if (!this.types[n]) throw new Error(`[Formly Error] The type "${n}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);
                    return this.mergeExtendedType(n), this.types[n]
                }
                getMergedField(n = {}) {
                    const e = this.getType(n.type);
                    e.defaultOptions && lc(n, e.defaultOptions);
                    const i = e.extends && this.getType(e.extends).defaultOptions;
                    i && lc(n, i), n && n.optionsTypes && n.optionsTypes.forEach(s => {
                        const o = this.getType(s).defaultOptions;
                        o && lc(n, o)
                    });
                    const r = this.resolveFieldTypeRef(n);
                    r && r.instance && r.instance.defaultOptions && lc(n, r.instance.defaultOptions), !n.wrappers && e.wrappers && (n.wrappers = [...e.wrappers])
                }
                resolveFieldTypeRef(n = {}) {
                    if (!n.type) return null;
                    const e = this.getType(n.type);
                    if (!e.component || e._componentRef) return e._componentRef;
                    const {
                        _resolver: i,
                        _injector: r
                    } = n.parent.options, s = i.resolveComponentFactory(e.component).create(r);
                    return sn(e, "_componentRef", s), s.destroy(), e._componentRef
                }
                setWrapper(n) {
                    this.wrappers[n.name] = n, n.types && n.types.forEach(e => {
                        this.setTypeWrapper(e, n.name)
                    })
                }
                getWrapper(n) {
                    if (!this.wrappers[n]) throw new Error(`[Formly Error] The wrapper "${n}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);
                    return this.wrappers[n]
                }
                setTypeWrapper(n, e) {
                    this.types[n] || (this.types[n] = {}), this.types[n].wrappers || (this.types[n].wrappers = []), -1 === this.types[n].wrappers.indexOf(e) && this.types[n].wrappers.push(e)
                }
                setValidator(n) {
                    this.validators[n.name] = n
                }
                getValidator(n) {
                    if (!this.validators[n]) throw new Error(`[Formly Error] The validator "${n}" could not be found. Please make sure that is registered through the FormlyModule declaration.`);
                    return this.validators[n]
                }
                addValidatorMessage(n, e) {
                    this.messages[n] = e
                }
                getValidatorMessage(n) {
                    return this.messages[n]
                }
                setManipulator(n) {
                    (new n.class)[n.method](this)
                }
                mergeExtendedType(n) {
                    if (!this.types[n].extends) return;
                    const e = this.getType(this.types[n].extends);
                    this.types[n].component || (this.types[n].component = e.component), this.types[n].wrappers || (this.types[n].wrappers = e.wrappers)
                }
            }
            pn.\u0275fac = function(n) {
                return new(n || pn)
            }, pn.\u0275prov = I({
                token: pn,
                factory: pn.\u0275fac,
                providedIn: "root"
            }), pn.ngInjectableDef = LC({
                factory: function() {
                    return new pn
                },
                token: pn,
                providedIn: "root"
            });
            class Ti {
                constructor(n, e, i) {
                    this.formlyConfig = n, this.componentFactoryResolver = e, this.injector = i
                }
                buildForm(n, e = [], i, r) {
                    if (!this.formlyConfig.extensions.core) throw new Error("NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.");
                    const s = {
                        fieldGroup: e,
                        model: i,
                        formControl: n,
                        options: this._setOptions(r)
                    };
                    (function Jee(t, n) {
                        const e = t._updateTreeValidity.bind(t);
                        t._updateTreeValidity = () => {}, n(), t._updateTreeValidity = e
                    })(n, () => this._buildForm(s)), s.options._checkField(s, !0)
                }
                _buildForm(n) {
                    this.getExtensions().forEach(e => e.prePopulate && e.prePopulate(n)), this.getExtensions().forEach(e => e.onPopulate && e.onPopulate(n)), n.fieldGroup && n.fieldGroup.forEach(e => this._buildForm(e)), this.getExtensions().forEach(e => e.postPopulate && e.postPopulate(n))
                }
                getExtensions() {
                    return Object.keys(this.formlyConfig.extensions).map(n => this.formlyConfig.extensions[n])
                }
                _setOptions(n) {
                    return (n = n || {}).formState = n.formState || {}, n.showError || (n.showError = this.formlyConfig.extras.showError), n.fieldChanges || sn(n, "fieldChanges", new H), n._resolver || sn(n, "_resolver", this.componentFactoryResolver), n._injector || sn(n, "_injector", this.injector), n._hiddenFieldsForCheck || (n._hiddenFieldsForCheck = []), n._markForCheck || (n._markForCheck = e => {
                        e._componentRefs && e._componentRefs.forEach(i => {
                            i.injector.get(ge).markForCheck()
                        }), e.fieldGroup && e.fieldGroup.forEach(i => n._markForCheck(i))
                    }), n._buildField || (n._buildField = e => (this.buildForm(e.form, e.fieldGroup, e.model, e.options), e)), n
                }
            }

            function _w(t, n, e = !1) {
                (n = n || t.formControl)._fields || sn(n, "_fields", []), -1 === n._fields.indexOf(t) && n._fields.push(t), !t.formControl && n && (sn(t, "formControl", n), n.setValidators(null), n.setAsyncValidators(null), t.templateOptions.disabled = !!t.templateOptions.disabled, Sr(t.templateOptions, "disabled", ({
                    firstChange: a,
                    currentValue: l
                }) => {
                    a || (l ? t.formControl.disable() : t.formControl.enable())
                }), n.registerOnDisabledChange && n.registerOnDisabledChange(a => {
                    t.templateOptions.___$disabled = a, t.options && t.options._markForCheck(t)
                }));
                let i = t.parent.formControl;
                if (!i || !t.key) return;
                const r = yo(t),
                    s = fu(t);
                (!bo(n.value) || !bo(s)) && n.value !== s && n instanceof jr && n.patchValue(s);
                for (let a = 0; a < r.length - 1; a++) {
                    const l = r[a];
                    i.get([l]) || nm(i, {
                        emitEvent: e
                    }, () => i.setControl(l, new Xi({}))), i = i.get([l])
                }
                const o = r[r.length - 1];
                !t._hide && i.get([o]) !== n && nm(i, {
                    emitEvent: e
                }, () => i.setControl(o, n))
            }

            function yw(t, n = !1) {
                const e = t.status,
                    i = t.value;
                t.updateValueAndValidity({
                    emitEvent: !1,
                    onlySelf: n
                }), e !== t.status && t.statusChanges.emit(t.status), i !== t.value && t.valueChanges.emit(t.value)
            }

            function nm(t, n, e) {
                t instanceof Xi && !t.__patchForEachChild && (sn(t, "__patchForEachChild", !0), t._forEachChild = r => {
                    Object.keys(t.controls).forEach(s => t.controls[s] && r(t.controls[s], s))
                });
                const i = t.updateValueAndValidity.bind(t);
                !1 === n.emitEvent && (t.updateValueAndValidity = r => {
                    i(Object.assign({}, r || {}, {
                        emitEvent: !1
                    }))
                }), e(), !1 === n.emitEvent && (t.updateValueAndValidity = i)
            }

            function xF(t) {
                t._fields && delete t._fields, t.setValidators(null), t.setAsyncValidators(null), (t instanceof Xi || t instanceof zl) && Object.keys(t.controls).forEach(n => xF(t.controls[n]))
            }
            Ti.\u0275fac = function(n) {
                return new(n || Ti)(C(pn), C(Ci), C(Ct))
            }, Ti.\u0275prov = I({
                token: Ti,
                factory: Ti.\u0275fac,
                providedIn: "root"
            }), Ti.ngInjectableDef = LC({
                factory: function() {
                    return new Ti(st(pn), st(Ci), st(Gg))
                },
                token: Ti,
                providedIn: "root"
            });
            let bw = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this.formlyBuilder = e, this.formlyConfig = i, this.ngZone = r, this.parentFormGroup = o, this.modelChange = new V, this.immutable = !1, this._modelChangeValue = {}, this.modelChangeSubs = [], this.modelChange$ = new H, this.modelChangeSub = this.modelChange$.pipe(vt(() => this.ngZone.onStable.asObservable().pipe(Fe(1)))).subscribe(() => this.ngZone.runGuarded(() => {
                                this.checkExpressionChange(), this.modelChange.emit(this._modelChangeValue = ei(this.model))
                            })), null !== s && console.warn("NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead."), this.immutable = null !== s || !!i.extras.immutable
                        }
                        set model(e) {
                            this._model = this.immutable ? ei(e) : e
                        }
                        get model() {
                            return this._model || (this._model = {}), this._model
                        }
                        set fields(e) {
                            this._fields = this.immutable ? ei(e) : e
                        }
                        get fields() {
                            return this._fields || []
                        }
                        set options(e) {
                            this._options = this.immutable ? ei(e) : e
                        }
                        get options() {
                            return this._options
                        }
                        set content(e) {
                            if (e) {
                                let i = !1,
                                    r = e.nativeElement.nextSibling;
                                for (; r && !i;)(r.nodeType === Node.ELEMENT_NODE || r.nodeType === Node.TEXT_NODE && r.textContent && "" !== r.textContent.trim()) && (i = !0), r = r.nextSibling;
                                i && console.warn("NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.")
                            }
                        }
                        ngDoCheck() {
                            "changeDetectionCheck" === this.formlyConfig.extras.checkExpressionOn && this.checkExpressionChange()
                        }
                        ngOnChanges(e) {
                            e.model && this.field && (this.field.model = this.model), e.fields && this.form && xF(this.form), (e.fields || e.form || e.model && this._modelChangeValue !== e.model.currentValue) && (this.form = this.form || new Xi({}), this.setOptions(), this.options.updateInitialValue(), this.clearModelSubscriptions(), this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options), this.trackModelChanges(this.fields))
                        }
                        ngOnDestroy() {
                            this.modelChangeSub.unsubscribe(), this.clearModelSubscriptions()
                        }
                        changeModel({
                            value: i,
                            field: r
                        }) {
                            hu(r, i), this.modelChange$.next()
                        }
                        setOptions() {
                            this.options || (this.options = {}), this.options.resetModel || (this.options.resetModel = e => {
                                e = ei(bo(e) ? this.options._initialModel : e), this.model && (Object.keys(this.model).forEach(i => delete this.model[i]), Object.assign(this.model, e || {})), this.options._buildForm(), this.options.parentForm && this.options.parentForm.control === this.form ? this.options.parentForm.resetForm(this.model) : this.form.reset(this.model)
                            }), !this.options.parentForm && this.parentFormGroup && (sn(this.options, "parentForm", this.parentFormGroup), Sr(this.options.parentForm, "submitted", ({
                                firstChange: e
                            }) => {
                                e || (this.checkExpressionChange(), this.options._markForCheck({
                                    fieldGroup: this.fields,
                                    model: this.model,
                                    formControl: this.form,
                                    options: this.options
                                }))
                            })), this.options.updateInitialValue || (this.options.updateInitialValue = () => this.options._initialModel = ei(this.model)), this.options._buildForm || (this.options._buildForm = (e = !1) => {
                                this.clearModelSubscriptions(), this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options), this.trackModelChanges(this.fields), e && this.modelChange.emit(this._modelChangeValue = ei(this.model))
                            })
                        }
                        checkExpressionChange() {
                            this.options && this.options._checkField && this.options._checkField({
                                fieldGroup: this.fields,
                                model: this.model,
                                formControl: this.form,
                                options: this.options
                            })
                        }
                        trackModelChanges(e, i = []) {
                            e.forEach(r => {
                                if (r.key && !r.fieldGroup && r.formControl) {
                                    const s = r.formControl;
                                    let o = s.valueChanges.pipe(Js((d, h) => !(d !== h || Array.isArray(d) || vo(d))));
                                    const {
                                        updateOn: a,
                                        debounce: l
                                    } = r.modelOptions;
                                    (!a || "change" === a) && l && l.default > 0 && (o = s.valueChanges.pipe(Rl(l.default))), this.modelChangeSubs.push(o.subscribe(d => {
                                        s instanceof jr && s._fields && s._fields.length > 1 && s.patchValue(d, {
                                            emitEvent: !1,
                                            onlySelf: !0
                                        }), r.parsers && r.parsers.length > 0 && r.parsers.forEach(h => d = h(d)), this.changeModel({
                                            key: [...i, ...yo(r)].join("."),
                                            value: d,
                                            field: r
                                        })
                                    }));
                                    const c = s.valueChanges.observers;
                                    c && c.length > 1 && c.unshift(c.pop())
                                }
                                r.fieldGroup && r.fieldGroup.length > 0 && this.trackModelChanges(r.fieldGroup, r.key ? [...i, ...yo(r)] : i)
                            })
                        }
                        clearModelSubscriptions() {
                            this.modelChangeSubs.forEach(e => e.unsubscribe()), this.modelChangeSubs = []
                        }
                        get field() {
                            return this.fields && this.fields[0] && this.fields[0].parent
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ti), u(pn), u(ce), Qt("immutable"), u(ui, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-form"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(qee, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.content = r.first)
                            }
                        },
                        inputs: {
                            model: "model",
                            fields: "fields",
                            options: "options",
                            form: "form"
                        },
                        outputs: {
                            modelChange: "modelChange"
                        },
                        features: [Q([Ti]), ze],
                        ngContentSelectors: vF,
                        decls: 4,
                        vars: 1,
                        consts: [
                            ["hide-deprecation", "", 3, "form", "options", "model", "field", 4, "ngFor", "ngForOf"],
                            ["content", ""],
                            ["hide-deprecation", "", 3, "form", "options", "model", "field"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, Yee, 1, 4, "formly-field", 0), oe(1, null, 1), me(3), ae()), 2 & e && y("ngForOf", i.fields)
                        },
                        dependencies: function() {
                            return [Dn, DF]
                        },
                        encapsulation: 2
                    }), t
                })(),
                DF = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this.formlyConfig = e, this.renderer = i, this.resolver = r, this.elementRef = s, this.warnDeprecation = !1, this.modelChange = new V, this.hostObservers = [], this.componentRefs = [], this.hooksObservers = [], this.detectFieldBuild = !1, this.warnDeprecation = null === o
                        }
                        set model(e) {
                            this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        set form(e) {
                            this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        set options(e) {
                            this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        ngAfterContentInit() {
                            this.triggerHook("afterContentInit")
                        }
                        ngAfterContentChecked() {
                            this.triggerHook("afterContentChecked")
                        }
                        ngAfterViewInit() {
                            this.triggerHook("afterViewInit")
                        }
                        ngAfterViewChecked() {
                            this.triggerHook("afterViewChecked")
                        }
                        ngDoCheck() {
                            this.triggerHook("doCheck"), this.detectFieldBuild && this.field && this.field.options && this.render()
                        }
                        ngOnInit() {
                            this.triggerHook("onInit")
                        }
                        ngOnChanges(e) {
                            this.triggerHook("onChanges", e)
                        }
                        ngOnDestroy() {
                            this.resetRefs(this.field), this.hostObservers.forEach(e => e()), this.hooksObservers.forEach(e => e()), this.triggerHook("onDestroy")
                        }
                        renderField(e, i, r = []) {
                            if (this.containerRef === e && (this.resetRefs(this.field), this.containerRef.clear(), r = this.field ? this.field.wrappers : []), r && r.length > 0) {
                                const [s, ...o] = r, {
                                    component: a
                                } = this.formlyConfig.getWrapper(s), l = e.createComponent(this.resolver.resolveComponentFactory(a));
                                this.attachComponentRef(l, i), Sr(l.instance, "fieldComponent", ({
                                    firstChange: c,
                                    previousValue: d,
                                    currentValue: h
                                }) => {
                                    if (h) {
                                        if (d && d._lContainer === h._lContainer) return;
                                        const m = d ? d.detach() : null;
                                        m && !m.destroyed ? h.insert(m) : this.renderField(h, i, o), !c && l.changeDetectorRef.detectChanges()
                                    }
                                })
                            } else if (i && i.type) {
                                const {
                                    component: s
                                } = this.formlyConfig.getType(i.type), o = e.createComponent(this.resolver.resolveComponentFactory(s));
                                this.attachComponentRef(o, i)
                            }
                        }
                        triggerHook(e, i) {
                            if (this.field && this.field.hooks && this.field.hooks[e] && (!i || i.field)) {
                                const r = this.field.hooks[e](this.field);
                                if (_o(r) && -1 !== ["onInit", "afterContentInit", "afterViewInit"].indexOf(e)) {
                                    const s = r.subscribe();
                                    this.hooksObservers.push(() => s.unsubscribe())
                                }
                            }
                            this.field && this.field.lifecycle && this.field.lifecycle[e] && this.field.lifecycle[e](this.field.form, this.field, this.field.model, this.field.options), "onChanges" === e && i.field && (this.resetRefs(i.field.previousValue), this.render())
                        }
                        attachComponentRef(e, i) {
                            this.componentRefs.push(e), i._componentRefs.push(e), Object.assign(e.instance, {
                                field: i
                            })
                        }
                        render() {
                            if (this.field) {
                                if (!this.field.options) return void(this.detectFieldBuild = !0);
                                this.detectFieldBuild = !1, this.hostObservers.forEach(e => e()), this.hostObservers = [Sr(this.field, "hide", ({
                                    firstChange: e,
                                    currentValue: i
                                }) => {
                                    this.formlyConfig.extras.lazyRender ? i ? (this.containerRef.clear(), this.field.className && this.renderer.removeAttribute(this.elementRef.nativeElement, "class")) : (this.renderField(this.containerRef, this.field), this.field.className && this.renderer.setAttribute(this.elementRef.nativeElement, "class", this.field.className)) : (e && this.renderField(this.containerRef, this.field), (!e || e && i) && this.renderer.setStyle(this.elementRef.nativeElement, "display", i ? "none" : ""))
                                }), Sr(this.field, "className", ({
                                    firstChange: e,
                                    currentValue: i
                                }) => {
                                    (!e || e && i) && (!this.formlyConfig.extras.lazyRender || !0 !== this.field.hide) && this.renderer.setAttribute(this.elementRef.nativeElement, "class", i)
                                })]
                            }
                        }
                        resetRefs(e) {
                            e && (e._componentRefs ? e._componentRefs = e._componentRefs.filter(i => -1 === this.componentRefs.indexOf(i)) : sn(this.field, "_componentRefs", [])), this.componentRefs = []
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(pn), u(qn), u(Ci), u(N), Qt("hide-deprecation"))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Qee, 7, Je), 2 & e) {
                                let r;
                                O(r = P()) && (i.containerRef = r.first)
                            }
                        },
                        inputs: {
                            model: "model",
                            form: "form",
                            options: "options",
                            field: "field"
                        },
                        outputs: {
                            modelChange: "modelChange"
                        },
                        features: [ze],
                        decls: 2,
                        vars: 0,
                        consts: [
                            ["container", ""]
                        ],
                        template: function(e, i) {
                            1 & e && b(0, Kee, 0, 0, "ng-template", null, 0, Ui)
                        },
                        encapsulation: 2
                    }), t
                })(),
                va = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.renderer = e, this.elementRef = i, this.uiAttributesCache = {}, this.uiAttributes = null, this.uiEvents = {
                                listeners: [],
                                events: ["click", "keyup", "keydown", "keypress", "focus", "blur", "change"],
                                callback: (s, o) => {
                                    switch (s) {
                                        case "focus":
                                            return this.onFocus(o);
                                        case "blur":
                                            return this.onBlur(o);
                                        case "change":
                                            return this.onChange(o);
                                        default:
                                            return this.to[s](this.field, o)
                                    }
                                }
                            }, this.document = r
                        }
                        get to() {
                            return this.field.templateOptions || {}
                        }
                        get fieldAttrElements() {
                            return this.field && this.field._elementRefs || []
                        }
                        ngOnChanges(e) {
                            e.field && (this.field.name && this.setAttribute("name", this.field.name), this.uiEvents.listeners.forEach(i => i()), this.uiEvents.events.forEach(i => {
                                (this.to && this.to[i] || -1 !== ["focus", "blur", "change"].indexOf(i)) && this.uiEvents.listeners.push(this.renderer.listen(this.elementRef.nativeElement, i, r => this.uiEvents.callback(i, r)))
                            }), this.to && this.to.attributes && Sr(this.to, "attributes", ({
                                currentValue: i,
                                previousValue: r
                            }) => {
                                r && Object.keys(r).forEach(s => this.removeAttribute(s)), i && Object.keys(i).forEach(s => {
                                    null != i[s] && this.setAttribute(s, i[s])
                                })
                            }), this.detachElementRef(e.field.previousValue), this.attachElementRef(e.field.currentValue), 1 === this.fieldAttrElements.length && (!this.id && this.field.id && this.setAttribute("id", this.field.id), Sr(this.field, "focus", ({
                                currentValue: i
                            }) => {
                                this.toggleFocus(i)
                            }))), e.id && this.setAttribute("id", this.id)
                        }
                        ngDoCheck() {
                            if (!this.uiAttributes) {
                                const e = this.elementRef.nativeElement;
                                this.uiAttributes = [...wF, "tabindex", "placeholder", "readonly", "disabled", "step"].filter(i => !e.hasAttribute || !e.hasAttribute(i))
                            }
                            this.uiAttributes.forEach(e => {
                                const i = this.to[e];
                                this.uiAttributesCache[e] !== i && (!this.to.attributes || !this.to.attributes.hasOwnProperty(e.toLowerCase())) && (this.uiAttributesCache[e] = i, i || 0 === i ? this.setAttribute(e, !0 === i ? e : `${i}`) : this.removeAttribute(e))
                            })
                        }
                        ngOnDestroy() {
                            this.uiEvents.listeners.forEach(e => e()), this.detachElementRef(this.field)
                        }
                        toggleFocus(e) {
                            const i = this.fieldAttrElements ? this.fieldAttrElements[0] : null;
                            if (!i || !i.nativeElement.focus) return;
                            const r = !!this.document.activeElement && this.fieldAttrElements.some(({
                                nativeElement: s
                            }) => this.document.activeElement === s || s.contains(this.document.activeElement));
                            e && !r ? i.nativeElement.focus() : !e && r && i.nativeElement.blur()
                        }
                        onFocus(e) {
                            this.field.___$focus = !0, this.to.focus && this.to.focus(this.field, e)
                        }
                        onBlur(e) {
                            this.field.___$focus = !1, this.to.blur && this.to.blur(this.field, e)
                        }
                        onHostChange(e) {
                            e instanceof Event || this.onChange(e)
                        }
                        onChange(e) {
                            this.to.change && this.to.change(this.field, e), this.field.formControl && this.field.formControl.markAsDirty()
                        }
                        attachElementRef(e) {
                            !e || (e._elementRefs && -1 === e._elementRefs.indexOf(this.elementRef) ? e._elementRefs.push(this.elementRef) : sn(e, "_elementRefs", [this.elementRef]))
                        }
                        detachElementRef(e) {
                            const i = e && e._elementRefs ? this.fieldAttrElements.indexOf(this.elementRef) : -1; - 1 !== i && this.field._elementRefs.splice(i, 1)
                        }
                        setAttribute(e, i) {
                            this.renderer.setAttribute(this.elementRef.nativeElement, e, i)
                        }
                        removeAttribute(e) {
                            this.renderer.removeAttribute(this.elementRef.nativeElement, e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(qn), u(N), u(pe))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "formlyAttributes", ""]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && T("change", function(s) {
                                return i.onHostChange(s)
                            })
                        },
                        inputs: {
                            field: ["formlyAttributes", "field"],
                            id: "id"
                        },
                        features: [ze]
                    }), t
                })(),
                gu = (() => {
                    class t {
                        get model() {
                            return this.field.model
                        }
                        set model(e) {
                            console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        get form() {
                            return this.field.parent.formControl
                        }
                        set form(e) {
                            console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        get options() {
                            return this.field.options
                        }
                        set options(e) {
                            console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`)
                        }
                        get key() {
                            return this.field.key
                        }
                        get formControl() {
                            return this.field.formControl
                        }
                        get to() {
                            return this.field.templateOptions || {}
                        }
                        get showError() {
                            return this.options.showError(this)
                        }
                        get id() {
                            return this.field.id
                        }
                        get formState() {
                            return this.options.formState || {}
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            model: "model",
                            form: "form",
                            options: "options",
                            field: "field"
                        }
                    }), t
                })(),
                ste = (() => {
                    class t extends gu {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && J(Zee, 5, Je), 2 & e) {
                                let r;
                                O(r = P()) && (i.fieldComponent = r.first)
                            }
                        },
                        features: [A]
                    }), t
                })(),
                ote = (() => {
                    class t extends gu {
                        constructor() {
                            super(...arguments), this.defaultOptions = {
                                defaultValue: {}
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-group"]
                        ],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && Fr(i.field.fieldGroupClassName || "")
                        },
                        features: [A],
                        ngContentSelectors: vF,
                        decls: 2,
                        vars: 1,
                        consts: [
                            [3, "field", 4, "ngFor", "ngForOf"],
                            [3, "field"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), b(0, Xee, 1, 1, "formly-field", 0), me(1)), 2 & e && y("ngForOf", i.field.fieldGroup)
                        },
                        dependencies: [Dn, DF],
                        encapsulation: 2
                    }), t
                })(),
                ate = (() => {
                    class t {
                        constructor(e) {
                            this.formlyConfig = e
                        }
                        ngOnChanges() {
                            this.errorMessage$ = tt(this.field.formControl.statusChanges, this.field.options ? this.field.options.fieldChanges.pipe(Ie(({
                                field: e,
                                type: i,
                                property: r
                            }) => e === this.field && "expressionChanges" === i && -1 !== r.indexOf("validation"))) : z(null)).pipe(pt(null), vt(() => _o(this.errorMessage) ? this.errorMessage : z(this.errorMessage)))
                        }
                        get errorMessage() {
                            const e = this.field.formControl;
                            for (let i in e.errors)
                                if (e.errors.hasOwnProperty(i)) {
                                    let r = this.formlyConfig.getValidatorMessage(i);
                                    if (vo(e.errors[i])) {
                                        if (e.errors[i].errorPath) return;
                                        e.errors[i].message && (r = e.errors[i].message)
                                    }
                                    return this.field.validation && this.field.validation.messages && this.field.validation.messages[i] && (r = this.field.validation.messages[i]), this.field.validators && this.field.validators[i] && this.field.validators[i].message && (r = this.field.validators[i].message), this.field.asyncValidators && this.field.asyncValidators[i] && this.field.asyncValidators[i].message && (r = this.field.asyncValidators[i].message), "function" == typeof r ? r(e.errors[i], this.field) : r
                                }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(pn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-validation-message"]
                        ],
                        inputs: {
                            field: "field"
                        },
                        features: [ze],
                        decls: 2,
                        vars: 3,
                        template: function(e, i) {
                            1 & e && (w(0), ue(1, "async")), 2 & e && ve(De(1, 1, i.errorMessage$))
                        },
                        dependencies: [Kn],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                lte = (() => {
                    class t extends gu {
                        constructor(e) {
                            super(), this.sanitizer = e, this.innerHtml = {
                                content: null,
                                template: null
                            }
                        }
                        get template() {
                            return this.field && this.field.template !== this.innerHtml.template && (this.innerHtml = {
                                template: this.field.template,
                                content: this.to.safeHtml ? this.sanitizer.bypassSecurityTrustHtml(this.field.template) : this.field.template
                            }), this.innerHtml.content
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(qs))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-template"]
                        ],
                        features: [A],
                        decls: 1,
                        vars: 1,
                        consts: [
                            [3, "innerHtml"]
                        ],
                        template: function(e, i) {
                            1 & e && E(0, "div", 0), 2 & e && y("innerHtml", i.template, uh)
                        },
                        encapsulation: 2
                    }), t
                })();

            function MF(t, n, e) {
                return t instanceof Function ? t.apply(n, e) : !!t
            }
            class dte {
                prePopulate(n) {
                    if (n.parent || n.options._checkField) return;
                    let e = !1;
                    n.options._checkField = (i, r) => {
                        e || (e = !0, this.checkField(i, r), e = !1)
                    }
                }
                postPopulate(n) {
                    if (n.parent && !n._expressionProperties) {
                        if (sn(n, "_expressionProperties", {}), n.expressionProperties)
                            for (const e in n.expressionProperties) {
                                const i = n.expressionProperties[e];
                                if ("string" == typeof i || mu(i)) n._expressionProperties[e] = {
                                    expression: this._evalExpression(e, i, "templateOptions.disabled" === e && n.parent.expressionProperties && n.parent.expressionProperties.hasOwnProperty("templateOptions.disabled") ? () => n.parent.templateOptions.disabled : void 0)
                                }, "templateOptions.disabled" === e && Object.defineProperty(n._expressionProperties[e], "expressionValue", {
                                    get: () => n.templateOptions.disabled,
                                    set: () => {},
                                    enumerable: !0,
                                    configurable: !0
                                });
                                else if (i instanceof Ze) {
                                    const r = () => i.subscribe(l => {
                                        this.setExprValue(n, e, l), n.options && n.options._markForCheck && n.options._markForCheck(n)
                                    });
                                    let s = r();
                                    const o = n.hooks.onInit;
                                    n.hooks.onInit = () => (null === s && (s = r()), o && o(n));
                                    const a = n.hooks.onDestroy;
                                    n.hooks.onDestroy = () => {
                                        a && a(n), s.unsubscribe(), s = null
                                    }
                                }
                            }
                        n.hideExpression ? (delete n.hide, n.hideExpression = this._evalExpression("hide", n.hideExpression, () => {
                            let e = n.parent;
                            for (; e.parent && !e.hide;) e = e.parent;
                            return e.hide
                        })) : Sr(n, "hide", ({
                            currentValue: e,
                            firstChange: i
                        }) => {
                            n._hide = e, (!i || i && !0 === e) && n.options._hiddenFieldsForCheck.push(n)
                        })
                    }
                }
                _evalExpression(n, e, i) {
                    return (...r) => {
                        try {
                            return "string" == typeof e && (e = function cte(t, n) {
                                try {
                                    return -1 !== t.indexOf("this.field") && console.warn("NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead."), Function(...n, `return ${t};`)
                                } catch (e) {
                                    console.error(e)
                                }
                            }(e, ["model", "formState", "field"])), "function" != typeof e && (e = () => !!e), i && i() || e(...r)
                        } catch (s) {
                            throw s.message = `[Formly Error] [Expression "${n}"] ${s.message}`, s
                        }
                    }
                }
                _evalExpressionPath(n, e) {
                    if (n._expressionProperties[e] && n._expressionProperties[e].expressionPaths) return n._expressionProperties[e].expressionPaths;
                    let i = [];
                    return -1 === e.indexOf("[") ? i = e.split(".") : e.split(/[[\]]{1,2}/).filter(r => r).forEach(r => {
                        const s = r.match(/['|"](.*?)['|"]/);
                        s ? i.push(s[1]) : i.push(...r.split(".").filter(o => o))
                    }), n._expressionProperties[e] && (n._expressionProperties[e].expressionPaths = i), i
                }
                checkField(n, e = !1) {
                    const i = this._checkField(n, e);
                    n.options._hiddenFieldsForCheck.sort(r => r.hide ? -1 : 1).forEach(r => this.toggleFormControl(r, !!r.hide, !e)), n.options._hiddenFieldsForCheck = [], i && (this.checkField(n), n.options && n.options._markForCheck && n.options._markForCheck(n))
                }
                _checkField(n, e = !1) {
                    let i = !1;
                    return n.fieldGroup.forEach(r => {
                        !r.options || (this.checkFieldExpressionChange(r, e) && (i = !0), this.checkFieldVisibilityChange(r, e) && (n.options._hiddenFieldsForCheck.push(r), i = !0), r.fieldGroup && r.fieldGroup.length > 0 && this._checkField(r, e) && (i = !0))
                    }), i
                }
                checkFieldExpressionChange(n, e) {
                    if (!n || !n._expressionProperties) return !1;
                    let i = !1;
                    const r = n._expressionProperties;
                    for (const s in r) {
                        let o = MF(r[s].expression, {
                            field: n
                        }, [n.model, n.options.formState, n, e]);
                        "templateOptions.disabled" === s && (o = !!o), (e || r[s].expressionValue !== o && (!vo(o) && !mu(o) || mu(o) && "" + r[s].expressionValue != "" + o || _o(o) || JSON.stringify(o) !== JSON.stringify(r[s].expressionValue))) && (i = !0, r[s].expressionValue = o, this.setExprValue(n, s, o))
                    }
                    return i
                }
                checkFieldVisibilityChange(n, e) {
                    if (!n || bo(n.hideExpression)) return !1;
                    const i = !!MF(n.hideExpression, {
                        field: n
                    }, [n.model, n.options.formState, n, e]);
                    let r = !1;
                    return (i !== n.hide || e) && (r = !0, n.hide = i, n.templateOptions.hidden = i), r
                }
                setDisabledState(n, e) {
                    n.fieldGroup && n.fieldGroup.filter(i => !i.expressionProperties || !i.expressionProperties.hasOwnProperty("templateOptions.disabled")).forEach(i => this.setDisabledState(i, e)), n.key && n.templateOptions.disabled !== e && (n.templateOptions.disabled = e)
                }
                toggleFormControl(n, e, i) {
                    if (n.fieldGroup && n.fieldGroup.filter(r => !r.hideExpression).forEach(r => this.toggleFormControl(r, e, i)), n.formControl && n.key) {
                        sn(n, "_hide", !(!e && !n.hide));
                        const r = n.formControl;
                        r._fields && r._fields.length > 1 && yw(r), !0 !== e || r._fields && !r._fields.every(s => !!s._hide) ? !1 === e && (n.resetOnHide && n.parent && !pu(n.defaultValue) && pu(fu(n)) && hu(n, n.defaultValue), _w(n, void 0, !0), n.resetOnHide && n.fieldArray && (n.fieldGroup || []).length !== (n.model || []).length && n.options._buildForm(!0)) : (function gw(t, n = !1) {
                            const e = t.formControl,
                                i = e._fields ? e._fields.indexOf(t) : -1; - 1 !== i && e._fields.splice(i, 1);
                            const r = e.parent;
                            if (!r) return;
                            const s = {
                                emitEvent: n
                            };
                            if (r instanceof zl) {
                                const o = r.controls.findIndex(a => a === e); - 1 !== o && nm(r, s, () => r.removeAt(o))
                            } else if (r instanceof Xi) {
                                const o = yo(t),
                                    a = o[o.length - 1];
                                r.get([a]) === e && nm(r, s, () => r.removeControl(a))
                            }
                            e.setParent(null)
                        }(n, !0), i && n.resetOnHide && (n.formControl.reset({
                            value: void 0,
                            disabled: n.formControl.disabled
                        }), n.fieldGroup && (hu(n, void 0), n.formControl instanceof zl && (n.fieldGroup.length = 0))))
                    }
                    n.options.fieldChanges && n.options.fieldChanges.next({
                        field: n,
                        type: "hidden",
                        value: e
                    })
                }
                setExprValue(n, e, i) {
                    try {
                        let r = n;
                        const s = this._evalExpressionPath(n, e),
                            o = s.length - 1;
                        for (let a = 0; a < o; a++) r = r[s[a]];
                        r[s[o]] = i
                    } catch (r) {
                        throw r.message = `[Formly Error] [Expression "${e}"] ${r.message}`, r
                    }
                    if ("templateOptions.disabled" === e && n.key && this.setDisabledState(n, i), 0 === e.indexOf("model.")) {
                        const r = e.replace(/^model\./, ""),
                            s = n.key && e === r ? n.formControl : n.parent.formControl.get(r);
                        s && (!bo(s.value) || !bo(i)) && s.value !== i && s.patchValue(i)
                    }
                    this.emitExpressionChanges(n, e, i)
                }
                emitExpressionChanges(n, e, i) {
                    !n.options.fieldChanges || n.options.fieldChanges.next({
                        field: n,
                        type: "expressionChanges",
                        property: e,
                        value: i
                    })
                }
            }
            class ute {
                constructor(n) {
                    this.formlyConfig = n
                }
                onPopulate(n) {
                    this.initFieldValidation(n, "validators"), this.initFieldValidation(n, "asyncValidators")
                }
                initFieldValidation(n, e) {
                    const i = [];
                    if ("validators" === e && !(n.hasOwnProperty("fieldGroup") && !n.key) && i.push(this.getPredefinedFieldValidation(n)), n[e])
                        for (const r in n[e]) "validation" === r && !Array.isArray(n[e].validation) && (n[e].validation = [n[e].validation], console.warn(`NgxFormly(${n.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`)), "validation" === r ? i.push(...n[e].validation.map(s => this.wrapNgValidatorFn(n, s))) : i.push(this.wrapNgValidatorFn(n, n[e][r], r));
                    sn(n, "_" + e, i)
                }
                getPredefinedFieldValidation(n) {
                    let e = [];
                    return wF.forEach(i => Sr(n.templateOptions, i, ({
                        currentValue: r,
                        firstChange: s
                    }) => {
                        e = e.filter(o => o !== i), null != r && !1 !== r && e.push(i), !s && n.formControl && yw(n.formControl)
                    })), i => 0 === e.length ? null : jt.compose(e.map(r => () => {
                        const s = n.templateOptions[r];
                        switch (r) {
                            case "required":
                                return jt.required(i);
                            case "pattern":
                                return jt.pattern(s)(i);
                            case "minLength":
                                return jt.minLength(s)(i);
                            case "maxLength":
                                return jt.maxLength(s)(i);
                            case "min":
                                return jt.min(s)(i);
                            case "max":
                                return jt.max(s)(i)
                        }
                    }))(i)
                }
                wrapNgValidatorFn(n, e, i) {
                    let r = null;
                    if ("string" == typeof e && (r = ei(this.formlyConfig.getValidator(e))), "object" == typeof e && e.name && (r = ei(this.formlyConfig.getValidator(e.name)), e.options && (r.options = e.options)), "object" == typeof e && e.expression) {
                        const {
                            expression: s
                        } = e, o = mw(e, ["expression"]);
                        r = {
                            name: i,
                            validation: s,
                            options: Object.keys(o).length > 0 ? o : null
                        }
                    }
                    return "function" == typeof e && (r = {
                        name: i,
                        validation: e
                    }), s => {
                        const o = r.validation(s, n, r.options);
                        return function rte(t) {
                            return !!t && "function" == typeof t.then
                        }(o) ? o.then(a => this.handleAsyncResult(n, i ? !!a : a, r)) : _o(o) ? o.pipe(Z(a => this.handleAsyncResult(n, i ? !!a : a, r))) : this.handleResult(n, i ? !!o : o, r)
                    }
                }
                handleAsyncResult(n, e, i) {
                    return n.options && n.options._markForCheck && n.options._markForCheck(n), this.handleResult(n, e, i)
                }
                handleResult(n, e, {
                    name: i,
                    options: r
                }) {
                    "boolean" == typeof e && (e = e ? null : {
                        [i]: r || !0
                    });
                    const s = n.formControl;
                    return s._childrenErrors && s._childrenErrors[i] && s._childrenErrors[i](), vo(e) && Object.keys(e).forEach(o => {
                        const a = e[o].errorPath ? e[o].errorPath : (r || {}).errorPath,
                            l = a ? n.formControl.get(a) : null;
                        if (l) {
                            const d = mw(e[o], ["errorPath"]);
                            l.setErrors(Object.assign({}, l.errors || {}, {
                                [o]: d
                            })), !s._childrenErrors && sn(s, "_childrenErrors", {}), s._childrenErrors[o] = () => {
                                const v = mw(l.errors || {}, ["symbol" == typeof o ? o : o + ""]);
                                l.setErrors(0 === Object.keys(v).length ? null : v)
                            }
                        }
                    }), e
                }
            }
            class hte {
                constructor(n) {
                    this.config = n
                }
                onPopulate(n) {
                    !n.parent || (n.fieldGroup && !n.key ? sn(n, "formControl", n.parent.formControl) : this.addFormControl(n))
                }
                postPopulate(n) {
                    n.parent || this.setValidators(n)
                }
                addFormControl(n) {
                    let e = function CF(t) {
                        if (t.formControl) return t.formControl;
                        if (!1 === t.shareFormControl) return null;
                        const n = t.parent.formControl;
                        return n ? n.get(yo(t)) : null
                    }(n);
                    if (!e) {
                        const i = {
                                updateOn: n.modelOptions.updateOn
                            },
                            r = n.key ? fu(n) : n.defaultValue,
                            s = this.config ? this.config.resolveFieldTypeRef(n) : null;
                        if (s && s.componentType && s.componentType.createControl) {
                            const o = s.componentType;
                            console.warn(`NgxFormly: '${o.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`), e = o.createControl(r, n)
                        } else e = n.fieldGroup ? new Xi({}, i) : new jr(r, i)
                    }
                    _w(n, e)
                }
                setValidators(n, e = !1) {
                    let i = !1;
                    if (!1 === e && n.key && n.templateOptions && n.templateOptions.disabled && (e = !0), (n.fieldGroup || []).forEach(r => this.setValidators(r, e) && (i = !0)), n.key || !n.parent || !n.key && !n.fieldGroup) {
                        const {
                            formControl: r
                        } = n;
                        n.templateOptions = n.templateOptions || {}, n.key && r && r instanceof jr && (e && r.enabled && (r.disable({
                            emitEvent: !1,
                            onlySelf: !0
                        }), i = !0), !e && r.disabled && (r.enable({
                            emitEvent: !1,
                            onlySelf: !0
                        }), i = !0)), r && (null === r.validator || null === r.asyncValidator) && (r.setValidators(() => {
                            const s = jt.compose(this.mergeValidators(n, "_validators"));
                            return s ? s(r) : null
                        }), r.setAsyncValidators(() => {
                            const s = jt.composeAsync(this.mergeValidators(n, "_asyncValidators"));
                            return s ? s(r) : z(null)
                        }), i = !0), i && yw(r, !0)
                    }
                    return i
                }
                mergeValidators(n, e) {
                    const i = [],
                        r = n.formControl;
                    return r && r._fields && r._fields.length > 1 ? r._fields.filter(s => !s._hide).forEach(s => i.push(...s[e])) : n[e] && i.push(...n[e]), n.fieldGroup && n.fieldGroup.filter(s => !s.key && s.fieldGroup).forEach(s => i.push(...this.mergeValidators(s, e))), i
                }
            }
            class fte {
                constructor(n) {
                    this.formlyConfig = n, this.formId = 0
                }
                prePopulate(n) {
                    if (this.getFieldComponentInstance(n).prePopulate(), n.parent) return;
                    const e = n.options && n.options.fieldTransform || this.formlyConfig.extras.fieldTransform;
                    (Array.isArray(e) ? e : [e]).forEach(i => {
                        if (i && (console.warn("NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead."), !i(n.fieldGroup, n.model, n.formControl, n.options))) throw new Error("fieldTransform must return an array of fields")
                    })
                }
                onPopulate(n) {
                    this.initFieldOptions(n), this.getFieldComponentInstance(n).onPopulate(), n.fieldGroup && n.fieldGroup.forEach((e, i) => {
                        Object.defineProperty(e, "parent", {
                            get: () => n,
                            configurable: !0
                        }), Object.defineProperty(e, "index", {
                            get: () => i,
                            configurable: !0
                        }), this.formId++
                    })
                }
                postPopulate(n) {
                    this.getFieldComponentInstance(n).postPopulate()
                }
                initFieldOptions(n) {
                    const e = n.parent;
                    if (e) {
                        if (Object.defineProperty(n, "form", {
                                get: () => e.formControl,
                                configurable: !0
                            }), Object.defineProperty(n, "options", {
                                get: () => e.options,
                                configurable: !0
                            }), Object.defineProperty(n, "model", {
                                get: () => n.key && n.fieldGroup ? fu(n) : e.model,
                                configurable: !0
                            }), lc(n, {
                                id: ete(`formly_${this.formId}`, n, n.index),
                                hooks: {},
                                modelOptions: {},
                                validation: {
                                    messages: {}
                                },
                                templateOptions: n.type && n.key ? {
                                    label: "",
                                    placeholder: "",
                                    focus: !1,
                                    disabled: !1
                                } : {}
                            }), this.formlyConfig.extras.resetFieldOnHide && !1 !== n.resetOnHide && (n.resetOnHide = !0), n.lifecycle && console.warn("NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead."), "formly-template" !== n.type && (n.template || n.expressionProperties && n.expressionProperties.template) && (n.type && console.warn("NgxFormly: passing 'type' property is not allowed when 'template' is set."), n.type = "formly-template"), !n.type && n.fieldGroup && (n.type = "formly-group"), n.type && this.formlyConfig.getMergedField(n), n.parent) {
                            let i = !pu(n.key) && !pu(n.defaultValue) && pu(fu(n)) && (!n.resetOnHide || !(n.hide || n.hideExpression));
                            if (i && n.resetOnHide) {
                                let r = n.parent;
                                for (; r && !r.hideExpression && !r.hide;) r = r.parent;
                                i = !r || !(r.hideExpression || r.hide)
                            }
                            i && hu(n, n.defaultValue)
                        }
                        this.initFieldWrappers(n)
                    }
                }
                initFieldWrappers(n) {
                    n.wrappers = n.wrappers || [];
                    const e = Object.assign({
                        preWrapper: [],
                        postWrapper: []
                    }, n.templateOptions.templateManipulators || {});
                    n.wrappers = [...this.formlyConfig.templateManipulators.preWrapper.map(i => i(n)), ...e.preWrapper.map(i => i(n)), ...n.wrappers, ...this.formlyConfig.templateManipulators.postWrapper.map(i => i(n)), ...e.postWrapper.map(i => i(n))].filter((i, r, s) => i && r === s.indexOf(i))
                }
                getFieldComponentInstance(n) {
                    const e = this.formlyConfig.resolveFieldTypeRef(n),
                        i = e ? e.instance : {};
                    return {
                        prePopulate: () => i.prePopulate && i.prePopulate(n),
                        onPopulate: () => i.onPopulate && i.onPopulate(n),
                        postPopulate: () => i.postPopulate && i.postPopulate(n)
                    }
                }
            }

            function SF(t) {
                return {
                    types: [{
                        name: "formly-group",
                        component: ote
                    }, {
                        name: "formly-template",
                        component: lte
                    }],
                    extensions: [{
                        name: "core",
                        extension: new fte(t)
                    }, {
                        name: "field-validation",
                        extension: new ute(t)
                    }, {
                        name: "field-form",
                        extension: new hte(t)
                    }, {
                        name: "field-expression",
                        extension: new dte
                    }]
                }
            }
            let Is = (() => {
                    class t {
                        constructor(e, i = []) {
                            !i || i.forEach(r => e.addConfig(r))
                        }
                        static forRoot(e = {}) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: cc,
                                    multi: !0,
                                    useFactory: SF,
                                    deps: [pn]
                                }, {
                                    provide: cc,
                                    useValue: e,
                                    multi: !0
                                }, {
                                    provide: M0,
                                    useValue: e,
                                    multi: !0
                                }, pn, Ti]
                            }
                        }
                        static forChild(e = {}) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: cc,
                                    multi: !0,
                                    useFactory: SF,
                                    deps: [pn]
                                }, {
                                    provide: cc,
                                    useValue: e,
                                    multi: !0
                                }, {
                                    provide: M0,
                                    useValue: e,
                                    multi: !0
                                }, Ti]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(pn), C(cc, 8))
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut]
                    }), t
                })(),
                pte = (() => {
                    class t {
                        constructor(e, i) {
                            if (this.dialogRef = e, this.form = new iv({}), this.model = {}, this.options = {}, this.model = i.model ? ? {}, !i.fields) throw new Error("Fields cannot be null!");
                            this.fields = i.fields, console.log("MAT_DIALOG_DATA", i)
                        }
                        ngOnInit() {}
                        onSubmit(e, i) {
                            console.log(this.model), console.log(i), this.form.valid && this.dialogRef.close(i)
                        }
                        close() {
                            this.dialogRef.close()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro), u(Vd))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-criminal-record"]
                        ],
                        decls: 7,
                        vars: 4,
                        consts: [
                            [3, "formGroup", "ngSubmit"],
                            [3, "form", "fields", "model"],
                            ["mat-dialog-actions", "", 2, "display", "flex", "justify-content", "space-between"],
                            ["mat-button", "", "color", "warn", "mat-dialog-close", "cancel"],
                            ["mat-button", "", "type", "submit", "cdkFocusInitial", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "form", 0), T("ngSubmit", function(s) {
                                return i.onSubmit(s, i.model)
                            }), E(1, "formly-form", 1), f(2, "div", 2)(3, "button", 3), w(4, "Annuleren"), g(), f(5, "button", 4), w(6, "Ok"), g()()()), 2 & e && (y("formGroup", i.form), p(1), y("form", i.form)("fields", i.fields)("model", i.model))
                        },
                        dependencies: [Xt, qb, Jf, lo, ao, ui, bw]
                    }), t
                })();

            function kF(t) {
                return console.error(t), t instanceof mv ? function mte(t) {
                    return t.error ? .message ? t.error ? .message : 403 === t.status ? "Niet toegestaan!" : `Er ging iets mis probeer het opnieuw! (${t.status})`
                }(t) : "Er ging iets mis probeer het opnieuw!"
            }

            function gte(t, n) {
                1 & t && E(0, "mat-progress-bar", 16)
            }

            function _te(t, n) {
                1 & t && E(0, "mat-spinner", 17)
            }

            function yte(t, n) {
                if (1 & t && (f(0, "mat-header-cell", 32), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X("S", e.getColumnLabel("identifier"), " ")
                }
            }
            const bte = function(t) {
                return ["/user", t]
            };

            function vte(t, n) {
                if (1 & t && (f(0, "mat-cell", 33), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("routerLink", gn(2, bte, e.id)), p(1), X(" ", e.steamid, " ")
                }
            }

            function wte(t, n) {
                if (1 & t && (f(0, "mat-header-cell", 32), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X("", e.getColumnLabel("name"), " ")
                }
            }

            function Cte(t, n) {
                if (1 & t && (f(0, "mat-cell"), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    let i;
                    p(1), cs(" ", null !== (i = e.firstname) && void 0 !== i ? i : e.name, " ", e.lastname, " ")
                }
            }

            function xte(t, n) {
                if (1 & t && (f(0, "mat-header-cell", 32), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X("", e.getColumnLabel("rang"), " ")
                }
            }

            function Dte(t, n) {
                if (1 & t && (f(0, "mat-cell"), w(1), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    let r;
                    p(1), X(" ", null !== (r = i.names[e.rang]) && void 0 !== r ? r : e.rang, " ")
                }
            }

            function Mte(t, n) {
                1 & t && (f(0, "mat-header-cell", 32), w(1, "Username "), g())
            }

            function Ste(t, n) {
                if (1 & t && (f(0, "mat-cell"), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.username, " ")
                }
            }

            function kte(t, n) {
                1 & t && (f(0, "mat-header-cell", 32), w(1, "Deactiveren "), g())
            }

            function Ate(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-cell", 34), T("click", function(r) {
                        const o = ne(e).$implicit;
                        return ie(x(2).deactivateUser(r, o))
                    }), f(1, "button", 35), w(2), g()()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    p(1), y("color", e.deactivated ? "primary" : "warn"), p(1), X(" ", e.deactivated ? "Heractiveren" : "Deactiveren", " ")
                }
            }

            function Ete(t, n) {
                1 & t && E(0, "mat-header-cell")
            }

            function Tte(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-cell", 34), T("click", function(r) {
                        const o = ne(e).$implicit;
                        return ie(x(2).changePassword(r, o))
                    }), f(1, "button", 36)(2, "mat-icon"), w(3, "settings"), g()()()
                }
            }

            function Ite(t, n) {
                1 & t && E(0, "mat-header-row", 37)
            }

            function Rte(t, n) {
                1 & t && E(0, "mat-row", 38)
            }

            function Fte(t, n) {
                if (1 & t && (f(0, "mat-table", 18), oe(1, 19), b(2, yte, 2, 1, "mat-header-cell", 20), b(3, vte, 2, 4, "mat-cell", 21), ae(), oe(4, 22), b(5, wte, 2, 1, "mat-header-cell", 20), b(6, Cte, 2, 2, "mat-cell", 23), ae(), oe(7, 24), b(8, xte, 2, 1, "mat-header-cell", 20), b(9, Dte, 2, 1, "mat-cell", 23), ae(), oe(10, 25), b(11, Mte, 2, 0, "mat-header-cell", 20), b(12, Ste, 2, 1, "mat-cell", 23), ae(), oe(13, 26), b(14, kte, 2, 0, "mat-header-cell", 20), b(15, Ate, 3, 2, "mat-cell", 27), ae(), oe(16, 28), b(17, Ete, 1, 0, "mat-header-cell", 29), b(18, Tte, 4, 0, "mat-cell", 27), ae(), b(19, Ite, 1, 0, "mat-header-row", 30), b(20, Rte, 1, 0, "mat-row", 31), g()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    y("dataSource", i.dataSource)("matSortDirection", i.sortDirection)("matSortActive", i.sortActive), p(19), y("matHeaderRowDef", e)("matHeaderRowDefSticky", !0), p(1), y("matRowDefColumns", e)
                }
            }

            function Ote(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 42), T("click", function(r) {
                        return r.stopPropagation()
                    }), f(1, "mat-checkbox", 43), T("change", function(r) {
                        ne(e);
                        const s = x().$implicit;
                        return ie(x(3).selectChange(r, s.value))
                    }), w(2), g()()
                }
                if (2 & t) {
                    const e = x().$implicit,
                        i = x(3);
                    p(1), y("checked", e.value.displayed), p(1), X(" ", i.getColumnLabel(e.key), " ")
                }
            }

            function Pte(t, n) {
                if (1 & t && (oe(0), b(1, Ote, 3, 2, "div", 41), ae()), 2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    p(1), y("ngIf", i.canShowColumn(e.key))
                }
            }

            function Lte(t, n) {
                if (1 & t && (oe(0), b(1, Pte, 2, 1, "ng-container", 40), ue(2, "keyvalue"), ae()), 2 & t) {
                    const e = n.ngIf;
                    p(1), y("ngForOf", De(2, 1, e))
                }
            }

            function Nte(t, n) {
                1 & t && (b(0, Lte, 3, 3, "ng-container", 39), ue(1, "async")), 2 & t && y("ngIf", De(1, 1, x().columns$))
            }
            const Bte = function(t) {
                return {
                    name: t
                }
            };

            function Vte(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 44), T("click", function(r) {
                        return ne(e), ie(x().menuTrigger(r))
                    }), f(1, "mat-icon"), w(2, "more_vert"), g()()
                }
                if (2 & t) {
                    const e = n.name;
                    x(), y("matMenuTriggerFor", bt(22))("matMenuTriggerData", gn(2, Bte, e))
                }
            }
            const Hte = function() {
                return [5, 10, 20, 50, 100]
            };
            let $te = (() => {
                class t {
                    constructor(e, i, r, s, o, a, l) {
                        this.http = e, this.data = i, this.router = r, this.authService = s, this.route = o, this.snackbar = a, this.dialog = l, this.subs = new co, this.names = dw, this.displayedColumns = ["name", "rang", "deactivate"], this.loading$ = new Te(!1), this.filter = "", this.columns$ = new Te(new Map([
                            ["name", {
                                canShow: () => !0,
                                label: "Naam",
                                getValue: h => h.firstname,
                                displayed: !0
                            }],
                            ["rang", {
                                canShow: () => !0,
                                label: "Rang",
                                getValue: h => h.lastname,
                                displayed: !0
                            }],
                            ["deactivate", {
                                canShow: () => !0,
                                label: "Deactiveren",
                                getValue: h => h.deactivated,
                                displayed: !0
                            }],
                            ["manage", {
                                canShow: () => !0,
                                label: "Beheren",
                                getValue: h => !0,
                                displayed: !0
                            }],
                            ["username", {
                                canShow: () => !0,
                                label: "Username",
                                getValue: h => h.username,
                                displayed: !1
                            }],
                            ["identifier", {
                                canShow: () => !0,
                                label: "SteamId",
                                getValue: h => h.steamid,
                                displayed: !1
                            }]
                        ])), this.displayedColumns$ = new Te(["name", "rang", "deactivate"]), this.hiddenColumns$ = new Te([]), this.isLoggedIn = !1;
                        const c = this.hiddenColumns$.value,
                            d = this.displayedColumns$.value;
                        for (const h of this.columns$.value.keys()) d.includes(h) || c.push(h);
                        this.columns$.subscribe({
                            next: h => {
                                const m = [];
                                for (const [_, v] of h) v.displayed && m.push(_);
                                this.displayedColumns$.next(m)
                            }
                        }), this.hiddenColumns$.next(c), this.dataSource = new gee(this.data), this.loading$ = this.dataSource.loading$
                    }
                    ngOnDestroy() {
                        this.subs.unsubscribe()
                    }
                    ngOnInit() {
                        this.subs.sink = this.route.queryParams.subscribe(e => {
                            this.filter = e.filter ? ? "", e.page && (this.paginator.pageIndex = e.page ? ? 0), e.pageSize && (this.paginator.pageSize = Number.parseInt(e.pageSize)), e.sort && (this.sortActive = e.sort), e.sortDir && (this.sortDirection = this.sort ? .direction ? ? ""), setTimeout(() => {
                                this.loadPlayersPage()
                            }, 0)
                        }), this.subs.sink = this.authService.currentUser$.subscribe(e => {
                            this.isLoggedIn = this.authService.isLoggedIn(), this.user = e
                        }), this.isLoggedIn = this.authService.isLoggedIn(), this.user = this.authService.currentUserValue
                    }
                    updateQueryParams() {
                        const e = {},
                            i = this.paginator ? .pageIndex ? ? 0;
                        i > 0 && (e.page = i);
                        const r = this.paginator ? .pageSize ? ? 20;
                        20 != r && (e.pageSize = r);
                        const s = this.filter;
                        "" != s && (e.filter = s);
                        const o = this.sort ? .active ? ? "";
                        "" != o && (e.sort = o);
                        const a = this.sort ? .direction ? ? "";
                        "" != a && (e.sortDir = a), this.router.navigate([], {
                            queryParams: e
                        })
                    }
                    applyFilter(e) {
                        !e || (clearTimeout(this.timer), this.timer = setTimeout(() => {
                            this.filter = e ? .value.trim().toLowerCase(), this.paginator.pageIndex = 0, this.updateQueryParams()
                        }, 1e3))
                    }
                    ngAfterViewInit() {
                        this.sort.sortChange.subscribe(() => {
                            this.paginator.pageIndex = 0, this.updateQueryParams(), this.loadPlayersPage()
                        }), this.paginator.page.subscribe(() => {
                            this.updateQueryParams(), this.loadPlayersPage()
                        })
                    }
                    menuTrigger(e) {
                        e.stopPropagation()
                    }
                    changePassword(e, i) {
                        e.stopPropagation(), this.dialog.open(pte, {
                            data: {
                                model: i,
                                fields: [{
                                    validators: {
                                        validation: [{
                                            name: "mustMatch",
                                            options: {
                                                errorPath: "passwordConfirm"
                                            }
                                        }]
                                    },
                                    fieldGroup: [{
                                        key: "username",
                                        type: "input",
                                        templateOptions: {
                                            label: "Gebruikersnaam"
                                        }
                                    }, {
                                        key: "password",
                                        type: "input",
                                        templateOptions: {
                                            type: "password",
                                            label: "Wachtwoord",
                                            placeholder: "Wachtwoord"
                                        }
                                    }, {
                                        key: "passwordConfirm",
                                        type: "input",
                                        templateOptions: {
                                            type: "password",
                                            label: "Herhaal wachtwoord",
                                            placeholder: "Herhaal wachtwoord"
                                        }
                                    }, {
                                        key: "rang",
                                        type: "select",
                                        templateOptions: {
                                            label: "Rang",
                                            options: [{
                                                label: this.names[i.rang] ? ? i.rang,
                                                value: i.rang
                                            }, {
                                                label: "Sys Admin",
                                                value: "owner"
                                            }, {
                                                label: "Superadmin",
                                                value: "superadmin"
                                            }, {
                                                label: "Moderator",
                                                value: "moderator"
                                            }, {
                                                label: "Admin",
                                                value: "admin"
                                            }]
                                        }
                                    }, {
                                        key: "staff",
                                        type: "checkbox",
                                        templateOptions: {
                                            label: "Staff"
                                        }
                                    }]
                                }]
                            }
                        }).afterClosed().subscribe(s => {
                            !s || "cancel" === s || this.http.put(`/api/Users/${i.id}`, {
                                password: s.password,
                                staff: s.staff,
                                rang: s.rang,
                                username: s.username
                            }).subscribe({
                                error: o => {
                                    this.snackbar.open(kF(o), "OK")
                                }
                            })
                        })
                    }
                    canShowColumn(e) {
                        return this.columns$.value.get(e) ? .canShow.call(this) ? ? !1
                    }
                    getColumnLabel(e) {
                        return this.columns$.value.get(e) ? .label ? ? e
                    }
                    selectChange(e, i) {
                        i.displayed = e.checked, this.columns$.next(this.columns$.value)
                    }
                    handleError(e) {
                        this.snackbar.open(kF(e), "OK")
                    }
                    deactivateUser(e, i) {
                        e.stopPropagation(), Date.now() - this.startTime > 500 || this.dialog.open(uu, {
                            data: {
                                confirmMessage: `Weet u zeker dat u het account van **${i.firstname} ${i.lastname} (${dw[i.rang]})** wilt ${i.deactivated?"Heractiveren":"Deactiveren"}?`,
                                name: `${i.firstname} ${i.lastname} (${dw[i.rang]})`,
                                deactivated: i.deactivated
                            }
                        }).afterClosed().subscribe(s => {
                            console.log("The dialog was closed"), !0 === s && (i.deactivated ? this.http.patch(`/api/Users/${i.id}`, {}).subscribe(o => {
                                i.deactivated = o.deactivated
                            }, o => {
                                this.handleError(o)
                            }) : this.http.delete(`/api/Users/${i.id}`, {}).subscribe(o => {
                                i.deactivated = o.deactivated
                            }, o => {
                                this.handleError(o)
                            })), console.log(s)
                        })
                    }
                    activate(e, i) {
                        this.displayedColumns.forEach((r, s, o) => {
                            r === i && (o[s] = e)
                        })
                    }
                    loadPlayersPage() {
                        this.dataSource.loadUsers(this.paginator.pageIndex, this.paginator.pageSize, this.sort.active, this.sort.direction, this.filter)
                    }
                    displayed(e) {
                        return this.displayedColumns.findIndex(r => r === e) > -1
                    }
                    navigateTo(e) {
                        var i = this;
                        return Cr(function*() {
                            Date.now() - i.startTime > 500 || (i.data.cachedResult = yield i.data.findUsers(e.identifier).pipe(oi(() => z(null)), yl(() => i.dataSource.loadingSubject.next(!1))).toPromise(), i.router.navigate(["/players/" + e.identifier]))
                        })()
                    }
                    start() {
                        this.startTime = Date.now()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(wr), u(tF), u(gt), u(Bn), u(Yi), u(Xd), u(Bl))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-users"]
                    ],
                    viewQuery: function(e, i) {
                        if (1 & e && (J(mo, 5), J(po, 7)), 2 & e) {
                            let r;
                            O(r = P()) && (i.sort = r.first), O(r = P()) && (i.paginator = r.first)
                        }
                    },
                    decls: 26,
                    vars: 22,
                    consts: [
                        ["fxLayout", "column", 2, "max-height", "calc(98vh - 60px - 32px)", "overflow-y", "hidden"],
                        ["fxFlex", ""],
                        [2, "background-color", "transparent"],
                        ["mode", "query", 4, "ngIf"],
                        ["fxLayout", "row", "fxLayoutAlign", "end"],
                        [2, "width", "100%"],
                        ["matInput", "", "placeholder", "Filter", 1, "", 3, "value", "disabled", "keyup"],
                        ["mat-icon-button", "", 3, "matMenuTriggerFor", "matMenuTriggerData", "click"],
                        ["id", "players-home-container", 2, "background-color", "#FFFFFF"],
                        [1, "spinner-container"],
                        ["class", "mx-auto my-5", 4, "ngIf"],
                        ["matSort", "", 3, "dataSource", "matSortDirection", "matSortActive", 4, "ngIf"],
                        ["showFirstLastButtons", "", 3, "pageSize", "length", "pageSizeOptions"],
                        ["columnMenu", "matMenu"],
                        ["matMenuContent", ""],
                        ["butTemp", ""],
                        ["mode", "query"],
                        [1, "mx-auto", "my-5"],
                        ["matSort", "", 3, "dataSource", "matSortDirection", "matSortActive"],
                        ["matColumnDef", "identifier"],
                        ["mat-sort-header", "", "arrowPosition", "before", 4, "matHeaderCellDef"],
                        [3, "routerLink", 4, "matCellDef"],
                        ["matColumnDef", "name"],
                        [4, "matCellDef"],
                        ["matColumnDef", "rang"],
                        ["matColumnDef", "username"],
                        ["matColumnDef", "deactivate"],
                        [3, "click", 4, "matCellDef"],
                        ["matColumnDef", "manage"],
                        [4, "matHeaderCellDef"],
                        ["mat-header-row", "", 4, "matHeaderRowDef", "matHeaderRowDefSticky"],
                        ["matRipple", "", "class", "table-row", 4, "matRowDef", "matRowDefColumns"],
                        ["mat-sort-header", "", "arrowPosition", "before"],
                        [3, "routerLink"],
                        [3, "click"],
                        ["mat-button", "", 3, "color"],
                        ["mat-button", ""],
                        ["mat-header-row", ""],
                        ["matRipple", "", 1, "table-row"],
                        [4, "ngIf"],
                        [4, "ngFor", "ngForOf"],
                        ["class", "column-checkbox", 3, "click", 4, "ngIf"],
                        [1, "column-checkbox", 3, "click"],
                        [3, "checked", "change"],
                        ["mat-icon-button", "", 2, "width", "unset", 3, "matMenuTriggerFor", "matMenuTriggerData", "click"]
                    ],
                    template: function(e, i) {
                        if (1 & e && (f(0, "div", 0)(1, "div", 1)(2, "mat-grid-tile-footer", 2), b(3, gte, 1, 0, "mat-progress-bar", 3), ue(4, "async"), g(), f(5, "div", 4)(6, "mat-form-field", 5)(7, "input", 6), T("keyup", function(s) {
                                return i.applyFilter(s.target)
                            }), ue(8, "async"), g()(), f(9, "button", 7), T("click", function(s) {
                                return i.menuTrigger(s)
                            }), f(10, "mat-icon"), w(11, "more_vert"), g()()()(), f(12, "div", 8)(13, "div"), ue(14, "async"), f(15, "div", 9), b(16, _te, 1, 0, "mat-spinner", 10), ue(17, "async"), g(), b(18, Fte, 21, 6, "mat-table", 11), ue(19, "async"), E(20, "mat-paginator", 12), g()(), f(21, "mat-menu", null, 13), b(23, Nte, 2, 3, "ng-template", 14), g(), b(24, Vte, 3, 4, "ng-template", null, 15, Ui), g()), 2 & e) {
                            const r = bt(22);
                            p(3), y("ngIf", De(4, 11, i.dataSource.loading$)), p(4), y("value", i.filter)("disabled", De(8, 13, i.loading$)), p(2), y("matMenuTriggerFor", r), p(4), re("loading", De(14, 15, i.dataSource.loading$)), p(3), y("ngIf", De(17, 17, i.dataSource.loading$)), p(2), y("ngIf", De(19, 19, i.displayedColumns$)), p(2), y("pageSize", 20)("length", null == i.dataSource ? null : i.dataSource.length)("pageSizeOptions", td(21, Hte))
                        }
                    },
                    dependencies: [Dn, at, Ml, Nv, Bv, Yl, Hp, $p, Kv, Xt, nc, ga, ic, _a, ma, rc, ya, ba, sc, oc, li, Wr, ci, Nn, po, lu, Dr, mo, Np, ha, ho, fa, Kn, Ay],
                    styles: ["table[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{font-size:1vw;width:100%}.spinner-container[_ngcontent-%COMP%]{position:absolute;opacity:1;top:calc(50% - 48px);left:calc(50% - 48px);z-index:1000}.container[_ngcontent-%COMP%]{background-color:#fff;padding:30px}.mat-form-field[_ngcontent-%COMP%]{font-size:1rem;width:100%}.mat-column-manage[_ngcontent-%COMP%]{width:64px;text-align:center;font-weight:700;max-width:64px}.column-checkbox[_ngcontent-%COMP%]{margin-left:4px;margin-top:4px}#players-home-container[_ngcontent-%COMP%]{overflow-y:scroll;min-height:0;max-height:90%}.loading[_ngcontent-%COMP%]{min-height:50em;opacity:.6}.inactive[_ngcontent-%COMP%]{opacity:.6}.table-row[_ngcontent-%COMP%]{opacity:1;transition:all .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1);border-radius:4px}.example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{flex-basis:0}.example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{justify-content:space-between;align-items:center}mat-cell[_ngcontent-%COMP%]{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-o-text-overflow:ellipsis}"]
                }), t
            })();
            const AF = {
                    Black: "#0d1116",
                    Graphite: "#1c1d21",
                    "Black Steel": "#32383d",
                    "Cast Steel": "#454b4f",
                    Silver: "#999da0",
                    "Bluish Silver": "#c2c4c6",
                    "Rolled Steel": "#979a97",
                    "Shadow Silver": "#637380",
                    "Stone Silver": "#63625c",
                    "Midnight Silver": "#3c3f47",
                    "Cast Iron Silver": "#444e54",
                    "Anthracite Black": "#1d2129",
                    "Matte Black": "#13181f",
                    "Matte Gray": "#26282a",
                    "Matte Light Gray": "#515554",
                    "Util Black": "#151921",
                    "Util Black Poly": "#1e2429",
                    "Util Dark Silver": "#333a3c",
                    "Util Silver": "#8c9095",
                    "Util Gun Metal": "#39434d",
                    "Util Shadow Silver": "#506272",
                    "Worn Black": "#1e232f",
                    "Worn Graphite": "#363a3f",
                    "Worn Silver Grey": "#a0a199",
                    "Worn Silver": "#d3d3d3",
                    "Worn Blue Silver": "#b7bfca",
                    "Worn Shadow Silver": "#778794",
                    Red: "#c00e1a",
                    "Torino Red": "#da1918",
                    "Formula Red": "#b6111b",
                    "Blaze Red": "#a51e23",
                    "Grace Red": "#7b1a22",
                    "Garnet Red": "#8e1b1f",
                    "Sunset Red": "#6f1818",
                    "Cabernet Red": "#49111d",
                    "Candy Red": "#b60f25",
                    "Sunrise Orange": "#d44a17",
                    Gold: "#c2944f",
                    Orange: "#f78616",
                    "Matte Red": "#cf1f21",
                    "Matte Dark Red": "#732021",
                    "Matte Orange": "#f27d20",
                    "Matte Yellow": "#ffc91f",
                    "Util Red": "#9c1016",
                    "Util Bright Red": "#de0f18",
                    "Util Garnet Red": "#8f1e17",
                    "Worn Red": "#a94744",
                    "Worn Golden Red": "#b16c51",
                    "Worn Dark Red": "#371c25",
                    "Dark Green": "#132428",
                    "Racing Green": "#122e2b",
                    "Sea Green": "#12383c",
                    "Olive Green": "#31423f",
                    "Bright Green": "#155c2d",
                    "Gasoline Green": "#1b6770",
                    "Matte Lime Green": "#66b81f",
                    "Util Dark Green": "#22383e",
                    "Util Green": "#1d5a3f",
                    "Worn Dark Green": "#2d423f",
                    "Worn Green": "#45594b",
                    "Worn Sea Wash": "#65867f",
                    "Galaxy Blue": "#222e46",
                    "Dark Blue": "#233155",
                    "Saxon Blue": "#304c7e",
                    Blue: "#47578f",
                    "Mariner Blue": "#637ba7",
                    "Harbor Blue": "#394762",
                    "Diamond Blue": "#d6e7f1",
                    "Surf Blue": "#76afbe",
                    "Nautical Blue": "#345e72",
                    "Ultra Blue": "#0b9cf1",
                    "Schafter Purple": "#2f2d52",
                    "Spinnaker Purple": "#282c4d",
                    "Racing Blue": "#2354a1",
                    "Light Blue": "#6ea3c6",
                    "Util Dark Blue": "#112552",
                    "Util Midnight Blue": "#1b203e",
                    "Util Blue": "#275190",
                    "Util Sea Foam Blue": "#608592",
                    "Util Lightning Blue": "#2446a8",
                    "Util Maui Blue Poly": "#4271e1",
                    "Util Bright Blue/State Blue": "#3b39e0",
                    "Matte Dark Blue": "#1f2852",
                    "Matte Blue": "#253aa7",
                    "Matte Midnight Blue": "#1c3551",
                    "Worn Dark Blue": "#4c5f81",
                    "Worn Blue": "#58688e",
                    "Worn Baby Blue": "#74b5d8",
                    Yellow: "#ffcf20",
                    "Race Yellow": "#fbe212",
                    Bronze: "#916532",
                    "Dew Yellow/Yellow Bird": "#e0e13d",
                    "Lime Green": "#98d223",
                    Champagne: "#9b8c78",
                    "Feltzer Brown": "#503218",
                    "Creek Brown": "#473f2b",
                    "Chocolate Brown": "#221b19",
                    "Maple Brown": "#653f23",
                    "Saddle Brown": "#775c3e",
                    "Straw Brown": "#ac9975",
                    "Moss Brown": "#6c6b4b",
                    "Bison Brown": "#402e2b",
                    "WoodBeech Brown": "#a4965f",
                    "BeechWood Brown": "#46231a",
                    "Sienna Brown": "#752b19",
                    "Sandy Brown": "#bfae7b",
                    "Bleached Brown": "#dfd5b2",
                    Cream: "#f7edd5",
                    "Util Brown": "#3a2a1b",
                    "Util Medium Brown": "#785f33",
                    "Util Light Brown": "#b5a079",
                    "Ice White": "#fffff6",
                    "Frost White": "#eaeaea",
                    "Worn Honey Beige": "#b0ab94",
                    "Worn Brown": "#453831",
                    "Worn Dark Brown": "#2a282b",
                    "Worn Straw Beige": "#726c57",
                    "Brushed Steel": "#6a747c",
                    "Brushed Black Steel": "#354158",
                    "Brushed Aluminium": "#9ba0a8",
                    Chrome: "#5870a1",
                    "Worn Off White": "#eae6de",
                    "Util Off White": "#dfddd0",
                    "Worn Orange": "#f2ad2e",
                    "Worn Light Orange": "#f9a458",
                    "Pea Green/Securicor Green": "#83c566",
                    "Worn Taxi Yellow": "#f1cc40",
                    "Police Blue": "#4cc3da",
                    "Matte Green": "#4e6443",
                    "Matte Brown": "#bcac8f",
                    "Worn Orange 2": "#f8b658",
                    "Ice White Matte": "#fcf9f1",
                    "Worn White": "#fffffb",
                    "Worn Olive Army Green": "#81844c",
                    "Pure White": "#ffffff",
                    "Hot Pink": "#f21f99",
                    "Salmon Pink": "#fdd6cd",
                    "Pfister Pink": "#df5891",
                    "Bright Orange": "#f6ae20",
                    "Green Bright": "#b0ee6e",
                    "Fluorescent Blue": "#08e9fa",
                    "Midnight Blue": "#0a0c17",
                    "Midnight Purple": "#0c0d18",
                    "Wine Red": "#0e0d14",
                    "Hunter Green": "#9f9e8a",
                    "Bright Purple": "#621276",
                    "Midnight Purple/V Dark Blue": "#0b1421",
                    "Carbon Black": "#11141a",
                    "Matte Schafter Purple": "#6b1f7b",
                    "Matte Midnight Purple": "#1e1d22",
                    "Lava Red": "#bc1917",
                    "Matte Forest Green": "#2d362a",
                    "Matte Olive Drab": "#696748",
                    "Matte Dark Earth": "#7a6c55",
                    "Matte Desert Tan": "#c3b492",
                    "Matte Foliage Green": "#5a6352",
                    "Default Alloy Color": "#81827f",
                    "Epsilon Blue": "#afd6e4",
                    "Pure Gold": "#7a6440",
                    "Brushed Gold": "#7f6a48",
                    "Light Gold": "#c6ca7e"
                },
                vw = {
                    0: "Black",
                    1: "Graphite",
                    2: "Black Steel",
                    3: "Cast Steel",
                    4: "Silver",
                    5: "Bluish Silver",
                    6: "Rolled Steel",
                    7: "Shadow Silver",
                    8: "Stone Silver",
                    9: "Midnight Silver",
                    10: "Cast Iron Silver",
                    11: "Anthracite Black",
                    12: "Matte Black",
                    13: "Matte Gray",
                    14: "Matte Light Gray",
                    15: "Util Black",
                    16: "Util Black Poly",
                    17: "Util Dark Silver",
                    18: "Util Silver",
                    19: "Util Gun Metal",
                    20: "Util Shadow Silver",
                    21: "Worn Black",
                    22: "Worn Graphite",
                    23: "Worn Silver Grey",
                    24: "Worn Silver",
                    25: "Worn Blue Silver",
                    26: "Worn Shadow Silver",
                    27: "Red",
                    28: "Torino Red",
                    29: "Formula Red",
                    30: "Blaze Red",
                    31: "Grace Red",
                    32: "Garnet Red",
                    33: "Sunset Red",
                    34: "Cabernet Red",
                    35: "Candy Red",
                    36: "Sunrise Orange",
                    37: "Gold",
                    38: "Orange",
                    39: "Matte Red",
                    40: "Matte Dark Red",
                    41: "Matte Orange",
                    42: "Matte Yellow",
                    43: "Util Red",
                    44: "Util Bright Red",
                    45: "Util Garnet Red",
                    46: "Worn Red",
                    47: "Worn Golden Red",
                    48: "Worn Dark Red",
                    49: "Dark Green",
                    50: "Racing Green",
                    51: "Sea Green",
                    52: "Olive Green",
                    53: "Bright Green",
                    54: "Gasoline Green",
                    55: "Matte Lime Green",
                    56: "Util Dark Green",
                    57: "Util Green",
                    58: "Worn Dark Green",
                    59: "Worn Green",
                    60: "Worn Sea Wash",
                    61: "Galaxy Blue",
                    62: "Dark Blue",
                    63: "Saxon Blue",
                    64: "Blue",
                    65: "Mariner Blue",
                    66: "Harbor Blue",
                    67: "Diamond Blue",
                    68: "Surf Blue",
                    69: "Nautical Blue",
                    70: "Ultra Blue",
                    71: "Schafter Purple",
                    72: "Spinnaker Purple",
                    73: "Racing Blue",
                    74: "Light Blue",
                    75: "Util Dark Blue",
                    76: "Util Midnight Blue",
                    77: "Util Blue",
                    78: "Util Sea Foam Blue",
                    79: "Util Lightning Blue",
                    80: "Util Maui Blue Poly",
                    81: "Util Bright Blue/State Blue",
                    82: "Matte Dark Blue",
                    83: "Matte Blue",
                    84: "Matte Midnight Blue",
                    85: "Worn Dark Blue",
                    86: "Worn Blue",
                    87: "Worn Baby Blue",
                    88: "Yellow",
                    89: "Race Yellow",
                    90: "Bronze",
                    91: "Dew Yellow/Yellow Bird",
                    92: "Lime Green",
                    93: "Champagne",
                    94: "Feltzer Brown",
                    95: "Creek Brown",
                    96: "Chocolate Brown",
                    97: "Maple Brown",
                    98: "Saddle Brown",
                    99: "Straw Brown",
                    100: "Moss Brown",
                    101: "Bison Brown",
                    102: "WoodBeech Brown",
                    103: "BeechWood Brown",
                    104: "Sienna Brown",
                    105: "Sandy Brown",
                    106: "Bleached Brown",
                    107: "Cream",
                    108: "Util Brown",
                    109: "Util Medium Brown",
                    110: "Util Light Brown",
                    111: "Ice White",
                    112: "Frost White",
                    113: "Worn Honey Beige",
                    114: "Worn Brown",
                    115: "Worn Dark Brown",
                    116: "Worn Straw Beige",
                    117: "Brushed Steel",
                    118: "Brushed Black Steel",
                    119: "Brushed Aluminium",
                    120: "Chrome",
                    121: "Worn Off White",
                    122: "Util Off White",
                    123: "Worn Orange",
                    124: "Worn Light Orange",
                    125: "Pea Green/Securicor Green",
                    126: "Worn Taxi Yellow",
                    127: "Police Blue",
                    128: "Matte Green",
                    129: "Matte Brown",
                    130: "Worn Orange 2",
                    131: "Ice White Matte",
                    132: "Worn White",
                    133: "Worn Olive Army Green",
                    134: "Pure White",
                    135: "Hot Pink",
                    136: "Salmon Pink",
                    137: "Pfister Pink",
                    138: "Bright Orange",
                    139: "Green Bright",
                    140: "Fluorescent Blue",
                    141: "Midnight Blue",
                    142: "Midnight Purple",
                    143: "Wine Red",
                    144: "Hunter Green",
                    145: "Bright Purple",
                    146: "Midnight Purple/V Dark Blue",
                    147: "Carbon Black",
                    148: "Matte Schafter Purple",
                    149: "Matte Midnight Purple",
                    150: "Lava Red",
                    151: "Matte Forest Green",
                    152: "Matte Olive Drab",
                    153: "Matte Dark Earth",
                    154: "Matte Desert Tan",
                    155: "Matte Foliage Green",
                    156: "Default Alloy Color",
                    157: "Epsilon Blue",
                    158: "Pure Gold",
                    159: "Brushed Gold",
                    160: "Light Gold"
                };

            function jte(t) {
                return t ? AF[t] : "Onbekend"
            }
            class zte {
                constructor(n, e) {
                    this.vehiclesService = n, this.snackBar = e, this.vehiclesSubject = new Te([]), this.loadingSubject = new Te(!1), this.loading$ = this.loadingSubject.asObservable(), this.length = 10
                }
                connect(n) {
                    return this.vehiclesSubject.asObservable()
                }
                disconnect(n) {
                    this.vehiclesSubject.complete(), this.loadingSubject.complete()
                }
                loadVehicles(n = "", e = "", i = "asc", r = 0, s = 20) {
                    this.loadingSubject.next(!0), this.vehiclesService.findVehicles(n, i, r, s, "normal", !0, e).pipe(oi((o, a) => (0 === o.status && this.snackBar.open("Kon geen voertuigen ophalen van de back-end. Controleer of u een werkende internet verbinding heeft.", "OK"), a)), yl(() => this.loadingSubject.next(!1))).subscribe({
                        next: o => {
                            this.loadingSubject.next(!1), null != o ? (this.length = o.length, this.vehiclesSubject.next(o.payload)) : this.vehiclesSubject.next([])
                        },
                        error: o => {
                            this.loadingSubject.next(!1), 0 === o.status && this.snackBar.open("Kon geen voertuigen ophalen van de back-end. Controleer of u een werkende internet verbinding heeft.", "OK")
                        },
                        complete: () => {
                            this.loadingSubject.next(!1)
                        }
                    })
                }
            }
            let EF = (() => {
                class t {
                    constructor(e, i, r) {
                        this.authenticationService = e, this.snackBar = i, this.httpCached = r, this.defaultOptions = {
                            cacheMins: 60
                        }
                    }
                    findVehicles(e = "", i = "ASC", r = 1, s = 20, o = "full", a = !0, l = "") {
                        return (s < 1 || r < 0) && console.error("Invalid pageNumber or pageSize!"), this.httpCached.get("/api/OwnedVehicles", {
                            cacheMins: this.defaultOptions.cacheMins,
                            params: (new Ai).set("sortOrder", i).set("page", r.toString()).set("pageSize", s.toString()).set("includeJob", a.toString()).set("dataType", o).set("sortColumn", l).set("filter", e)
                        }).pipe(oi((c, d) => {
                            throw 401 === c ? .status && (this.snackBar.open("Token is afgekeurd door backend, log aub opnieuw in.", "OK"), this.authenticationService.logout()), c
                        }))
                    }
                    get(e) {
                        return this.httpCached.get("/api/OwnedVehicles/" + e, this.defaultOptions)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C(Bn), C(Xd), C(yp))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function Ute(t, n) {
                1 & t && E(0, "mat-progress-bar", 14)
            }

            function Gte(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-form-field", 15)(1, "input", 16), T("keyup", function(r) {
                        return ne(e), ie(x(2).applyFilter(r.target))
                    }), ue(2, "async"), g()()
                }
                if (2 & t) {
                    const e = x(2);
                    p(1), y("disabled", De(2, 1, e.loading$))
                }
            }

            function Wte(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 4)(1, "mat-grid-tile-footer", 8), b(2, Ute, 1, 0, "mat-progress-bar", 9), g(), f(3, "div", 10), b(4, Gte, 3, 3, "mat-form-field", 11), f(5, "button", 12), T("click", function() {
                        return ne(e), ie(x().toggleFilter())
                    }), f(6, "mat-icon"), w(7, "filter_list"), g()(), f(8, "button", 13), T("click", function(r) {
                        return ne(e), ie(x().menuTrigger(r))
                    }), f(9, "mat-icon"), w(10, "more_vert"), g()()()()
                }
                if (2 & t) {
                    const e = n.ngIf,
                        i = x(),
                        r = bt(9);
                    p(2), y("ngIf", e.loading), p(2), y("ngIf", i.showFilter), p(4), y("matMenuTriggerFor", r)
                }
            }

            function qte(t, n) {
                1 & t && (f(0, "th", 31), w(1, " Kenteken "), g())
            }

            function Yte(t, n) {
                if (1 & t && (f(0, "td", 32)(1, "mat-chip-list")(2, "mat-chip", 33), w(3), g()()()), 2 & t) {
                    const e = n.$implicit;
                    p(3), ve(null == e ? null : e.plate)
                }
            }

            function Qte(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("mName"), " ")
                }
            }

            function Kte(t, n) {
                if (1 & t && (f(0, "td", 35), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", null == e ? null : e.mName, " ")
                }
            }

            function Zte(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("ownerFirstname"), " ")
                }
            }

            function Xte(t, n) {
                if (1 & t && (f(0, "td", 35), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", null == e || null == e.ownerNavigation ? null : e.ownerNavigation.firstname, " ")
                }
            }

            function Jte(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("ownerLastname"), " ")
                }
            }

            function ene(t, n) {
                if (1 & t && (f(0, "td", 35), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", null == e || null == e.ownerNavigation ? null : e.ownerNavigation.lastname, " ")
                }
            }

            function tne(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("primaryColor"), " ")
                }
            }
            const ww = function(t) {
                return {
                    "background-color": t
                }
            };

            function nne(t, n) {
                if (1 & t && (f(0, "td", 35)(1, "button", 36), w(2), g(), w(3), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), y("ngStyle", gn(3, ww, i.getHexColor(i.getPrimaryColor(e)))), p(1), X(" ", i.getPrimaryColor(e).charAt(0), ""), p(1), X("", i.getPrimaryColor(e), " ")
                }
            }

            function ine(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("secondaryColor"), " ")
                }
            }

            function rne(t, n) {
                if (1 & t && (f(0, "td", 35)(1, "button", 36), w(2), g(), w(3), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), y("ngStyle", gn(3, ww, i.getHexColor(i.getSecondaryColor(e)))), p(1), X(" ", i.getSecondaryColor(e).charAt(0), ""), p(1), X("", i.getSecondaryColor(e), " ")
                }
            }

            function sne(t, n) {
                if (1 & t && (f(0, "th", 34), w(1), g()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.getColumnLabel("pearlescentColor"), " ")
                }
            }

            function one(t, n) {
                if (1 & t && (f(0, "td", 35)(1, "button", 36), w(2), g(), w(3), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), y("ngStyle", gn(3, ww, i.getHexColor(i.getPearlescentColor(e)))), p(1), X(" ", i.getPearlescentColor(e).charAt(0), ""), p(1), X("", i.getPearlescentColor(e), " ")
                }
            }

            function ane(t, n) {
                1 & t && E(0, "tr", 37)
            }

            function lne(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "tr", 38), T("click", function() {
                        const s = ne(e).$implicit;
                        return ie(x(2).openVoertuig(s))
                    }), g()
                }
            }

            function cne(t, n) {
                if (1 & t && (f(0, "table", 17), oe(1, 18), b(2, qte, 2, 0, "th", 19), b(3, Yte, 4, 1, "td", 20), ae(), oe(4, 21), b(5, Qte, 2, 1, "th", 22), b(6, Kte, 2, 1, "td", 23), ae(), oe(7, 24), b(8, Zte, 2, 1, "th", 22), b(9, Xte, 2, 1, "td", 23), ae(), oe(10, 25), b(11, Jte, 2, 1, "th", 22), b(12, ene, 2, 1, "td", 23), ae(), oe(13, 26), b(14, tne, 2, 1, "th", 22), b(15, nne, 4, 5, "td", 23), ae(), oe(16, 27), b(17, ine, 2, 1, "th", 22), b(18, rne, 4, 5, "td", 23), ae(), oe(19, 28), b(20, sne, 2, 1, "th", 22), b(21, one, 4, 5, "td", 23), ae(), b(22, ane, 1, 0, "tr", 29), b(23, lne, 1, 0, "tr", 30), g()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    y("dataSource", i.dataSource)("trackBy", i.trackByPlate), p(22), y("matHeaderRowDef", e), p(1), y("matRowDefColumns", e)
                }
            }

            function dne(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 41)(1, "mat-checkbox", 42), T("change", function(r) {
                        ne(e);
                        const s = x().$implicit;
                        return ie(x(2).selectChange(r, s))
                    }), w(2), g()()
                }
                if (2 & t) {
                    const e = x().$implicit,
                        i = x(2);
                    p(1), y("checked", !0), p(1), X(" ", i.getColumnLabel(e), " ")
                }
            }

            function une(t, n) {
                if (1 & t && (oe(0), b(1, dne, 3, 2, "div", 40), ae()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), y("ngIf", i.canShowColumn(e))
                }
            }

            function hne(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 41)(1, "mat-checkbox", 42), T("change", function(r) {
                        ne(e);
                        const s = x().$implicit;
                        return ie(x(2).selectChange(r, s))
                    }), w(2), g()()
                }
                if (2 & t) {
                    const e = x().$implicit,
                        i = x(2);
                    p(1), y("checked", !1), p(1), X(" ", i.getColumnLabel(e), " ")
                }
            }

            function fne(t, n) {
                if (1 & t && (oe(0), b(1, hne, 3, 2, "div", 40), ae()), 2 & t) {
                    const e = n.$implicit,
                        i = x(2);
                    p(1), y("ngIf", i.canShowColumn(e))
                }
            }

            function pne(t, n) {
                if (1 & t && (b(0, une, 2, 1, "ng-container", 39), ue(1, "async"), b(2, fne, 2, 1, "ng-container", 39), ue(3, "async")), 2 & t) {
                    const e = x();
                    y("ngForOf", De(1, 2, e.displayedColumns$)), p(2), y("ngForOf", De(3, 4, e.hiddenColumns$))
                }
            }
            const mne = function(t) {
                    return {
                        loading: t
                    }
                },
                gne = function() {
                    return [5, 10, 20, 50, 100]
                };
            let _ne = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.data = e, this.router = i, this.snackBar = r, this.columns = new Map([
                                ["plate", {
                                    canShow: () => !0,
                                    label: "Kenteken",
                                    getValue: a => a.plate
                                }],
                                ["mName", {
                                    canShow: () => !0,
                                    label: "Model",
                                    getValue: a => a.mName
                                }],
                                ["ownerFirstname", {
                                    canShow: () => !0,
                                    label: "Voornaam",
                                    getValue: a => a.ownerNavigation ? .firstname
                                }],
                                ["ownerLastname", {
                                    canShow: () => !0,
                                    label: "Achternaam",
                                    getValue: a => a.ownerNavigation ? .lastname
                                }],
                                ["primaryColor", {
                                    canShow: () => !0,
                                    label: "Kleur",
                                    getValue: a => a.primaryColor
                                }],
                                ["secondaryColor", {
                                    canShow: () => !0,
                                    label: "Secondaire kleur",
                                    getValue: a => a.secondaryColor
                                }],
                                ["pearlescentColor", {
                                    canShow: () => !0,
                                    label: "Parelmoer kleur",
                                    getValue: a => a.pearlescentColor
                                }]
                            ]), this.displayedColumns$ = new Te(["plate", "mName", "ownerFirstname", "ownerLastname"]), this.hiddenColumns$ = new Te([]), this.loading$ = new Te(!1), this.filter = "", this.showFilter = !0, this.getHexColor = jte;
                            const s = this.hiddenColumns$.value,
                                o = this.displayedColumns$.value;
                            for (const a of this.columns.keys()) o.includes(a) || s.push(a);
                            this.hiddenColumns$.next(s)
                        }
                        selectChange(e, i) {
                            let r = this.displayedColumns$.value,
                                s = this.hiddenColumns$.value;
                            e.checked ? (r.push(i), this.displayedColumns$.next(r), s = s.filter(o => o !== i), this.hiddenColumns$.next(s)) : (s.push(i), this.hiddenColumns$.next(s), r = r.filter(o => o !== i), this.displayedColumns$.next(r)), console.log(e)
                        }
                        getVehProps(e) {
                            return e.vehicle ? (e.vehicleData ? ? (e.vehicleData = JSON.parse(e.vehicle)), e.vehicleData) : null
                        }
                        getPrimaryColor(e) {
                            const i = this.getVehProps(e);
                            return i ? vw[i.color1] ? ? "Onbekend" : "Onbekend"
                        }
                        getSecondaryColor(e) {
                            const i = this.getVehProps(e);
                            return i ? vw[i.color2] ? ? "Onbekend" : "Onbekend"
                        }
                        getPearlescentColor(e) {
                            const i = this.getVehProps(e);
                            return i ? vw[i.pearlescentColor] ? ? "Onbekend" : "Onbekend"
                        }
                        ngOnInit() {
                            this.dataSource = new zte(this.data, this.snackBar), this.dataSource.loadVehicles("", "", ""), this.loading$.next(!1)
                        }
                        trackByPlate(e, i) {
                            return null == i ? null : i.plate
                        }
                        toggleFilter() {
                            this.showFilter = !this.showFilter
                        }
                        ngAfterViewInit() {
                            this.sort.sortChange.subscribe(() => {
                                this.paginator.pageIndex = 0, this.loadVehiclesPage()
                            }), this.paginator.page.subscribe(() => this.loadVehiclesPage()), setTimeout(() => console.log(this.columnMenu), 1e3)
                        }
                        menuTrigger(e) {
                            e.preventDefault(), e.stopPropagation()
                        }
                        canShowColumn(e) {
                            return this.columns.get(e) ? .canShow.call(this) ? ? !1
                        }
                        getColumnLabel(e) {
                            return this.columns.get(e) ? .label ? ? e
                        }
                        getValue(e, i) {
                            return this.columns.get(e) ? .getValue(i) ? ? "Onbekend"
                        }
                        sortData(e) {
                            this.paginator.pageIndex = 0, this.loadVehiclesPage()
                        }
                        loadVehiclesPage() {
                            this.dataSource.loadVehicles(this.filter, this.sort.active, this.sort.direction, this.paginator.pageIndex, this.paginator.pageSize)
                        }
                        applyFilter(e) {
                            !e || (clearTimeout(this.timer), this.timer = setTimeout(() => {
                                this.filter = e.value.trim().toLowerCase(), this.paginator.pageIndex = 0, this.loadVehiclesPage()
                            }, 1e3))
                        }
                        displayed(e) {
                            return this.displayedColumns$.value.findIndex(r => r === e) > -1
                        }
                        start() {
                            this.startTime = Date.now()
                        }
                        openVoertuig(e) {
                            this.router.navigate(["voertuig", e.plate])
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(EF), u(gt), u(Xd))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-vervoersmiddel"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && (J(mo, 5), J(po, 7)), 2 & e) {
                                let r;
                                O(r = P()) && (i.sort = r.first), O(r = P()) && (i.paginator = r.first)
                            }
                        },
                        inputs: {
                            columnMenu: "columnMenu"
                        },
                        decls: 11,
                        vars: 12,
                        consts: [
                            ["fxLayout", "column", 2, "max-height", "calc(98vh - 60px - 32px)", "overflow-y", "hidden"],
                            ["fxFlex", "", 4, "ngIf"],
                            [2, "overflow-y", "scroll", "min-height", "0", "max-height", "90%"],
                            ["mat-table", "", "matSort", "", 3, "dataSource", "trackBy", 4, "ngIf"],
                            ["fxFlex", ""],
                            ["showFirstLastButtons", "", 3, "pageSize", "length", "pageSizeOptions"],
                            ["columnMenu", "matMenu"],
                            ["matMenuContent", ""],
                            [2, "background-color", "transparent"],
                            ["mode", "query", 4, "ngIf"],
                            ["fxLayout", "row", "fxLayoutAlign", "end"],
                            ["style", "width: 100%;", 4, "ngIf"],
                            ["mat-icon-button", "", 3, "click"],
                            ["mat-icon-button", "", 3, "matMenuTriggerFor", "matMenuTriggerData", "click"],
                            ["mode", "query"],
                            [2, "width", "100%"],
                            ["matInput", "", "placeholder", "Filter", 1, "", 3, "disabled", "keyup"],
                            ["mat-table", "", "matSort", "", 3, "dataSource", "trackBy"],
                            ["matColumnDef", "plate"],
                            ["mat-header-cell", "", "mat-sort-header", "", "scope", "col", "id", "plate-title", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "aria-labelledby", "plate-title", 4, "matCellDef"],
                            ["matColumnDef", "mName"],
                            ["mat-header-cell", "", "mat-sort-header", "", "scope", "col", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "ownerFirstname"],
                            ["matColumnDef", "ownerLastname"],
                            ["matColumnDef", "primaryColor"],
                            ["matColumnDef", "secondaryColor"],
                            ["matColumnDef", "pearlescentColor"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 3, "click", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", "mat-sort-header", "", "scope", "col", "id", "plate-title"],
                            ["mat-cell", "", "aria-labelledby", "plate-title"],
                            ["color", "primary", "selected", ""],
                            ["mat-header-cell", "", "mat-sort-header", "", "scope", "col"],
                            ["mat-cell", ""],
                            [1, "color-button", 2, "appearance", "none", "border", "none !important", 3, "ngStyle"],
                            ["mat-header-row", ""],
                            ["mat-row", "", 3, "click"],
                            [4, "ngFor", "ngForOf"],
                            ["class", "column-checkbox", 4, "ngIf"],
                            [1, "column-checkbox"],
                            [3, "checked", "change"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0), b(1, Wte, 11, 3, "div", 1), ue(2, "async"), f(3, "div", 2), b(4, cne, 24, 4, "table", 3), ue(5, "async"), g(), f(6, "div", 4), E(7, "mat-paginator", 5), g()(), f(8, "mat-menu", null, 6), b(10, pne, 4, 6, "ng-template", 7), g()), 2 & e && (p(1), y("ngIf", gn(9, mne, De(2, 5, i.dataSource.loading$))), p(3), y("ngIf", De(5, 7, i.displayedColumns$)), p(3), y("pageSize", 20)("length", null == i.dataSource ? null : i.dataSource.length)("pageSizeOptions", td(11, gne)))
                        },
                        dependencies: [Dn, at, Gs, Nv, Bv, Yl, Hp, $p, Kv, Xt, nc, ga, ic, _a, ma, rc, ya, ba, sc, oc, Wr, cw, au, ci, Nn, po, lu, mo, Np, ha, ho, fa, Ep, Kn],
                        styles: ["table[_ngcontent-%COMP%]{width:100%}.color-button[_ngcontent-%COMP%]{margin-right:5px}"]
                    }), t
                })(),
                yne = (() => {
                    class t {
                        constructor(e, i) {
                            this.dialogRef = e, this.form = new iv({}), this.model = {
                                date: new Date,
                                charge: "",
                                description: "",
                                term: ""
                            }, this.fields = [{
                                key: "charge",
                                type: "input",
                                templateOptions: {
                                    label: "Strafbaar feit",
                                    placeholder: "Strafbaar feit",
                                    required: !0
                                }
                            }, {
                                key: "description",
                                type: "input",
                                templateOptions: {
                                    label: "Uitgebreide beschrijving strafbaar feit",
                                    placeholder: "Uitgebreide beschrijving strafbaar feit:",
                                    required: !0
                                }
                            }, {
                                key: "term",
                                type: "input",
                                templateOptions: {
                                    label: "Straf",
                                    placeholder: "Opgelegde straf (bijv. 1J + boete \u20ac20.000,-)",
                                    required: !0
                                }
                            }, {
                                key: "date",
                                type: "datepicker",
                                templateOptions: {
                                    label: "Datum",
                                    placeholder: "Datum",
                                    required: !0,
                                    dateFormat: "dd/mm/yyyy HH:MM",
                                    hourFormat: "24",
                                    showTime: !0
                                }
                            }], console.log("MAT_DIALOG_DATA", i)
                        }
                        ngOnInit() {}
                        onSubmit(e) {
                            console.log(this.model), this.dialogRef.close(e)
                        }
                        close() {
                            this.dialogRef.close()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro), u(Vd))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-criminal-record"]
                        ],
                        decls: 7,
                        vars: 4,
                        consts: [
                            [3, "formGroup", "ngSubmit"],
                            [3, "form", "fields", "model"],
                            ["mat-dialog-actions", "", 2, "display", "flex", "justify-content", "space-between"],
                            ["mat-button", "", "color", "warn", "mat-dialog-close", "cancel"],
                            ["mat-button", "", "type", "submit", "cdkFocusInitial", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "form", 0), T("ngSubmit", function() {
                                return i.onSubmit(i.model)
                            }), E(1, "formly-form", 1), f(2, "div", 2)(3, "button", 3), w(4, "Annuleren"), g(), f(5, "button", 4), w(6, "Ok"), g()()()), 2 & e && (y("formGroup", i.form), p(1), y("form", i.form)("fields", i.fields)("model", i.model))
                        },
                        dependencies: [Xt, qb, Jf, lo, ao, ui, bw]
                    }), t
                })(),
                bne = (() => {
                    class t {
                        constructor(e, i) {
                            this.dialogRef = e, this.form = new iv({}), this.model = {
                                id: void 0,
                                identifier: void 0,
                                content: void 0,
                                sanctions: void 0,
                                officerId: void 0,
                                date: new Date,
                                dateTimeUnix: void 0,
                                officerIdentifier: void 0,
                                officerName: void 0,
                                isArrestWarrant: !1
                            }, this.fields = [{
                                key: "content",
                                type: "textarea",
                                templateOptions: {
                                    label: "Notitie",
                                    placeholder: "Beschrijf incident / notitie",
                                    required: !0
                                }
                            }, {
                                key: "sanctions",
                                type: "textarea",
                                templateOptions: {
                                    label: "Sanctie",
                                    placeholder: "Sanctie",
                                    required: !0
                                }
                            }, {
                                key: "date",
                                type: "datepicker",
                                templateOptions: {
                                    label: "Datum",
                                    placeholder: "Datum",
                                    required: !0,
                                    dateFormat: "dd/mm/yyyy HH:MM",
                                    hourFormat: "24",
                                    showTime: !0
                                }
                            }, {
                                key: "isArrestWarrant",
                                type: "checkbox",
                                templateOptions: {
                                    label: "Arrestatiebevel",
                                    required: !0
                                }
                            }]
                        }
                        ngOnInit() {}
                        onSubmit(e) {
                            this.form.valid && (console.log(this.model), this.dialogRef.close(e))
                        }
                        close() {
                            this.dialogRef.close()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ro), u(Vd))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-notes"]
                        ],
                        decls: 7,
                        vars: 4,
                        consts: [
                            [3, "formGroup", "ngSubmit"],
                            [3, "form", "fields", "model"],
                            ["mat-dialog-actions", "", 2, "display", "flex", "justify-content", "space-between"],
                            ["mat-button", "", "color", "warn", "mat-dialog-close", "cancel"],
                            ["mat-button", "", "type", "submit", "cdkFocusInitial", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "form", 0), T("ngSubmit", function() {
                                return i.onSubmit(i.model)
                            }), E(1, "formly-form", 1), f(2, "div", 2)(3, "button", 3), w(4, "Annuleren"), g(), f(5, "button", 4), w(6, "Ok"), g()()()), 2 & e && (y("formGroup", i.form), p(1), y("form", i.form)("fields", i.fields)("model", i.model))
                        },
                        dependencies: [Xt, qb, Jf, lo, ao, ui, bw]
                    }), t
                })();

            function vne(t, n) {
                1 & t && me(0)
            }
            const TF = ["*"];

            function wne(t, n) {}
            const Cne = function(t) {
                    return {
                        animationDuration: t
                    }
                },
                xne = function(t, n) {
                    return {
                        value: t,
                        params: n
                    }
                },
                Dne = ["tabListContainer"],
                Mne = ["tabList"],
                Sne = ["tabListInner"],
                kne = ["nextPaginator"],
                Ane = ["previousPaginator"],
                Ene = ["tabBodyWrapper"],
                Tne = ["tabHeader"];

            function Ine(t, n) {}

            function Rne(t, n) {
                1 & t && b(0, Ine, 0, 0, "ng-template", 10), 2 & t && y("cdkPortalOutlet", x().$implicit.templateLabel)
            }

            function Fne(t, n) {
                1 & t && w(0), 2 & t && ve(x().$implicit.textLabel)
            }

            function One(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 6), T("click", function() {
                        const r = ne(e),
                            s = r.$implicit,
                            o = r.index,
                            a = x(),
                            l = bt(1);
                        return ie(a._handleClick(s, l, o))
                    })("cdkFocusChange", function(r) {
                        const o = ne(e).index;
                        return ie(x()._tabFocusChanged(r, o))
                    }), f(1, "div", 7), b(2, Rne, 1, 1, "ng-template", 8), b(3, Fne, 1, 1, "ng-template", null, 9, Ui), g()()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = bt(4),
                        s = x();
                    re("mat-tab-label-active", s.selectedIndex === i), y("id", s._getTabLabelId(i))("ngClass", e.labelClass)("disabled", e.disabled)("matRippleDisabled", e.disabled || s.disableRipple), q("tabIndex", s._getTabIndex(e, i))("aria-posinset", i + 1)("aria-setsize", s._tabs.length)("aria-controls", s._getTabContentId(i))("aria-selected", s.selectedIndex === i)("aria-label", e.ariaLabel || null)("aria-labelledby", !e.ariaLabel && e.ariaLabelledby ? e.ariaLabelledby : null), p(2), y("ngIf", e.templateLabel)("ngIfElse", r)
                }
            }

            function Pne(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-tab-body", 11), T("_onCentered", function() {
                        return ne(e), ie(x()._removeTabBodyWrapperHeight())
                    })("_onCentering", function(r) {
                        return ne(e), ie(x()._setTabBodyWrapperHeight(r))
                    }), g()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x();
                    re("mat-tab-body-active", r.selectedIndex === i), y("id", r._getTabContentId(i))("ngClass", e.bodyClass)("content", e.content)("position", e.position)("origin", e.origin)("animationDuration", r.animationDuration)("preserveContent", r.preserveContent), q("tabindex", null != r.contentTabIndex && r.selectedIndex === i ? r.contentTabIndex : null)("aria-labelledby", r._getTabLabelId(i))
                }
            }
            const Lne = new R("MatInkBarPositioner", {
                providedIn: "root",
                factory: function Nne() {
                    return n => ({
                        left: n ? (n.offsetLeft || 0) + "px" : "0",
                        width: n ? (n.offsetWidth || 0) + "px" : "0"
                    })
                }
            });
            let IF = (() => {
                class t {
                    constructor(e, i, r, s) {
                        this._elementRef = e, this._ngZone = i, this._inkBarPositioner = r, this._animationMode = s
                    }
                    alignToElement(e) {
                        this.show(), this._ngZone.run(() => {
                            this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                                const i = this._inkBarPositioner(e),
                                    r = this._elementRef.nativeElement;
                                r.style.left = i.left, r.style.width = i.width
                            })
                        })
                    }
                    show() {
                        this._elementRef.nativeElement.style.visibility = "visible"
                    }
                    hide() {
                        this._elementRef.nativeElement.style.visibility = "hidden"
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(ce), u(Lne), u(Tt, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["mat-ink-bar"]
                    ],
                    hostAttrs: [1, "mat-ink-bar"],
                    hostVars: 2,
                    hostBindings: function(e, i) {
                        2 & e && re("_mat-animation-noopable", "NoopAnimations" === i._animationMode)
                    }
                }), t
            })();
            const RF = new R("MatTabContent");
            let Bne = (() => {
                class t {
                    constructor(e) {
                        this.template = e
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(rt))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "matTabContent", ""]
                    ],
                    features: [Q([{
                        provide: RF,
                        useExisting: t
                    }])]
                }), t
            })();
            const FF = new R("MatTabLabel"),
                OF = new R("MAT_TAB");
            let Vne = (() => {
                class t extends o8 {
                    constructor(e, i, r) {
                        super(e, i), this._closestTab = r
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(rt), u(Je), u(OF, 8))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "mat-tab-label", ""],
                        ["", "matTabLabel", ""]
                    ],
                    features: [Q([{
                        provide: FF,
                        useExisting: t
                    }]), A]
                }), t
            })();
            const Hne = Si(class {}),
                PF = new R("MAT_TAB_GROUP");
            let LF = (() => {
                class t extends Hne {
                    constructor(e, i) {
                        super(), this._viewContainerRef = e, this._closestTabGroup = i, this.textLabel = "", this._contentPortal = null, this._stateChanges = new H, this.position = null, this.origin = null, this.isActive = !1
                    }
                    get templateLabel() {
                        return this._templateLabel
                    }
                    set templateLabel(e) {
                        this._setTemplateLabelInput(e)
                    }
                    get content() {
                        return this._contentPortal
                    }
                    ngOnChanges(e) {
                        (e.hasOwnProperty("textLabel") || e.hasOwnProperty("disabled")) && this._stateChanges.next()
                    }
                    ngOnDestroy() {
                        this._stateChanges.complete()
                    }
                    ngOnInit() {
                        this._contentPortal = new yr(this._explicitContent || this._implicitContent, this._viewContainerRef)
                    }
                    _setTemplateLabelInput(e) {
                        e && e._closestTab === this && (this._templateLabel = e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Je), u(PF, 8))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["mat-tab"]
                    ],
                    contentQueries: function(e, i, r) {
                        if (1 & e && (_e(r, FF, 5), _e(r, RF, 7, rt)), 2 & e) {
                            let s;
                            O(s = P()) && (i.templateLabel = s.first), O(s = P()) && (i._explicitContent = s.first)
                        }
                    },
                    viewQuery: function(e, i) {
                        if (1 & e && J(rt, 7), 2 & e) {
                            let r;
                            O(r = P()) && (i._implicitContent = r.first)
                        }
                    },
                    inputs: {
                        disabled: "disabled",
                        textLabel: ["label", "textLabel"],
                        ariaLabel: ["aria-label", "ariaLabel"],
                        ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                        labelClass: "labelClass",
                        bodyClass: "bodyClass"
                    },
                    exportAs: ["matTab"],
                    features: [Q([{
                        provide: OF,
                        useExisting: t
                    }]), A, ze],
                    ngContentSelectors: TF,
                    decls: 1,
                    vars: 0,
                    template: function(e, i) {
                        1 & e && (Xe(), b(0, vne, 1, 0, "ng-template"))
                    },
                    encapsulation: 2
                }), t
            })();
            const $ne = {
                translateTab: Nt("translateTab", [Oe("center, void, left-origin-center, right-origin-center", ee({
                    transform: "none"
                })), Oe("left", ee({
                    transform: "translate3d(-100%, 0, 0)",
                    minHeight: "1px",
                    visibility: "hidden"
                })), Oe("right", ee({
                    transform: "translate3d(100%, 0, 0)",
                    minHeight: "1px",
                    visibility: "hidden"
                })), Ue("* => left, * => right, left => center, right => center", Ye("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")), Ue("void => left-origin-center", [ee({
                    transform: "translate3d(-100%, 0, 0)",
                    visibility: "hidden"
                }), Ye("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")]), Ue("void => right-origin-center", [ee({
                    transform: "translate3d(100%, 0, 0)",
                    visibility: "hidden"
                }), Ye("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")])])
            };
            let jne = (() => {
                    class t extends Ki {
                        constructor(e, i, r, s) {
                            super(e, i, s), this._host = r, this._centeringSub = Re.EMPTY, this._leavingSub = Re.EMPTY
                        }
                        ngOnInit() {
                            super.ngOnInit(), this._centeringSub = this._host._beforeCentering.pipe(pt(this._host._isCenterPosition(this._host._position))).subscribe(e => {
                                e && !this.hasAttached() && this.attach(this._host._content)
                            }), this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {
                                this._host.preserveContent || this.detach()
                            })
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(), this._centeringSub.unsubscribe(), this._leavingSub.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Ci), u(Je), u(Ve(() => NF)), u(pe))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matTabBodyHost", ""]
                        ],
                        features: [A]
                    }), t
                })(),
                zne = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._elementRef = e, this._dir = i, this._dirChangeSubscription = Re.EMPTY, this._translateTabComplete = new H, this._onCentering = new V, this._beforeCentering = new V, this._afterLeavingCenter = new V, this._onCentered = new V(!0), this.animationDuration = "500ms", this.preserveContent = !1, i && (this._dirChangeSubscription = i.change.subscribe(s => {
                                this._computePositionAnimationState(s), r.markForCheck()
                            })), this._translateTabComplete.pipe(Js((s, o) => s.fromState === o.fromState && s.toState === o.toState)).subscribe(s => {
                                this._isCenterPosition(s.toState) && this._isCenterPosition(this._position) && this._onCentered.emit(), this._isCenterPosition(s.fromState) && !this._isCenterPosition(this._position) && this._afterLeavingCenter.emit()
                            })
                        }
                        set position(e) {
                            this._positionIndex = e, this._computePositionAnimationState()
                        }
                        ngOnInit() {
                            "center" == this._position && null != this.origin && (this._position = this._computePositionFromOrigin(this.origin))
                        }
                        ngOnDestroy() {
                            this._dirChangeSubscription.unsubscribe(), this._translateTabComplete.complete()
                        }
                        _onTranslateTabStarted(e) {
                            const i = this._isCenterPosition(e.toState);
                            this._beforeCentering.emit(i), i && this._onCentering.emit(this._elementRef.nativeElement.clientHeight)
                        }
                        _getLayoutDirection() {
                            return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr"
                        }
                        _isCenterPosition(e) {
                            return "center" == e || "left-origin-center" == e || "right-origin-center" == e
                        }
                        _computePositionAnimationState(e = this._getLayoutDirection()) {
                            this._position = this._positionIndex < 0 ? "ltr" == e ? "left" : "right" : this._positionIndex > 0 ? "ltr" == e ? "right" : "left" : "center"
                        }
                        _computePositionFromOrigin(e) {
                            const i = this._getLayoutDirection();
                            return "ltr" == i && e <= 0 || "rtl" == i && e > 0 ? "left-origin-center" : "right-origin-center"
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Mt, 8), u(ge))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            _content: ["content", "_content"],
                            origin: "origin",
                            animationDuration: "animationDuration",
                            preserveContent: "preserveContent",
                            position: "position"
                        },
                        outputs: {
                            _onCentering: "_onCentering",
                            _beforeCentering: "_beforeCentering",
                            _afterLeavingCenter: "_afterLeavingCenter",
                            _onCentered: "_onCentered"
                        }
                    }), t
                })(),
                NF = (() => {
                    class t extends zne {
                        constructor(e, i, r) {
                            super(e, i, r)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(Mt, 8), u(ge))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-tab-body"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Ki, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._portalHost = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-tab-body"],
                        features: [A],
                        decls: 3,
                        vars: 6,
                        consts: [
                            ["cdkScrollable", "", 1, "mat-tab-body-content"],
                            ["content", ""],
                            ["matTabBodyHost", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0, 1), T("@translateTab.start", function(s) {
                                return i._onTranslateTabStarted(s)
                            })("@translateTab.done", function(s) {
                                return i._translateTabComplete.next(s)
                            }), b(2, wne, 0, 0, "ng-template", 2), g()), 2 & e && y("@translateTab", Uo(3, xne, i._position, gn(1, Cne, i.animationDuration)))
                        },
                        dependencies: [jne],
                        styles: ['.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*="visibility: hidden"]{display:none}'],
                        encapsulation: 2,
                        data: {
                            animation: [$ne.translateTab]
                        }
                    }), t
                })();
            const BF = new R("MAT_TABS_CONFIG"),
                Une = Si(class {});
            let VF = (() => {
                class t extends Une {
                    constructor(e) {
                        super(), this.elementRef = e
                    }
                    focus() {
                        this.elementRef.nativeElement.focus()
                    }
                    getOffsetLeft() {
                        return this.elementRef.nativeElement.offsetLeft
                    }
                    getOffsetWidth() {
                        return this.elementRef.nativeElement.offsetWidth
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N))
                }, t.\u0275dir = M({
                    type: t,
                    selectors: [
                        ["", "matTabLabelWrapper", ""]
                    ],
                    hostVars: 3,
                    hostBindings: function(e, i) {
                        2 & e && (q("aria-disabled", !!i.disabled), re("mat-tab-disabled", i.disabled))
                    },
                    inputs: {
                        disabled: "disabled"
                    },
                    features: [A]
                }), t
            })();
            const HF = Zs({
                passive: !0
            });
            let qne = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l) {
                            this._elementRef = e, this._changeDetectorRef = i, this._viewportRuler = r, this._dir = s, this._ngZone = o, this._platform = a, this._animationMode = l, this._scrollDistance = 0, this._selectedIndexChanged = !1, this._destroyed = new H, this._showPaginationControls = !1, this._disableScrollAfter = !0, this._disableScrollBefore = !0, this._stopScrolling = new H, this._disablePagination = !1, this._selectedIndex = 0, this.selectFocusedIndex = new V, this.indexFocused = new V, o.runOutsideAngular(() => {
                                un(e.nativeElement, "mouseleave").pipe(le(this._destroyed)).subscribe(() => {
                                    this._stopInterval()
                                })
                            })
                        }
                        get disablePagination() {
                            return this._disablePagination
                        }
                        set disablePagination(e) {
                            this._disablePagination = G(e)
                        }
                        get selectedIndex() {
                            return this._selectedIndex
                        }
                        set selectedIndex(e) {
                            e = ht(e), this._selectedIndex != e && (this._selectedIndexChanged = !0, this._selectedIndex = e, this._keyManager && this._keyManager.updateActiveItem(e))
                        }
                        ngAfterViewInit() {
                            un(this._previousPaginator.nativeElement, "touchstart", HF).pipe(le(this._destroyed)).subscribe(() => {
                                this._handlePaginatorPress("before")
                            }), un(this._nextPaginator.nativeElement, "touchstart", HF).pipe(le(this._destroyed)).subscribe(() => {
                                this._handlePaginatorPress("after")
                            })
                        }
                        ngAfterContentInit() {
                            const e = this._dir ? this._dir.change : z("ltr"),
                                i = this._viewportRuler.change(150),
                                r = () => {
                                    this.updatePagination(), this._alignInkBarToSelectedTab()
                                };
                            this._keyManager = new Rd(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap(), this._keyManager.updateActiveItem(this._selectedIndex), this._ngZone.onStable.pipe(Fe(1)).subscribe(r), tt(e, i, this._items.changes, this._itemsResized()).pipe(le(this._destroyed)).subscribe(() => {
                                this._ngZone.run(() => {
                                    Promise.resolve().then(() => {
                                        this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance)), r()
                                    })
                                }), this._keyManager.withHorizontalOrientation(this._getLayoutDirection())
                            }), this._keyManager.change.pipe(le(this._destroyed)).subscribe(s => {
                                this.indexFocused.emit(s), this._setTabFocus(s)
                            })
                        }
                        _itemsResized() {
                            return "function" != typeof ResizeObserver ? Ni : this._items.changes.pipe(pt(this._items), vt(e => new Ze(i => this._ngZone.runOutsideAngular(() => {
                                const r = new ResizeObserver(s => i.next(s));
                                return e.forEach(s => r.observe(s.elementRef.nativeElement)), () => {
                                    r.disconnect()
                                }
                            }))), Mb(1), Ie(e => e.some(i => i.contentRect.width > 0 && i.contentRect.height > 0)))
                        }
                        ngAfterContentChecked() {
                            this._tabLabelCount != this._items.length && (this.updatePagination(), this._tabLabelCount = this._items.length, this._changeDetectorRef.markForCheck()), this._selectedIndexChanged && (this._scrollToLabel(this._selectedIndex), this._checkScrollingControls(), this._alignInkBarToSelectedTab(), this._selectedIndexChanged = !1, this._changeDetectorRef.markForCheck()), this._scrollDistanceChanged && (this._updateTabScrollPosition(), this._scrollDistanceChanged = !1, this._changeDetectorRef.markForCheck())
                        }
                        ngOnDestroy() {
                            this._destroyed.next(), this._destroyed.complete(), this._stopScrolling.complete()
                        }
                        _handleKeydown(e) {
                            if (!$t(e)) switch (e.keyCode) {
                                case 13:
                                case 32:
                                    this.focusIndex !== this.selectedIndex && (this.selectFocusedIndex.emit(this.focusIndex), this._itemSelected(e));
                                    break;
                                default:
                                    this._keyManager.onKeydown(e)
                            }
                        }
                        _onContentChanges() {
                            const e = this._elementRef.nativeElement.textContent;
                            e !== this._currentTextContent && (this._currentTextContent = e || "", this._ngZone.run(() => {
                                this.updatePagination(), this._alignInkBarToSelectedTab(), this._changeDetectorRef.markForCheck()
                            }))
                        }
                        updatePagination() {
                            this._checkPaginationEnabled(), this._checkScrollingControls(), this._updateTabScrollPosition()
                        }
                        get focusIndex() {
                            return this._keyManager ? this._keyManager.activeItemIndex : 0
                        }
                        set focusIndex(e) {
                            !this._isValidIndex(e) || this.focusIndex === e || !this._keyManager || this._keyManager.setActiveItem(e)
                        }
                        _isValidIndex(e) {
                            if (!this._items) return !0;
                            const i = this._items ? this._items.toArray()[e] : null;
                            return !!i && !i.disabled
                        }
                        _setTabFocus(e) {
                            if (this._showPaginationControls && this._scrollToLabel(e), this._items && this._items.length) {
                                this._items.toArray()[e].focus();
                                const i = this._tabListContainer.nativeElement;
                                i.scrollLeft = "ltr" == this._getLayoutDirection() ? 0 : i.scrollWidth - i.offsetWidth
                            }
                        }
                        _getLayoutDirection() {
                            return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr"
                        }
                        _updateTabScrollPosition() {
                            if (this.disablePagination) return;
                            const e = this.scrollDistance,
                                i = "ltr" === this._getLayoutDirection() ? -e : e;
                            this._tabList.nativeElement.style.transform = `translateX(${Math.round(i)}px)`, (this._platform.TRIDENT || this._platform.EDGE) && (this._tabListContainer.nativeElement.scrollLeft = 0)
                        }
                        get scrollDistance() {
                            return this._scrollDistance
                        }
                        set scrollDistance(e) {
                            this._scrollTo(e)
                        }
                        _scrollHeader(e) {
                            return this._scrollTo(this._scrollDistance + ("before" == e ? -1 : 1) * this._tabListContainer.nativeElement.offsetWidth / 3)
                        }
                        _handlePaginatorClick(e) {
                            this._stopInterval(), this._scrollHeader(e)
                        }
                        _scrollToLabel(e) {
                            if (this.disablePagination) return;
                            const i = this._items ? this._items.toArray()[e] : null;
                            if (!i) return;
                            const r = this._tabListContainer.nativeElement.offsetWidth,
                                {
                                    offsetLeft: s,
                                    offsetWidth: o
                                } = i.elementRef.nativeElement;
                            let a, l;
                            "ltr" == this._getLayoutDirection() ? (a = s, l = a + o) : (l = this._tabListInner.nativeElement.offsetWidth - s, a = l - o);
                            const c = this.scrollDistance,
                                d = this.scrollDistance + r;
                            a < c ? this.scrollDistance -= c - a + 60 : l > d && (this.scrollDistance += l - d + 60)
                        }
                        _checkPaginationEnabled() {
                            if (this.disablePagination) this._showPaginationControls = !1;
                            else {
                                const e = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;
                                e || (this.scrollDistance = 0), e !== this._showPaginationControls && this._changeDetectorRef.markForCheck(), this._showPaginationControls = e
                            }
                        }
                        _checkScrollingControls() {
                            this.disablePagination ? this._disableScrollAfter = this._disableScrollBefore = !0 : (this._disableScrollBefore = 0 == this.scrollDistance, this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance(), this._changeDetectorRef.markForCheck())
                        }
                        _getMaxScrollDistance() {
                            return this._tabListInner.nativeElement.scrollWidth - this._tabListContainer.nativeElement.offsetWidth || 0
                        }
                        _alignInkBarToSelectedTab() {
                            const e = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null,
                                i = e ? e.elementRef.nativeElement : null;
                            i ? this._inkBar.alignToElement(i) : this._inkBar.hide()
                        }
                        _stopInterval() {
                            this._stopScrolling.next()
                        }
                        _handlePaginatorPress(e, i) {
                            i && null != i.button && 0 !== i.button || (this._stopInterval(), Pd(650, 100).pipe(le(tt(this._stopScrolling, this._destroyed))).subscribe(() => {
                                const {
                                    maxScrollDistance: r,
                                    distance: s
                                } = this._scrollHeader(e);
                                (0 === s || s >= r) && this._stopInterval()
                            }))
                        }
                        _scrollTo(e) {
                            if (this.disablePagination) return {
                                maxScrollDistance: 0,
                                distance: 0
                            };
                            const i = this._getMaxScrollDistance();
                            return this._scrollDistance = Math.max(0, Math.min(i, e)), this._scrollDistanceChanged = !0, this._checkScrollingControls(), {
                                maxScrollDistance: i,
                                distance: this._scrollDistance
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Hr), u(Mt, 8), u(ce), u(Ft), u(Tt, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            disablePagination: "disablePagination"
                        }
                    }), t
                })(),
                Yne = (() => {
                    class t extends qne {
                        constructor(e, i, r, s, o, a, l) {
                            super(e, i, r, s, o, a, l), this._disableRipple = !1
                        }
                        get disableRipple() {
                            return this._disableRipple
                        }
                        set disableRipple(e) {
                            this._disableRipple = G(e)
                        }
                        _itemSelected(e) {
                            e.preventDefault()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Hr), u(Mt, 8), u(ce), u(Ft), u(Tt, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            disableRipple: "disableRipple"
                        },
                        features: [A]
                    }), t
                })(),
                Qne = (() => {
                    class t extends Yne {
                        constructor(e, i, r, s, o, a, l) {
                            super(e, i, r, s, o, a, l)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Hr), u(Mt, 8), u(ce), u(Ft), u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-tab-header"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, VF, 4), 2 & e) {
                                let s;
                                O(s = P()) && (i._items = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && (J(IF, 7), J(Dne, 7), J(Mne, 7), J(Sne, 7), J(kne, 5), J(Ane, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i._inkBar = r.first), O(r = P()) && (i._tabListContainer = r.first), O(r = P()) && (i._tabList = r.first), O(r = P()) && (i._tabListInner = r.first), O(r = P()) && (i._nextPaginator = r.first), O(r = P()) && (i._previousPaginator = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-tab-header"],
                        hostVars: 4,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-tab-header-pagination-controls-enabled", i._showPaginationControls)("mat-tab-header-rtl", "rtl" == i._getLayoutDirection())
                        },
                        inputs: {
                            selectedIndex: "selectedIndex"
                        },
                        outputs: {
                            selectFocusedIndex: "selectFocusedIndex",
                            indexFocused: "indexFocused"
                        },
                        features: [A],
                        ngContentSelectors: TF,
                        decls: 14,
                        vars: 10,
                        consts: [
                            ["aria-hidden", "true", "type", "button", "mat-ripple", "", "tabindex", "-1", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-before", "mat-elevation-z4", 3, "matRippleDisabled", "disabled", "click", "mousedown", "touchend"],
                            ["previousPaginator", ""],
                            [1, "mat-tab-header-pagination-chevron"],
                            [1, "mat-tab-label-container", 3, "keydown"],
                            ["tabListContainer", ""],
                            ["role", "tablist", 1, "mat-tab-list", 3, "cdkObserveContent"],
                            ["tabList", ""],
                            [1, "mat-tab-labels"],
                            ["tabListInner", ""],
                            ["aria-hidden", "true", "type", "button", "mat-ripple", "", "tabindex", "-1", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-after", "mat-elevation-z4", 3, "matRippleDisabled", "disabled", "mousedown", "click", "touchend"],
                            ["nextPaginator", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "button", 0, 1), T("click", function() {
                                return i._handlePaginatorClick("before")
                            })("mousedown", function(s) {
                                return i._handlePaginatorPress("before", s)
                            })("touchend", function() {
                                return i._stopInterval()
                            }), E(2, "div", 2), g(), f(3, "div", 3, 4), T("keydown", function(s) {
                                return i._handleKeydown(s)
                            }), f(5, "div", 5, 6), T("cdkObserveContent", function() {
                                return i._onContentChanges()
                            }), f(7, "div", 7, 8), me(9), g(), E(10, "mat-ink-bar"), g()(), f(11, "button", 9, 10), T("mousedown", function(s) {
                                return i._handlePaginatorPress("after", s)
                            })("click", function() {
                                return i._handlePaginatorClick("after")
                            })("touchend", function() {
                                return i._stopInterval()
                            }), E(13, "div", 2), g()), 2 & e && (re("mat-tab-header-pagination-disabled", i._disableScrollBefore), y("matRippleDisabled", i._disableScrollBefore || i.disableRipple)("disabled", i._disableScrollBefore || null), p(5), re("_mat-animation-noopable", "NoopAnimations" === i._animationMode), p(6), re("mat-tab-header-pagination-disabled", i._disableScrollAfter), y("matRippleDisabled", i._disableScrollAfter || i.disableRipple)("disabled", i._disableScrollAfter || null))
                        },
                        dependencies: [li, Rf, IF],
                        styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}.mat-tab-label::before{margin:5px}@media(max-width: 599px){.mat-tab-label{min-width:72px}}"],
                        encapsulation: 2
                    }), t
                })(),
                Kne = 0;
            class Zne {}
            const Xne = Zi(br(class {
                constructor(t) {
                    this._elementRef = t
                }
            }), "primary");
            let Jne = (() => {
                    class t extends Xne {
                        constructor(e, i, r, s) {
                            super(e), this._changeDetectorRef = i, this._animationMode = s, this._tabs = new Pr, this._indexToSelect = 0, this._lastFocusedTabIndex = null, this._tabBodyWrapperHeight = 0, this._tabsSubscription = Re.EMPTY, this._tabLabelSubscription = Re.EMPTY, this._dynamicHeight = !1, this._selectedIndex = null, this.headerPosition = "above", this._disablePagination = !1, this._preserveContent = !1, this.selectedIndexChange = new V, this.focusChange = new V, this.animationDone = new V, this.selectedTabChange = new V(!0), this._groupId = Kne++, this.animationDuration = r && r.animationDuration ? r.animationDuration : "500ms", this.disablePagination = !(!r || null == r.disablePagination) && r.disablePagination, this.dynamicHeight = !(!r || null == r.dynamicHeight) && r.dynamicHeight, this.contentTabIndex = r ? .contentTabIndex ? ? null, this.preserveContent = !!r ? .preserveContent
                        }
                        get dynamicHeight() {
                            return this._dynamicHeight
                        }
                        set dynamicHeight(e) {
                            this._dynamicHeight = G(e)
                        }
                        get selectedIndex() {
                            return this._selectedIndex
                        }
                        set selectedIndex(e) {
                            this._indexToSelect = ht(e, null)
                        }
                        get animationDuration() {
                            return this._animationDuration
                        }
                        set animationDuration(e) {
                            this._animationDuration = /^\d+$/.test(e + "") ? e + "ms" : e
                        }
                        get contentTabIndex() {
                            return this._contentTabIndex
                        }
                        set contentTabIndex(e) {
                            this._contentTabIndex = ht(e, null)
                        }
                        get disablePagination() {
                            return this._disablePagination
                        }
                        set disablePagination(e) {
                            this._disablePagination = G(e)
                        }
                        get preserveContent() {
                            return this._preserveContent
                        }
                        set preserveContent(e) {
                            this._preserveContent = G(e)
                        }
                        get backgroundColor() {
                            return this._backgroundColor
                        }
                        set backgroundColor(e) {
                            const i = this._elementRef.nativeElement;
                            i.classList.remove(`mat-background-${this.backgroundColor}`), e && i.classList.add(`mat-background-${e}`), this._backgroundColor = e
                        }
                        ngAfterContentChecked() {
                            const e = this._indexToSelect = this._clampTabIndex(this._indexToSelect);
                            if (this._selectedIndex != e) {
                                const i = null == this._selectedIndex;
                                if (!i) {
                                    this.selectedTabChange.emit(this._createChangeEvent(e));
                                    const r = this._tabBodyWrapper.nativeElement;
                                    r.style.minHeight = r.clientHeight + "px"
                                }
                                Promise.resolve().then(() => {
                                    this._tabs.forEach((r, s) => r.isActive = s === e), i || (this.selectedIndexChange.emit(e), this._tabBodyWrapper.nativeElement.style.minHeight = "")
                                })
                            }
                            this._tabs.forEach((i, r) => {
                                i.position = r - e, null != this._selectedIndex && 0 == i.position && !i.origin && (i.origin = e - this._selectedIndex)
                            }), this._selectedIndex !== e && (this._selectedIndex = e, this._lastFocusedTabIndex = null, this._changeDetectorRef.markForCheck())
                        }
                        ngAfterContentInit() {
                            this._subscribeToAllTabChanges(), this._subscribeToTabLabels(), this._tabsSubscription = this._tabs.changes.subscribe(() => {
                                const e = this._clampTabIndex(this._indexToSelect);
                                if (e === this._selectedIndex) {
                                    const i = this._tabs.toArray();
                                    let r;
                                    for (let s = 0; s < i.length; s++)
                                        if (i[s].isActive) {
                                            this._indexToSelect = this._selectedIndex = s, this._lastFocusedTabIndex = null, r = i[s];
                                            break
                                        }!r && i[e] && Promise.resolve().then(() => {
                                        i[e].isActive = !0, this.selectedTabChange.emit(this._createChangeEvent(e))
                                    })
                                }
                                this._changeDetectorRef.markForCheck()
                            })
                        }
                        _subscribeToAllTabChanges() {
                            this._allTabs.changes.pipe(pt(this._allTabs)).subscribe(e => {
                                this._tabs.reset(e.filter(i => i._closestTabGroup === this || !i._closestTabGroup)), this._tabs.notifyOnChanges()
                            })
                        }
                        ngOnDestroy() {
                            this._tabs.destroy(), this._tabsSubscription.unsubscribe(), this._tabLabelSubscription.unsubscribe()
                        }
                        realignInkBar() {
                            this._tabHeader && this._tabHeader._alignInkBarToSelectedTab()
                        }
                        updatePagination() {
                            this._tabHeader && this._tabHeader.updatePagination()
                        }
                        focusTab(e) {
                            const i = this._tabHeader;
                            i && (i.focusIndex = e)
                        }
                        _focusChanged(e) {
                            this._lastFocusedTabIndex = e, this.focusChange.emit(this._createChangeEvent(e))
                        }
                        _createChangeEvent(e) {
                            const i = new Zne;
                            return i.index = e, this._tabs && this._tabs.length && (i.tab = this._tabs.toArray()[e]), i
                        }
                        _subscribeToTabLabels() {
                            this._tabLabelSubscription && this._tabLabelSubscription.unsubscribe(), this._tabLabelSubscription = tt(...this._tabs.map(e => e._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck())
                        }
                        _clampTabIndex(e) {
                            return Math.min(this._tabs.length - 1, Math.max(e || 0, 0))
                        }
                        _getTabLabelId(e) {
                            return `mat-tab-label-${this._groupId}-${e}`
                        }
                        _getTabContentId(e) {
                            return `mat-tab-content-${this._groupId}-${e}`
                        }
                        _setTabBodyWrapperHeight(e) {
                            if (!this._dynamicHeight || !this._tabBodyWrapperHeight) return;
                            const i = this._tabBodyWrapper.nativeElement;
                            i.style.height = this._tabBodyWrapperHeight + "px", this._tabBodyWrapper.nativeElement.offsetHeight && (i.style.height = e + "px")
                        }
                        _removeTabBodyWrapperHeight() {
                            const e = this._tabBodyWrapper.nativeElement;
                            this._tabBodyWrapperHeight = e.clientHeight, e.style.height = "", this.animationDone.emit()
                        }
                        _handleClick(e, i, r) {
                            e.disabled || (this.selectedIndex = i.focusIndex = r)
                        }
                        _getTabIndex(e, i) {
                            return e.disabled ? null : i === (this._lastFocusedTabIndex ? ? this.selectedIndex) ? 0 : -1
                        }
                        _tabFocusChanged(e, i) {
                            e && "mouse" !== e && "touch" !== e && (this._tabHeader.focusIndex = i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(BF, 8), u(Tt, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            dynamicHeight: "dynamicHeight",
                            selectedIndex: "selectedIndex",
                            headerPosition: "headerPosition",
                            animationDuration: "animationDuration",
                            contentTabIndex: "contentTabIndex",
                            disablePagination: "disablePagination",
                            preserveContent: "preserveContent",
                            backgroundColor: "backgroundColor"
                        },
                        outputs: {
                            selectedIndexChange: "selectedIndexChange",
                            focusChange: "focusChange",
                            animationDone: "animationDone",
                            selectedTabChange: "selectedTabChange"
                        },
                        features: [A]
                    }), t
                })(),
                eie = (() => {
                    class t extends Jne {
                        constructor(e, i, r, s) {
                            super(e, i, r, s)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(BF, 8), u(Tt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-tab-group"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, LF, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i._allTabs = s)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && (J(Ene, 5), J(Tne, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i._tabBodyWrapper = r.first), O(r = P()) && (i._tabHeader = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-tab-group"],
                        hostVars: 4,
                        hostBindings: function(e, i) {
                            2 & e && re("mat-tab-group-dynamic-height", i.dynamicHeight)("mat-tab-group-inverted-header", "below" === i.headerPosition)
                        },
                        inputs: {
                            color: "color",
                            disableRipple: "disableRipple"
                        },
                        exportAs: ["matTabGroup"],
                        features: [Q([{
                            provide: PF,
                            useExisting: t
                        }]), A],
                        decls: 6,
                        vars: 7,
                        consts: [
                            [3, "selectedIndex", "disableRipple", "disablePagination", "indexFocused", "selectFocusedIndex"],
                            ["tabHeader", ""],
                            ["class", "mat-tab-label mat-focus-indicator", "role", "tab", "matTabLabelWrapper", "", "mat-ripple", "", "cdkMonitorElementFocus", "", 3, "id", "mat-tab-label-active", "ngClass", "disabled", "matRippleDisabled", "click", "cdkFocusChange", 4, "ngFor", "ngForOf"],
                            [1, "mat-tab-body-wrapper"],
                            ["tabBodyWrapper", ""],
                            ["role", "tabpanel", 3, "id", "mat-tab-body-active", "ngClass", "content", "position", "origin", "animationDuration", "preserveContent", "_onCentered", "_onCentering", 4, "ngFor", "ngForOf"],
                            ["role", "tab", "matTabLabelWrapper", "", "mat-ripple", "", "cdkMonitorElementFocus", "", 1, "mat-tab-label", "mat-focus-indicator", 3, "id", "ngClass", "disabled", "matRippleDisabled", "click", "cdkFocusChange"],
                            [1, "mat-tab-label-content"],
                            [3, "ngIf", "ngIfElse"],
                            ["tabTextLabel", ""],
                            [3, "cdkPortalOutlet"],
                            ["role", "tabpanel", 3, "id", "ngClass", "content", "position", "origin", "animationDuration", "preserveContent", "_onCentered", "_onCentering"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "mat-tab-header", 0, 1), T("indexFocused", function(s) {
                                return i._focusChanged(s)
                            })("selectFocusedIndex", function(s) {
                                return i.selectedIndex = s
                            }), b(2, One, 5, 15, "div", 2), g(), f(3, "div", 3, 4), b(5, Pne, 1, 11, "mat-tab-body", 5), g()), 2 & e && (y("selectedIndex", i.selectedIndex || 0)("disableRipple", i.disableRipple)("disablePagination", i.disablePagination), p(2), y("ngForOf", i._tabs), p(1), re("_mat-animation-noopable", "NoopAnimations" === i._animationMode), p(2), y("ngForOf", i._tabs))
                        },
                        dependencies: [gr, Dn, at, Ki, li, LE, VF, NF, Qne],
                        styles: [".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}"],
                        encapsulation: 2
                    }), t
                })(),
                tie = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, de, $r, ki, Id, Fd, de]
                    }), t
                })();

            function nie(t, n) {
                1 & t && (f(0, "div", 15), w(1, " Openstaand arrestatiebevel "), g())
            }

            function iie(t, n) {
                if (1 & t && (oe(0), f(1, "div")(2, "mat-form-field"), E(3, "input", 16), g()(), f(4, "div")(5, "mat-form-field"), E(6, "input", 17), g()(), f(7, "div")(8, "mat-form-field"), E(9, "input", 18), ue(10, "currency"), g()(), f(11, "div")(12, "mat-form-field"), E(13, "input", 19), ue(14, "currency"), g()(), f(15, "div")(16, "mat-form-field"), E(17, "input", 20), g()(), f(18, "div")(19, "mat-form-field"), E(20, "input", 21), g()(), f(21, "div")(22, "mat-form-field"), E(23, "input", 22), g()(), f(24, "div")(25, "mat-form-field"), E(26, "input", 23), g()(), f(27, "div")(28, "mat-form-field"), E(29, "input", 24), g()(), f(30, "div")(31, "mat-form-field"), E(32, "input", 25), g()(), ae()), 2 & t) {
                    const e = x(2).ngIf,
                        i = x();
                    p(3), Ge("value", i.jobToString(e)), p(3), Ge("value", i.job2ToString(e)), p(3), Yc("value", "", zi(10, 10, e.bank, "EUR", "symbol", "1.0-0"), ",-"), p(4), Yc("value", "", zi(14, 15, e.money, "EUR", "symbol", "1.0-0"), ",-"), p(4), Ge("value", e.phoneNumber), p(3), Ge("value", e.name), p(3), Ge("value", e.license), p(3), Ge("value", e.identifier), p(3), Ge("value", e.discord), p(3), Ge("value", i.formatDuration(e.playtime))
                }
            }

            function rie(t, n) {
                if (1 & t && (oe(0), b(1, iie, 33, 20, "ng-container", 11), ae()), 2 & t) {
                    const e = n.ngIf;
                    p(1), y("ngIf", e.staff)
                }
            }

            function sie(t, n) {
                if (1 & t && (f(0, "button", 26), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), ve(e)
                }
            }

            function oie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 30), T("click", function() {
                        return ne(e), ie(x(3).showCriminalRecordDialog())
                    }), w(1, "Toevoegen"), g()
                }
            }

            function aie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div")(1, "button", 42), T("click", function() {
                        ne(e);
                        const r = x().$implicit;
                        return ie(x(3).deleteRecordDialog(r))
                    }), w(2, "Verwijderen"), g()()
                }
            }

            function lie(t, n) {
                if (1 & t && (f(0, "mat-tab", 31), ue(1, "date"), f(2, "div", 32)(3, "div")(4, "mat-form-field"), E(5, "input", 33), g()(), f(6, "div")(7, "mat-form-field", 34), E(8, "textarea", 35, 36), g()(), f(10, "div")(11, "mat-form-field", 34), E(12, "textarea", 37, 36), g()(), f(14, "div")(15, "mat-form-field", 34), E(16, "textarea", 38, 36), g()(), f(18, "div")(19, "mat-form-field"), E(20, "input", 39), g()(), f(21, "div")(22, "mat-form-field"), E(23, "input", 40), ue(24, "date"), g()(), f(25, "div", 41), b(26, aie, 3, 0, "div", 11), g()()()), 2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    Sh("label", "", zi(1, 9, e.date, "mediumDate", "nl", "nl-NL"), " - ", e.offense, ""), p(5), Ge("value", e.offense), p(3), Ge("value", e.charge), p(4), Ge("value", e.description), p(4), Ge("value", e.term), p(4), Ge("value", e.warden), p(3), Ge("value", zi(24, 14, e.date, "mediumDate", "nl", "nl-NL")), p(3), y("ngIf", i.canDeleteRecord(e))
                }
            }

            function cie(t, n) {
                if (1 & t && (f(0, "mat-card", 4)(1, "div", 27)(2, "h3"), w(3, "Strafbladen "), b(4, oie, 2, 0, "button", 28), g(), f(5, "mat-tab-group"), b(6, lie, 27, 19, "mat-tab", 29), g()()()), 2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(4), y("ngIf", i.canAddCriminalRecords()), p(2), y("ngForOf", e.payload)("ngForTrackBy", i.trackByCharge)
                }
            }

            function die(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 47), T("click", function() {
                        const s = ne(e).$implicit;
                        return ie(x(3).setVoertuig(s))
                    }), w(1), g()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    p(1), cs("", e.mName, " -- ", e.plate, "")
                }
            }

            function uie(t, n) {
                if (1 & t) {
                    const e = ye();
                    oe(0), f(1, "div", 48)(2, "button", 49), T("click", function() {
                        const s = ne(e).ngIf;
                        return ie(x(3).navigateVoertuig(s.plate))
                    }), w(3), g()(), f(4, "div")(5, "mat-form-field"), E(6, "input", 50), g()(), f(7, "div")(8, "mat-form-field"), E(9, "input", 51), g()(), f(10, "div")(11, "mat-form-field"), E(12, "input", 52), g()(), f(13, "div")(14, "mat-form-field"), E(15, "input", 53), g()(), f(16, "div")(17, "mat-form-field"), E(18, "input", 54), g()(), f(19, "div")(20, "mat-form-field"), E(21, "input", 55), g()(), f(22, "div")(23, "mat-form-field"), E(24, "input", 56), g()(), f(25, "div")(26, "mat-form-field"), E(27, "input", 57), g()(), ae()
                }
                if (2 & t) {
                    const e = n.ngIf;
                    p(3), X(" Kenteken: ", e.plate, " "), p(3), Ge("value", e.mName), p(3), Ge("value", 1 == e.fourrieremecano ? "Ja" : "Nee"), p(3), Ge("value", 1 == e.wok ? "Ja" : "Nee"), p(3), Ge("value", e.primaryColor), p(3), Ge("value", e.secondaryColor), p(3), Ge("value", e.pearlescentColor), p(3), Ge("value", 1 == e.stolen ? "Ja" : "Nee"), p(3), Ge("value", 1 == e.stolen ? "Ja" : "Nee")
                }
            }

            function hie(t, n) {
                if (1 & t && (f(0, "mat-card", 4)(1, "div", 43)(2, "div", 6)(3, "h3"), w(4), f(5, "button", 44), w(6, "Voertuigen"), g()(), f(7, "mat-menu", null, 45), b(9, die, 2, 2, "button", 46), g()(), b(10, uie, 28, 9, "ng-container", 11), ue(11, "async"), g()()), 2 & t) {
                    const e = n.ngIf,
                        i = bt(8),
                        r = x(2);
                    p(4), X("Voertuigen aantal: ", e.payload.length, " "), p(1), y("matMenuTriggerFor", i), p(4), y("ngForOf", e.payload)("ngForTrackBy", r.trackVehiclesByPlate), p(1), y("ngIf", De(11, 5, r.selectedVehicle$))
                }
            }

            function fie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 30), T("click", function() {
                        return ne(e), ie(x(3).showNotesDialog())
                    }), w(1, "Toevoegen"), g()
                }
            }

            function pie(t, n) {
                if (1 & t && (f(0, "div"), w(1), ue(2, "date"), g()), 2 & t) {
                    const e = x().$implicit;
                    Kt("color", e.isArrestWarrant ? "#ff0000" : ""), p(1), X(" ", zi(2, 3, e.dateTime, "mediumDate", "nl", "nl-NL"), " ")
                }
            }

            function mie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 42), T("click", function() {
                        ne(e);
                        const r = x(2).$implicit;
                        return ie(x(3).updateNote(r))
                    }), w(1, "Arrestatiebevel opheffen"), g()
                }
            }

            function gie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div")(1, "button", 42), T("click", function() {
                        ne(e);
                        const r = x(2).$implicit;
                        return ie(x(3).deleteNoteDialog(r))
                    }), w(2, "Verwijderen"), g()()
                }
            }

            function _ie(t, n) {
                if (1 & t && (f(0, "div", 43)(1, "div")(2, "mat-form-field"), E(3, "input", 64), g()(), f(4, "div")(5, "mat-form-field"), E(6, "input", 65), ue(7, "async"), g()(), f(8, "div")(9, "mat-form-field", 34), E(10, "textarea", 66, 36), g()(), f(12, "div")(13, "mat-form-field"), E(14, "input", 40), ue(15, "date"), g()(), f(16, "div", 67)(17, "div"), b(18, mie, 2, 0, "button", 68), g(), b(19, gie, 3, 0, "div", 11), g()()), 2 & t) {
                    const e = x().$implicit,
                        i = x(3);
                    p(3), Ge("value", e.sanctions), p(3), Ge("value", De(7, 6, i.getOfficerName(e))), p(4), Ge("value", e.content), p(4), Ge("value", zi(15, 8, e.dateTime, "mediumDate", "nl", "nl-NL")), p(4), y("ngIf", e.isArrestWarrant), p(1), y("ngIf", i.canDeleteNote(e))
                }
            }

            function yie(t, n) {
                1 & t && (f(0, "mat-tab"), b(1, pie, 3, 8, "ng-template", 62), b(2, _ie, 20, 13, "ng-template", 63), g())
            }

            function bie(t, n) {
                if (1 & t && (f(0, "mat-card", 58)(1, "div", 59)(2, "h3"), w(3, " Notitie's "), b(4, fie, 2, 0, "button", 28), g(), f(5, "mat-tab-group", 60), b(6, yie, 3, 0, "mat-tab", 61), g()()()), 2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(4), y("ngIf", i.canAddNotes()), p(2), y("ngForOf", e.payload)("ngForTrackBy", i.trackByNote)
                }
            }

            function vie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Locatie "), g())
            }

            function wie(t, n) {
                if (1 & t && (f(0, "td", 80), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.label, " ")
                }
            }

            function Cie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Pand "), g())
            }

            function xie(t, n) {
                if (1 & t && (f(0, "td", 80), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.name, " ")
                }
            }

            function Die(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Status "), g())
            }

            function Mie(t, n) {
                1 & t && (f(0, "button", 82), w(1, "Gehuurd"), g())
            }

            function Sie(t, n) {
                1 & t && (f(0, "button", 82), w(1, "Gekocht"), g())
            }

            function kie(t, n) {
                if (1 & t && (f(0, "td", 80)(1, "span"), b(2, Mie, 2, 0, "button", 81), b(3, Sie, 2, 0, "button", 81), g()()), 2 & t) {
                    const e = n.$implicit;
                    p(2), y("ngIf", 1 == e.rented), p(1), y("ngIf", 1 != e.rented)
                }
            }

            function Aie(t, n) {
                1 & t && E(0, "tr", 83)
            }

            function Eie(t, n) {
                1 & t && E(0, "tr", 84)
            }

            function Tie(t, n) {
                if (1 & t && (f(0, "mat-card", 4)(1, "div", 69)(2, "h3", 70), w(3, "Huisvestigingen"), g(), f(4, "table", 71), oe(5, 72), b(6, vie, 2, 0, "th", 73), b(7, wie, 2, 1, "td", 74), ae(), oe(8, 75), b(9, Cie, 2, 0, "th", 73), b(10, xie, 2, 1, "td", 74), ae(), oe(11, 76), b(12, Die, 2, 0, "th", 73), b(13, kie, 4, 2, "td", 74), ae(), b(14, Aie, 1, 0, "tr", 77), b(15, Eie, 1, 0, "tr", 78), g()()()), 2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(4), y("dataSource", e), p(10), y("matHeaderRowDef", i.displayedColumnsHuizen), p(1), y("matRowDefColumns", i.displayedColumnsHuizen)
                }
            }

            function Iie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Boete "), g())
            }

            function Rie(t, n) {
                if (1 & t && (f(0, "td", 80), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", e.label, " ")
                }
            }

            function Fie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Bedrag "), g())
            }

            function Oie(t, n) {
                if (1 & t && (f(0, "td", 80), w(1), ue(2, "currency"), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), X(" ", zi(2, 1, e.amount, "EUR", "symbol", "1.0-0"), " ")
                }
            }

            function Pie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Uitgeschreven op "), g())
            }

            function Lie(t, n) {
                if (1 & t && (f(0, "td", 80), w(1), ue(2, "date"), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), ve(zi(2, 1, e.time, "medium", "en", "nl-NL"))
                }
            }

            function Nie(t, n) {
                1 & t && (f(0, "th", 95), w(1, "Uitgeschreven door:"), g())
            }

            function Bie(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x().$implicit;
                    p(1), cs(" ", e.senderFirstname, " ", e.senderLastname, " ")
                }
            }

            function Vie(t, n) {
                1 & t && w(0, " - ")
            }

            function Hie(t, n) {
                if (1 & t && (f(0, "td", 80), b(1, Bie, 2, 2, "ng-container", 96), b(2, Vie, 1, 0, "ng-template", null, 97, Ui), g()), 2 & t) {
                    const e = n.$implicit,
                        i = bt(3);
                    p(1), y("ngIf", e.sender != e.identifier)("ngIfElse", i)
                }
            }

            function $ie(t, n) {
                1 & t && (f(0, "th", 79), w(1, " Verwijderen "), g())
            }

            function jie(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "div", 99)(1, "button", 42), T("click", function() {
                        ne(e);
                        const r = x().$implicit;
                        return ie(x(3).deleteFineDialog(r))
                    }), w(2, "Verwijderen"), g()()
                }
            }

            function zie(t, n) {
                if (1 & t && (f(0, "td", 80), b(1, jie, 3, 0, "div", 98), g()), 2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    p(1), y("ngIf", i.canDeleteFine(e))
                }
            }

            function Uie(t, n) {
                1 & t && E(0, "tr", 83)
            }

            function Gie(t, n) {
                1 & t && E(0, "tr", 84)
            }

            function Wie(t, n) {
                if (1 & t && (f(0, "mat-card", 4)(1, "div", 69)(2, "h3", 85), w(3, "Openstaande boete's"), g(), f(4, "div", 86)(5, "table", 87), oe(6, 88), b(7, Iie, 2, 0, "th", 73), b(8, Rie, 2, 1, "td", 74), ae(), oe(9, 89), b(10, Fie, 2, 0, "th", 73), b(11, Oie, 3, 6, "td", 74), ae(), oe(12, 90), b(13, Pie, 2, 0, "th", 73), b(14, Lie, 3, 6, "td", 74), ae(), oe(15, 91), b(16, Nie, 2, 0, "th", 92), b(17, Hie, 4, 2, "td", 74), ae(), oe(18, 93), b(19, $ie, 2, 0, "th", 73), b(20, zie, 2, 1, "td", 74), ae(), b(21, Uie, 1, 0, "tr", 94), b(22, Gie, 1, 0, "tr", 78), g()()()()), 2 & t) {
                    const e = n.ngIf,
                        i = x(2);
                    p(5), y("dataSource", i.billing$), p(16), y("matHeaderRowDef", e)("matHeaderRowDefSticky", !0), p(1), y("matRowDefColumns", e)
                }
            }

            function qie(t, n) {
                if (1 & t && (f(0, "div", 2), b(1, nie, 2, 0, "div", 3), ue(2, "async"), f(3, "mat-card", 4)(4, "div", 5)(5, "div", 6)(6, "h3"), w(7), g()(), f(8, "div")(9, "mat-form-field"), E(10, "input", 7), g()(), f(11, "div")(12, "mat-form-field"), E(13, "input", 8), g()(), f(14, "div")(15, "mat-form-field"), E(16, "input", 9), g()(), f(17, "div")(18, "mat-form-field"), E(19, "input", 10), g()(), b(20, rie, 2, 1, "ng-container", 11), ue(21, "async"), f(22, "div", 6), b(23, sie, 2, 1, "button", 12), g()()(), b(24, cie, 7, 3, "mat-card", 13), ue(25, "async"), b(26, hie, 12, 7, "mat-card", 13), ue(27, "async"), b(28, bie, 7, 3, "mat-card", 14), ue(29, "async"), b(30, Tie, 16, 3, "mat-card", 13), ue(31, "async"), b(32, Wie, 23, 4, "mat-card", 13), ue(33, "async"), g()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    p(1), y("ngIf", De(2, 14, i.hasArrestWarrant$)), p(6), cs("Persoon ", e.firstname, " ", e.lastname, ""), p(3), Ge("value", e.sex), p(3), Ge("value", e.id), p(3), Ge("value", e.dateofbirth), p(3), Ge("value", e.height), p(1), y("ngIf", De(21, 16, i.user$)), p(3), y("ngForOf", e.userLicenses), p(1), y("ngIf", De(25, 18, i.record$)), p(2), y("ngIf", De(27, 20, i.vehicles$)), p(2), y("ngIf", De(29, 22, i.notes$)), p(2), y("ngIf", De(31, 24, i.dataSourceHuizen$)), p(2), y("ngIf", De(33, 26, i.displayedColumnsBilling$))
                }
            }

            function Yie(t, n) {
                if (1 & t && (oe(0), w(1), ae()), 2 & t) {
                    const e = x(2);
                    p(1), X(" ", e.errorMessage, " ")
                }
            }

            function Qie(t, n) {
                1 & t && E(0, "mat-progress-bar", 101)
            }

            function Kie(t, n) {
                if (1 & t && (oe(0), b(1, Qie, 1, 0, "mat-progress-bar", 100), ae()), 2 & t) {
                    const e = n.ngIf;
                    p(1), y("ngIf", e)
                }
            }

            function Zie(t, n) {
                if (1 & t && (b(0, Yie, 2, 1, "ng-container", 11), b(1, Kie, 2, 1, "ng-container", 11), ue(2, "async")), 2 & t) {
                    const e = x();
                    y("ngIf", e.errorMessage), p(1), y("ngIf", De(2, 2, e.loading$))
                }
            }
            let Xie = (() => {
                class t {
                    constructor(e, i, r, s, o, a, l) {
                        this.route = e, this.data = i, this.authService = r, this.dialog = s, this.router = o, this.toastr = a, this.media = l, this.gridGap = "2%", this.columns$ = new Te("50% 50%"), this.identifier = "", this.subs = new co, this.player$ = new Te(null), this.selectedVehicle$ = new Jn(1), this.notes$ = new Jn(1), this.record$ = new Jn(1), this.billing$ = new Jn(1), this.vehicles$ = new Jn(1), this.dataSourceHuizen$ = new Jn(1), this.displayedColumnsBilling$ = new Te(["billinglabel", "billingprice", "billingdate", "billingidentifier", "deletebill"]), this.hasArrestWarrant$ = this.notes$.pipe(Z(c => c ? .payload.some(d => d.isArrestWarrant))), this.loading$ = new Te(!1), this.displayedColumns = ["date", "offense", "charge", "description", "warden"], this.types = {
                            boat: "Boot",
                            plane: "Vliegtuig",
                            helicopter: "Helikopter",
                            car: "Auto"
                        }, this.displayedColumnsHuizen = ["LocatieLabel", "PandNaam", "Status"], this.addStyle = {
                            "overflow-y": "auto"
                        }, this.observableCache = new Map, this.subs.sink = l.asObservable().subscribe({
                            next: c => {
                                console.log(`media.isActive: ${l.isActive("lt-md")}`), l.isActive("lt-sm") ? this.columns$.next("100%") : this.columns$.next("50% 50%"), l.isActive("lt-sm") ? this.displayedColumnsHuizen = this.displayedColumnsHuizen.filter(d => "Status" !== d) : this.displayedColumnsHuizen.includes("Status") || this.displayedColumnsHuizen.push("Status")
                            }
                        }), this.user$ = this.authService.currentUser$
                    }
                    ngOnInit() {
                        var e = this;
                        return Cr(function*() {
                            e.subs.sink = e.route.paramMap.subscribe(i => {
                                e.player$.next(null), e.identifier = i.get("identifier") ? ? "", e.loading$.next(!0), e.subs.sink = e.data.get(e.identifier).subscribe({
                                    next: r => {
                                        !r || (e.errorMessage = void 0, e.loading$.next(!1), e.player$.next(r))
                                    },
                                    error: r => {
                                        if (console.error(r), 404 === r ? .status) e.errorMessage = "Persoon niet gevonden!", e.toastr.error(e.errorMessage);
                                        else {
                                            const s = r;
                                            e.errorMessage = `Er ging iets mis bij het ophalen van de persoon! (${s?.statusText??s?.status??r.message}`, e.toastr.error(e.errorMessage)
                                        }
                                        e.loading$.next(!1), e.player$.next(null)
                                    },
                                    complete: () => {
                                        e.loading$.next(!1)
                                    }
                                }), e.getCriminalRecords(), e.getOwnedProperties(), e.getVehicles(), e.getBilling(), e.getNotes()
                            })
                        })()
                    }
                    getOfficerName(e) {
                        let i = this.observableCache.get(e.id ? ? 0);
                        return i || (i = new Jn(1), this.observableCache.set(e.id ? ? 0, i)), e.officerName ? (i ? .next(e.officerName), i) : (e.officerIdentifier && this.data.getPlayerName(e.officerIdentifier).subscribe({
                            next: r => {
                                e.officerName = `${r?.firstname} ${r?.lastname}`, i ? .next(`${r?.firstname} ${r?.lastname}`)
                            }
                        }), i)
                    }
                    formatDuration(e) {
                        const i = Math.floor(e / 1440),
                            r = Math.floor(e / 60 - 24 * i);
                        return i > 0 ? `${i}d ${r.toString().padStart(2,"0")}u` : `${r.toString().padStart(2,"0")}u`
                    }
                    canDeleteRecord(e) {
                        return !(e.wardenIdentifier != this.authService.currentUserValue ? .steamid && !this.authService.isBoss())
                    }
                    canDeleteNote(e) {
                        return !(e.officerIdentifier !== this.authService.currentUserValue ? .steamid && e.officerId !== this.authService.currentUserId && !this.authService.isBoss())
                    }
                    canDeleteFine(e) {
                        return !!(this.authService.isBoss() || e.sender === this.authService.currentUserValue ? .steamid && e.identifier !== this.authService.currentUserValue ? .steamid)
                    }
                    canDeleteFines() {
                        return !!this.authService.isBoss()
                    }
                    canAddNotes() {
                        return this.authService.isLawEnforcement()
                    }
                    canAddCriminalRecords() {
                        return this.authService.isLawEnforcement()
                    }
                    updateNote(e) {
                        this.dialog.open(uu, {
                            data: {
                                confirmMessage: "Weet u zeker dat u dit arrestatiebevel wilt opheffen?"
                            }
                        }).afterClosed().subscribe(r => {
                            r && (e.isArrestWarrant = !1, this.data.removeWarrant(e).subscribe({
                                next: () => {
                                    this.toastr.success("Arrestatiebevel succesvol opgeheven!"), this.getNotes()
                                },
                                error: s => {
                                    console.error(s), this.toastr.error(`Er ging iets mis tijdens het opheffen van het arrestatiebevel! Error: ${s.statusText??s.message}`)
                                }
                            }))
                        })
                    }
                    deleteRecordDialog(e) {
                        this.dialog.open(uu, {
                            data: {
                                confirmMessage: "Weet u zeker dat u dit strafblad wilt verwijderen?"
                            }
                        }).afterClosed().subscribe(r => {
                            r && this.data.deleteCriminalRecord(e).subscribe({
                                next: () => {
                                    this.toastr.success("Strafblad succesvol verwijderd!"), this.getCriminalRecords()
                                },
                                error: s => {
                                    console.error(s), this.toastr.error(`Er ging iets mis tijdens het verwijderen van het strafblad! Error: ${s.statusText??s.message}`)
                                }
                            })
                        })
                    }
                    deleteFineDialog(e) {
                        this.dialog.open(uu, {
                            data: {
                                confirmMessage: "Weet u zeker dat u deze boete wilt verwijderen?"
                            }
                        }).afterClosed().subscribe(r => {
                            r && this.data.deleteBill(e).subscribe({
                                next: () => {
                                    this.toastr.success("Boete succesvol verwijderd!"), this.getBilling()
                                },
                                error: s => {
                                    console.error(s), this.toastr.error(`Er ging iets mis tijdens het verwijderen van de boete! Error: ${s.statusText??s.message}`)
                                }
                            })
                        })
                    }
                    deleteNoteDialog(e) {
                        this.dialog.open(uu, {
                            data: {
                                confirmMessage: "Weet u zeker dat u deze notitie wilt verwijderen?"
                            }
                        }).afterClosed().subscribe(r => {
                            r && this.data.deleteNote(e).subscribe({
                                next: () => {
                                    this.toastr.success("Notitie succesvol verwijderd!"), this.getNotes()
                                },
                                error: s => {
                                    console.error(s), this.toastr.error(`Er ging iets mis tijdens het verwijderen van de notitie! Error: ${s.statusText??s.message}`)
                                }
                            })
                        })
                    }
                    ngOnDestroy() {
                        var e = this;
                        return Cr(function*() {
                            e.player$.complete(), e.selectedVehicle$.complete(), e.billing$.complete(), e.vehicles$.complete(), e.notes$.complete(), e.dataSourceHuizen$.complete()
                        })()
                    }
                    setVoertuig(e) {
                        this.selectedVehicle$.next(e)
                    }
                    navigateVoertuig(e) {
                        this.router.navigate(["voertuig", e])
                    }
                    jobToString(e) {
                        return Yv.jobToString(e, this.authService.currentUserValue)
                    }
                    job2ToString(e) {
                        return Yv.job2ToString(e, this.authService.currentUserValue)
                    }
                    showCriminalRecordDialog() {
                        var e = this;
                        if (!this.player$.value) throw new Error("this.player$ is null!");
                        const i = {
                            scrollStrategy: new Uf,
                            disableClose: !1,
                            autoFocus: !0,
                            data: {
                                name: this.player$.value ? .firstname
                            }
                        };
                        this.dialog.open(yne, i).afterClosed().subscribe(s => {
                            if (null != s && "cancel" !== s && "object" == typeof s && "date" in s && s.date instanceof Date) {
                                const o = s,
                                    a = {
                                        charge: o.charge,
                                        classified: 0,
                                        date: o.date.toISOString(),
                                        description: o.description,
                                        dob: this.player$.value ? .dateofbirth,
                                        identifier: this.player$.value ? .identifier,
                                        institution: "Boilingbroke",
                                        offense: void 0,
                                        term: o.term,
                                        dateUnix: o.date.getTime()
                                    };
                                this.data.postCriminalRecord(a).subscribe({
                                    next: (l = Cr(function*(c) {
                                        c && (e.toastr.success("Strafblad is succesvol toegevoegd!", "Strafblad"), e.getCriminalRecords())
                                    }), function(d) {
                                        return l.apply(this, arguments)
                                    }),
                                    error: l => {
                                        this.toastr.error(`Er ging iets mis tijdens het toevoegen van het strafblad, probeer het opnieuw. (${l.status??l.message})`, "Strafblad"), console.error(l)
                                    }
                                })
                            }
                            var l
                        })
                    }
                    getCriminalRecords() {
                        this.data.getCriminalRecords(this.identifier).subscribe({
                            next: e => {
                                e && this.record$.next(e)
                            },
                            error: e => {
                                404 === e ? .status ? this.toastr.warning("Strafblad van persoon niet gevonden, probeer het opnieuw", "Strafblad") : (this.toastr.error(`Er ging iets mis tijdens het ophalen van het strafblad, probeer het opnieuw. (${e.status??e.message})`, "Strafblad"), console.error(e)), this.record$.next(void 0)
                            }
                        })
                    }
                    getOwnedProperties() {
                        this.data.getOwnedProperties(this.identifier).subscribe({
                            next: e => {
                                !e || (console.log(e), this.dataSourceHuizen$.next(e.payload))
                            },
                            error: e => {
                                404 === e ? .status ? this.toastr.warning("Woningen van persoon niet gevonden, probeer het opnieuw", "Woningen") : (this.toastr.error(`Er ging iets mis tijdens het ophalen van de woningen, probeer het opnieuw. (${e.status})`, "Woningen"), console.error(e)), this.dataSourceHuizen$.next(void 0)
                            }
                        })
                    }
                    sortVehicles(e, i) {
                        const r = e ? .mName ? ? e ? .plate,
                            s = i ? .mName ? ? i ? .plate;
                        return r === s ? 0 : r ? s ? r.localeCompare(s, "nl") : 1 : -1
                    }
                    getVehicles() {
                        const e = this.identifier;
                        this.data.getOwnedVehicles(e).subscribe({
                            next: i => i ? (i.payload.sort(this.sortVehicles.bind(this)), this.vehicles$.next(i), this.setVoertuig(i.payload[0]), i) : (console.error(new Error(`getVehicles returned null for ${e}!`)), i),
                            error: i => (404 === i ? .status ? this.toastr.warning("Voertuigen van persoon niet gevonden.") : (this.toastr.error(`Het ophalen van de voertuigen lukte niet! Probeer het opnieuw. (${i?.status})`, "Voertuigen"), console.error(i)), this.vehicles$.next(void 0), this.setVoertuig(), i)
                        })
                    }
                    trackByNote(e, i) {
                        return i.id
                    }
                    trackByCharge(e, i) {
                        return i.charge
                    }
                    trackVehiclesByPlate(e, i) {
                        return i.plate
                    }
                    getBilling() {
                        this.data.getBilling(this.identifier).subscribe({
                            next: e => {
                                e ? this.billing$.next(e.payload) : console.error("getBilling returned null!")
                            },
                            error: e => {
                                404 === e.status ? this.toastr.warning("Boetes van persoon niet gevonden.") : (this.toastr.error(`Er ging iets mis tijdens het ophalen van de boetes, probeer het opnieuw. (${e.status??e.message})`, "Boetes"), console.error(e)), this.billing$.next([])
                            }
                        })
                    }
                    getNotes() {
                        this.data.getNotes(this.identifier).subscribe({
                            next: e => {
                                e ? this.notes$.next(e) : console.error("getNotes returned null!")
                            },
                            error: e => {
                                404 === e ? .status ? this.toastr.warning("Notities van persoon niet gevonden.", "Notities") : (this.toastr.error(`Er ging iets mis tijdens het ophalen van de notities, probeer het opnieuw. (${e.status??e.message})`, "Notities"), console.error(e)), this.notes$.next(void 0)
                            }
                        })
                    }
                    showNotesDialog() {
                        const e = {
                            scrollStrategy: new Uf,
                            disableClose: !1,
                            autoFocus: !0,
                            data: {
                                name: this.player$.value ? .firstname
                            }
                        };
                        this.dialog.open(bne, e).afterClosed().subscribe(r => {
                            if (null != r && "cancel" !== r && "object" == typeof r && "date" in r && r.date instanceof Date) {
                                const s = r;
                                if (!this.player$.value) throw new Error("this.player$ is nulL!");
                                if (!s.content) return void this.toastr.error("Geef aub een geldige notitie!");
                                const o = {
                                    content: s.content,
                                    dateTime: s.date.toISOString(),
                                    dateTimeUnix: s.date.getTime(),
                                    sanctions: s.sanctions ? ? "",
                                    identifier: this.player$.value.identifier ? ? "",
                                    isArrestWarrant: s.isArrestWarrant
                                };
                                this.data.addNote(o).subscribe({
                                    next: () => {
                                        this.toastr.success("Notitie is succesvol toegevoegd!"), this.getNotes()
                                    },
                                    error: a => {
                                        this.toastr.error(`Er ging iets mis tijdens het toevoegen van de notitie! Error: ${a.status??a.message}`), console.error(a)
                                    }
                                })
                            }
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(Yi), u(Qv), u(Bn), u(Bl), u(gt), u(Ur), u(Av))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["app-viewpersoon"]
                    ],
                    decls: 4,
                    vars: 4,
                    consts: [
                        ["class", "main-user-content grid grid-cols-1 lg:grid-cols-2 gap-2", 4, "ngIf", "ngIfElse"],
                        ["elseBlock", ""],
                        [1, "main-user-content", "grid", "grid-cols-1", "lg:grid-cols-2", "gap-2"],
                        ["class", "alert alert-danger col-span-full", 4, "ngIf"],
                        [1, "user-card"],
                        [1, "grid", "grid-cols-1", "sm:grid-cols-2", 2, "margin-bottom", "2%"],
                        [1, "col-span-full"],
                        ["matInput", "", "placeholder", "Geslacht", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "BSN", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Geboortedatum", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Lengte", "disabled", "", 3, "value"],
                        [4, "ngIf"],
                        ["style", "margin: 2px;", "mat-raised-button", "", 4, "ngFor", "ngForOf"],
                        ["class", "user-card", 4, "ngIf"],
                        ["disabled", "", "class", "user-card", 4, "ngIf"],
                        [1, "alert", "alert-danger", "col-span-full"],
                        ["matInput", "", "placeholder", "Beroep", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Beroep 2", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Bankrekening", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Contant", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Telefoonnummer", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Steamnaam", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "License", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Identifier", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Discord", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Playtime", "disabled", "", 3, "value"],
                        ["mat-raised-button", "", 2, "margin", "2px"],
                        [1, "flex", "flex-col"],
                        ["id", "listvehiclesbutton", "mat-raised-button", "", "style", "float: right; color: white;", 3, "click", 4, "ngIf"],
                        [3, "label", 4, "ngFor", "ngForOf", "ngForTrackBy"],
                        ["id", "listvehiclesbutton", "mat-raised-button", "", 2, "float", "right", "color", "white", 3, "click"],
                        [3, "label"],
                        [1, "card-content-header", "grid", "grid-cols-1", "sm:grid-cols-2"],
                        ["matInput", "", "placeholder", "Feit", "disabled", "", 3, "value"],
                        [2, "max-height", "100%", "overflow-y", "hidden"],
                        ["cdkTextareaAutosize", "", "cdkAutosizeMinRows", "1", "cdkAutosizeMaxRows", "5", "matInput", "", "placeholder", "Aanklacht", "disabled", "", 2, "overflow-y", "auto", "max-height", "100%", 3, "value"],
                        ["autosize", "cdkTextareaAutosize"],
                        ["cdkTextareaAutosize", "", "cdkAutosizeMinRows", "1", "cdkAutosizeMaxRows", "5", "matInput", "", "placeholder", "Beschrijving", "disabled", "", 2, "overflow-y", "auto", "max-height", "100%", 3, "value"],
                        ["cdkTextareaAutosize", "", "cdkAutosizeMinRows", "1", "cdkAutosizeMaxRows", "5", "matInput", "", "placeholder", "Sancties", "disabled", "", 2, "overflow-y", "auto", "max-height", "100%", 3, "value"],
                        ["matInput", "", "placeholder", "Agent", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Datum", "disabled", "", 3, "value"],
                        [1, "col-span-full", "flex", "justify-end"],
                        ["id", "delete-note-button", "mat-raised-button", "", "color", "warn", 2, "color", "white", 3, "click"],
                        [1, "grid", "grid-cols-1", "sm:grid-cols-2"],
                        ["id", "listvehiclesbutton", "mat-raised-button", "", 2, "float", "right", "color", "white", 3, "matMenuTriggerFor"],
                        ["menuVoertuigen", "matMenu"],
                        ["mat-menu-item", "", 3, "click", 4, "ngFor", "ngForOf", "ngForTrackBy"],
                        ["mat-menu-item", "", 3, "click"],
                        [1, "col-span-full", 2, "margin-bottom", "1em"],
                        ["mat-raised-button", "", 1, "plate-button", 3, "click"],
                        ["matInput", "", "placeholder", "Model", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Inbeslaggenonem", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "WOK", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Primaire Kleur", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Secondaire Kleur", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Parelmoer Kleur", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Gestolen", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Dienst Auto", "disabled", "", 3, "value"],
                        ["disabled", "", 1, "user-card"],
                        ["fxLayout", "column", 2, "max-width", "100%"],
                        ["mat-stretch-tabs", ""],
                        [4, "ngFor", "ngForOf", "ngForTrackBy"],
                        ["mat-tab-label", ""],
                        ["matTabContent", ""],
                        ["matInput", "", "placeholder", "Sanctie", "disabled", "", 3, "value"],
                        ["matInput", "", "placeholder", "Verbalisant", "disabled", "", 3, "value"],
                        ["cdkTextareaAutosize", "", "cdkAutosizeMinRows", "1", "cdkAutosizeMaxRows", "5", "matInput", "", "placeholder", "Notitie", "disabled", "", 2, "overflow-y", "auto", "max-height", "100%", 3, "value"],
                        [1, "col-span-full", "flex", "flex-row", "justify-between"],
                        ["id", "delete-note-button", "mat-raised-button", "", "style", "color: white;", "color", "warn", 3, "click", 4, "ngIf"],
                        ["fxFlex", "", "fxLayout", "column"],
                        ["id", "huisvestigingen"],
                        ["mat-table", "", "aria-describedby", "huisvestigingen", 3, "dataSource"],
                        ["matColumnDef", "LocatieLabel"],
                        ["mat-header-cell", "", "scope", "col", 4, "matHeaderCellDef"],
                        ["mat-cell", "", 4, "matCellDef"],
                        ["matColumnDef", "PandNaam"],
                        ["matColumnDef", "Status"],
                        ["mat-header-row", "", 4, "matHeaderRowDef"],
                        ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                        ["mat-header-cell", "", "scope", "col"],
                        ["mat-cell", ""],
                        ["mat-raised-button", "", 4, "ngIf"],
                        ["mat-raised-button", ""],
                        ["mat-header-row", ""],
                        ["mat-row", ""],
                        ["id", "billing-title"],
                        [1, "user-notes-content"],
                        ["mat-table", "", "aria-describedby", "billing-title", 3, "dataSource"],
                        ["matColumnDef", "billinglabel"],
                        ["matColumnDef", "billingprice"],
                        ["matColumnDef", "billingdate"],
                        ["matColumnDef", "billingidentifier"],
                        ["mat-header-cell", "", "scope", "row", 4, "matHeaderCellDef"],
                        ["matColumnDef", "deletebill"],
                        ["mat-header-row", "", 4, "matHeaderRowDef", "matHeaderRowDefSticky"],
                        ["mat-header-cell", "", "scope", "row"],
                        [4, "ngIf", "ngIfElse"],
                        ["sendBySelf", ""],
                        ["fxFlexAlign", "end", 4, "ngIf"],
                        ["fxFlexAlign", "end"],
                        ["mode", "indeterminate", 4, "ngIf"],
                        ["mode", "indeterminate"]
                    ],
                    template: function(e, i) {
                        if (1 & e && (b(0, qie, 34, 28, "div", 0), ue(1, "async"), b(2, Zie, 3, 4, "ng-template", null, 1, Ui)), 2 & e) {
                            const r = bt(3);
                            y("ngIf", De(1, 2, i.player$))("ngIfElse", r)
                        }
                    },
                    dependencies: [Dn, at, Hp, Vp, $p, Xt, nc, ga, ic, _a, ma, rc, ya, ba, sc, oc, Kl, F1, ci, Nn, lu, eie, Vne, LF, Bne, ha, Tv, fa, Kn, Ey, ky],
                    styles: ["mat-card[_ngcontent-%COMP%]{height:96%;width:96%}input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{color:#000!important}.billing-card[_ngcontent-%COMP%]{width:calc(50% - 5px);-webkit-margin-end:5px;margin-inline-end:5px;margin-bottom:2px}.billing-wrapper[_ngcontent-%COMP%]{padding:5px}.plate-button[_ngcontent-%COMP%]{width:100%}.card-content-header[_ngcontent-%COMP%]{padding-top:1em}.user-card[_ngcontent-%COMP%]{min-width:48%;height:auto;height:initial}.main-user-content[_ngcontent-%COMP%]{max-width:100%}#savestatbutton[_ngcontent-%COMP%]{float:right;background-color:#01579b;color:#fff}#listvehiclesbutton[_ngcontent-%COMP%]{background-color:#01579b}table[_ngcontent-%COMP%]{width:100%}.user-notes-content[_ngcontent-%COMP%]{max-height:500px;overflow:auto}input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:90%}mat-form-field[_ngcontent-%COMP%]{width:100%}"],
                    changeDetection: 0
                }), t
            })();
            const jF = new R("CdkAccordion");
            let Jie = 0,
                ere = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.accordion = e, this._changeDetectorRef = i, this._expansionDispatcher = r, this._openCloseAllSubscription = Re.EMPTY, this.closed = new V, this.opened = new V, this.destroyed = new V, this.expandedChange = new V, this.id = "cdk-accordion-child-" + Jie++, this._expanded = !1, this._disabled = !1, this._removeUniqueSelectionListener = () => {}, this._removeUniqueSelectionListener = r.listen((s, o) => {
                                this.accordion && !this.accordion.multi && this.accordion.id === o && this.id !== s && (this.expanded = !1)
                            }), this.accordion && (this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions())
                        }
                        get expanded() {
                            return this._expanded
                        }
                        set expanded(e) {
                            e = G(e), this._expanded !== e && (this._expanded = e, this.expandedChange.emit(e), e ? (this.opened.emit(), this._expansionDispatcher.notify(this.id, this.accordion ? this.accordion.id : this.id)) : this.closed.emit(), this._changeDetectorRef.markForCheck())
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e)
                        }
                        ngOnDestroy() {
                            this.opened.complete(), this.closed.complete(), this.destroyed.emit(), this.destroyed.complete(), this._removeUniqueSelectionListener(), this._openCloseAllSubscription.unsubscribe()
                        }
                        toggle() {
                            this.disabled || (this.expanded = !this.expanded)
                        }
                        close() {
                            this.disabled || (this.expanded = !1)
                        }
                        open() {
                            this.disabled || (this.expanded = !0)
                        }
                        _subscribeToOpenCloseAllActions() {
                            return this.accordion._openCloseAllActions.subscribe(e => {
                                this.disabled || (this.expanded = e)
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(jF, 12), u(ge), u(Wv))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["cdk-accordion-item"],
                            ["", "cdkAccordionItem", ""]
                        ],
                        inputs: {
                            expanded: "expanded",
                            disabled: "disabled"
                        },
                        outputs: {
                            closed: "closed",
                            opened: "opened",
                            destroyed: "destroyed",
                            expandedChange: "expandedChange"
                        },
                        exportAs: ["cdkAccordionItem"],
                        features: [Q([{
                            provide: jF,
                            useValue: void 0
                        }])]
                    }), t
                })(),
                tre = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })();
            const nre = ["body"];

            function ire(t, n) {}
            const rre = [
                    [
                        ["mat-expansion-panel-header"]
                    ], "*", [
                        ["mat-action-row"]
                    ]
                ],
                sre = ["mat-expansion-panel-header", "*", "mat-action-row"];

            function ore(t, n) {
                1 & t && E(0, "span", 2), 2 & t && y("@indicatorRotate", x()._getExpandedState())
            }
            const are = [
                    [
                        ["mat-panel-title"]
                    ],
                    [
                        ["mat-panel-description"]
                    ], "*"
                ],
                lre = ["mat-panel-title", "mat-panel-description", "*"],
                zF = new R("MAT_ACCORDION"),
                UF = "225ms cubic-bezier(0.4,0.0,0.2,1)",
                GF = {
                    indicatorRotate: Nt("indicatorRotate", [Oe("collapsed, void", ee({
                        transform: "rotate(0deg)"
                    })), Oe("expanded", ee({
                        transform: "rotate(180deg)"
                    })), Ue("expanded <=> collapsed, void => collapsed", Ye(UF))]),
                    bodyExpansion: Nt("bodyExpansion", [Oe("collapsed, void", ee({
                        height: "0px",
                        visibility: "hidden"
                    })), Oe("expanded", ee({
                        height: "*",
                        visibility: "visible"
                    })), Ue("expanded <=> collapsed, void => collapsed", Ye(UF))])
                },
                WF = new R("MAT_EXPANSION_PANEL");
            let qF = (() => {
                    class t {
                        constructor(e, i) {
                            this._template = e, this._expansionPanel = i
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rt), u(WF, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["ng-template", "matExpansionPanelContent", ""]
                        ]
                    }), t
                })(),
                cre = 0;
            const YF = new R("MAT_EXPANSION_PANEL_DEFAULT_OPTIONS");
            let QF = (() => {
                class t extends ere {
                    constructor(e, i, r, s, o, a, l) {
                        super(e, i, r), this._viewContainerRef = s, this._animationMode = a, this._hideToggle = !1, this.afterExpand = new V, this.afterCollapse = new V, this._inputChanges = new H, this._headerId = "mat-expansion-panel-header-" + cre++, this._bodyAnimationDone = new H, this.accordion = e, this._document = o, this._bodyAnimationDone.pipe(Js((c, d) => c.fromState === d.fromState && c.toState === d.toState)).subscribe(c => {
                            "void" !== c.fromState && ("expanded" === c.toState ? this.afterExpand.emit() : "collapsed" === c.toState && this.afterCollapse.emit())
                        }), l && (this.hideToggle = l.hideToggle)
                    }
                    get hideToggle() {
                        return this._hideToggle || this.accordion && this.accordion.hideToggle
                    }
                    set hideToggle(e) {
                        this._hideToggle = G(e)
                    }
                    get togglePosition() {
                        return this._togglePosition || this.accordion && this.accordion.togglePosition
                    }
                    set togglePosition(e) {
                        this._togglePosition = e
                    }
                    _hasSpacing() {
                        return !!this.accordion && this.expanded && "default" === this.accordion.displayMode
                    }
                    _getExpandedState() {
                        return this.expanded ? "expanded" : "collapsed"
                    }
                    toggle() {
                        this.expanded = !this.expanded
                    }
                    close() {
                        this.expanded = !1
                    }
                    open() {
                        this.expanded = !0
                    }
                    ngAfterContentInit() {
                        this._lazyContent && this._lazyContent._expansionPanel === this && this.opened.pipe(pt(null), Ie(() => this.expanded && !this._portal), Fe(1)).subscribe(() => {
                            this._portal = new yr(this._lazyContent._template, this._viewContainerRef)
                        })
                    }
                    ngOnChanges(e) {
                        this._inputChanges.next(e)
                    }
                    ngOnDestroy() {
                        super.ngOnDestroy(), this._bodyAnimationDone.complete(), this._inputChanges.complete()
                    }
                    _containsFocus() {
                        if (this._body) {
                            const e = this._document.activeElement,
                                i = this._body.nativeElement;
                            return e === i || i.contains(e)
                        }
                        return !1
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(zF, 12), u(ge), u(Wv), u(Je), u(pe), u(Tt, 8), u(YF, 8))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["mat-expansion-panel"]
                    ],
                    contentQueries: function(e, i, r) {
                        if (1 & e && _e(r, qF, 5), 2 & e) {
                            let s;
                            O(s = P()) && (i._lazyContent = s.first)
                        }
                    },
                    viewQuery: function(e, i) {
                        if (1 & e && J(nre, 5), 2 & e) {
                            let r;
                            O(r = P()) && (i._body = r.first)
                        }
                    },
                    hostAttrs: [1, "mat-expansion-panel"],
                    hostVars: 6,
                    hostBindings: function(e, i) {
                        2 & e && re("mat-expanded", i.expanded)("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-expansion-panel-spacing", i._hasSpacing())
                    },
                    inputs: {
                        disabled: "disabled",
                        expanded: "expanded",
                        hideToggle: "hideToggle",
                        togglePosition: "togglePosition"
                    },
                    outputs: {
                        opened: "opened",
                        closed: "closed",
                        expandedChange: "expandedChange",
                        afterExpand: "afterExpand",
                        afterCollapse: "afterCollapse"
                    },
                    exportAs: ["matExpansionPanel"],
                    features: [Q([{
                        provide: zF,
                        useValue: void 0
                    }, {
                        provide: WF,
                        useExisting: t
                    }]), A, ze],
                    ngContentSelectors: sre,
                    decls: 7,
                    vars: 4,
                    consts: [
                        ["role", "region", 1, "mat-expansion-panel-content", 3, "id"],
                        ["body", ""],
                        [1, "mat-expansion-panel-body"],
                        [3, "cdkPortalOutlet"]
                    ],
                    template: function(e, i) {
                        1 & e && (Xe(rre), me(0), f(1, "div", 0, 1), T("@bodyExpansion.done", function(s) {
                            return i._bodyAnimationDone.next(s)
                        }), f(3, "div", 2), me(4, 1), b(5, ire, 0, 0, "ng-template", 3), g(), me(6, 2), g()), 2 & e && (p(1), y("@bodyExpansion", i._getExpandedState())("id", i.id), q("aria-labelledby", i._headerId), p(4), y("cdkPortalOutlet", i._portal))
                    },
                    dependencies: [Ki],
                    styles: ['.mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-content[style*="visibility: hidden"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}'],
                    encapsulation: 2,
                    data: {
                        animation: [GF.bodyExpansion]
                    },
                    changeDetection: 0
                }), t
            })();
            class dre {}
            const ure = no(dre);
            let hre = (() => {
                    class t extends ure {
                        constructor(e, i, r, s, o, a, l) {
                            super(), this.panel = e, this._element = i, this._focusMonitor = r, this._changeDetectorRef = s, this._animationMode = a, this._parentChangeSubscription = Re.EMPTY;
                            const c = e.accordion ? e.accordion._stateChanges.pipe(Ie(d => !(!d.hideToggle && !d.togglePosition))) : Ni;
                            this.tabIndex = parseInt(l || "") || 0, this._parentChangeSubscription = tt(e.opened, e.closed, c, e._inputChanges.pipe(Ie(d => !!(d.hideToggle || d.disabled || d.togglePosition)))).subscribe(() => this._changeDetectorRef.markForCheck()), e.closed.pipe(Ie(() => e._containsFocus())).subscribe(() => r.focusVia(i, "program")), o && (this.expandedHeight = o.expandedHeight, this.collapsedHeight = o.collapsedHeight)
                        }
                        get disabled() {
                            return this.panel.disabled
                        }
                        _toggle() {
                            this.disabled || this.panel.toggle()
                        }
                        _isExpanded() {
                            return this.panel.expanded
                        }
                        _getExpandedState() {
                            return this.panel._getExpandedState()
                        }
                        _getPanelId() {
                            return this.panel.id
                        }
                        _getTogglePosition() {
                            return this.panel.togglePosition
                        }
                        _showToggle() {
                            return !this.panel.hideToggle && !this.panel.disabled
                        }
                        _getHeaderHeight() {
                            const e = this._isExpanded();
                            return e && this.expandedHeight ? this.expandedHeight : !e && this.collapsedHeight ? this.collapsedHeight : null
                        }
                        _keydown(e) {
                            switch (e.keyCode) {
                                case 32:
                                case 13:
                                    $t(e) || (e.preventDefault(), this._toggle());
                                    break;
                                default:
                                    return void(this.panel.accordion && this.panel.accordion._handleHeaderKeydown(e))
                            }
                        }
                        focus(e, i) {
                            e ? this._focusMonitor.focusVia(this._element, e, i) : this._element.nativeElement.focus(i)
                        }
                        ngAfterViewInit() {
                            this._focusMonitor.monitor(this._element).subscribe(e => {
                                e && this.panel.accordion && this.panel.accordion._handleHeaderFocus(this)
                            })
                        }
                        ngOnDestroy() {
                            this._parentChangeSubscription.unsubscribe(), this._focusMonitor.stopMonitoring(this._element)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(QF, 1), u(N), u(dn), u(ge), u(YF, 8), u(Tt, 8), Qt("tabindex"))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-expansion-panel-header"]
                        ],
                        hostAttrs: ["role", "button", 1, "mat-expansion-panel-header", "mat-focus-indicator"],
                        hostVars: 15,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function() {
                                return i._toggle()
                            })("keydown", function(s) {
                                return i._keydown(s)
                            }), 2 & e && (q("id", i.panel._headerId)("tabindex", i.tabIndex)("aria-controls", i._getPanelId())("aria-expanded", i._isExpanded())("aria-disabled", i.panel.disabled), Kt("height", i._getHeaderHeight()), re("mat-expanded", i._isExpanded())("mat-expansion-toggle-indicator-after", "after" === i._getTogglePosition())("mat-expansion-toggle-indicator-before", "before" === i._getTogglePosition())("_mat-animation-noopable", "NoopAnimations" === i._animationMode))
                        },
                        inputs: {
                            tabIndex: "tabIndex",
                            expandedHeight: "expandedHeight",
                            collapsedHeight: "collapsedHeight"
                        },
                        features: [A],
                        ngContentSelectors: lre,
                        decls: 5,
                        vars: 3,
                        consts: [
                            [1, "mat-content"],
                            ["class", "mat-expansion-indicator", 4, "ngIf"],
                            [1, "mat-expansion-indicator"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(are), f(0, "span", 0), me(1), me(2, 1), me(3, 2), g(), b(4, ore, 1, 1, "span", 1)), 2 & e && (re("mat-content-hide-toggle", !i._showToggle()), p(4), y("ngIf", i._showToggle()))
                        },
                        dependencies: [at],
                        styles: ['.mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:"";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}'],
                        encapsulation: 2,
                        data: {
                            animation: [GF.indicatorRotate]
                        },
                        changeDetection: 0
                    }), t
                })(),
                fre = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-panel-description"]
                        ],
                        hostAttrs: [1, "mat-expansion-panel-header-description"]
                    }), t
                })(),
                pre = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-panel-title"]
                        ],
                        hostAttrs: [1, "mat-expansion-panel-header-title"]
                    }), t
                })(),
                mre = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, de, tre, $r]
                    }), t
                })();

            function gre(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-card")(1, "h3"), w(2, "Persoon"), g(), f(3, "button", 3), T("click", function() {
                        return ne(e), ie(x().navigateToOwner())
                    }), w(4), g()()
                }
                if (2 & t) {
                    const e = n.ngIf;
                    p(4), cs("", null == e.ownerNavigation ? null : e.ownerNavigation.firstname, " ", null == e.ownerNavigation ? null : e.ownerNavigation.lastname, "")
                }
            }
            const Cw = function(t) {
                return {
                    "background-color": t
                }
            };

            function _re(t, n) {
                if (1 & t && (f(0, "mat-card")(1, "h3"), w(2, "Voertuig"), g(), f(3, "mat-form-field"), E(4, "input", 4), g(), E(5, "br"), f(6, "mat-form-field"), E(7, "input", 5), g(), E(8, "br"), f(9, "mat-form-field"), E(10, "input", 6), g(), f(11, "button", 7), w(12), g(), E(13, "br"), f(14, "mat-form-field"), E(15, "input", 8), g(), f(16, "button", 7), w(17), g(), E(18, "br"), f(19, "mat-form-field"), E(20, "input", 9), g(), f(21, "button", 7), w(22), g(), E(23, "br"), f(24, "mat-form-field"), E(25, "input", 10), g()()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    p(4), Ge("value", e.plate), p(3), Ge("value", e.mName), p(3), Ge("value", e.primaryColor), p(1), y("ngStyle", gn(12, Cw, i.getHexColor(null == e ? null : e.primaryColor))), p(1), ve(null == e.primaryColor ? null : e.primaryColor.charAt(0)), p(3), Ge("value", e.secondaryColor), p(1), y("ngStyle", gn(14, Cw, i.getHexColor(null == e ? null : e.secondaryColor))), p(1), ve(null == e.secondaryColor ? null : e.secondaryColor.charAt(0)), p(3), Ge("value", e.pearlescentColor), p(1), y("ngStyle", gn(16, Cw, i.getHexColor(null == e ? null : e.pearlescentColor))), p(1), ve(null == e.pearlescentColor ? null : e.pearlescentColor.charAt(0)), p(3), Ge("value", null == e.job ? "Nee" : "Ja")
                }
            }

            function yre(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "button", 17), T("click", function() {
                        return ne(e), ie(x(2).SaveVehicleStatus())
                    }), w(1, "Opslaan"), g()
                }
            }

            function bre(t, n) {
                if (1 & t && (f(0, "mat-option", 18), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e.bool), p(1), X(" ", e.value, " ")
                }
            }

            function vre(t, n) {
                1 & t && E(0, "br")
            }

            function wre(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-form-field")(1, "textarea", 19), T("ngModelChange", function(r) {
                        return ne(e), ie(x().ngIf.wokReason = r)
                    }), g()()
                }
                if (2 & t) {
                    const e = x().ngIf,
                        i = x();
                    p(1), y("ngModel", e.wokReason)("disabled", !i.canManageVehicles())
                }
            }

            function Cre(t, n) {
                if (1 & t && (f(0, "mat-option", 18), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e.bool), p(1), X(" ", e.value, " ")
                }
            }

            function xre(t, n) {
                if (1 & t && (f(0, "mat-option", 18), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e.bool), p(1), X(" ", e.value, " ")
                }
            }

            function Dre(t, n) {
                1 & t && E(0, "br")
            }

            function Mre(t, n) {
                1 & t && (f(0, "mat-form-field"), E(1, "textarea", 20), g())
            }

            function Sre(t, n) {
                1 & t && (f(0, "mat-form-field"), E(1, "input", 21), g())
            }

            function kre(t, n) {
                1 & t && (f(0, "mat-form-field"), E(1, "input", 22), g())
            }

            function Are(t, n) {
                1 & t && (f(0, "th", 34), w(1, "Datum tenaamstelling"), g())
            }

            function Ere(t, n) {
                if (1 & t && (f(0, "td", 35), w(1), ue(2, "date"), g()), 2 & t) {
                    const e = n.$implicit;
                    p(1), ve(ul(2, 1, e.time, "short"))
                }
            }

            function Tre(t, n) {
                1 & t && (f(0, "th", 36), w(1, "Van"), g())
            }

            function Ire(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "td", 37), T("click", function() {
                        const s = ne(e).$implicit;
                        return ie(x(3).navigateToPerson(s.from))
                    }), w(1), ue(2, "async"), g()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    let r;
                    p(1), ve(null == (r = De(2, 1, i.populateNames(e))) ? null : r.fromName)
                }
            }

            function Rre(t, n) {
                1 & t && (f(0, "th", 36), w(1, "Naar"), g())
            }

            function Fre(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "td", 37), T("click", function() {
                        const s = ne(e).$implicit;
                        return ie(x(3).navigateToPerson(s.to))
                    }), w(1), ue(2, "async"), g()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = x(3);
                    let r;
                    p(1), ve(null == (r = De(2, 1, i.populateNames(e))) ? null : r.toName)
                }
            }

            function Ore(t, n) {
                1 & t && E(0, "tr", 38)
            }

            function Pre(t, n) {
                1 & t && E(0, "tr", 39)
            }
            const Lre = function() {
                return [5, 10, 20]
            };

            function Nre(t, n) {
                if (1 & t && (f(0, "table", 23), oe(1, 24), b(2, Are, 2, 0, "th", 25), b(3, Ere, 3, 4, "td", 26), ae(), oe(4, 27), b(5, Tre, 2, 0, "th", 28), b(6, Ire, 3, 3, "td", 29), ae(), oe(7, 30), b(8, Rre, 2, 0, "th", 28), b(9, Fre, 3, 3, "td", 29), ae(), b(10, Ore, 1, 0, "tr", 31), b(11, Pre, 1, 0, "tr", 32), g(), E(12, "mat-paginator", 33)), 2 & t) {
                    const e = x(2);
                    y("dataSource", e.vehicleTransfers), p(10), y("matHeaderRowDef", e.displayedColumns), p(1), y("matRowDefColumns", e.displayedColumns), p(1), y("pageSizeOptions", td(4, Lre))
                }
            }

            function Bre(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-card")(1, "h3"), w(2, "Status "), b(3, yre, 2, 0, "button", 11), g(), f(4, "mat-form-field")(5, "mat-label"), w(6, "WOK"), g(), f(7, "mat-select", 12), T("selectionChange", function(r) {
                        return ne(e), ie(x().SetOptions(r, 1))
                    }), b(8, bre, 2, 2, "mat-option", 13), g()(), b(9, vre, 1, 0, "br", 2), b(10, wre, 2, 2, "mat-form-field", 2), E(11, "br"), f(12, "mat-form-field")(13, "mat-label"), w(14, "Gestolen"), g(), f(15, "mat-select", 12), T("selectionChange", function(r) {
                        return ne(e), ie(x().SetOptions(r, 2))
                    }), b(16, Cre, 2, 2, "mat-option", 13), g()(), E(17, "br"), f(18, "mat-form-field")(19, "mat-label"), w(20, "In beslag genomen"), g(), f(21, "mat-select", 14), T("selectionChange", function(r) {
                        return ne(e), ie(x().SetOptions(r, 3))
                    }), b(22, xre, 2, 2, "mat-option", 13), g()(), b(23, Dre, 1, 0, "br", 2), b(24, Mre, 2, 0, "mat-form-field", 2), E(25, "br"), b(26, Sre, 2, 0, "mat-form-field", 2), b(27, kre, 2, 0, "mat-form-field", 2), f(28, "mat-expansion-panel", 15)(29, "mat-expansion-panel-header")(30, "mat-panel-title"), w(31, " Datum laatste tenaamstelling "), g(), f(32, "mat-panel-description"), w(33), ue(34, "date"), g()(), b(35, Nre, 13, 5, "ng-template", 16), g()()
                }
                if (2 & t) {
                    const e = n.ngIf,
                        i = x();
                    let r;
                    p(3), y("ngIf", i.canManageVehicles()), p(4), y("value", e.wok)("disabled", !i.canManageVehicles()), p(1), y("ngForOf", i.OptionsWok), p(1), y("ngIf", 1 == e.wok), p(1), y("ngIf", 1 == e.wok), p(5), y("value", e.stolen)("disabled", !i.canManageVehicles()), p(1), y("ngForOf", i.OptionsStolen), p(5), y("value", e.fourrieremecano), p(1), y("ngForOf", i.OptionsOpslag), p(1), y("ngIf", 1 == e.fourrieremecano), p(1), y("ngIf", 1 == e.fourrieremecano), p(2), y("ngIf", 1 == e.fourrieremecano), p(1), y("ngIf", 1 == e.fourrieremecano), p(6), X(" ", null !== (r = ul(34, 16, null == e.vehicleTransfers[0] ? null : e.vehicleTransfers[0].time, "short")) && void 0 !== r ? r : "Onbekend", " ")
                }
            }
            let Vre = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l) {
                            this.route = e, this.http = i, this.toastr = r, this.data = s, this.playerData = o, this.router = a, this.authService = l, this.subs = new co, this.kenteken$ = new Te(null), this.cardetails$ = new Te(null), this.vehicleTransfers = new lX, this.displayedColumns = ["date", "from", "to"], this.OptionsWok = [{
                                bool: !1,
                                value: "Nee"
                            }, {
                                bool: !0,
                                value: "Ja"
                            }], this.OptionsStolen = [{
                                bool: !1,
                                value: "Nee"
                            }, {
                                bool: !0,
                                value: "Ja"
                            }], this.OptionsOpslag = [{
                                bool: !1,
                                value: "Nee"
                            }, {
                                bool: !0,
                                value: "Ja"
                            }], this.observableCache = new Map, this.subs.sink = this.cardetails$.subscribe({
                                next: c => {
                                    c ? .vehicleTransfers && c.vehicleTransfers.sort((d, h) => new Date(d.time) < new Date(h.time) ? 1 : -1), this.vehicleTransfers.data = c ? .vehicleTransfers ? ? []
                                }
                            })
                        }
                        set content(e) {
                            e && (this.vehicleTransfers.paginator = e)
                        }
                        get cardetails() {
                            return this.cardetails$.value
                        }
                        ngOnInit() {
                            this.route.params.subscribe(e => {
                                this.kenteken$.next(e.kenteken)
                            }), this.kenteken$.subscribe(e => {
                                this.loadVehicle()
                            })
                        }
                        ngOnDestroy() {
                            this.subs.unsubscribe()
                        }
                        navigateToOwner() {
                            if (!this.cardetails ? .ownerNavigation ? .identifier) throw new Error("this.cardetails.ownerNavigation is null!");
                            this.router.navigate(["persoon/", this.cardetails.ownerNavigation.identifier])
                        }
                        navigateToPerson(e) {
                            this.router.navigate(["persoon/", e])
                        }
                        loadVehicle() {
                            var e = this;
                            return Cr(function*() {
                                if (null == e.kenteken$.value) throw console.log(e.kenteken$.value), new Error("kenteken is null!");
                                e.subs.sink = e.data.get(e.kenteken$.value).subscribe({
                                    next: i => {
                                        null != i && e.cardetails$.next(i)
                                    },
                                    error: i => {
                                        404 === i ? .status ? e.toastr.error("Er ging iets mis", "Kenteken is niet gevonden, probeer het opnieuw") : (e.toastr.error(`Er ging iets mis!", "Er ging iets mis tijdens het ophalen van het kenteken, probeer het opnieuw. ${i?.status??i.message}`), console.error(i))
                                    }
                                })
                            })()
                        }
                        canManageVehicles() {
                            return this.authService.isLawEnforcement()
                        }
                        SetOptions(e, i) {
                            const r = this.cardetails;
                            if (!r) throw new Error("cardetails is null!");
                            1 === i && (r.wok = e.source.value), 2 === i && (r.stolen = e.source.value), 3 === i && (r.fourrieremecano = e.source.value)
                        }
                        populateNames(e) {
                            let i = this.observableCache.get(e.id);
                            return i || (i || (i = new Jn, this.observableCache.set(e.id, i)), e.fromName && e.toName ? (i ? .next(e), i) : (this.playerData.getPlayerName(e.from).subscribe({
                                next: r => {
                                    e.fromName = `${r?.firstname} ${r?.lastname}`, e.toName && (i ? .next(e), i ? .complete())
                                }
                            }), this.playerData.getPlayerName(e.to).subscribe({
                                next: r => {
                                    e.toName = `${r?.firstname} ${r?.lastname}`, e.fromName && (i ? .next(e), i ? .complete())
                                }
                            }), i))
                        }
                        SaveVehicleStatus() {
                            const e = this.cardetails;
                            if (!e) throw new Error("cardetails is null!");
                            this.http.put(`/api/OwnedVehicles/${e.plate}`, e).subscribe({
                                next: () => {
                                    this.toastr.success("Voertuig status geupdate!")
                                },
                                error: i => {
                                    this.toastr.error(`Er ging iets mis tijdens het updaten van de WOK status! (${i?.status??i.message})`), console.error(i)
                                }
                            }), this.cardetails$.next(e)
                        }
                        getHexColor(e) {
                            return e ? AF[e] : "Onbekend"
                        }
                        addoptions() {
                            this.OptionsWok.push({
                                bool: !0,
                                value: "Ja"
                            }), this.OptionsWok.push({
                                bool: !1,
                                value: "Nee"
                            }), this.OptionsOpslag.push({
                                bool: !0,
                                value: "Ja"
                            }), this.OptionsOpslag.push({
                                bool: !1,
                                value: "Nee"
                            }), this.OptionsStolen.push({
                                bool: !0,
                                value: "Ja"
                            }), this.OptionsStolen.push({
                                bool: !1,
                                value: "Nee"
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Yi), u(wr), u(Ur), u(EF), u(Qv), u(gt), u(Bn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-viewvoertuig"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(po, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.content = r.first)
                            }
                        },
                        decls: 10,
                        vars: 9,
                        consts: [
                            ["fxFlex", "", "fxLayoutAlign", "row", "fxFlex", "", 2, "height", "90vh"],
                            ["fxFlex", ""],
                            [4, "ngIf"],
                            ["mat-raised-button", "", 2, "width", "90%", 3, "click"],
                            ["matInput", "", "placeholder", "Kenteken", "disabled", "", 3, "value"],
                            ["matInput", "", "placeholder", "Model", "disabled", "", 3, "value"],
                            ["matInput", "", "placeholder", "Primaire Kleur", "disabled", "", 3, "value"],
                            [2, "appearance", "none", "border", "none !important", 3, "ngStyle"],
                            ["matInput", "", "placeholder", "Secundaire Kleur", "disabled", "", 3, "value"],
                            ["matInput", "", "placeholder", "Parelmoer Kleur", "disabled", "", 3, "value"],
                            ["matInput", "", "placeholder", "Dienstvoertuig?", "disabled", "", 3, "value"],
                            ["mat-raised-button", "", "id", "savestatbutton", 3, "click", 4, "ngIf"],
                            [3, "value", "disabled", "selectionChange"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            ["disabled", "", 3, "value", "selectionChange"],
                            ["hideToggle", ""],
                            ["matExpansionPanelContent", ""],
                            ["mat-raised-button", "", "id", "savestatbutton", 3, "click"],
                            [3, "value"],
                            ["matInput", "", "placeholder", "Afkeurreden", 3, "ngModel", "disabled", "ngModelChange"],
                            ["matInput", "", "placeholder", "Reden inbeslagname"],
                            ["matInput", "", "type", "date", "placeholder", "Datum inbeslagname"],
                            ["matInput", "", "type", "time", "placeholder", "Tijdstip inbeslagname"],
                            ["matSort", "", "mat-table", "", 2, "width", "100%", 3, "dataSource"],
                            ["matColumnDef", "date"],
                            ["mat-header-cell", "", "mat-sort-header", "date", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "from"],
                            ["mat-header-cell", "", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 3, "click", 4, "matCellDef"],
                            ["matColumnDef", "to"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["showFirstLastButtons", "", "aria-label", "Selecteer pagina van voertuig overschrijvingen", 3, "pageSizeOptions"],
                            ["mat-header-cell", "", "mat-sort-header", "date"],
                            ["mat-cell", ""],
                            ["mat-header-cell", ""],
                            ["mat-cell", "", 3, "click"],
                            ["mat-header-row", ""],
                            ["mat-row", ""]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0)(1, "div", 1), b(2, gre, 5, 2, "mat-card", 2), ue(3, "async"), g(), f(4, "div", 1), b(5, _re, 26, 18, "mat-card", 2), ue(6, "async"), g(), f(7, "div", 1), b(8, Bre, 36, 19, "mat-card", 2), ue(9, "async"), g()()), 2 & e && (p(2), y("ngIf", De(3, 3, i.cardetails$)), p(3), y("ngIf", De(6, 5, i.cardetails$)), p(3), y("ngIf", De(9, 7, i.cardetails$)))
                        },
                        dependencies: [Dn, at, Gs, Xt, nc, ga, ic, _a, ma, rc, ya, ba, sc, oc, sa, Kl, QF, hre, pre, fre, qF, ci, aa, Nn, po, fo, mo, Np, di, Xn, qd, ho, fa, Ep, Kn, ky],
                        styles: ["mat-card[_ngcontent-%COMP%]{height:96%;width:96%;margin:2%;overflow-y:scroll}input[_ngcontent-%COMP%]{color:#000!important}#savestatbutton[_ngcontent-%COMP%]{float:right;background-color:#01579b;color:#fff}"]
                    }), t
                })(),
                lt = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.router = e, this.authenticationService = i, this.toastr = r
                        }
                        canLogin(e) {
                            return !!this.authenticationService.isLoggedIn() || (this.router.navigate(["/login"]), this.toastr.info("Log opnieuw in aub!"), !1)
                        }
                        canActivateChild(e) {
                            return this.canLogin(e.url)
                        }
                        canLoad(e, i) {
                            return this.canLogin(i)
                        }
                        canActivate(e) {
                            return this.canLogin(e.url)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(gt), C(Bn), C(Ur))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                KF = (() => {
                    class t {
                        constructor(e, i) {
                            this.router = e, this.authenticationService = i
                        }
                        canActivate(e, i) {
                            return !this.authenticationService.isLoggedIn() || (this.router.navigate(["/home"]), !1)
                        }
                        canLoad(e, i) {
                            return !this.authenticationService.isLoggedIn()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(gt), C(Bn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            const Hre = [{
                path: "login",
                redirectTo: "login",
                pathMatch: "full"
            }, {
                path: "",
                component: gQ,
                children: [{
                    path: "",
                    redirectTo: "home",
                    pathMatch: "full"
                }, {
                    path: "players",
                    component: MR,
                    canLoad: [lt, Ei],
                    canActivateChild: [lt, Ei],
                    canActivate: [lt, Ei]
                }, {
                    path: "register",
                    component: iee,
                    canLoad: [lt, Gr],
                    canActivateChild: [lt, Gr],
                    canActivate: [lt, Gr]
                }, {
                    path: "users",
                    component: $te,
                    canLoad: [lt, Gr],
                    canActivateChild: [lt, Gr],
                    canActivate: [lt, Gr]
                }, {
                    path: "user/:id",
                    component: mee,
                    canLoad: [lt, Gr],
                    canActivateChild: [lt, Gr],
                    canActivate: [lt, Gr]
                }, {
                    path: "home",
                    component: EQ,
                    canLoad: [lt],
                    canActivateChild: [lt],
                    canActivate: [lt]
                }, {
                    path: "personen",
                    component: AJ,
                    canLoad: [lt, Ei],
                    canActivateChild: [lt, Ei],
                    canActivate: [lt, Ei]
                }, {
                    path: "persoon/:identifier",
                    component: Xie,
                    canLoad: [lt, Ei],
                    canActivateChild: [lt, Ei],
                    canActivate: [lt, Ei]
                }, {
                    path: "voertuigen",
                    component: _ne,
                    canLoad: [lt, da],
                    canActivateChild: [lt, da],
                    canActivate: [lt, da]
                }, {
                    path: "voertuig/:kenteken",
                    component: Vre,
                    canLoad: [lt, da],
                    canActivateChild: [lt, da],
                    canActivate: [lt, da]
                }, {
                    path: "arrestanten",
                    component: KU,
                    canLoad: [lt, Ei],
                    canActivateChild: [lt, Ei],
                    canActivate: [lt, Ei]
                }],
                canLoad: [lt],
                canActivateChild: [lt]
            }, {
                path: "login",
                component: MR,
                canLoad: [KF],
                canActivate: [KF]
            }, {
                path: "firstlogin",
                component: SK
            }];
            let $re = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [mE.forRoot(Hre, {
                            useHash: !1
                        }), mE]
                    }), t
                })(),
                jre = (() => {
                    class t {
                        constructor() {
                            this.title = "MEOS", this.getScreenSize()
                        }
                        getScreenSize(e) {
                            this.screenHeight = window.innerHeight, this.screenWidth = window.innerWidth
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["app-root"]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && T("resize", function(s) {
                                return i.getScreenSize(s)
                            }, 0, Ox)
                        },
                        decls: 2,
                        vars: 0,
                        consts: [
                            [1, "background", 2, "height", "100vh", "max-height", "100%"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "div", 0), E(1, "router-outlet"), g())
                        },
                        dependencies: [gf],
                        styles: ["@media (min-width: 992px){.app-main-container[_ngcontent-%COMP%]{margin-top:84px;margin-bottom:50px}}@media (max-width: 992px){.app-main-container[_ngcontent-%COMP%]{margin-top:50px;margin-bottom:0}}"]
                    }), t
                })();
            const wo = new Ze(gc),
                Ure = {
                    connector: () => new H
                };

            function ZF(t, n = Ure) {
                const {
                    connector: e
                } = n;
                return Pt((i, r) => {
                    const s = e();
                    Rt(t(function zre(t) {
                        return new Ze(n => t.subscribe(n))
                    }(s))).subscribe(r), r.add(i.subscribe(s))
                })
            }
            const _u = "Service workers are disabled or not supported by this browser";
            class im {
                constructor(n) {
                    if (this.serviceWorker = n, n) {
                        const i = un(n, "controllerchange").pipe(Z(() => n.controller)),
                            s = gl(Ys(() => z(n.controller)), i);
                        this.worker = s.pipe(Ie(d => !!d)), this.registration = this.worker.pipe(vt(() => n.getRegistration()));
                        const c = un(n, "message").pipe(Z(d => d.data)).pipe(Ie(d => d && d.type)).pipe(function Wre(t) {
                            return t ? n => ZF(t)(n) : n => function Gre(t, n) {
                                const e = Qe(t) ? t : () => t;
                                return Qe(n) ? ZF(n, {
                                    connector: e
                                }) : i => new rf(i, e)
                            }(new H)(n)
                        }());
                        c.connect(), this.events = c
                    } else this.worker = this.events = this.registration = function qre(t) {
                        return Ys(() => Ln(new Error(t)))
                    }(_u)
                }
                postMessage(n, e) {
                    return this.worker.pipe(Fe(1), mt(i => {
                        i.postMessage({
                            action: n,
                            ...e
                        })
                    })).toPromise().then(() => {})
                }
                postMessageWithOperation(n, e, i) {
                    const r = this.waitForOperationCompleted(i),
                        s = this.postMessage(n, e);
                    return Promise.all([s, r]).then(([, o]) => o)
                }
                generateNonce() {
                    return Math.round(1e7 * Math.random())
                }
                eventsOfType(n) {
                    let e;
                    return e = "string" == typeof n ? i => i.type === n : i => n.includes(i.type), this.events.pipe(Ie(e))
                }
                nextEventOfType(n) {
                    return this.eventsOfType(n).pipe(Fe(1))
                }
                waitForOperationCompleted(n) {
                    return this.eventsOfType("OPERATION_COMPLETED").pipe(Ie(e => e.nonce === n), Fe(1), Z(e => {
                        if (void 0 !== e.result) return e.result;
                        throw new Error(e.error)
                    })).toPromise()
                }
                get isEnabled() {
                    return !!this.serviceWorker
                }
            }
            let Yre = (() => {
                    class t {
                        constructor(e) {
                            if (this.sw = e, this.subscriptionChanges = new H, !e.isEnabled) return this.messages = wo, this.notificationClicks = wo, void(this.subscription = wo);
                            this.messages = this.sw.eventsOfType("PUSH").pipe(Z(r => r.data)), this.notificationClicks = this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(Z(r => r.data)), this.pushManager = this.sw.registration.pipe(Z(r => r.pushManager));
                            const i = this.pushManager.pipe(vt(r => r.getSubscription()));
                            this.subscription = tt(i, this.subscriptionChanges)
                        }
                        get isEnabled() {
                            return this.sw.isEnabled
                        }
                        requestSubscription(e) {
                            if (!this.sw.isEnabled) return Promise.reject(new Error(_u));
                            const i = {
                                userVisibleOnly: !0
                            };
                            let r = this.decodeBase64(e.serverPublicKey.replace(/_/g, "/").replace(/-/g, "+")),
                                s = new Uint8Array(new ArrayBuffer(r.length));
                            for (let o = 0; o < r.length; o++) s[o] = r.charCodeAt(o);
                            return i.applicationServerKey = s, this.pushManager.pipe(vt(o => o.subscribe(i)), Fe(1)).toPromise().then(o => (this.subscriptionChanges.next(o), o))
                        }
                        unsubscribe() {
                            return this.sw.isEnabled ? this.subscription.pipe(Fe(1), vt(i => {
                                if (null === i) throw new Error("Not subscribed to push notifications.");
                                return i.unsubscribe().then(r => {
                                    if (!r) throw new Error("Unsubscribe failed!");
                                    this.subscriptionChanges.next(null)
                                })
                            })).toPromise() : Promise.reject(new Error(_u))
                        }
                        decodeBase64(e) {
                            return atob(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(im))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Qre = (() => {
                    class t {
                        constructor(e) {
                            if (this.sw = e, !e.isEnabled) return this.versionUpdates = wo, this.available = wo, this.activated = wo, void(this.unrecoverable = wo);
                            this.versionUpdates = this.sw.eventsOfType(["VERSION_DETECTED", "VERSION_INSTALLATION_FAILED", "VERSION_READY", "NO_NEW_VERSION_DETECTED"]), this.available = this.versionUpdates.pipe(Ie(i => "VERSION_READY" === i.type), Z(i => ({
                                type: "UPDATE_AVAILABLE",
                                current: i.currentVersion,
                                available: i.latestVersion
                            }))), this.activated = this.sw.eventsOfType("UPDATE_ACTIVATED"), this.unrecoverable = this.sw.eventsOfType("UNRECOVERABLE_STATE")
                        }
                        get isEnabled() {
                            return this.sw.isEnabled
                        }
                        checkForUpdate() {
                            if (!this.sw.isEnabled) return Promise.reject(new Error(_u));
                            const e = this.sw.generateNonce();
                            return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES", {
                                nonce: e
                            }, e)
                        }
                        activateUpdate() {
                            if (!this.sw.isEnabled) return Promise.reject(new Error(_u));
                            const e = this.sw.generateNonce();
                            return this.sw.postMessageWithOperation("ACTIVATE_UPDATE", {
                                nonce: e
                            }, e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(im))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
            class xw {}
            const XF = new R("NGSW_REGISTER_SCRIPT");

            function Kre(t, n, e, i) {
                return () => {
                    if (!_n(i) || !("serviceWorker" in navigator) || !1 === e.enabled) return;
                    let r;
                    if (navigator.serviceWorker.addEventListener("controllerchange", () => {
                            null !== navigator.serviceWorker.controller && navigator.serviceWorker.controller.postMessage({
                                action: "INITIALIZE"
                            })
                        }), "function" == typeof e.registrationStrategy) r = e.registrationStrategy();
                    else {
                        const [o, ...a] = (e.registrationStrategy || "registerWhenStable:30000").split(":");
                        switch (o) {
                            case "registerImmediately":
                                r = z(null);
                                break;
                            case "registerWithDelay":
                                r = JF(+a[0] || 0);
                                break;
                            case "registerWhenStable":
                                r = a[0] ? tt(eO(t), JF(+a[0])) : eO(t);
                                break;
                            default:
                                throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)
                        }
                    }
                    t.get(ce).runOutsideAngular(() => r.pipe(Fe(1)).subscribe(() => navigator.serviceWorker.register(n, {
                        scope: e.scope
                    }).catch(o => console.error("Service worker registration failed with:", o))))
                }
            }

            function JF(t) {
                return z(null).pipe(iu(t))
            }

            function eO(t) {
                return t.get(Lr).isStable.pipe(Ie(e => e))
            }

            function Zre(t, n) {
                return new im(_n(n) && !1 !== t.enabled ? navigator.serviceWorker : void 0)
            }
            let Xre = (() => {
                class t {
                    static register(e, i = {}) {
                        return {
                            ngModule: t,
                            providers: [{
                                provide: XF,
                                useValue: e
                            }, {
                                provide: xw,
                                useValue: i
                            }, {
                                provide: im,
                                useFactory: Zre,
                                deps: [xw, On]
                            }, {
                                provide: sd,
                                useFactory: Kre,
                                deps: [Ct, XF, xw, On],
                                multi: !0
                            }]
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t
                }), t.\u0275inj = W({
                    providers: [Yre, Qre]
                }), t
            })();

            function tO(t) {
                return new B(3e3, !1)
            }

            function Fse() {
                return typeof window < "u" && typeof window.document < "u"
            }

            function Dw() {
                return typeof process < "u" && "[object process]" === {}.toString.call(process)
            }

            function Co(t) {
                switch (t.length) {
                    case 0:
                        return new Bd;
                    case 1:
                        return t[0];
                    default:
                        return new C1(t)
                }
            }

            function nO(t, n, e, i, r = new Map, s = new Map) {
                const o = [],
                    a = [];
                let l = -1,
                    c = null;
                if (i.forEach(d => {
                        const h = d.get("offset"),
                            m = h == l,
                            _ = m && c || new Map;
                        d.forEach((v, D) => {
                            let k = D,
                                S = v;
                            if ("offset" !== D) switch (k = n.normalizePropertyName(k, o), S) {
                                case "!":
                                    S = r.get(D);
                                    break;
                                case ws:
                                    S = s.get(D);
                                    break;
                                default:
                                    S = n.normalizeStyleValue(D, k, S, o)
                            }
                            _.set(k, S)
                        }), m || a.push(_), c = _, l = h
                    }), o.length) throw function wse(t) {
                    return new B(3502, !1)
                }();
                return a
            }

            function Mw(t, n, e, i) {
                switch (n) {
                    case "start":
                        t.onStart(() => i(e && Sw(e, "start", t)));
                        break;
                    case "done":
                        t.onDone(() => i(e && Sw(e, "done", t)));
                        break;
                    case "destroy":
                        t.onDestroy(() => i(e && Sw(e, "destroy", t)))
                }
            }

            function Sw(t, n, e) {
                const s = kw(t.element, t.triggerName, t.fromState, t.toState, n || t.phaseName, e.totalTime ? ? t.totalTime, !!e.disabled),
                    o = t._data;
                return null != o && (s._data = o), s
            }

            function kw(t, n, e, i, r = "", s = 0, o) {
                return {
                    element: t,
                    triggerName: n,
                    fromState: e,
                    toState: i,
                    phaseName: r,
                    totalTime: s,
                    disabled: !!o
                }
            }

            function Ii(t, n, e) {
                let i = t.get(n);
                return i || t.set(n, i = e), i
            }

            function iO(t) {
                const n = t.indexOf(":");
                return [t.substring(1, n), t.slice(n + 1)]
            }
            let Aw = (t, n) => !1,
                rO = (t, n, e) => [],
                sO = null;

            function Ew(t) {
                const n = t.parentNode || t.host;
                return n === sO ? null : n
            }(Dw() || typeof Element < "u") && (Fse() ? (sO = (() => document.documentElement)(), Aw = (t, n) => {
                for (; n;) {
                    if (n === t) return !0;
                    n = Ew(n)
                }
                return !1
            }) : Aw = (t, n) => t.contains(n), rO = (t, n, e) => {
                if (e) return Array.from(t.querySelectorAll(n));
                const i = t.querySelector(n);
                return i ? [i] : []
            });
            let wa = null,
                oO = !1;
            const aO = Aw,
                lO = rO;
            let cO = (() => {
                    class t {
                        validateStyleProperty(e) {
                            return function Pse(t) {
                                wa || (wa = function Lse() {
                                    return typeof document < "u" ? document.body : null
                                }() || {}, oO = !!wa.style && "WebkitAppearance" in wa.style);
                                let n = !0;
                                return wa.style && ! function Ose(t) {
                                    return "ebkit" == t.substring(1, 6)
                                }(t) && (n = t in wa.style, !n && oO && (n = "Webkit" + t.charAt(0).toUpperCase() + t.slice(1) in wa.style)), n
                            }(e)
                        }
                        matchesElement(e, i) {
                            return !1
                        }
                        containsElement(e, i) {
                            return aO(e, i)
                        }
                        getParentElement(e) {
                            return Ew(e)
                        }
                        query(e, i, r) {
                            return lO(e, i, r)
                        }
                        computeStyle(e, i, r) {
                            return r || ""
                        }
                        animate(e, i, r, s, o, a = [], l) {
                            return new Bd(r, s)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Tw = (() => {
                    class t {}
                    return t.NOOP = new cO, t
                })();
            const Iw = "ng-enter",
                rm = "ng-leave",
                sm = "ng-trigger",
                om = ".ng-trigger",
                uO = "ng-animating",
                Rw = ".ng-animating";

            function Rs(t) {
                if ("number" == typeof t) return t;
                const n = t.match(/^(-?[\.\d]+)(m?s)/);
                return !n || n.length < 2 ? 0 : Fw(parseFloat(n[1]), n[2])
            }

            function Fw(t, n) {
                return "s" === n ? 1e3 * t : t
            }

            function am(t, n, e) {
                return t.hasOwnProperty("duration") ? t : function Vse(t, n, e) {
                    let r, s = 0,
                        o = "";
                    if ("string" == typeof t) {
                        const a = t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                        if (null === a) return n.push(tO()), {
                            duration: 0,
                            delay: 0,
                            easing: ""
                        };
                        r = Fw(parseFloat(a[1]), a[2]);
                        const l = a[3];
                        null != l && (s = Fw(parseFloat(l), a[4]));
                        const c = a[5];
                        c && (o = c)
                    } else r = t;
                    if (!e) {
                        let a = !1,
                            l = n.length;
                        r < 0 && (n.push(function Jre() {
                            return new B(3100, !1)
                        }()), a = !0), s < 0 && (n.push(function ese() {
                            return new B(3101, !1)
                        }()), a = !0), a && n.splice(l, 0, tO())
                    }
                    return {
                        duration: r,
                        delay: s,
                        easing: o
                    }
                }(t, n, e)
            }

            function yu(t, n = {}) {
                return Object.keys(t).forEach(e => {
                    n[e] = t[e]
                }), n
            }

            function hO(t) {
                const n = new Map;
                return Object.keys(t).forEach(e => {
                    n.set(e, t[e])
                }), n
            }

            function xo(t, n = new Map, e) {
                if (e)
                    for (let [i, r] of e) n.set(i, r);
                for (let [i, r] of t) n.set(i, r);
                return n
            }

            function pO(t, n, e) {
                return e ? n + ":" + e + ";" : ""
            }

            function mO(t) {
                let n = "";
                for (let e = 0; e < t.style.length; e++) {
                    const i = t.style.item(e);
                    n += pO(0, i, t.style.getPropertyValue(i))
                }
                for (const e in t.style) t.style.hasOwnProperty(e) && !e.startsWith("_") && (n += pO(0, zse(e), t.style[e]));
                t.setAttribute("style", n)
            }

            function Yr(t, n, e) {
                t.style && (n.forEach((i, r) => {
                    const s = Pw(r);
                    e && !e.has(r) && e.set(r, t.style[s]), t.style[s] = i
                }), Dw() && mO(t))
            }

            function Ca(t, n) {
                t.style && (n.forEach((e, i) => {
                    const r = Pw(i);
                    t.style[r] = ""
                }), Dw() && mO(t))
            }

            function bu(t) {
                return Array.isArray(t) ? 1 == t.length ? t[0] : v1(t) : t
            }
            const Ow = new RegExp("{{\\s*(.+?)\\s*}}", "g");

            function gO(t) {
                let n = [];
                if ("string" == typeof t) {
                    let e;
                    for (; e = Ow.exec(t);) n.push(e[1]);
                    Ow.lastIndex = 0
                }
                return n
            }

            function vu(t, n, e) {
                const i = t.toString(),
                    r = i.replace(Ow, (s, o) => {
                        let a = n[o];
                        return null == a && (e.push(function nse(t) {
                            return new B(3003, !1)
                        }()), a = ""), a.toString()
                    });
                return r == i ? t : r
            }

            function lm(t) {
                const n = [];
                let e = t.next();
                for (; !e.done;) n.push(e.value), e = t.next();
                return n
            }
            const jse = /-+([a-z0-9])/g;

            function Pw(t) {
                return t.replace(jse, (...n) => n[1].toUpperCase())
            }

            function zse(t) {
                return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
            }

            function Ri(t, n, e) {
                switch (n.type) {
                    case 7:
                        return t.visitTrigger(n, e);
                    case 0:
                        return t.visitState(n, e);
                    case 1:
                        return t.visitTransition(n, e);
                    case 2:
                        return t.visitSequence(n, e);
                    case 3:
                        return t.visitGroup(n, e);
                    case 4:
                        return t.visitAnimate(n, e);
                    case 5:
                        return t.visitKeyframes(n, e);
                    case 6:
                        return t.visitStyle(n, e);
                    case 8:
                        return t.visitReference(n, e);
                    case 9:
                        return t.visitAnimateChild(n, e);
                    case 10:
                        return t.visitAnimateRef(n, e);
                    case 11:
                        return t.visitQuery(n, e);
                    case 12:
                        return t.visitStagger(n, e);
                    default:
                        throw function ise(t) {
                            return new B(3004, !1)
                        }()
                }
            }

            function _O(t, n) {
                return window.getComputedStyle(t)[n]
            }

            function Qse(t, n) {
                const e = [];
                return "string" == typeof t ? t.split(/\s*,\s*/).forEach(i => function Kse(t, n, e) {
                    if (":" == t[0]) {
                        const l = function Zse(t, n) {
                            switch (t) {
                                case ":enter":
                                    return "void => *";
                                case ":leave":
                                    return "* => void";
                                case ":increment":
                                    return (e, i) => parseFloat(i) > parseFloat(e);
                                case ":decrement":
                                    return (e, i) => parseFloat(i) < parseFloat(e);
                                default:
                                    return n.push(function _se(t) {
                                        return new B(3016, !1)
                                    }()), "* => *"
                            }
                        }(t, e);
                        if ("function" == typeof l) return void n.push(l);
                        t = l
                    }
                    const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                    if (null == i || i.length < 4) return e.push(function gse(t) {
                        return new B(3015, !1)
                    }()), n;
                    const r = i[1],
                        s = i[2],
                        o = i[3];
                    n.push(yO(r, o));
                    "<" == s[0] && !("*" == r && "*" == o) && n.push(yO(o, r))
                }(i, e, n)) : e.push(t), e
            }
            const hm = new Set(["true", "1"]),
                fm = new Set(["false", "0"]);

            function yO(t, n) {
                const e = hm.has(t) || fm.has(t),
                    i = hm.has(n) || fm.has(n);
                return (r, s) => {
                    let o = "*" == t || t == r,
                        a = "*" == n || n == s;
                    return !o && e && "boolean" == typeof r && (o = r ? hm.has(t) : fm.has(t)), !a && i && "boolean" == typeof s && (a = s ? hm.has(n) : fm.has(n)), o && a
                }
            }
            const Xse = new RegExp("s*:selfs*,?", "g");

            function Lw(t, n, e, i) {
                return new Jse(t).build(n, e, i)
            }
            class Jse {
                constructor(n) {
                    this._driver = n
                }
                build(n, e, i) {
                    const r = new noe(e);
                    return this._resetContextStyleTimingState(r), Ri(this, bu(n), r)
                }
                _resetContextStyleTimingState(n) {
                    n.currentQuerySelector = "", n.collectedStyles = new Map, n.collectedStyles.set("", new Map), n.currentTime = 0
                }
                visitTrigger(n, e) {
                    let i = e.queryCount = 0,
                        r = e.depCount = 0;
                    const s = [],
                        o = [];
                    return "@" == n.name.charAt(0) && e.errors.push(function sse() {
                        return new B(3006, !1)
                    }()), n.definitions.forEach(a => {
                        if (this._resetContextStyleTimingState(e), 0 == a.type) {
                            const l = a,
                                c = l.name;
                            c.toString().split(/\s*,\s*/).forEach(d => {
                                l.name = d, s.push(this.visitState(l, e))
                            }), l.name = c
                        } else if (1 == a.type) {
                            const l = this.visitTransition(a, e);
                            i += l.queryCount, r += l.depCount, o.push(l)
                        } else e.errors.push(function ose() {
                            return new B(3007, !1)
                        }())
                    }), {
                        type: 7,
                        name: n.name,
                        states: s,
                        transitions: o,
                        queryCount: i,
                        depCount: r,
                        options: null
                    }
                }
                visitState(n, e) {
                    const i = this.visitStyle(n.styles, e),
                        r = n.options && n.options.params || null;
                    if (i.containsDynamicStyles) {
                        const s = new Set,
                            o = r || {};
                        i.styles.forEach(a => {
                            a instanceof Map && a.forEach(l => {
                                gO(l).forEach(c => {
                                    o.hasOwnProperty(c) || s.add(c)
                                })
                            })
                        }), s.size && (lm(s.values()), e.errors.push(function ase(t, n) {
                            return new B(3008, !1)
                        }()))
                    }
                    return {
                        type: 0,
                        name: n.name,
                        style: i,
                        options: r ? {
                            params: r
                        } : null
                    }
                }
                visitTransition(n, e) {
                    e.queryCount = 0, e.depCount = 0;
                    const i = Ri(this, bu(n.animation), e);
                    return {
                        type: 1,
                        matchers: Qse(n.expr, e.errors),
                        animation: i,
                        queryCount: e.queryCount,
                        depCount: e.depCount,
                        options: xa(n.options)
                    }
                }
                visitSequence(n, e) {
                    return {
                        type: 2,
                        steps: n.steps.map(i => Ri(this, i, e)),
                        options: xa(n.options)
                    }
                }
                visitGroup(n, e) {
                    const i = e.currentTime;
                    let r = 0;
                    const s = n.steps.map(o => {
                        e.currentTime = i;
                        const a = Ri(this, o, e);
                        return r = Math.max(r, e.currentTime), a
                    });
                    return e.currentTime = r, {
                        type: 3,
                        steps: s,
                        options: xa(n.options)
                    }
                }
                visitAnimate(n, e) {
                    const i = function roe(t, n) {
                        if (t.hasOwnProperty("duration")) return t;
                        if ("number" == typeof t) return Nw(am(t, n).duration, 0, "");
                        const e = t;
                        if (e.split(/\s+/).some(s => "{" == s.charAt(0) && "{" == s.charAt(1))) {
                            const s = Nw(0, 0, "");
                            return s.dynamic = !0, s.strValue = e, s
                        }
                        const r = am(e, n);
                        return Nw(r.duration, r.delay, r.easing)
                    }(n.timings, e.errors);
                    e.currentAnimateTimings = i;
                    let r, s = n.styles ? n.styles : ee({});
                    if (5 == s.type) r = this.visitKeyframes(s, e);
                    else {
                        let o = n.styles,
                            a = !1;
                        if (!o) {
                            a = !0;
                            const c = {};
                            i.easing && (c.easing = i.easing), o = ee(c)
                        }
                        e.currentTime += i.duration + i.delay;
                        const l = this.visitStyle(o, e);
                        l.isEmptyStep = a, r = l
                    }
                    return e.currentAnimateTimings = null, {
                        type: 4,
                        timings: i,
                        style: r,
                        options: null
                    }
                }
                visitStyle(n, e) {
                    const i = this._makeStyleAst(n, e);
                    return this._validateStyleAst(i, e), i
                }
                _makeStyleAst(n, e) {
                    const i = [],
                        r = Array.isArray(n.styles) ? n.styles : [n.styles];
                    for (let a of r) "string" == typeof a ? a === ws ? i.push(a) : e.errors.push(new B(3002, !1)) : i.push(hO(a));
                    let s = !1,
                        o = null;
                    return i.forEach(a => {
                        if (a instanceof Map && (a.has("easing") && (o = a.get("easing"), a.delete("easing")), !s))
                            for (let l of a.values())
                                if (l.toString().indexOf("{{") >= 0) {
                                    s = !0;
                                    break
                                }
                    }), {
                        type: 6,
                        styles: i,
                        easing: o,
                        offset: n.offset,
                        containsDynamicStyles: s,
                        options: null
                    }
                }
                _validateStyleAst(n, e) {
                    const i = e.currentAnimateTimings;
                    let r = e.currentTime,
                        s = e.currentTime;
                    i && s > 0 && (s -= i.duration + i.delay), n.styles.forEach(o => {
                        "string" != typeof o && o.forEach((a, l) => {
                            const c = e.collectedStyles.get(e.currentQuerySelector),
                                d = c.get(l);
                            let h = !0;
                            d && (s != r && s >= d.startTime && r <= d.endTime && (e.errors.push(function cse(t, n, e, i, r) {
                                return new B(3010, !1)
                            }()), h = !1), s = d.startTime), h && c.set(l, {
                                startTime: s,
                                endTime: r
                            }), e.options && function $se(t, n, e) {
                                const i = n.params || {},
                                    r = gO(t);
                                r.length && r.forEach(s => {
                                    i.hasOwnProperty(s) || e.push(function tse(t) {
                                        return new B(3001, !1)
                                    }())
                                })
                            }(a, e.options, e.errors)
                        })
                    })
                }
                visitKeyframes(n, e) {
                    const i = {
                        type: 5,
                        styles: [],
                        options: null
                    };
                    if (!e.currentAnimateTimings) return e.errors.push(function dse() {
                        return new B(3011, !1)
                    }()), i;
                    let s = 0;
                    const o = [];
                    let a = !1,
                        l = !1,
                        c = 0;
                    const d = n.steps.map(S => {
                        const L = this._makeStyleAst(S, e);
                        let F = null != L.offset ? L.offset : function ioe(t) {
                                if ("string" == typeof t) return null;
                                let n = null;
                                if (Array.isArray(t)) t.forEach(e => {
                                    if (e instanceof Map && e.has("offset")) {
                                        const i = e;
                                        n = parseFloat(i.get("offset")), i.delete("offset")
                                    }
                                });
                                else if (t instanceof Map && t.has("offset")) {
                                    const e = t;
                                    n = parseFloat(e.get("offset")), e.delete("offset")
                                }
                                return n
                            }(L.styles),
                            K = 0;
                        return null != F && (s++, K = L.offset = F), l = l || K < 0 || K > 1, a = a || K < c, c = K, o.push(K), L
                    });
                    l && e.errors.push(function use() {
                        return new B(3012, !1)
                    }()), a && e.errors.push(function hse() {
                        return new B(3200, !1)
                    }());
                    const h = n.steps.length;
                    let m = 0;
                    s > 0 && s < h ? e.errors.push(function fse() {
                        return new B(3202, !1)
                    }()) : 0 == s && (m = 1 / (h - 1));
                    const _ = h - 1,
                        v = e.currentTime,
                        D = e.currentAnimateTimings,
                        k = D.duration;
                    return d.forEach((S, L) => {
                        const F = m > 0 ? L == _ ? 1 : m * L : o[L],
                            K = F * k;
                        e.currentTime = v + D.delay + K, D.duration = K, this._validateStyleAst(S, e), S.offset = F, i.styles.push(S)
                    }), i
                }
                visitReference(n, e) {
                    return {
                        type: 8,
                        animation: Ri(this, bu(n.animation), e),
                        options: xa(n.options)
                    }
                }
                visitAnimateChild(n, e) {
                    return e.depCount++, {
                        type: 9,
                        options: xa(n.options)
                    }
                }
                visitAnimateRef(n, e) {
                    return {
                        type: 10,
                        animation: this.visitReference(n.animation, e),
                        options: xa(n.options)
                    }
                }
                visitQuery(n, e) {
                    const i = e.currentQuerySelector,
                        r = n.options || {};
                    e.queryCount++, e.currentQuery = n;
                    const [s, o] = function eoe(t) {
                        const n = !!t.split(/\s*,\s*/).find(e => ":self" == e);
                        return n && (t = t.replace(Xse, "")), t = t.replace(/@\*/g, om).replace(/@\w+/g, e => om + "-" + e.slice(1)).replace(/:animating/g, Rw), [t, n]
                    }(n.selector);
                    e.currentQuerySelector = i.length ? i + " " + s : s, Ii(e.collectedStyles, e.currentQuerySelector, new Map);
                    const a = Ri(this, bu(n.animation), e);
                    return e.currentQuery = null, e.currentQuerySelector = i, {
                        type: 11,
                        selector: s,
                        limit: r.limit || 0,
                        optional: !!r.optional,
                        includeSelf: o,
                        animation: a,
                        originalSelector: n.selector,
                        options: xa(n.options)
                    }
                }
                visitStagger(n, e) {
                    e.currentQuery || e.errors.push(function pse() {
                        return new B(3013, !1)
                    }());
                    const i = "full" === n.timings ? {
                        duration: 0,
                        delay: 0,
                        easing: "full"
                    } : am(n.timings, e.errors, !0);
                    return {
                        type: 12,
                        animation: Ri(this, bu(n.animation), e),
                        timings: i,
                        options: null
                    }
                }
            }
            class noe {
                constructor(n) {
                    this.errors = n, this.queryCount = 0, this.depCount = 0, this.currentTransition = null, this.currentQuery = null, this.currentQuerySelector = null, this.currentAnimateTimings = null, this.currentTime = 0, this.collectedStyles = new Map, this.options = null, this.unsupportedCSSPropertiesFound = new Set
                }
            }

            function xa(t) {
                return t ? (t = yu(t)).params && (t.params = function toe(t) {
                    return t ? yu(t) : null
                }(t.params)) : t = {}, t
            }

            function Nw(t, n, e) {
                return {
                    duration: t,
                    delay: n,
                    easing: e
                }
            }

            function Bw(t, n, e, i, r, s, o = null, a = !1) {
                return {
                    type: 1,
                    element: t,
                    keyframes: n,
                    preStyleProps: e,
                    postStyleProps: i,
                    duration: r,
                    delay: s,
                    totalTime: r + s,
                    easing: o,
                    subTimeline: a
                }
            }
            class pm {
                constructor() {
                    this._map = new Map
                }
                get(n) {
                    return this._map.get(n) || []
                }
                append(n, e) {
                    let i = this._map.get(n);
                    i || this._map.set(n, i = []), i.push(...e)
                }
                has(n) {
                    return this._map.has(n)
                }
                clear() {
                    this._map.clear()
                }
            }
            const aoe = new RegExp(":enter", "g"),
                coe = new RegExp(":leave", "g");

            function Vw(t, n, e, i, r, s = new Map, o = new Map, a, l, c = []) {
                return (new doe).buildKeyframes(t, n, e, i, r, s, o, a, l, c)
            }
            class doe {
                buildKeyframes(n, e, i, r, s, o, a, l, c, d = []) {
                    c = c || new pm;
                    const h = new Hw(n, e, c, r, s, d, []);
                    h.options = l;
                    const m = l.delay ? Rs(l.delay) : 0;
                    h.currentTimeline.delayNextStep(m), h.currentTimeline.setStyles([o], null, h.errors, l), Ri(this, i, h);
                    const _ = h.timelines.filter(v => v.containsAnimation());
                    if (_.length && a.size) {
                        let v;
                        for (let D = _.length - 1; D >= 0; D--) {
                            const k = _[D];
                            if (k.element === e) {
                                v = k;
                                break
                            }
                        }
                        v && !v.allowOnlyTimelineStyles() && v.setStyles([a], null, h.errors, l)
                    }
                    return _.length ? _.map(v => v.buildKeyframes()) : [Bw(e, [], [], [], 0, m, "", !1)]
                }
                visitTrigger(n, e) {}
                visitState(n, e) {}
                visitTransition(n, e) {}
                visitAnimateChild(n, e) {
                    const i = e.subInstructions.get(e.element);
                    if (i) {
                        const r = e.createSubContext(n.options),
                            s = e.currentTimeline.currentTime,
                            o = this._visitSubInstructions(i, r, r.options);
                        s != o && e.transformIntoNewTimeline(o)
                    }
                    e.previousNode = n
                }
                visitAnimateRef(n, e) {
                    const i = e.createSubContext(n.options);
                    i.transformIntoNewTimeline(), this._applyAnimationRefDelays([n.options, n.animation.options], e, i), this.visitReference(n.animation, i), e.transformIntoNewTimeline(i.currentTimeline.currentTime), e.previousNode = n
                }
                _applyAnimationRefDelays(n, e, i) {
                    for (const r of n) {
                        const s = r ? .delay;
                        if (s) {
                            const o = "number" == typeof s ? s : Rs(vu(s, r ? .params ? ? {}, e.errors));
                            i.delayNextStep(o)
                        }
                    }
                }
                _visitSubInstructions(n, e, i) {
                    let s = e.currentTimeline.currentTime;
                    const o = null != i.duration ? Rs(i.duration) : null,
                        a = null != i.delay ? Rs(i.delay) : null;
                    return 0 !== o && n.forEach(l => {
                        const c = e.appendInstructionToTimeline(l, o, a);
                        s = Math.max(s, c.duration + c.delay)
                    }), s
                }
                visitReference(n, e) {
                    e.updateOptions(n.options, !0), Ri(this, n.animation, e), e.previousNode = n
                }
                visitSequence(n, e) {
                    const i = e.subContextCount;
                    let r = e;
                    const s = n.options;
                    if (s && (s.params || s.delay) && (r = e.createSubContext(s), r.transformIntoNewTimeline(), null != s.delay)) {
                        6 == r.previousNode.type && (r.currentTimeline.snapshotCurrentStyles(), r.previousNode = mm);
                        const o = Rs(s.delay);
                        r.delayNextStep(o)
                    }
                    n.steps.length && (n.steps.forEach(o => Ri(this, o, r)), r.currentTimeline.applyStylesToKeyframe(), r.subContextCount > i && r.transformIntoNewTimeline()), e.previousNode = n
                }
                visitGroup(n, e) {
                    const i = [];
                    let r = e.currentTimeline.currentTime;
                    const s = n.options && n.options.delay ? Rs(n.options.delay) : 0;
                    n.steps.forEach(o => {
                        const a = e.createSubContext(n.options);
                        s && a.delayNextStep(s), Ri(this, o, a), r = Math.max(r, a.currentTimeline.currentTime), i.push(a.currentTimeline)
                    }), i.forEach(o => e.currentTimeline.mergeTimelineCollectedStyles(o)), e.transformIntoNewTimeline(r), e.previousNode = n
                }
                _visitTiming(n, e) {
                    if (n.dynamic) {
                        const i = n.strValue;
                        return am(e.params ? vu(i, e.params, e.errors) : i, e.errors)
                    }
                    return {
                        duration: n.duration,
                        delay: n.delay,
                        easing: n.easing
                    }
                }
                visitAnimate(n, e) {
                    const i = e.currentAnimateTimings = this._visitTiming(n.timings, e),
                        r = e.currentTimeline;
                    i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
                    const s = n.style;
                    5 == s.type ? this.visitKeyframes(s, e) : (e.incrementTime(i.duration), this.visitStyle(s, e), r.applyStylesToKeyframe()), e.currentAnimateTimings = null, e.previousNode = n
                }
                visitStyle(n, e) {
                    const i = e.currentTimeline,
                        r = e.currentAnimateTimings;
                    !r && i.hasCurrentStyleProperties() && i.forwardFrame();
                    const s = r && r.easing || n.easing;
                    n.isEmptyStep ? i.applyEmptyStep(s) : i.setStyles(n.styles, s, e.errors, e.options), e.previousNode = n
                }
                visitKeyframes(n, e) {
                    const i = e.currentAnimateTimings,
                        r = e.currentTimeline.duration,
                        s = i.duration,
                        a = e.createSubContext().currentTimeline;
                    a.easing = i.easing, n.styles.forEach(l => {
                        a.forwardTime((l.offset || 0) * s), a.setStyles(l.styles, l.easing, e.errors, e.options), a.applyStylesToKeyframe()
                    }), e.currentTimeline.mergeTimelineCollectedStyles(a), e.transformIntoNewTimeline(r + s), e.previousNode = n
                }
                visitQuery(n, e) {
                    const i = e.currentTimeline.currentTime,
                        r = n.options || {},
                        s = r.delay ? Rs(r.delay) : 0;
                    s && (6 === e.previousNode.type || 0 == i && e.currentTimeline.hasCurrentStyleProperties()) && (e.currentTimeline.snapshotCurrentStyles(), e.previousNode = mm);
                    let o = i;
                    const a = e.invokeQuery(n.selector, n.originalSelector, n.limit, n.includeSelf, !!r.optional, e.errors);
                    e.currentQueryTotal = a.length;
                    let l = null;
                    a.forEach((c, d) => {
                        e.currentQueryIndex = d;
                        const h = e.createSubContext(n.options, c);
                        s && h.delayNextStep(s), c === e.element && (l = h.currentTimeline), Ri(this, n.animation, h), h.currentTimeline.applyStylesToKeyframe(), o = Math.max(o, h.currentTimeline.currentTime)
                    }), e.currentQueryIndex = 0, e.currentQueryTotal = 0, e.transformIntoNewTimeline(o), l && (e.currentTimeline.mergeTimelineCollectedStyles(l), e.currentTimeline.snapshotCurrentStyles()), e.previousNode = n
                }
                visitStagger(n, e) {
                    const i = e.parentContext,
                        r = e.currentTimeline,
                        s = n.timings,
                        o = Math.abs(s.duration),
                        a = o * (e.currentQueryTotal - 1);
                    let l = o * e.currentQueryIndex;
                    switch (s.duration < 0 ? "reverse" : s.easing) {
                        case "reverse":
                            l = a - l;
                            break;
                        case "full":
                            l = i.currentStaggerTime
                    }
                    const d = e.currentTimeline;
                    l && d.delayNextStep(l);
                    const h = d.currentTime;
                    Ri(this, n.animation, e), e.previousNode = n, i.currentStaggerTime = r.currentTime - h + (r.startTime - i.currentTimeline.startTime)
                }
            }
            const mm = {};
            class Hw {
                constructor(n, e, i, r, s, o, a, l) {
                    this._driver = n, this.element = e, this.subInstructions = i, this._enterClassName = r, this._leaveClassName = s, this.errors = o, this.timelines = a, this.parentContext = null, this.currentAnimateTimings = null, this.previousNode = mm, this.subContextCount = 0, this.options = {}, this.currentQueryIndex = 0, this.currentQueryTotal = 0, this.currentStaggerTime = 0, this.currentTimeline = l || new gm(this._driver, e, 0), a.push(this.currentTimeline)
                }
                get params() {
                    return this.options.params
                }
                updateOptions(n, e) {
                    if (!n) return;
                    const i = n;
                    let r = this.options;
                    null != i.duration && (r.duration = Rs(i.duration)), null != i.delay && (r.delay = Rs(i.delay));
                    const s = i.params;
                    if (s) {
                        let o = r.params;
                        o || (o = this.options.params = {}), Object.keys(s).forEach(a => {
                            (!e || !o.hasOwnProperty(a)) && (o[a] = vu(s[a], o, this.errors))
                        })
                    }
                }
                _copyOptions() {
                    const n = {};
                    if (this.options) {
                        const e = this.options.params;
                        if (e) {
                            const i = n.params = {};
                            Object.keys(e).forEach(r => {
                                i[r] = e[r]
                            })
                        }
                    }
                    return n
                }
                createSubContext(n = null, e, i) {
                    const r = e || this.element,
                        s = new Hw(this._driver, r, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(r, i || 0));
                    return s.previousNode = this.previousNode, s.currentAnimateTimings = this.currentAnimateTimings, s.options = this._copyOptions(), s.updateOptions(n), s.currentQueryIndex = this.currentQueryIndex, s.currentQueryTotal = this.currentQueryTotal, s.parentContext = this, this.subContextCount++, s
                }
                transformIntoNewTimeline(n) {
                    return this.previousNode = mm, this.currentTimeline = this.currentTimeline.fork(this.element, n), this.timelines.push(this.currentTimeline), this.currentTimeline
                }
                appendInstructionToTimeline(n, e, i) {
                    const r = {
                            duration: e ? ? n.duration,
                            delay: this.currentTimeline.currentTime + (i ? ? 0) + n.delay,
                            easing: ""
                        },
                        s = new uoe(this._driver, n.element, n.keyframes, n.preStyleProps, n.postStyleProps, r, n.stretchStartingKeyframe);
                    return this.timelines.push(s), r
                }
                incrementTime(n) {
                    this.currentTimeline.forwardTime(this.currentTimeline.duration + n)
                }
                delayNextStep(n) {
                    n > 0 && this.currentTimeline.delayNextStep(n)
                }
                invokeQuery(n, e, i, r, s, o) {
                    let a = [];
                    if (r && a.push(this.element), n.length > 0) {
                        n = (n = n.replace(aoe, "." + this._enterClassName)).replace(coe, "." + this._leaveClassName);
                        let c = this._driver.query(this.element, n, 1 != i);
                        0 !== i && (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)), a.push(...c)
                    }
                    return !s && 0 == a.length && o.push(function mse(t) {
                        return new B(3014, !1)
                    }()), a
                }
            }
            class gm {
                constructor(n, e, i, r) {
                    this._driver = n, this.element = e, this.startTime = i, this._elementTimelineStylesLookup = r, this.duration = 0, this._previousKeyframe = new Map, this._currentKeyframe = new Map, this._keyframes = new Map, this._styleSummary = new Map, this._localTimelineStyles = new Map, this._pendingStyles = new Map, this._backFill = new Map, this._currentEmptyStepKeyframe = null, this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map), this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e), this._globalTimelineStyles || (this._globalTimelineStyles = this._localTimelineStyles, this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)), this._loadKeyframe()
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.hasCurrentStyleProperties();
                        default:
                            return !0
                    }
                }
                hasCurrentStyleProperties() {
                    return this._currentKeyframe.size > 0
                }
                get currentTime() {
                    return this.startTime + this.duration
                }
                delayNextStep(n) {
                    const e = 1 === this._keyframes.size && this._pendingStyles.size;
                    this.duration || e ? (this.forwardTime(this.currentTime + n), e && this.snapshotCurrentStyles()) : this.startTime += n
                }
                fork(n, e) {
                    return this.applyStylesToKeyframe(), new gm(this._driver, n, e || this.currentTime, this._elementTimelineStylesLookup)
                }
                _loadKeyframe() {
                    this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe), this._currentKeyframe = this._keyframes.get(this.duration), this._currentKeyframe || (this._currentKeyframe = new Map, this._keyframes.set(this.duration, this._currentKeyframe))
                }
                forwardFrame() {
                    this.duration += 1, this._loadKeyframe()
                }
                forwardTime(n) {
                    this.applyStylesToKeyframe(), this.duration = n, this._loadKeyframe()
                }
                _updateStyle(n, e) {
                    this._localTimelineStyles.set(n, e), this._globalTimelineStyles.set(n, e), this._styleSummary.set(n, {
                        time: this.currentTime,
                        value: e
                    })
                }
                allowOnlyTimelineStyles() {
                    return this._currentEmptyStepKeyframe !== this._currentKeyframe
                }
                applyEmptyStep(n) {
                    n && this._previousKeyframe.set("easing", n);
                    for (let [e, i] of this._globalTimelineStyles) this._backFill.set(e, i || ws), this._currentKeyframe.set(e, ws);
                    this._currentEmptyStepKeyframe = this._currentKeyframe
                }
                setStyles(n, e, i, r) {
                    e && this._previousKeyframe.set("easing", e);
                    const s = r && r.params || {},
                        o = function hoe(t, n) {
                            const e = new Map;
                            let i;
                            return t.forEach(r => {
                                if ("*" === r) {
                                    i = i || n.keys();
                                    for (let s of i) e.set(s, ws)
                                } else xo(r, e)
                            }), e
                        }(n, this._globalTimelineStyles);
                    for (let [a, l] of o) {
                        const c = vu(l, s, i);
                        this._pendingStyles.set(a, c), this._localTimelineStyles.has(a) || this._backFill.set(a, this._globalTimelineStyles.get(a) ? ? ws), this._updateStyle(a, c)
                    }
                }
                applyStylesToKeyframe() {
                    0 != this._pendingStyles.size && (this._pendingStyles.forEach((n, e) => {
                        this._currentKeyframe.set(e, n)
                    }), this._pendingStyles.clear(), this._localTimelineStyles.forEach((n, e) => {
                        this._currentKeyframe.has(e) || this._currentKeyframe.set(e, n)
                    }))
                }
                snapshotCurrentStyles() {
                    for (let [n, e] of this._localTimelineStyles) this._pendingStyles.set(n, e), this._updateStyle(n, e)
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration)
                }
                get properties() {
                    const n = [];
                    for (let e in this._currentKeyframe) n.push(e);
                    return n
                }
                mergeTimelineCollectedStyles(n) {
                    n._styleSummary.forEach((e, i) => {
                        const r = this._styleSummary.get(i);
                        (!r || e.time > r.time) && this._updateStyle(i, e.value)
                    })
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const n = new Set,
                        e = new Set,
                        i = 1 === this._keyframes.size && 0 === this.duration;
                    let r = [];
                    this._keyframes.forEach((a, l) => {
                        const c = xo(a, new Map, this._backFill);
                        c.forEach((d, h) => {
                            "!" === d ? n.add(h) : d === ws && e.add(h)
                        }), i || c.set("offset", l / this.duration), r.push(c)
                    });
                    const s = n.size ? lm(n.values()) : [],
                        o = e.size ? lm(e.values()) : [];
                    if (i) {
                        const a = r[0],
                            l = new Map(a);
                        a.set("offset", 0), l.set("offset", 1), r = [a, l]
                    }
                    return Bw(this.element, r, s, o, this.duration, this.startTime, this.easing, !1)
                }
            }
            class uoe extends gm {
                constructor(n, e, i, r, s, o, a = !1) {
                    super(n, e, o.delay), this.keyframes = i, this.preStyleProps = r, this.postStyleProps = s, this._stretchStartingKeyframe = a, this.timings = {
                        duration: o.duration,
                        delay: o.delay,
                        easing: o.easing
                    }
                }
                containsAnimation() {
                    return this.keyframes.length > 1
                }
                buildKeyframes() {
                    let n = this.keyframes,
                        {
                            delay: e,
                            duration: i,
                            easing: r
                        } = this.timings;
                    if (this._stretchStartingKeyframe && e) {
                        const s = [],
                            o = i + e,
                            a = e / o,
                            l = xo(n[0]);
                        l.set("offset", 0), s.push(l);
                        const c = xo(n[0]);
                        c.set("offset", wO(a)), s.push(c);
                        const d = n.length - 1;
                        for (let h = 1; h <= d; h++) {
                            let m = xo(n[h]);
                            const _ = m.get("offset");
                            m.set("offset", wO((e + _ * i) / o)), s.push(m)
                        }
                        i = o, e = 0, r = "", n = s
                    }
                    return Bw(this.element, n, this.preStyleProps, this.postStyleProps, i, e, r, !0)
                }
            }

            function wO(t, n = 3) {
                const e = Math.pow(10, n - 1);
                return Math.round(t * e) / e
            }
            class $w {}
            const foe = new Set(["width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "left", "top", "bottom", "right", "fontSize", "outlineWidth", "outlineOffset", "paddingTop", "paddingLeft", "paddingBottom", "paddingRight", "marginTop", "marginLeft", "marginBottom", "marginRight", "borderRadius", "borderWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "borderBottomWidth", "textIndent", "perspective"]);
            class poe extends $w {
                normalizePropertyName(n, e) {
                    return Pw(n)
                }
                normalizeStyleValue(n, e, i, r) {
                    let s = "";
                    const o = i.toString().trim();
                    if (foe.has(e) && 0 !== i && "0" !== i)
                        if ("number" == typeof i) s = "px";
                        else {
                            const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            a && 0 == a[1].length && r.push(function rse(t, n) {
                                return new B(3005, !1)
                            }())
                        }
                    return o + s
                }
            }

            function CO(t, n, e, i, r, s, o, a, l, c, d, h, m) {
                return {
                    type: 0,
                    element: t,
                    triggerName: n,
                    isRemovalTransition: r,
                    fromState: e,
                    fromStyles: s,
                    toState: i,
                    toStyles: o,
                    timelines: a,
                    queriedElements: l,
                    preStyleProps: c,
                    postStyleProps: d,
                    totalTime: h,
                    errors: m
                }
            }
            const jw = {};
            class xO {
                constructor(n, e, i) {
                    this._triggerName = n, this.ast = e, this._stateStyles = i
                }
                match(n, e, i, r) {
                    return function moe(t, n, e, i, r) {
                        return t.some(s => s(n, e, i, r))
                    }(this.ast.matchers, n, e, i, r)
                }
                buildStyles(n, e, i) {
                    let r = this._stateStyles.get("*");
                    return void 0 !== n && (r = this._stateStyles.get(n ? .toString()) || r), r ? r.buildStyles(e, i) : new Map
                }
                build(n, e, i, r, s, o, a, l, c, d) {
                    const h = [],
                        m = this.ast.options && this.ast.options.params || jw,
                        v = this.buildStyles(i, a && a.params || jw, h),
                        D = l && l.params || jw,
                        k = this.buildStyles(r, D, h),
                        S = new Set,
                        L = new Map,
                        F = new Map,
                        K = "void" === r,
                        Ce = {
                            params: goe(D, m),
                            delay: this.ast.options ? .delay
                        },
                        Pe = d ? [] : Vw(n, e, this.ast.animation, s, o, v, k, Ce, c, h);
                    let wt = 0;
                    if (Pe.forEach(Oi => {
                            wt = Math.max(Oi.duration + Oi.delay, wt)
                        }), h.length) return CO(e, this._triggerName, i, r, K, v, k, [], [], L, F, wt, h);
                    Pe.forEach(Oi => {
                        const Pi = Oi.element,
                            hc = Ii(L, Pi, new Set);
                        Oi.preStyleProps.forEach(kr => hc.add(kr));
                        const Os = Ii(F, Pi, new Set);
                        Oi.postStyleProps.forEach(kr => Os.add(kr)), Pi !== e && S.add(Pi)
                    });
                    const Vn = lm(S.values());
                    return CO(e, this._triggerName, i, r, K, v, k, Pe, Vn, L, F, wt)
                }
            }

            function goe(t, n) {
                const e = yu(n);
                for (const i in t) t.hasOwnProperty(i) && null != t[i] && (e[i] = t[i]);
                return e
            }
            class _oe {
                constructor(n, e, i) {
                    this.styles = n, this.defaultParams = e, this.normalizer = i
                }
                buildStyles(n, e) {
                    const i = new Map,
                        r = yu(this.defaultParams);
                    return Object.keys(n).forEach(s => {
                        const o = n[s];
                        null !== o && (r[s] = o)
                    }), this.styles.styles.forEach(s => {
                        "string" != typeof s && s.forEach((o, a) => {
                            o && (o = vu(o, r, e));
                            const l = this.normalizer.normalizePropertyName(a, e);
                            o = this.normalizer.normalizeStyleValue(a, l, o, e), i.set(l, o)
                        })
                    }), i
                }
            }
            class boe {
                constructor(n, e, i) {
                    this.name = n, this.ast = e, this._normalizer = i, this.transitionFactories = [], this.states = new Map, e.states.forEach(r => {
                        this.states.set(r.name, new _oe(r.style, r.options && r.options.params || {}, i))
                    }), DO(this.states, "true", "1"), DO(this.states, "false", "0"), e.transitions.forEach(r => {
                        this.transitionFactories.push(new xO(n, r, this.states))
                    }), this.fallbackTransition = function voe(t, n, e) {
                        return new xO(t, {
                            type: 1,
                            animation: {
                                type: 2,
                                steps: [],
                                options: null
                            },
                            matchers: [(o, a) => !0],
                            options: null,
                            queryCount: 0,
                            depCount: 0
                        }, n)
                    }(n, this.states)
                }
                get containsQueries() {
                    return this.ast.queryCount > 0
                }
                matchTransition(n, e, i, r) {
                    return this.transitionFactories.find(o => o.match(n, e, i, r)) || null
                }
                matchStyles(n, e, i) {
                    return this.fallbackTransition.buildStyles(n, e, i)
                }
            }

            function DO(t, n, e) {
                t.has(n) ? t.has(e) || t.set(e, t.get(n)) : t.has(e) && t.set(n, t.get(e))
            }
            const woe = new pm;
            class Coe {
                constructor(n, e, i) {
                    this.bodyNode = n, this._driver = e, this._normalizer = i, this._animations = new Map, this._playersById = new Map, this.players = []
                }
                register(n, e) {
                    const i = [],
                        s = Lw(this._driver, e, i, []);
                    if (i.length) throw function Cse(t) {
                        return new B(3503, !1)
                    }();
                    this._animations.set(n, s)
                }
                _buildPlayer(n, e, i) {
                    const r = n.element,
                        s = nO(0, this._normalizer, 0, n.keyframes, e, i);
                    return this._driver.animate(r, s, n.duration, n.delay, n.easing, [], !0)
                }
                create(n, e, i = {}) {
                    const r = [],
                        s = this._animations.get(n);
                    let o;
                    const a = new Map;
                    if (s ? (o = Vw(this._driver, e, s, Iw, rm, new Map, new Map, i, woe, r), o.forEach(d => {
                            const h = Ii(a, d.element, new Map);
                            d.postStyleProps.forEach(m => h.set(m, null))
                        })) : (r.push(function xse() {
                            return new B(3300, !1)
                        }()), o = []), r.length) throw function Dse(t) {
                        return new B(3504, !1)
                    }();
                    a.forEach((d, h) => {
                        d.forEach((m, _) => {
                            d.set(_, this._driver.computeStyle(h, _, ws))
                        })
                    });
                    const c = Co(o.map(d => {
                        const h = a.get(d.element);
                        return this._buildPlayer(d, new Map, h)
                    }));
                    return this._playersById.set(n, c), c.onDestroy(() => this.destroy(n)), this.players.push(c), c
                }
                destroy(n) {
                    const e = this._getPlayer(n);
                    e.destroy(), this._playersById.delete(n);
                    const i = this.players.indexOf(e);
                    i >= 0 && this.players.splice(i, 1)
                }
                _getPlayer(n) {
                    const e = this._playersById.get(n);
                    if (!e) throw function Mse(t) {
                        return new B(3301, !1)
                    }();
                    return e
                }
                listen(n, e, i, r) {
                    const s = kw(e, "", "", "");
                    return Mw(this._getPlayer(n), i, s, r), () => {}
                }
                command(n, e, i, r) {
                    if ("register" == i) return void this.register(n, r[0]);
                    if ("create" == i) return void this.create(n, e, r[0] || {});
                    const s = this._getPlayer(n);
                    switch (i) {
                        case "play":
                            s.play();
                            break;
                        case "pause":
                            s.pause();
                            break;
                        case "reset":
                            s.reset();
                            break;
                        case "restart":
                            s.restart();
                            break;
                        case "finish":
                            s.finish();
                            break;
                        case "init":
                            s.init();
                            break;
                        case "setPosition":
                            s.setPosition(parseFloat(r[0]));
                            break;
                        case "destroy":
                            this.destroy(n)
                    }
                }
            }
            const MO = "ng-animate-queued",
                zw = "ng-animate-disabled",
                koe = [],
                SO = {
                    namespaceId: "",
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1
                },
                Aoe = {
                    namespaceId: "",
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0
                },
                er = "__ng_removed";
            class Uw {
                constructor(n, e = "") {
                    this.namespaceId = e;
                    const i = n && n.hasOwnProperty("value");
                    if (this.value = function Roe(t) {
                            return t ? ? null
                        }(i ? n.value : n), i) {
                        const s = yu(n);
                        delete s.value, this.options = s
                    } else this.options = {};
                    this.options.params || (this.options.params = {})
                }
                get params() {
                    return this.options.params
                }
                absorbOptions(n) {
                    const e = n.params;
                    if (e) {
                        const i = this.options.params;
                        Object.keys(e).forEach(r => {
                            null == i[r] && (i[r] = e[r])
                        })
                    }
                }
            }
            const wu = "void",
                Gw = new Uw(wu);
            class Eoe {
                constructor(n, e, i) {
                    this.id = n, this.hostElement = e, this._engine = i, this.players = [], this._triggers = new Map, this._queue = [], this._elementListeners = new Map, this._hostClassName = "ng-tns-" + n, tr(e, this._hostClassName)
                }
                listen(n, e, i, r) {
                    if (!this._triggers.has(e)) throw function Sse(t, n) {
                        return new B(3302, !1)
                    }();
                    if (null == i || 0 == i.length) throw function kse(t) {
                        return new B(3303, !1)
                    }();
                    if (! function Foe(t) {
                            return "start" == t || "done" == t
                        }(i)) throw function Ase(t, n) {
                        return new B(3400, !1)
                    }();
                    const s = Ii(this._elementListeners, n, []),
                        o = {
                            name: e,
                            phase: i,
                            callback: r
                        };
                    s.push(o);
                    const a = Ii(this._engine.statesByElement, n, new Map);
                    return a.has(e) || (tr(n, sm), tr(n, sm + "-" + e), a.set(e, Gw)), () => {
                        this._engine.afterFlush(() => {
                            const l = s.indexOf(o);
                            l >= 0 && s.splice(l, 1), this._triggers.has(e) || a.delete(e)
                        })
                    }
                }
                register(n, e) {
                    return !this._triggers.has(n) && (this._triggers.set(n, e), !0)
                }
                _getTrigger(n) {
                    const e = this._triggers.get(n);
                    if (!e) throw function Ese(t) {
                        return new B(3401, !1)
                    }();
                    return e
                }
                trigger(n, e, i, r = !0) {
                    const s = this._getTrigger(e),
                        o = new Ww(this.id, e, n);
                    let a = this._engine.statesByElement.get(n);
                    a || (tr(n, sm), tr(n, sm + "-" + e), this._engine.statesByElement.set(n, a = new Map));
                    let l = a.get(e);
                    const c = new Uw(i, this.id);
                    if (!(i && i.hasOwnProperty("value")) && l && c.absorbOptions(l.options), a.set(e, c), l || (l = Gw), c.value !== wu && l.value === c.value) {
                        if (! function Loe(t, n) {
                                const e = Object.keys(t),
                                    i = Object.keys(n);
                                if (e.length != i.length) return !1;
                                for (let r = 0; r < e.length; r++) {
                                    const s = e[r];
                                    if (!n.hasOwnProperty(s) || t[s] !== n[s]) return !1
                                }
                                return !0
                            }(l.params, c.params)) {
                            const D = [],
                                k = s.matchStyles(l.value, l.params, D),
                                S = s.matchStyles(c.value, c.params, D);
                            D.length ? this._engine.reportError(D) : this._engine.afterFlush(() => {
                                Ca(n, k), Yr(n, S)
                            })
                        }
                        return
                    }
                    const m = Ii(this._engine.playersByElement, n, []);
                    m.forEach(D => {
                        D.namespaceId == this.id && D.triggerName == e && D.queued && D.destroy()
                    });
                    let _ = s.matchTransition(l.value, c.value, n, c.params),
                        v = !1;
                    if (!_) {
                        if (!r) return;
                        _ = s.fallbackTransition, v = !0
                    }
                    return this._engine.totalQueuedPlayers++, this._queue.push({
                        element: n,
                        triggerName: e,
                        transition: _,
                        fromState: l,
                        toState: c,
                        player: o,
                        isFallbackTransition: v
                    }), v || (tr(n, MO), o.onStart(() => {
                        dc(n, MO)
                    })), o.onDone(() => {
                        let D = this.players.indexOf(o);
                        D >= 0 && this.players.splice(D, 1);
                        const k = this._engine.playersByElement.get(n);
                        if (k) {
                            let S = k.indexOf(o);
                            S >= 0 && k.splice(S, 1)
                        }
                    }), this.players.push(o), m.push(o), o
                }
                deregister(n) {
                    this._triggers.delete(n), this._engine.statesByElement.forEach(e => e.delete(n)), this._elementListeners.forEach((e, i) => {
                        this._elementListeners.set(i, e.filter(r => r.name != n))
                    })
                }
                clearElementCache(n) {
                    this._engine.statesByElement.delete(n), this._elementListeners.delete(n);
                    const e = this._engine.playersByElement.get(n);
                    e && (e.forEach(i => i.destroy()), this._engine.playersByElement.delete(n))
                }
                _signalRemovalForInnerTriggers(n, e) {
                    const i = this._engine.driver.query(n, om, !0);
                    i.forEach(r => {
                        if (r[er]) return;
                        const s = this._engine.fetchNamespacesByElement(r);
                        s.size ? s.forEach(o => o.triggerLeaveAnimation(r, e, !1, !0)) : this.clearElementCache(r)
                    }), this._engine.afterFlushAnimationsDone(() => i.forEach(r => this.clearElementCache(r)))
                }
                triggerLeaveAnimation(n, e, i, r) {
                    const s = this._engine.statesByElement.get(n),
                        o = new Map;
                    if (s) {
                        const a = [];
                        if (s.forEach((l, c) => {
                                if (o.set(c, l.value), this._triggers.has(c)) {
                                    const d = this.trigger(n, c, wu, r);
                                    d && a.push(d)
                                }
                            }), a.length) return this._engine.markElementAsRemoved(this.id, n, !0, e, o), i && Co(a).onDone(() => this._engine.processLeaveNode(n)), !0
                    }
                    return !1
                }
                prepareLeaveAnimationListeners(n) {
                    const e = this._elementListeners.get(n),
                        i = this._engine.statesByElement.get(n);
                    if (e && i) {
                        const r = new Set;
                        e.forEach(s => {
                            const o = s.name;
                            if (r.has(o)) return;
                            r.add(o);
                            const l = this._triggers.get(o).fallbackTransition,
                                c = i.get(o) || Gw,
                                d = new Uw(wu),
                                h = new Ww(this.id, o, n);
                            this._engine.totalQueuedPlayers++, this._queue.push({
                                element: n,
                                triggerName: o,
                                transition: l,
                                fromState: c,
                                toState: d,
                                player: h,
                                isFallbackTransition: !0
                            })
                        })
                    }
                }
                removeNode(n, e) {
                    const i = this._engine;
                    if (n.childElementCount && this._signalRemovalForInnerTriggers(n, e), this.triggerLeaveAnimation(n, e, !0)) return;
                    let r = !1;
                    if (i.totalAnimations) {
                        const s = i.players.length ? i.playersByQueriedElement.get(n) : [];
                        if (s && s.length) r = !0;
                        else {
                            let o = n;
                            for (; o = o.parentNode;)
                                if (i.statesByElement.get(o)) {
                                    r = !0;
                                    break
                                }
                        }
                    }
                    if (this.prepareLeaveAnimationListeners(n), r) i.markElementAsRemoved(this.id, n, !1, e);
                    else {
                        const s = n[er];
                        (!s || s === SO) && (i.afterFlush(() => this.clearElementCache(n)), i.destroyInnerAnimations(n), i._onRemovalComplete(n, e))
                    }
                }
                insertNode(n, e) {
                    tr(n, this._hostClassName)
                }
                drainQueuedTransitions(n) {
                    const e = [];
                    return this._queue.forEach(i => {
                        const r = i.player;
                        if (r.destroyed) return;
                        const s = i.element,
                            o = this._elementListeners.get(s);
                        o && o.forEach(a => {
                            if (a.name == i.triggerName) {
                                const l = kw(s, i.triggerName, i.fromState.value, i.toState.value);
                                l._data = n, Mw(i.player, a.phase, l, a.callback)
                            }
                        }), r.markedForDestroy ? this._engine.afterFlush(() => {
                            r.destroy()
                        }) : e.push(i)
                    }), this._queue = [], e.sort((i, r) => {
                        const s = i.transition.ast.depCount,
                            o = r.transition.ast.depCount;
                        return 0 == s || 0 == o ? s - o : this._engine.driver.containsElement(i.element, r.element) ? 1 : -1
                    })
                }
                destroy(n) {
                    this.players.forEach(e => e.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, n)
                }
                elementContainsData(n) {
                    let e = !1;
                    return this._elementListeners.has(n) && (e = !0), e = !!this._queue.find(i => i.element === n) || e, e
                }
            }
            class Toe {
                constructor(n, e, i) {
                    this.bodyNode = n, this.driver = e, this._normalizer = i, this.players = [], this.newHostElements = new Map, this.playersByElement = new Map, this.playersByQueriedElement = new Map, this.statesByElement = new Map, this.disabledNodes = new Set, this.totalAnimations = 0, this.totalQueuedPlayers = 0, this._namespaceLookup = {}, this._namespaceList = [], this._flushFns = [], this._whenQuietFns = [], this.namespacesByHostElement = new Map, this.collectedEnterElements = [], this.collectedLeaveElements = [], this.onRemovalComplete = (r, s) => {}
                }
                _onRemovalComplete(n, e) {
                    this.onRemovalComplete(n, e)
                }
                get queuedPlayers() {
                    const n = [];
                    return this._namespaceList.forEach(e => {
                        e.players.forEach(i => {
                            i.queued && n.push(i)
                        })
                    }), n
                }
                createNamespace(n, e) {
                    const i = new Eoe(n, e, this);
                    return this.bodyNode && this.driver.containsElement(this.bodyNode, e) ? this._balanceNamespaceList(i, e) : (this.newHostElements.set(e, i), this.collectEnterElement(e)), this._namespaceLookup[n] = i
                }
                _balanceNamespaceList(n, e) {
                    const i = this._namespaceList,
                        r = this.namespacesByHostElement;
                    if (i.length - 1 >= 0) {
                        let o = !1,
                            a = this.driver.getParentElement(e);
                        for (; a;) {
                            const l = r.get(a);
                            if (l) {
                                const c = i.indexOf(l);
                                i.splice(c + 1, 0, n), o = !0;
                                break
                            }
                            a = this.driver.getParentElement(a)
                        }
                        o || i.unshift(n)
                    } else i.push(n);
                    return r.set(e, n), n
                }
                register(n, e) {
                    let i = this._namespaceLookup[n];
                    return i || (i = this.createNamespace(n, e)), i
                }
                registerTrigger(n, e, i) {
                    let r = this._namespaceLookup[n];
                    r && r.register(e, i) && this.totalAnimations++
                }
                destroy(n, e) {
                    if (!n) return;
                    const i = this._fetchNamespace(n);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(i.hostElement), delete this._namespaceLookup[n];
                        const r = this._namespaceList.indexOf(i);
                        r >= 0 && this._namespaceList.splice(r, 1)
                    }), this.afterFlushAnimationsDone(() => i.destroy(e))
                }
                _fetchNamespace(n) {
                    return this._namespaceLookup[n]
                }
                fetchNamespacesByElement(n) {
                    const e = new Set,
                        i = this.statesByElement.get(n);
                    if (i)
                        for (let r of i.values())
                            if (r.namespaceId) {
                                const s = this._fetchNamespace(r.namespaceId);
                                s && e.add(s)
                            }
                    return e
                }
                trigger(n, e, i, r) {
                    if (_m(e)) {
                        const s = this._fetchNamespace(n);
                        if (s) return s.trigger(e, i, r), !0
                    }
                    return !1
                }
                insertNode(n, e, i, r) {
                    if (!_m(e)) return;
                    const s = e[er];
                    if (s && s.setForRemoval) {
                        s.setForRemoval = !1, s.setForMove = !0;
                        const o = this.collectedLeaveElements.indexOf(e);
                        o >= 0 && this.collectedLeaveElements.splice(o, 1)
                    }
                    if (n) {
                        const o = this._fetchNamespace(n);
                        o && o.insertNode(e, i)
                    }
                    r && this.collectEnterElement(e)
                }
                collectEnterElement(n) {
                    this.collectedEnterElements.push(n)
                }
                markElementAsDisabled(n, e) {
                    e ? this.disabledNodes.has(n) || (this.disabledNodes.add(n), tr(n, zw)) : this.disabledNodes.has(n) && (this.disabledNodes.delete(n), dc(n, zw))
                }
                removeNode(n, e, i, r) {
                    if (_m(e)) {
                        const s = n ? this._fetchNamespace(n) : null;
                        if (s ? s.removeNode(e, r) : this.markElementAsRemoved(n, e, !1, r), i) {
                            const o = this.namespacesByHostElement.get(e);
                            o && o.id !== n && o.removeNode(e, r)
                        }
                    } else this._onRemovalComplete(e, r)
                }
                markElementAsRemoved(n, e, i, r, s) {
                    this.collectedLeaveElements.push(e), e[er] = {
                        namespaceId: n,
                        setForRemoval: r,
                        hasAnimation: i,
                        removedBeforeQueried: !1,
                        previousTriggersValues: s
                    }
                }
                listen(n, e, i, r, s) {
                    return _m(e) ? this._fetchNamespace(n).listen(e, i, r, s) : () => {}
                }
                _buildInstruction(n, e, i, r, s) {
                    return n.transition.build(this.driver, n.element, n.fromState.value, n.toState.value, i, r, n.fromState.options, n.toState.options, e, s)
                }
                destroyInnerAnimations(n) {
                    let e = this.driver.query(n, om, !0);
                    e.forEach(i => this.destroyActiveAnimationsForElement(i)), 0 != this.playersByQueriedElement.size && (e = this.driver.query(n, Rw, !0), e.forEach(i => this.finishActiveQueriedAnimationOnElement(i)))
                }
                destroyActiveAnimationsForElement(n) {
                    const e = this.playersByElement.get(n);
                    e && e.forEach(i => {
                        i.queued ? i.markedForDestroy = !0 : i.destroy()
                    })
                }
                finishActiveQueriedAnimationOnElement(n) {
                    const e = this.playersByQueriedElement.get(n);
                    e && e.forEach(i => i.finish())
                }
                whenRenderingDone() {
                    return new Promise(n => {
                        if (this.players.length) return Co(this.players).onDone(() => n());
                        n()
                    })
                }
                processLeaveNode(n) {
                    const e = n[er];
                    if (e && e.setForRemoval) {
                        if (n[er] = SO, e.namespaceId) {
                            this.destroyInnerAnimations(n);
                            const i = this._fetchNamespace(e.namespaceId);
                            i && i.clearElementCache(n)
                        }
                        this._onRemovalComplete(n, e.setForRemoval)
                    }
                    n.classList ? .contains(zw) && this.markElementAsDisabled(n, !1), this.driver.query(n, ".ng-animate-disabled", !0).forEach(i => {
                        this.markElementAsDisabled(i, !1)
                    })
                }
                flush(n = -1) {
                    let e = [];
                    if (this.newHostElements.size && (this.newHostElements.forEach((i, r) => this._balanceNamespaceList(i, r)), this.newHostElements.clear()), this.totalAnimations && this.collectedEnterElements.length)
                        for (let i = 0; i < this.collectedEnterElements.length; i++) tr(this.collectedEnterElements[i], "ng-star-inserted");
                    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
                        const i = [];
                        try {
                            e = this._flushAnimations(i, n)
                        } finally {
                            for (let r = 0; r < i.length; r++) i[r]()
                        }
                    } else
                        for (let i = 0; i < this.collectedLeaveElements.length; i++) this.processLeaveNode(this.collectedLeaveElements[i]);
                    if (this.totalQueuedPlayers = 0, this.collectedEnterElements.length = 0, this.collectedLeaveElements.length = 0, this._flushFns.forEach(i => i()), this._flushFns = [], this._whenQuietFns.length) {
                        const i = this._whenQuietFns;
                        this._whenQuietFns = [], e.length ? Co(e).onDone(() => {
                            i.forEach(r => r())
                        }) : i.forEach(r => r())
                    }
                }
                reportError(n) {
                    throw function Tse(t) {
                        return new B(3402, !1)
                    }()
                }
                _flushAnimations(n, e) {
                    const i = new pm,
                        r = [],
                        s = new Map,
                        o = [],
                        a = new Map,
                        l = new Map,
                        c = new Map,
                        d = new Set;
                    this.disabledNodes.forEach(fe => {
                        d.add(fe);
                        const be = this.driver.query(fe, ".ng-animate-queued", !0);
                        for (let Ae = 0; Ae < be.length; Ae++) d.add(be[Ae])
                    });
                    const h = this.bodyNode,
                        m = Array.from(this.statesByElement.keys()),
                        _ = EO(m, this.collectedEnterElements),
                        v = new Map;
                    let D = 0;
                    _.forEach((fe, be) => {
                        const Ae = Iw + D++;
                        v.set(be, Ae), fe.forEach(ot => tr(ot, Ae))
                    });
                    const k = [],
                        S = new Set,
                        L = new Set;
                    for (let fe = 0; fe < this.collectedLeaveElements.length; fe++) {
                        const be = this.collectedLeaveElements[fe],
                            Ae = be[er];
                        Ae && Ae.setForRemoval && (k.push(be), S.add(be), Ae.hasAnimation ? this.driver.query(be, ".ng-star-inserted", !0).forEach(ot => S.add(ot)) : L.add(be))
                    }
                    const F = new Map,
                        K = EO(m, Array.from(S));
                    K.forEach((fe, be) => {
                        const Ae = rm + D++;
                        F.set(be, Ae), fe.forEach(ot => tr(ot, Ae))
                    }), n.push(() => {
                        _.forEach((fe, be) => {
                            const Ae = v.get(be);
                            fe.forEach(ot => dc(ot, Ae))
                        }), K.forEach((fe, be) => {
                            const Ae = F.get(be);
                            fe.forEach(ot => dc(ot, Ae))
                        }), k.forEach(fe => {
                            this.processLeaveNode(fe)
                        })
                    });
                    const Ce = [],
                        Pe = [];
                    for (let fe = this._namespaceList.length - 1; fe >= 0; fe--) this._namespaceList[fe].drainQueuedTransitions(e).forEach(Ae => {
                        const ot = Ae.player,
                            wn = Ae.element;
                        if (Ce.push(ot), this.collectedEnterElements.length) {
                            const Hn = wn[er];
                            if (Hn && Hn.setForMove) {
                                if (Hn.previousTriggersValues && Hn.previousTriggersValues.has(Ae.triggerName)) {
                                    const Da = Hn.previousTriggersValues.get(Ae.triggerName),
                                        ir = this.statesByElement.get(Ae.element);
                                    if (ir && ir.has(Ae.triggerName)) {
                                        const Mm = ir.get(Ae.triggerName);
                                        Mm.value = Da, ir.set(Ae.triggerName, Mm)
                                    }
                                }
                                return void ot.destroy()
                            }
                        }
                        const Zr = !h || !this.driver.containsElement(h, wn),
                            Li = F.get(wn),
                            ko = v.get(wn),
                            Ut = this._buildInstruction(Ae, i, ko, Li, Zr);
                        if (Ut.errors && Ut.errors.length) return void Pe.push(Ut);
                        if (Zr) return ot.onStart(() => Ca(wn, Ut.fromStyles)), ot.onDestroy(() => Yr(wn, Ut.toStyles)), void r.push(ot);
                        if (Ae.isFallbackTransition) return ot.onStart(() => Ca(wn, Ut.fromStyles)), ot.onDestroy(() => Yr(wn, Ut.toStyles)), void r.push(ot);
                        const uP = [];
                        Ut.timelines.forEach(Hn => {
                            Hn.stretchStartingKeyframe = !0, this.disabledNodes.has(Hn.element) || uP.push(Hn)
                        }), Ut.timelines = uP, i.append(wn, Ut.timelines), o.push({
                            instruction: Ut,
                            player: ot,
                            element: wn
                        }), Ut.queriedElements.forEach(Hn => Ii(a, Hn, []).push(ot)), Ut.preStyleProps.forEach((Hn, Da) => {
                            if (Hn.size) {
                                let ir = l.get(Da);
                                ir || l.set(Da, ir = new Set), Hn.forEach((Mm, uC) => ir.add(uC))
                            }
                        }), Ut.postStyleProps.forEach((Hn, Da) => {
                            let ir = c.get(Da);
                            ir || c.set(Da, ir = new Set), Hn.forEach((Mm, uC) => ir.add(uC))
                        })
                    });
                    if (Pe.length) {
                        const fe = [];
                        Pe.forEach(be => {
                            fe.push(function Ise(t, n) {
                                return new B(3505, !1)
                            }())
                        }), Ce.forEach(be => be.destroy()), this.reportError(fe)
                    }
                    const wt = new Map,
                        Vn = new Map;
                    o.forEach(fe => {
                        const be = fe.element;
                        i.has(be) && (Vn.set(be, be), this._beforeAnimationBuild(fe.player.namespaceId, fe.instruction, wt))
                    }), r.forEach(fe => {
                        const be = fe.element;
                        this._getPreviousPlayers(be, !1, fe.namespaceId, fe.triggerName, null).forEach(ot => {
                            Ii(wt, be, []).push(ot), ot.destroy()
                        })
                    });
                    const Oi = k.filter(fe => IO(fe, l, c)),
                        Pi = new Map;
                    AO(Pi, this.driver, L, c, ws).forEach(fe => {
                        IO(fe, l, c) && Oi.push(fe)
                    });
                    const Os = new Map;
                    _.forEach((fe, be) => {
                        AO(Os, this.driver, new Set(fe), l, "!")
                    }), Oi.forEach(fe => {
                        const be = Pi.get(fe),
                            Ae = Os.get(fe);
                        Pi.set(fe, new Map([...Array.from(be ? .entries() ? ? []), ...Array.from(Ae ? .entries() ? ? [])]))
                    });
                    const kr = [],
                        fc = [],
                        pc = {};
                    o.forEach(fe => {
                        const {
                            element: be,
                            player: Ae,
                            instruction: ot
                        } = fe;
                        if (i.has(be)) {
                            if (d.has(be)) return Ae.onDestroy(() => Yr(be, ot.toStyles)), Ae.disabled = !0, Ae.overrideTotalTime(ot.totalTime), void r.push(Ae);
                            let wn = pc;
                            if (Vn.size > 1) {
                                let Li = be;
                                const ko = [];
                                for (; Li = Li.parentNode;) {
                                    const Ut = Vn.get(Li);
                                    if (Ut) {
                                        wn = Ut;
                                        break
                                    }
                                    ko.push(Li)
                                }
                                ko.forEach(Ut => Vn.set(Ut, wn))
                            }
                            const Zr = this._buildAnimation(Ae.namespaceId, ot, wt, s, Os, Pi);
                            if (Ae.setRealPlayer(Zr), wn === pc) kr.push(Ae);
                            else {
                                const Li = this.playersByElement.get(wn);
                                Li && Li.length && (Ae.parentPlayer = Co(Li)), r.push(Ae)
                            }
                        } else Ca(be, ot.fromStyles), Ae.onDestroy(() => Yr(be, ot.toStyles)), fc.push(Ae), d.has(be) && r.push(Ae)
                    }), fc.forEach(fe => {
                        const be = s.get(fe.element);
                        if (be && be.length) {
                            const Ae = Co(be);
                            fe.setRealPlayer(Ae)
                        }
                    }), r.forEach(fe => {
                        fe.parentPlayer ? fe.syncPlayerEvents(fe.parentPlayer) : fe.destroy()
                    });
                    for (let fe = 0; fe < k.length; fe++) {
                        const be = k[fe],
                            Ae = be[er];
                        if (dc(be, rm), Ae && Ae.hasAnimation) continue;
                        let ot = [];
                        if (a.size) {
                            let Zr = a.get(be);
                            Zr && Zr.length && ot.push(...Zr);
                            let Li = this.driver.query(be, Rw, !0);
                            for (let ko = 0; ko < Li.length; ko++) {
                                let Ut = a.get(Li[ko]);
                                Ut && Ut.length && ot.push(...Ut)
                            }
                        }
                        const wn = ot.filter(Zr => !Zr.destroyed);
                        wn.length ? Ooe(this, be, wn) : this.processLeaveNode(be)
                    }
                    return k.length = 0, kr.forEach(fe => {
                        this.players.push(fe), fe.onDone(() => {
                            fe.destroy();
                            const be = this.players.indexOf(fe);
                            this.players.splice(be, 1)
                        }), fe.play()
                    }), kr
                }
                elementContainsData(n, e) {
                    let i = !1;
                    const r = e[er];
                    return r && r.setForRemoval && (i = !0), this.playersByElement.has(e) && (i = !0), this.playersByQueriedElement.has(e) && (i = !0), this.statesByElement.has(e) && (i = !0), this._fetchNamespace(n).elementContainsData(e) || i
                }
                afterFlush(n) {
                    this._flushFns.push(n)
                }
                afterFlushAnimationsDone(n) {
                    this._whenQuietFns.push(n)
                }
                _getPreviousPlayers(n, e, i, r, s) {
                    let o = [];
                    if (e) {
                        const a = this.playersByQueriedElement.get(n);
                        a && (o = a)
                    } else {
                        const a = this.playersByElement.get(n);
                        if (a) {
                            const l = !s || s == wu;
                            a.forEach(c => {
                                c.queued || !l && c.triggerName != r || o.push(c)
                            })
                        }
                    }
                    return (i || r) && (o = o.filter(a => !(i && i != a.namespaceId || r && r != a.triggerName))), o
                }
                _beforeAnimationBuild(n, e, i) {
                    const s = e.element,
                        o = e.isRemovalTransition ? void 0 : n,
                        a = e.isRemovalTransition ? void 0 : e.triggerName;
                    for (const l of e.timelines) {
                        const c = l.element,
                            d = c !== s,
                            h = Ii(i, c, []);
                        this._getPreviousPlayers(c, d, o, a, e.toState).forEach(_ => {
                            const v = _.getRealPlayer();
                            v.beforeDestroy && v.beforeDestroy(), _.destroy(), h.push(_)
                        })
                    }
                    Ca(s, e.fromStyles)
                }
                _buildAnimation(n, e, i, r, s, o) {
                    const a = e.triggerName,
                        l = e.element,
                        c = [],
                        d = new Set,
                        h = new Set,
                        m = e.timelines.map(v => {
                            const D = v.element;
                            d.add(D);
                            const k = D[er];
                            if (k && k.removedBeforeQueried) return new Bd(v.duration, v.delay);
                            const S = D !== l,
                                L = function Poe(t) {
                                    const n = [];
                                    return TO(t, n), n
                                }((i.get(D) || koe).map(wt => wt.getRealPlayer())).filter(wt => !!wt.element && wt.element === D),
                                F = s.get(D),
                                K = o.get(D),
                                Ce = nO(0, this._normalizer, 0, v.keyframes, F, K),
                                Pe = this._buildPlayer(v, Ce, L);
                            if (v.subTimeline && r && h.add(D), S) {
                                const wt = new Ww(n, a, D);
                                wt.setRealPlayer(Pe), c.push(wt)
                            }
                            return Pe
                        });
                    c.forEach(v => {
                        Ii(this.playersByQueriedElement, v.element, []).push(v), v.onDone(() => function Ioe(t, n, e) {
                            let i = t.get(n);
                            if (i) {
                                if (i.length) {
                                    const r = i.indexOf(e);
                                    i.splice(r, 1)
                                }
                                0 == i.length && t.delete(n)
                            }
                            return i
                        }(this.playersByQueriedElement, v.element, v))
                    }), d.forEach(v => tr(v, uO));
                    const _ = Co(m);
                    return _.onDestroy(() => {
                        d.forEach(v => dc(v, uO)), Yr(l, e.toStyles)
                    }), h.forEach(v => {
                        Ii(r, v, []).push(_)
                    }), _
                }
                _buildPlayer(n, e, i) {
                    return e.length > 0 ? this.driver.animate(n.element, e, n.duration, n.delay, n.easing, i) : new Bd(n.duration, n.delay)
                }
            }
            class Ww {
                constructor(n, e, i) {
                    this.namespaceId = n, this.triggerName = e, this.element = i, this._player = new Bd, this._containsRealPlayer = !1, this._queuedCallbacks = new Map, this.destroyed = !1, this.markedForDestroy = !1, this.disabled = !1, this.queued = !0, this.totalTime = 0
                }
                setRealPlayer(n) {
                    this._containsRealPlayer || (this._player = n, this._queuedCallbacks.forEach((e, i) => {
                        e.forEach(r => Mw(n, i, void 0, r))
                    }), this._queuedCallbacks.clear(), this._containsRealPlayer = !0, this.overrideTotalTime(n.totalTime), this.queued = !1)
                }
                getRealPlayer() {
                    return this._player
                }
                overrideTotalTime(n) {
                    this.totalTime = n
                }
                syncPlayerEvents(n) {
                    const e = this._player;
                    e.triggerCallback && n.onStart(() => e.triggerCallback("start")), n.onDone(() => this.finish()), n.onDestroy(() => this.destroy())
                }
                _queueEvent(n, e) {
                    Ii(this._queuedCallbacks, n, []).push(e)
                }
                onDone(n) {
                    this.queued && this._queueEvent("done", n), this._player.onDone(n)
                }
                onStart(n) {
                    this.queued && this._queueEvent("start", n), this._player.onStart(n)
                }
                onDestroy(n) {
                    this.queued && this._queueEvent("destroy", n), this._player.onDestroy(n)
                }
                init() {
                    this._player.init()
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted()
                }
                play() {
                    !this.queued && this._player.play()
                }
                pause() {
                    !this.queued && this._player.pause()
                }
                restart() {
                    !this.queued && this._player.restart()
                }
                finish() {
                    this._player.finish()
                }
                destroy() {
                    this.destroyed = !0, this._player.destroy()
                }
                reset() {
                    !this.queued && this._player.reset()
                }
                setPosition(n) {
                    this.queued || this._player.setPosition(n)
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition()
                }
                triggerCallback(n) {
                    const e = this._player;
                    e.triggerCallback && e.triggerCallback(n)
                }
            }

            function _m(t) {
                return t && 1 === t.nodeType
            }

            function kO(t, n) {
                const e = t.style.display;
                return t.style.display = n ? ? "none", e
            }

            function AO(t, n, e, i, r) {
                const s = [];
                e.forEach(l => s.push(kO(l)));
                const o = [];
                i.forEach((l, c) => {
                    const d = new Map;
                    l.forEach(h => {
                        const m = n.computeStyle(c, h, r);
                        d.set(h, m), (!m || 0 == m.length) && (c[er] = Aoe, o.push(c))
                    }), t.set(c, d)
                });
                let a = 0;
                return e.forEach(l => kO(l, s[a++])), o
            }

            function EO(t, n) {
                const e = new Map;
                if (t.forEach(a => e.set(a, [])), 0 == n.length) return e;
                const r = new Set(n),
                    s = new Map;

                function o(a) {
                    if (!a) return 1;
                    let l = s.get(a);
                    if (l) return l;
                    const c = a.parentNode;
                    return l = e.has(c) ? c : r.has(c) ? 1 : o(c), s.set(a, l), l
                }
                return n.forEach(a => {
                    const l = o(a);
                    1 !== l && e.get(l).push(a)
                }), e
            }

            function tr(t, n) {
                t.classList ? .add(n)
            }

            function dc(t, n) {
                t.classList ? .remove(n)
            }

            function Ooe(t, n, e) {
                Co(e).onDone(() => t.processLeaveNode(n))
            }

            function TO(t, n) {
                for (let e = 0; e < t.length; e++) {
                    const i = t[e];
                    i instanceof C1 ? TO(i.players, n) : n.push(i)
                }
            }

            function IO(t, n, e) {
                const i = e.get(t);
                if (!i) return !1;
                let r = n.get(t);
                return r ? i.forEach(s => r.add(s)) : n.set(t, i), e.delete(t), !0
            }
            class ym {
                constructor(n, e, i) {
                    this.bodyNode = n, this._driver = e, this._normalizer = i, this._triggerCache = {}, this.onRemovalComplete = (r, s) => {}, this._transitionEngine = new Toe(n, e, i), this._timelineEngine = new Coe(n, e, i), this._transitionEngine.onRemovalComplete = (r, s) => this.onRemovalComplete(r, s)
                }
                registerTrigger(n, e, i, r, s) {
                    const o = n + "-" + r;
                    let a = this._triggerCache[o];
                    if (!a) {
                        const l = [],
                            d = Lw(this._driver, s, l, []);
                        if (l.length) throw function vse(t, n) {
                            return new B(3404, !1)
                        }();
                        a = function yoe(t, n, e) {
                            return new boe(t, n, e)
                        }(r, d, this._normalizer), this._triggerCache[o] = a
                    }
                    this._transitionEngine.registerTrigger(e, r, a)
                }
                register(n, e) {
                    this._transitionEngine.register(n, e)
                }
                destroy(n, e) {
                    this._transitionEngine.destroy(n, e)
                }
                onInsert(n, e, i, r) {
                    this._transitionEngine.insertNode(n, e, i, r)
                }
                onRemove(n, e, i, r) {
                    this._transitionEngine.removeNode(n, e, r || !1, i)
                }
                disableAnimations(n, e) {
                    this._transitionEngine.markElementAsDisabled(n, e)
                }
                process(n, e, i, r) {
                    if ("@" == i.charAt(0)) {
                        const [s, o] = iO(i);
                        this._timelineEngine.command(s, e, o, r)
                    } else this._transitionEngine.trigger(n, e, i, r)
                }
                listen(n, e, i, r, s) {
                    if ("@" == i.charAt(0)) {
                        const [o, a] = iO(i);
                        return this._timelineEngine.listen(o, e, a, s)
                    }
                    return this._transitionEngine.listen(n, e, i, r, s)
                }
                flush(n = -1) {
                    this._transitionEngine.flush(n)
                }
                get players() {
                    return this._transitionEngine.players.concat(this._timelineEngine.players)
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone()
                }
            }
            let Boe = (() => {
                class t {
                    constructor(e, i, r) {
                        this._element = e, this._startStyles = i, this._endStyles = r, this._state = 0;
                        let s = t.initialStylesByElement.get(e);
                        s || t.initialStylesByElement.set(e, s = new Map), this._initialStyles = s
                    }
                    start() {
                        this._state < 1 && (this._startStyles && Yr(this._element, this._startStyles, this._initialStyles), this._state = 1)
                    }
                    finish() {
                        this.start(), this._state < 2 && (Yr(this._element, this._initialStyles), this._endStyles && (Yr(this._element, this._endStyles), this._endStyles = null), this._state = 1)
                    }
                    destroy() {
                        this.finish(), this._state < 3 && (t.initialStylesByElement.delete(this._element), this._startStyles && (Ca(this._element, this._startStyles), this._endStyles = null), this._endStyles && (Ca(this._element, this._endStyles), this._endStyles = null), Yr(this._element, this._initialStyles), this._state = 3)
                    }
                }
                return t.initialStylesByElement = new WeakMap, t
            })();

            function qw(t) {
                let n = null;
                return t.forEach((e, i) => {
                    (function Voe(t) {
                        return "display" === t || "position" === t
                    })(i) && (n = n || new Map, n.set(i, e))
                }), n
            }
            class RO {
                constructor(n, e, i, r) {
                    this.element = n, this.keyframes = e, this.options = i, this._specialStyles = r, this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._initialized = !1, this._finished = !1, this._started = !1, this._destroyed = !1, this._originalOnDoneFns = [], this._originalOnStartFns = [], this.time = 0, this.parentPlayer = null, this.currentSnapshot = new Map, this._duration = i.duration, this._delay = i.delay || 0, this.time = this._duration + this._delay
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                init() {
                    this._buildPlayer(), this._preparePlayerBeforeStart()
                }
                _buildPlayer() {
                    if (this._initialized) return;
                    this._initialized = !0;
                    const n = this.keyframes;
                    this.domPlayer = this._triggerWebAnimation(this.element, n, this.options), this._finalKeyframe = n.length ? n[n.length - 1] : new Map, this.domPlayer.addEventListener("finish", () => this._onFinish())
                }
                _preparePlayerBeforeStart() {
                    this._delay ? this._resetDomPlayerState() : this.domPlayer.pause()
                }
                _convertKeyframesToObject(n) {
                    const e = [];
                    return n.forEach(i => {
                        e.push(Object.fromEntries(i))
                    }), e
                }
                _triggerWebAnimation(n, e, i) {
                    return n.animate(this._convertKeyframesToObject(e), i)
                }
                onStart(n) {
                    this._originalOnStartFns.push(n), this._onStartFns.push(n)
                }
                onDone(n) {
                    this._originalOnDoneFns.push(n), this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                play() {
                    this._buildPlayer(), this.hasStarted() || (this._onStartFns.forEach(n => n()), this._onStartFns = [], this._started = !0, this._specialStyles && this._specialStyles.start()), this.domPlayer.play()
                }
                pause() {
                    this.init(), this.domPlayer.pause()
                }
                finish() {
                    this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish()
                }
                reset() {
                    this._resetDomPlayerState(), this._destroyed = !1, this._finished = !1, this._started = !1, this._onStartFns = this._originalOnStartFns, this._onDoneFns = this._originalOnDoneFns
                }
                _resetDomPlayerState() {
                    this.domPlayer && this.domPlayer.cancel()
                }
                restart() {
                    this.reset(), this.play()
                }
                hasStarted() {
                    return this._started
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this._resetDomPlayerState(), this._onFinish(), this._specialStyles && this._specialStyles.destroy(), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                setPosition(n) {
                    void 0 === this.domPlayer && this.init(), this.domPlayer.currentTime = n * this.time
                }
                getPosition() {
                    return this.domPlayer.currentTime / this.time
                }
                get totalTime() {
                    return this._delay + this._duration
                }
                beforeDestroy() {
                    const n = new Map;
                    this.hasStarted() && this._finalKeyframe.forEach((i, r) => {
                        "offset" !== r && n.set(r, this._finished ? i : _O(this.element, r))
                    }), this.currentSnapshot = n
                }
                triggerCallback(n) {
                    const e = "start" === n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }
            class Hoe {
                validateStyleProperty(n) {
                    return !0
                }
                validateAnimatableStyleProperty(n) {
                    return !0
                }
                matchesElement(n, e) {
                    return !1
                }
                containsElement(n, e) {
                    return aO(n, e)
                }
                getParentElement(n) {
                    return Ew(n)
                }
                query(n, e, i) {
                    return lO(n, e, i)
                }
                computeStyle(n, e, i) {
                    return window.getComputedStyle(n)[e]
                }
                animate(n, e, i, r, s, o = []) {
                    const l = {
                        duration: i,
                        delay: r,
                        fill: 0 == r ? "both" : "forwards"
                    };
                    s && (l.easing = s);
                    const c = new Map,
                        d = o.filter(_ => _ instanceof RO);
                    (function Use(t, n) {
                        return 0 === t || 0 === n
                    })(i, r) && d.forEach(_ => {
                        _.currentSnapshot.forEach((v, D) => c.set(D, v))
                    });
                    let h = function Hse(t) {
                        return t.length ? t[0] instanceof Map ? t : t.map(n => hO(n)) : []
                    }(e).map(_ => xo(_));
                    h = function Gse(t, n, e) {
                        if (e.size && n.length) {
                            let i = n[0],
                                r = [];
                            if (e.forEach((s, o) => {
                                    i.has(o) || r.push(o), i.set(o, s)
                                }), r.length)
                                for (let s = 1; s < n.length; s++) {
                                    let o = n[s];
                                    r.forEach(a => o.set(a, _O(t, a)))
                                }
                        }
                        return n
                    }(n, h, c);
                    const m = function Noe(t, n) {
                        let e = null,
                            i = null;
                        return Array.isArray(n) && n.length ? (e = qw(n[0]), n.length > 1 && (i = qw(n[n.length - 1]))) : n instanceof Map && (e = qw(n)), e || i ? new Boe(t, e, i) : null
                    }(n, h);
                    return new RO(n, h, l, m)
                }
            }
            let $oe = (() => {
                class t extends b1 {
                    constructor(e, i) {
                        super(), this._nextAnimationId = 0, this._renderer = e.createRenderer(i.body, {
                            id: "0",
                            encapsulation: sr.None,
                            styles: [],
                            data: {
                                animation: []
                            }
                        })
                    }
                    build(e) {
                        const i = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const r = Array.isArray(e) ? v1(e) : e;
                        return FO(this._renderer, null, i, "register", [r]), new joe(i, this._renderer)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C($c), C(pe))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class joe extends class Q8 {} {
                constructor(n, e) {
                    super(), this._id = n, this._renderer = e
                }
                create(n, e) {
                    return new zoe(this._id, n, e || {}, this._renderer)
                }
            }
            class zoe {
                constructor(n, e, i, r) {
                    this.id = n, this.element = e, this._renderer = r, this.parentPlayer = null, this._started = !1, this.totalTime = 0, this._command("create", i)
                }
                _listen(n, e) {
                    return this._renderer.listen(this.element, `@@${this.id}:${n}`, e)
                }
                _command(n, ...e) {
                    return FO(this._renderer, this.element, this.id, n, e)
                }
                onDone(n) {
                    this._listen("done", n)
                }
                onStart(n) {
                    this._listen("start", n)
                }
                onDestroy(n) {
                    this._listen("destroy", n)
                }
                init() {
                    this._command("init")
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this._command("play"), this._started = !0
                }
                pause() {
                    this._command("pause")
                }
                restart() {
                    this._command("restart")
                }
                finish() {
                    this._command("finish")
                }
                destroy() {
                    this._command("destroy")
                }
                reset() {
                    this._command("reset"), this._started = !1
                }
                setPosition(n) {
                    this._command("setPosition", n)
                }
                getPosition() {
                    return this._renderer.engine.players[+this.id] ? .getPosition() ? ? 0
                }
            }

            function FO(t, n, e, i, r) {
                return t.setProperty(n, `@@${e}:${i}`, r)
            }
            const OO = "@.disabled";
            let Uoe = (() => {
                class t {
                    constructor(e, i, r) {
                        this.delegate = e, this.engine = i, this._zone = r, this._currentId = 0, this._microtaskId = 1, this._animationCallbacksBuffer = [], this._rendererCache = new Map, this._cdRecurDepth = 0, this.promise = Promise.resolve(0), i.onRemovalComplete = (s, o) => {
                            const a = o ? .parentNode(s);
                            a && o.removeChild(a, s)
                        }
                    }
                    createRenderer(e, i) {
                        const s = this.delegate.createRenderer(e, i);
                        if (!(e && i && i.data && i.data.animation)) {
                            let d = this._rendererCache.get(s);
                            return d || (d = new PO("", s, this.engine, () => this._rendererCache.delete(s)), this._rendererCache.set(s, d)), d
                        }
                        const o = i.id,
                            a = i.id + "-" + this._currentId;
                        this._currentId++, this.engine.register(a, e);
                        const l = d => {
                            Array.isArray(d) ? d.forEach(l) : this.engine.registerTrigger(o, a, e, d.name, d)
                        };
                        return i.data.animation.forEach(l), new Goe(this, a, s, this.engine)
                    }
                    begin() {
                        this._cdRecurDepth++, this.delegate.begin && this.delegate.begin()
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++
                        })
                    }
                    scheduleListenerCallback(e, i, r) {
                        e >= 0 && e < this._microtaskId ? this._zone.run(() => i(r)) : (0 == this._animationCallbacksBuffer.length && Promise.resolve(null).then(() => {
                            this._zone.run(() => {
                                this._animationCallbacksBuffer.forEach(s => {
                                    const [o, a] = s;
                                    o(a)
                                }), this._animationCallbacksBuffer = []
                            })
                        }), this._animationCallbacksBuffer.push([i, r]))
                    }
                    end() {
                        this._cdRecurDepth--, 0 == this._cdRecurDepth && this._zone.runOutsideAngular(() => {
                            this._scheduleCountTask(), this.engine.flush(this._microtaskId)
                        }), this.delegate.end && this.delegate.end()
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone()
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(C($c), C(ym), C(ce))
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class PO {
                constructor(n, e, i, r) {
                    this.namespaceId = n, this.delegate = e, this.engine = i, this._onDestroy = r, this.destroyNode = this.delegate.destroyNode ? s => e.destroyNode(s) : null
                }
                get data() {
                    return this.delegate.data
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy(), this._onDestroy ? .()
                }
                createElement(n, e) {
                    return this.delegate.createElement(n, e)
                }
                createComment(n) {
                    return this.delegate.createComment(n)
                }
                createText(n) {
                    return this.delegate.createText(n)
                }
                appendChild(n, e) {
                    this.delegate.appendChild(n, e), this.engine.onInsert(this.namespaceId, e, n, !1)
                }
                insertBefore(n, e, i, r = !0) {
                    this.delegate.insertBefore(n, e, i), this.engine.onInsert(this.namespaceId, e, n, r)
                }
                removeChild(n, e, i) {
                    this.engine.onRemove(this.namespaceId, e, this.delegate, i)
                }
                selectRootElement(n, e) {
                    return this.delegate.selectRootElement(n, e)
                }
                parentNode(n) {
                    return this.delegate.parentNode(n)
                }
                nextSibling(n) {
                    return this.delegate.nextSibling(n)
                }
                setAttribute(n, e, i, r) {
                    this.delegate.setAttribute(n, e, i, r)
                }
                removeAttribute(n, e, i) {
                    this.delegate.removeAttribute(n, e, i)
                }
                addClass(n, e) {
                    this.delegate.addClass(n, e)
                }
                removeClass(n, e) {
                    this.delegate.removeClass(n, e)
                }
                setStyle(n, e, i, r) {
                    this.delegate.setStyle(n, e, i, r)
                }
                removeStyle(n, e, i) {
                    this.delegate.removeStyle(n, e, i)
                }
                setProperty(n, e, i) {
                    "@" == e.charAt(0) && e == OO ? this.disableAnimations(n, !!i) : this.delegate.setProperty(n, e, i)
                }
                setValue(n, e) {
                    this.delegate.setValue(n, e)
                }
                listen(n, e, i) {
                    return this.delegate.listen(n, e, i)
                }
                disableAnimations(n, e) {
                    this.engine.disableAnimations(n, e)
                }
            }
            class Goe extends PO {
                constructor(n, e, i, r, s) {
                    super(e, i, r, s), this.factory = n, this.namespaceId = e
                }
                setProperty(n, e, i) {
                    "@" == e.charAt(0) ? "." == e.charAt(1) && e == OO ? this.disableAnimations(n, i = void 0 === i || !!i) : this.engine.process(this.namespaceId, n, e.slice(1), i) : this.delegate.setProperty(n, e, i)
                }
                listen(n, e, i) {
                    if ("@" == e.charAt(0)) {
                        const r = function Woe(t) {
                            switch (t) {
                                case "body":
                                    return document.body;
                                case "document":
                                    return document;
                                case "window":
                                    return window;
                                default:
                                    return t
                            }
                        }(n);
                        let s = e.slice(1),
                            o = "";
                        return "@" != s.charAt(0) && ([s, o] = function qoe(t) {
                            const n = t.indexOf(".");
                            return [t.substring(0, n), t.slice(n + 1)]
                        }(s)), this.engine.listen(this.namespaceId, r, s, o, a => {
                            this.factory.scheduleListenerCallback(a._data || -1, i, a)
                        })
                    }
                    return this.delegate.listen(n, e, i)
                }
            }
            const LO = [{
                    provide: b1,
                    useClass: $oe
                }, {
                    provide: $w,
                    useFactory: function Qoe() {
                        return new poe
                    }
                }, {
                    provide: ym,
                    useClass: (() => {
                        class t extends ym {
                            constructor(e, i, r, s) {
                                super(e.body, i, r)
                            }
                            ngOnDestroy() {
                                this.flush()
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(C(pe), C(Tw), C($w), C(Lr))
                        }, t.\u0275prov = I({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })()
                }, {
                    provide: $c,
                    useFactory: function Koe(t, n, e) {
                        return new Uoe(t, n, e)
                    },
                    deps: [nf, ym, ce]
                }],
                Yw = [{
                    provide: Tw,
                    useFactory: () => new Hoe
                }, {
                    provide: Tt,
                    useValue: "BrowserAnimations"
                }, ...LO],
                NO = [{
                    provide: Tw,
                    useClass: cO
                }, {
                    provide: Tt,
                    useValue: "NoopAnimations"
                }, ...LO];
            let Zoe = (() => {
                    class t {
                        static withConfig(e) {
                            return {
                                ngModule: t,
                                providers: e.disableAnimations ? NO : Yw
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: Yw,
                        imports: [eA]
                    }), t
                })(),
                Xoe = (() => {
                    class t {
                        constructor(e) {
                            this.authenticationService = e, this.isRefreshing = !1, this.refreshTokenSubject = new Te(null)
                        }
                        refreshToken(e, i) {
                            let r = null;
                            return this.isRefreshing || (this.isRefreshing = !0, this.refreshTokenSubject.next(null), r = this.authenticationService.refreshToken().pipe(Ie(s => null != s), Fe(1)).subscribe({
                                next: s => {
                                    if (!s) return this.isRefreshing = !1, void this.refreshTokenSubject.next(!1);
                                    this.isRefreshing = !1, this.refreshTokenSubject.next(!0)
                                },
                                error: s => {
                                    this.isRefreshing = !1, this.refreshTokenSubject.next(!0)
                                },
                                complete: () => {
                                    this.isRefreshing = !1, this.refreshTokenSubject.next(!0)
                                }
                            })), this.refreshTokenSubject.pipe(Ie(s => null != s), Fe(1), vt(() => {
                                r && r.unsubscribe();
                                const s = this.authenticationService.currentUserValue;
                                return s && s.token && !this.authenticationService.isTokenExpired() && (e = e.clone({
                                    headers: e.headers.set("Authorization", "Bearer " + s.token)
                                })), i.handle(e)
                            }))
                        }
                        intercept(e, i) {
                            const r = this.authenticationService.currentUserValue;
                            return console.log(`Intercepted request ${e.url} passing through!`), r && r.token && !this.authenticationService.isTokenExpired() && (e = e.clone({
                                headers: e.headers.set("Authorization", "Bearer " + r.token)
                            })), e.headers.has("Content-Type") || (e = (e = e.clone({
                                headers: e.headers.set("Content-Type", "application/json")
                            })).clone({
                                headers: e.headers.set("Access-Control-Allow-Methods", "GET, POST, OPTIONS, PUT, PATCH, DELETE")
                            })), e.url.includes("logout") || e.url.includes("refresh") || e.url.includes("login") ? i.handle(e) : this.authenticationService.isTokenExpired() && !this.authenticationService.isRefreshTokenExpired() ? this.refreshToken(e, i) : i.handle(e).pipe(oi((s, o) => {
                                throw console.log(s), 401 === s ? .status && !e.url.includes("logout") && !e.url.includes("refresh") && (this.refreshToken(e, i), this.authenticationService.logout()), s
                            }))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Bn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
            const nae = {
                provide: new R("mat-autocomplete-scroll-strategy"),
                deps: [vn],
                useFactory: function tae(t) {
                    return () => t.scrollStrategies.reposition()
                }
            };
            let oae = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [nae],
                        imports: [to, Kf, de, ut, vs, Kf, de]
                    }), t
                })(),
                VO = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Fd, de, de]
                    }), t
                })(),
                HO = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [s1, de, $r, de]
                    }), t
                })(),
                fae = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, ki, de]
                    }), t
                })();
            const pae = ["mat-calendar-body", ""];

            function mae(t, n) {
                if (1 & t && (f(0, "tr", 2)(1, "td", 3), w(2), g()()), 2 & t) {
                    const e = x();
                    p(1), Kt("padding-top", e._cellPadding)("padding-bottom", e._cellPadding), q("colspan", e.numCols), p(1), X(" ", e.label, " ")
                }
            }

            function gae(t, n) {
                if (1 & t && (f(0, "td", 3), w(1), g()), 2 & t) {
                    const e = x(2);
                    Kt("padding-top", e._cellPadding)("padding-bottom", e._cellPadding), q("colspan", e._firstRowOffset), p(1), X(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ")
                }
            }

            function _ae(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "td", 7)(1, "button", 8), T("click", function(r) {
                        const o = ne(e).$implicit;
                        return ie(x(2)._cellClicked(o, r))
                    })("focus", function(r) {
                        const o = ne(e).$implicit;
                        return ie(x(2)._emitActiveDateChange(o, r))
                    }), f(2, "div", 9), w(3), g(), E(4, "div", 10), g()()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x().index,
                        s = x();
                    Kt("width", s._cellWidth)("padding-top", s._cellPadding)("padding-bottom", s._cellPadding), q("data-mat-row", r)("data-mat-col", i), p(1), re("mat-calendar-body-disabled", !e.enabled)("mat-calendar-body-active", s._isActiveCell(r, i))("mat-calendar-body-range-start", s._isRangeStart(e.compareValue))("mat-calendar-body-range-end", s._isRangeEnd(e.compareValue))("mat-calendar-body-in-range", s._isInRange(e.compareValue))("mat-calendar-body-comparison-bridge-start", s._isComparisonBridgeStart(e.compareValue, r, i))("mat-calendar-body-comparison-bridge-end", s._isComparisonBridgeEnd(e.compareValue, r, i))("mat-calendar-body-comparison-start", s._isComparisonStart(e.compareValue))("mat-calendar-body-comparison-end", s._isComparisonEnd(e.compareValue))("mat-calendar-body-in-comparison-range", s._isInComparisonRange(e.compareValue))("mat-calendar-body-preview-start", s._isPreviewStart(e.compareValue))("mat-calendar-body-preview-end", s._isPreviewEnd(e.compareValue))("mat-calendar-body-in-preview", s._isInPreview(e.compareValue)), y("ngClass", e.cssClasses)("tabindex", s._isActiveCell(r, i) ? 0 : -1), q("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)("aria-pressed", s._isSelected(e.compareValue))("aria-current", s.todayValue === e.compareValue ? "date" : null), p(1), re("mat-calendar-body-selected", s._isSelected(e.compareValue))("mat-calendar-body-comparison-identical", s._isComparisonIdentical(e.compareValue))("mat-calendar-body-today", s.todayValue === e.compareValue), p(1), X(" ", e.displayValue, " ")
                }
            }

            function yae(t, n) {
                if (1 & t && (f(0, "tr", 4), b(1, gae, 2, 6, "td", 5), b(2, _ae, 5, 47, "td", 6), g()), 2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x();
                    p(1), y("ngIf", 0 === i && r._firstRowOffset), p(1), y("ngForOf", e)
                }
            }

            function bae(t, n) {
                if (1 & t && (f(0, "th", 5)(1, "span", 6), w(2), g(), f(3, "span", 7), w(4), g()()), 2 & t) {
                    const e = n.$implicit;
                    p(2), ve(e.long), p(2), ve(e.narrow)
                }
            }
            const vae = ["*"];

            function wae(t, n) {}

            function Cae(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-month-view", 5), T("activeDateChange", function(r) {
                        return ne(e), ie(x().activeDate = r)
                    })("_userSelection", function(r) {
                        return ne(e), ie(x()._dateSelected(r))
                    }), g()
                }
                if (2 & t) {
                    const e = x();
                    y("activeDate", e.activeDate)("selected", e.selected)("dateFilter", e.dateFilter)("maxDate", e.maxDate)("minDate", e.minDate)("dateClass", e.dateClass)("comparisonStart", e.comparisonStart)("comparisonEnd", e.comparisonEnd)
                }
            }

            function xae(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-year-view", 6), T("activeDateChange", function(r) {
                        return ne(e), ie(x().activeDate = r)
                    })("monthSelected", function(r) {
                        return ne(e), ie(x()._monthSelectedInYearView(r))
                    })("selectedChange", function(r) {
                        return ne(e), ie(x()._goToDateInView(r, "month"))
                    }), g()
                }
                if (2 & t) {
                    const e = x();
                    y("activeDate", e.activeDate)("selected", e.selected)("dateFilter", e.dateFilter)("maxDate", e.maxDate)("minDate", e.minDate)("dateClass", e.dateClass)
                }
            }

            function Dae(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-multi-year-view", 7), T("activeDateChange", function(r) {
                        return ne(e), ie(x().activeDate = r)
                    })("yearSelected", function(r) {
                        return ne(e), ie(x()._yearSelectedInMultiYearView(r))
                    })("selectedChange", function(r) {
                        return ne(e), ie(x()._goToDateInView(r, "year"))
                    }), g()
                }
                if (2 & t) {
                    const e = x();
                    y("activeDate", e.activeDate)("selected", e.selected)("dateFilter", e.dateFilter)("maxDate", e.maxDate)("minDate", e.minDate)("dateClass", e.dateClass)
                }
            }

            function Mae(t, n) {}
            const Sae = ["button"];

            function kae(t, n) {
                1 & t && (ni(), f(0, "svg", 3), E(1, "path", 4), g())
            }
            const Aae = [
                    [
                        ["", "matDatepickerToggleIcon", ""]
                    ]
                ],
                Eae = ["[matDatepickerToggleIcon]"];
            let Cu = (() => {
                class t {
                    constructor() {
                        this.changes = new H, this.calendarLabel = "Calendar", this.openCalendarLabel = "Open calendar", this.closeCalendarLabel = "Close calendar", this.prevMonthLabel = "Previous month", this.nextMonthLabel = "Next month", this.prevYearLabel = "Previous year", this.nextYearLabel = "Next year", this.prevMultiYearLabel = "Previous 24 years", this.nextMultiYearLabel = "Next 24 years", this.switchToMonthViewLabel = "Choose date", this.switchToMultiYearViewLabel = "Choose month and year", this.startDateLabel = "Start date", this.endDateLabel = "End date"
                    }
                    formatYearRange(e, i) {
                        return `${e} \u2013 ${i}`
                    }
                    formatYearRangeLabel(e, i) {
                        return `${e} to ${i}`
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = I({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            class Qw {
                constructor(n, e, i, r, s = {}, o = n, a) {
                    this.value = n, this.displayValue = e, this.ariaLabel = i, this.enabled = r, this.cssClasses = s, this.compareValue = o, this.rawValue = a
                }
            }
            let uc = (() => {
                class t {
                    constructor(e, i) {
                        this._elementRef = e, this._ngZone = i, this._focusActiveCellAfterViewChecked = !1, this.numCols = 7, this.activeCell = 0, this.isRange = !1, this.cellAspectRatio = 1, this.previewStart = null, this.previewEnd = null, this.selectedValueChange = new V, this.previewChange = new V, this.activeDateChange = new V, this._enterHandler = r => {
                            if (this._skipNextFocus && "focus" === r.type) this._skipNextFocus = !1;
                            else if (r.target && this.isRange) {
                                const s = this._getCellFromElement(r.target);
                                s && this._ngZone.run(() => this.previewChange.emit({
                                    value: s.enabled ? s : null,
                                    event: r
                                }))
                            }
                        }, this._leaveHandler = r => {
                            null !== this.previewEnd && this.isRange && r.target && this._getCellFromElement(r.target) && this._ngZone.run(() => this.previewChange.emit({
                                value: null,
                                event: r
                            }))
                        }, i.runOutsideAngular(() => {
                            const r = e.nativeElement;
                            r.addEventListener("mouseenter", this._enterHandler, !0), r.addEventListener("focus", this._enterHandler, !0), r.addEventListener("mouseleave", this._leaveHandler, !0), r.addEventListener("blur", this._leaveHandler, !0)
                        })
                    }
                    ngAfterViewChecked() {
                        this._focusActiveCellAfterViewChecked && (this._focusActiveCell(), this._focusActiveCellAfterViewChecked = !1)
                    }
                    _cellClicked(e, i) {
                        e.enabled && this.selectedValueChange.emit({
                            value: e.value,
                            event: i
                        })
                    }
                    _emitActiveDateChange(e, i) {
                        e.enabled && this.activeDateChange.emit({
                            value: e.value,
                            event: i
                        })
                    }
                    _isSelected(e) {
                        return this.startValue === e || this.endValue === e
                    }
                    ngOnChanges(e) {
                        const i = e.numCols,
                            {
                                rows: r,
                                numCols: s
                            } = this;
                        (e.rows || i) && (this._firstRowOffset = r && r.length && r[0].length ? s - r[0].length : 0), (e.cellAspectRatio || i || !this._cellPadding) && (this._cellPadding = 50 * this.cellAspectRatio / s + "%"), (i || !this._cellWidth) && (this._cellWidth = 100 / s + "%")
                    }
                    ngOnDestroy() {
                        const e = this._elementRef.nativeElement;
                        e.removeEventListener("mouseenter", this._enterHandler, !0), e.removeEventListener("focus", this._enterHandler, !0), e.removeEventListener("mouseleave", this._leaveHandler, !0), e.removeEventListener("blur", this._leaveHandler, !0)
                    }
                    _isActiveCell(e, i) {
                        let r = e * this.numCols + i;
                        return e && (r -= this._firstRowOffset), r == this.activeCell
                    }
                    _focusActiveCell(e = !0) {
                        this._ngZone.runOutsideAngular(() => {
                            this._ngZone.onStable.pipe(Fe(1)).subscribe(() => {
                                setTimeout(() => {
                                    const i = this._elementRef.nativeElement.querySelector(".mat-calendar-body-active");
                                    i && (e || (this._skipNextFocus = !0), i.focus())
                                })
                            })
                        })
                    }
                    _scheduleFocusActiveCellAfterViewChecked() {
                        this._focusActiveCellAfterViewChecked = !0
                    }
                    _isRangeStart(e) {
                        return Kw(e, this.startValue, this.endValue)
                    }
                    _isRangeEnd(e) {
                        return Zw(e, this.startValue, this.endValue)
                    }
                    _isInRange(e) {
                        return Xw(e, this.startValue, this.endValue, this.isRange)
                    }
                    _isComparisonStart(e) {
                        return Kw(e, this.comparisonStart, this.comparisonEnd)
                    }
                    _isComparisonBridgeStart(e, i, r) {
                        if (!this._isComparisonStart(e) || this._isRangeStart(e) || !this._isInRange(e)) return !1;
                        let s = this.rows[i][r - 1];
                        if (!s) {
                            const o = this.rows[i - 1];
                            s = o && o[o.length - 1]
                        }
                        return s && !this._isRangeEnd(s.compareValue)
                    }
                    _isComparisonBridgeEnd(e, i, r) {
                        if (!this._isComparisonEnd(e) || this._isRangeEnd(e) || !this._isInRange(e)) return !1;
                        let s = this.rows[i][r + 1];
                        if (!s) {
                            const o = this.rows[i + 1];
                            s = o && o[0]
                        }
                        return s && !this._isRangeStart(s.compareValue)
                    }
                    _isComparisonEnd(e) {
                        return Zw(e, this.comparisonStart, this.comparisonEnd)
                    }
                    _isInComparisonRange(e) {
                        return Xw(e, this.comparisonStart, this.comparisonEnd, this.isRange)
                    }
                    _isComparisonIdentical(e) {
                        return this.comparisonStart === this.comparisonEnd && e === this.comparisonStart
                    }
                    _isPreviewStart(e) {
                        return Kw(e, this.previewStart, this.previewEnd)
                    }
                    _isPreviewEnd(e) {
                        return Zw(e, this.previewStart, this.previewEnd)
                    }
                    _isInPreview(e) {
                        return Xw(e, this.previewStart, this.previewEnd, this.isRange)
                    }
                    _getCellFromElement(e) {
                        let i;
                        if (GO(e) ? i = e : GO(e.parentNode) && (i = e.parentNode), i) {
                            const r = i.getAttribute("data-mat-row"),
                                s = i.getAttribute("data-mat-col");
                            if (r && s) return this.rows[parseInt(r)][parseInt(s)]
                        }
                        return null
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(ce))
                }, t.\u0275cmp = j({
                    type: t,
                    selectors: [
                        ["", "mat-calendar-body", ""]
                    ],
                    hostAttrs: [1, "mat-calendar-body"],
                    inputs: {
                        label: "label",
                        rows: "rows",
                        todayValue: "todayValue",
                        startValue: "startValue",
                        endValue: "endValue",
                        labelMinRequiredCells: "labelMinRequiredCells",
                        numCols: "numCols",
                        activeCell: "activeCell",
                        isRange: "isRange",
                        cellAspectRatio: "cellAspectRatio",
                        comparisonStart: "comparisonStart",
                        comparisonEnd: "comparisonEnd",
                        previewStart: "previewStart",
                        previewEnd: "previewEnd"
                    },
                    outputs: {
                        selectedValueChange: "selectedValueChange",
                        previewChange: "previewChange",
                        activeDateChange: "activeDateChange"
                    },
                    exportAs: ["matCalendarBody"],
                    features: [ze],
                    attrs: pae,
                    decls: 2,
                    vars: 2,
                    consts: [
                        ["aria-hidden", "true", 4, "ngIf"],
                        ["role", "row", 4, "ngFor", "ngForOf"],
                        ["aria-hidden", "true"],
                        [1, "mat-calendar-body-label"],
                        ["role", "row"],
                        ["class", "mat-calendar-body-label", 3, "paddingTop", "paddingBottom", 4, "ngIf"],
                        ["role", "gridcell", "class", "mat-calendar-body-cell-container", 3, "width", "paddingTop", "paddingBottom", 4, "ngFor", "ngForOf"],
                        ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
                        ["type", "button", 1, "mat-calendar-body-cell", 3, "ngClass", "tabindex", "click", "focus"],
                        [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
                        ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"]
                    ],
                    template: function(e, i) {
                        1 & e && (b(0, mae, 3, 6, "tr", 0), b(1, yae, 3, 2, "tr", 1)), 2 & e && (y("ngIf", i._firstRowOffset < i.labelMinRequiredCells), p(1), y("ngForOf", i.rows))
                    },
                    dependencies: [gr, Dn, at],
                    styles: ['.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}'],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();

            function GO(t) {
                return "TD" === t.nodeName
            }

            function Kw(t, n, e) {
                return null !== e && n !== e && t < e && t === n
            }

            function Zw(t, n, e) {
                return null !== n && n !== e && t >= n && t === e
            }

            function Xw(t, n, e, i) {
                return i && null !== n && null !== e && n !== e && t >= n && t <= e
            }
            class hi {
                constructor(n, e) {
                    this.start = n, this.end = e
                }
            }
            let Do = (() => {
                    class t {
                        constructor(e, i) {
                            this.selection = e, this._adapter = i, this._selectionChanged = new H, this.selectionChanged = this._selectionChanged, this.selection = e
                        }
                        updateSelection(e, i) {
                            const r = this.selection;
                            this.selection = e, this._selectionChanged.next({
                                selection: e,
                                source: i,
                                oldValue: r
                            })
                        }
                        ngOnDestroy() {
                            this._selectionChanged.complete()
                        }
                        _isValidDateInstance(e) {
                            return this._adapter.isDateInstance(e) && this._adapter.isValid(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Tae = (() => {
                    class t extends Do {
                        constructor(e) {
                            super(null, e)
                        }
                        add(e) {
                            super.updateSelection(e, this)
                        }
                        isValid() {
                            return null != this.selection && this._isValidDateInstance(this.selection)
                        }
                        isComplete() {
                            return null != this.selection
                        }
                        clone() {
                            const e = new t(this._adapter);
                            return e.updateSelection(this.selection, this), e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(kn))
                    }, t.\u0275prov = I({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
            const WO = {
                    provide: Do,
                    deps: [
                        [new ii, new $i, Do], kn
                    ],
                    useFactory: function Rae(t, n) {
                        return t || new Tae(n)
                    }
                },
                vm = new R("MAT_DATE_RANGE_SELECTION_STRATEGY");
            let qO = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._changeDetectorRef = e, this._dateFormats = i, this._dateAdapter = r, this._dir = s, this._rangeStrategy = o, this._rerenderSubscription = Re.EMPTY, this.selectedChange = new V, this._userSelection = new V, this.activeDateChange = new V, this._activeDate = this._dateAdapter.today()
                        }
                        get activeDate() {
                            return this._activeDate
                        }
                        set activeDate(e) {
                            const i = this._activeDate,
                                r = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)) || this._dateAdapter.today();
                            this._activeDate = this._dateAdapter.clampDate(r, this.minDate, this.maxDate), this._hasSameMonthAndYear(i, this._activeDate) || this._init()
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e instanceof hi ? e : this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)), this._setRanges(this._selected)
                        }
                        get minDate() {
                            return this._minDate
                        }
                        set minDate(e) {
                            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get maxDate() {
                            return this._maxDate
                        }
                        set maxDate(e) {
                            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        ngAfterContentInit() {
                            this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(pt(null)).subscribe(() => this._init())
                        }
                        ngOnChanges(e) {
                            const i = e.comparisonStart || e.comparisonEnd;
                            i && !i.firstChange && this._setRanges(this.selected)
                        }
                        ngOnDestroy() {
                            this._rerenderSubscription.unsubscribe()
                        }
                        _dateSelected(e) {
                            const i = e.value,
                                r = this._getDateFromDayOfMonth(i);
                            let s, o;
                            this._selected instanceof hi ? (s = this._getDateInCurrentMonth(this._selected.start), o = this._getDateInCurrentMonth(this._selected.end)) : s = o = this._getDateInCurrentMonth(this._selected), (s !== i || o !== i) && this.selectedChange.emit(r), this._userSelection.emit({
                                value: r,
                                event: e.event
                            }), this._previewStart = this._previewEnd = null, this._changeDetectorRef.markForCheck()
                        }
                        _updateActiveDate(e) {
                            const r = this._activeDate;
                            this.activeDate = this._getDateFromDayOfMonth(e.value), this._dateAdapter.compareDate(r, this.activeDate) && this.activeDateChange.emit(this._activeDate)
                        }
                        _handleCalendarBodyKeydown(e) {
                            const i = this._activeDate,
                                r = this._isRtl();
                            switch (e.keyCode) {
                                case 37:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, r ? 1 : -1);
                                    break;
                                case 39:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, r ? -1 : 1);
                                    break;
                                case 38:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);
                                    break;
                                case 40:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);
                                    break;
                                case 36:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));
                                    break;
                                case 35:
                                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));
                                    break;
                                case 33:
                                    this.activeDate = e.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                                    break;
                                case 34:
                                    this.activeDate = e.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                                    break;
                                case 13:
                                case 32:
                                    return this._selectionKeyPressed = !0, void(this._canSelect(this._activeDate) && e.preventDefault());
                                case 27:
                                    return void(null != this._previewEnd && !$t(e) && (this._previewStart = this._previewEnd = null, this.selectedChange.emit(null), this._userSelection.emit({
                                        value: null,
                                        event: e
                                    }), e.preventDefault(), e.stopPropagation()));
                                default:
                                    return
                            }
                            this._dateAdapter.compareDate(i, this.activeDate) && (this.activeDateChange.emit(this.activeDate), this._focusActiveCellAfterViewChecked()), e.preventDefault()
                        }
                        _handleCalendarBodyKeyup(e) {
                            (32 === e.keyCode || 13 === e.keyCode) && (this._selectionKeyPressed && this._canSelect(this._activeDate) && this._dateSelected({
                                value: this._dateAdapter.getDate(this._activeDate),
                                event: e
                            }), this._selectionKeyPressed = !1)
                        }
                        _init() {
                            this._setRanges(this.selected), this._todayDate = this._getCellCompareValue(this._dateAdapter.today()), this._monthLabel = this._dateFormats.display.monthLabel ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel) : this._dateAdapter.getMonthNames("short")[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();
                            let e = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);
                            this._firstWeekOffset = (7 + this._dateAdapter.getDayOfWeek(e) - this._dateAdapter.getFirstDayOfWeek()) % 7, this._initWeekdays(), this._createWeekCells(), this._changeDetectorRef.markForCheck()
                        }
                        _focusActiveCell(e) {
                            this._matCalendarBody._focusActiveCell(e)
                        }
                        _focusActiveCellAfterViewChecked() {
                            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()
                        }
                        _previewChanged({
                            event: e,
                            value: i
                        }) {
                            if (this._rangeStrategy) {
                                const s = this._rangeStrategy.createPreview(i ? i.rawValue : null, this.selected, e);
                                this._previewStart = this._getCellCompareValue(s.start), this._previewEnd = this._getCellCompareValue(s.end), this._changeDetectorRef.detectChanges()
                            }
                        }
                        _getDateFromDayOfMonth(e) {
                            return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), e)
                        }
                        _initWeekdays() {
                            const e = this._dateAdapter.getFirstDayOfWeek(),
                                i = this._dateAdapter.getDayOfWeekNames("narrow");
                            let s = this._dateAdapter.getDayOfWeekNames("long").map((o, a) => ({
                                long: o,
                                narrow: i[a]
                            }));
                            this._weekdays = s.slice(e).concat(s.slice(0, e))
                        }
                        _createWeekCells() {
                            const e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
                                i = this._dateAdapter.getDateNames();
                            this._weeks = [
                                []
                            ];
                            for (let r = 0, s = this._firstWeekOffset; r < e; r++, s++) {
                                7 == s && (this._weeks.push([]), s = 0);
                                const o = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), r + 1),
                                    a = this._shouldEnableDate(o),
                                    l = this._dateAdapter.format(o, this._dateFormats.display.dateA11yLabel),
                                    c = this.dateClass ? this.dateClass(o, "month") : void 0;
                                this._weeks[this._weeks.length - 1].push(new Qw(r + 1, i[r], l, a, c, this._getCellCompareValue(o), o))
                            }
                        }
                        _shouldEnableDate(e) {
                            return !!e && (!this.minDate || this._dateAdapter.compareDate(e, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(e, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(e))
                        }
                        _getDateInCurrentMonth(e) {
                            return e && this._hasSameMonthAndYear(e, this.activeDate) ? this._dateAdapter.getDate(e) : null
                        }
                        _hasSameMonthAndYear(e, i) {
                            return !(!e || !i || this._dateAdapter.getMonth(e) != this._dateAdapter.getMonth(i) || this._dateAdapter.getYear(e) != this._dateAdapter.getYear(i))
                        }
                        _getCellCompareValue(e) {
                            if (e) {
                                const i = this._dateAdapter.getYear(e),
                                    r = this._dateAdapter.getMonth(e),
                                    s = this._dateAdapter.getDate(e);
                                return new Date(i, r, s).getTime()
                            }
                            return null
                        }
                        _isRtl() {
                            return this._dir && "rtl" === this._dir.value
                        }
                        _setRanges(e) {
                            e instanceof hi ? (this._rangeStart = this._getCellCompareValue(e.start), this._rangeEnd = this._getCellCompareValue(e.end), this._isRange = !0) : (this._rangeStart = this._rangeEnd = this._getCellCompareValue(e), this._isRange = !1), this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart), this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd)
                        }
                        _canSelect(e) {
                            return !this.dateFilter || this.dateFilter(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge), u(ra, 8), u(kn, 8), u(Mt, 8), u(vm, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-month-view"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(uc, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._matCalendarBody = r.first)
                            }
                        },
                        inputs: {
                            activeDate: "activeDate",
                            selected: "selected",
                            minDate: "minDate",
                            maxDate: "maxDate",
                            dateFilter: "dateFilter",
                            dateClass: "dateClass",
                            comparisonStart: "comparisonStart",
                            comparisonEnd: "comparisonEnd"
                        },
                        outputs: {
                            selectedChange: "selectedChange",
                            _userSelection: "_userSelection",
                            activeDateChange: "activeDateChange"
                        },
                        exportAs: ["matMonthView"],
                        features: [ze],
                        decls: 7,
                        vars: 13,
                        consts: [
                            ["role", "grid", 1, "mat-calendar-table"],
                            [1, "mat-calendar-table-header"],
                            ["scope", "col", 4, "ngFor", "ngForOf"],
                            ["aria-hidden", "true", "colspan", "7", 1, "mat-calendar-table-header-divider"],
                            ["mat-calendar-body", "", 3, "label", "rows", "todayValue", "startValue", "endValue", "comparisonStart", "comparisonEnd", "previewStart", "previewEnd", "isRange", "labelMinRequiredCells", "activeCell", "selectedValueChange", "activeDateChange", "previewChange", "keyup", "keydown"],
                            ["scope", "col"],
                            [1, "cdk-visually-hidden"],
                            ["aria-hidden", "true"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "table", 0)(1, "thead", 1)(2, "tr"), b(3, bae, 5, 2, "th", 2), g(), f(4, "tr"), E(5, "th", 3), g()(), f(6, "tbody", 4), T("selectedValueChange", function(s) {
                                return i._dateSelected(s)
                            })("activeDateChange", function(s) {
                                return i._updateActiveDate(s)
                            })("previewChange", function(s) {
                                return i._previewChanged(s)
                            })("keyup", function(s) {
                                return i._handleCalendarBodyKeyup(s)
                            })("keydown", function(s) {
                                return i._handleCalendarBodyKeydown(s)
                            }), g()()), 2 & e && (p(3), y("ngForOf", i._weekdays), p(3), y("label", i._monthLabel)("rows", i._weeks)("todayValue", i._todayDate)("startValue", i._rangeStart)("endValue", i._rangeEnd)("comparisonStart", i._comparisonRangeStart)("comparisonEnd", i._comparisonRangeEnd)("previewStart", i._previewStart)("previewEnd", i._previewEnd)("isRange", i._isRange)("labelMinRequiredCells", 3)("activeCell", i._dateAdapter.getDate(i.activeDate) - 1))
                        },
                        dependencies: [Dn, uc],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                YO = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._changeDetectorRef = e, this._dateAdapter = i, this._dir = r, this._rerenderSubscription = Re.EMPTY, this.selectedChange = new V, this.yearSelected = new V, this.activeDateChange = new V, this._activeDate = this._dateAdapter.today()
                        }
                        get activeDate() {
                            return this._activeDate
                        }
                        set activeDate(e) {
                            let i = this._activeDate;
                            const r = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)) || this._dateAdapter.today();
                            this._activeDate = this._dateAdapter.clampDate(r, this.minDate, this.maxDate), QO(this._dateAdapter, i, this._activeDate, this.minDate, this.maxDate) || this._init()
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e instanceof hi ? e : this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)), this._setSelectedYear(e)
                        }
                        get minDate() {
                            return this._minDate
                        }
                        set minDate(e) {
                            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get maxDate() {
                            return this._maxDate
                        }
                        set maxDate(e) {
                            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        ngAfterContentInit() {
                            this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(pt(null)).subscribe(() => this._init())
                        }
                        ngOnDestroy() {
                            this._rerenderSubscription.unsubscribe()
                        }
                        _init() {
                            this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
                            const i = this._dateAdapter.getYear(this._activeDate) - xu(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
                            this._years = [];
                            for (let r = 0, s = []; r < 24; r++) s.push(i + r), 4 == s.length && (this._years.push(s.map(o => this._createCellForYear(o))), s = []);
                            this._changeDetectorRef.markForCheck()
                        }
                        _yearSelected(e) {
                            const i = e.value,
                                r = this._dateAdapter.createDate(i, 0, 1),
                                s = this._getDateFromYear(i);
                            this.yearSelected.emit(r), this.selectedChange.emit(s)
                        }
                        _updateActiveDate(e) {
                            const r = this._activeDate;
                            this.activeDate = this._getDateFromYear(e.value), this._dateAdapter.compareDate(r, this.activeDate) && this.activeDateChange.emit(this.activeDate)
                        }
                        _handleCalendarBodyKeydown(e) {
                            const i = this._activeDate,
                                r = this._isRtl();
                            switch (e.keyCode) {
                                case 37:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, r ? 1 : -1);
                                    break;
                                case 39:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, r ? -1 : 1);
                                    break;
                                case 38:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -4);
                                    break;
                                case 40:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, 4);
                                    break;
                                case 36:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -xu(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));
                                    break;
                                case 35:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, 24 - xu(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);
                                    break;
                                case 33:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, e.altKey ? -240 : -24);
                                    break;
                                case 34:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, e.altKey ? 240 : 24);
                                    break;
                                case 13:
                                case 32:
                                    this._selectionKeyPressed = !0;
                                    break;
                                default:
                                    return
                            }
                            this._dateAdapter.compareDate(i, this.activeDate) && this.activeDateChange.emit(this.activeDate), this._focusActiveCellAfterViewChecked(), e.preventDefault()
                        }
                        _handleCalendarBodyKeyup(e) {
                            (32 === e.keyCode || 13 === e.keyCode) && (this._selectionKeyPressed && this._yearSelected({
                                value: this._dateAdapter.getYear(this._activeDate),
                                event: e
                            }), this._selectionKeyPressed = !1)
                        }
                        _getActiveCell() {
                            return xu(this._dateAdapter, this.activeDate, this.minDate, this.maxDate)
                        }
                        _focusActiveCell() {
                            this._matCalendarBody._focusActiveCell()
                        }
                        _focusActiveCellAfterViewChecked() {
                            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()
                        }
                        _getDateFromYear(e) {
                            const i = this._dateAdapter.getMonth(this.activeDate),
                                r = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(e, i, 1));
                            return this._dateAdapter.createDate(e, i, Math.min(this._dateAdapter.getDate(this.activeDate), r))
                        }
                        _createCellForYear(e) {
                            const i = this._dateAdapter.createDate(e, 0, 1),
                                r = this._dateAdapter.getYearName(i),
                                s = this.dateClass ? this.dateClass(i, "multi-year") : void 0;
                            return new Qw(e, r, r, this._shouldEnableYear(e), s)
                        }
                        _shouldEnableYear(e) {
                            if (null == e || this.maxDate && e > this._dateAdapter.getYear(this.maxDate) || this.minDate && e < this._dateAdapter.getYear(this.minDate)) return !1;
                            if (!this.dateFilter) return !0;
                            for (let r = this._dateAdapter.createDate(e, 0, 1); this._dateAdapter.getYear(r) == e; r = this._dateAdapter.addCalendarDays(r, 1))
                                if (this.dateFilter(r)) return !0;
                            return !1
                        }
                        _isRtl() {
                            return this._dir && "rtl" === this._dir.value
                        }
                        _setSelectedYear(e) {
                            if (this._selectedYear = null, e instanceof hi) {
                                const i = e.start || e.end;
                                i && (this._selectedYear = this._dateAdapter.getYear(i))
                            } else e && (this._selectedYear = this._dateAdapter.getYear(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge), u(kn, 8), u(Mt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-multi-year-view"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(uc, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._matCalendarBody = r.first)
                            }
                        },
                        inputs: {
                            activeDate: "activeDate",
                            selected: "selected",
                            minDate: "minDate",
                            maxDate: "maxDate",
                            dateFilter: "dateFilter",
                            dateClass: "dateClass"
                        },
                        outputs: {
                            selectedChange: "selectedChange",
                            yearSelected: "yearSelected",
                            activeDateChange: "activeDateChange"
                        },
                        exportAs: ["matMultiYearView"],
                        decls: 5,
                        vars: 7,
                        consts: [
                            ["role", "grid", 1, "mat-calendar-table"],
                            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
                            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
                            ["mat-calendar-body", "", 3, "rows", "todayValue", "startValue", "endValue", "numCols", "cellAspectRatio", "activeCell", "selectedValueChange", "activeDateChange", "keyup", "keydown"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "table", 0)(1, "thead", 1)(2, "tr"), E(3, "th", 2), g()(), f(4, "tbody", 3), T("selectedValueChange", function(s) {
                                return i._yearSelected(s)
                            })("activeDateChange", function(s) {
                                return i._updateActiveDate(s)
                            })("keyup", function(s) {
                                return i._handleCalendarBodyKeyup(s)
                            })("keydown", function(s) {
                                return i._handleCalendarBodyKeydown(s)
                            }), g()()), 2 & e && (p(4), y("rows", i._years)("todayValue", i._todayYear)("startValue", i._selectedYear)("endValue", i._selectedYear)("numCols", 4)("cellAspectRatio", 4 / 7)("activeCell", i._getActiveCell()))
                        },
                        dependencies: [uc],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();

            function QO(t, n, e, i, r) {
                const s = t.getYear(n),
                    o = t.getYear(e),
                    a = KO(t, i, r);
                return Math.floor((s - a) / 24) === Math.floor((o - a) / 24)
            }

            function xu(t, n, e, i) {
                return function Lae(t, n) {
                    return (t % n + n) % n
                }(t.getYear(n) - KO(t, e, i), 24)
            }

            function KO(t, n, e) {
                let i = 0;
                return e ? i = t.getYear(e) - 24 + 1 : n && (i = t.getYear(n)), i
            }
            let ZO = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._changeDetectorRef = e, this._dateFormats = i, this._dateAdapter = r, this._dir = s, this._rerenderSubscription = Re.EMPTY, this.selectedChange = new V, this.monthSelected = new V, this.activeDateChange = new V, this._activeDate = this._dateAdapter.today()
                        }
                        get activeDate() {
                            return this._activeDate
                        }
                        set activeDate(e) {
                            let i = this._activeDate;
                            const r = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)) || this._dateAdapter.today();
                            this._activeDate = this._dateAdapter.clampDate(r, this.minDate, this.maxDate), this._dateAdapter.getYear(i) !== this._dateAdapter.getYear(this._activeDate) && this._init()
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e instanceof hi ? e : this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)), this._setSelectedMonth(e)
                        }
                        get minDate() {
                            return this._minDate
                        }
                        set minDate(e) {
                            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get maxDate() {
                            return this._maxDate
                        }
                        set maxDate(e) {
                            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        ngAfterContentInit() {
                            this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(pt(null)).subscribe(() => this._init())
                        }
                        ngOnDestroy() {
                            this._rerenderSubscription.unsubscribe()
                        }
                        _monthSelected(e) {
                            const i = e.value,
                                r = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), i, 1);
                            this.monthSelected.emit(r);
                            const s = this._getDateFromMonth(i);
                            this.selectedChange.emit(s)
                        }
                        _updateActiveDate(e) {
                            const r = this._activeDate;
                            this.activeDate = this._getDateFromMonth(e.value), this._dateAdapter.compareDate(r, this.activeDate) && this.activeDateChange.emit(this.activeDate)
                        }
                        _handleCalendarBodyKeydown(e) {
                            const i = this._activeDate,
                                r = this._isRtl();
                            switch (e.keyCode) {
                                case 37:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, r ? 1 : -1);
                                    break;
                                case 39:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, r ? -1 : 1);
                                    break;
                                case 38:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);
                                    break;
                                case 40:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);
                                    break;
                                case 36:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));
                                    break;
                                case 35:
                                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));
                                    break;
                                case 33:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, e.altKey ? -10 : -1);
                                    break;
                                case 34:
                                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, e.altKey ? 10 : 1);
                                    break;
                                case 13:
                                case 32:
                                    this._selectionKeyPressed = !0;
                                    break;
                                default:
                                    return
                            }
                            this._dateAdapter.compareDate(i, this.activeDate) && (this.activeDateChange.emit(this.activeDate), this._focusActiveCellAfterViewChecked()), e.preventDefault()
                        }
                        _handleCalendarBodyKeyup(e) {
                            (32 === e.keyCode || 13 === e.keyCode) && (this._selectionKeyPressed && this._monthSelected({
                                value: this._dateAdapter.getMonth(this._activeDate),
                                event: e
                            }), this._selectionKeyPressed = !1)
                        }
                        _init() {
                            this._setSelectedMonth(this.selected), this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today()), this._yearLabel = this._dateAdapter.getYearName(this.activeDate);
                            let e = this._dateAdapter.getMonthNames("short");
                            this._months = [
                                [0, 1, 2, 3],
                                [4, 5, 6, 7],
                                [8, 9, 10, 11]
                            ].map(i => i.map(r => this._createCellForMonth(r, e[r]))), this._changeDetectorRef.markForCheck()
                        }
                        _focusActiveCell() {
                            this._matCalendarBody._focusActiveCell()
                        }
                        _focusActiveCellAfterViewChecked() {
                            this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()
                        }
                        _getMonthInCurrentYear(e) {
                            return e && this._dateAdapter.getYear(e) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(e) : null
                        }
                        _getDateFromMonth(e) {
                            const i = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), e, 1),
                                r = this._dateAdapter.getNumDaysInMonth(i);
                            return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), e, Math.min(this._dateAdapter.getDate(this.activeDate), r))
                        }
                        _createCellForMonth(e, i) {
                            const r = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), e, 1),
                                s = this._dateAdapter.format(r, this._dateFormats.display.monthYearA11yLabel),
                                o = this.dateClass ? this.dateClass(r, "year") : void 0;
                            return new Qw(e, i.toLocaleUpperCase(), s, this._shouldEnableMonth(e), o)
                        }
                        _shouldEnableMonth(e) {
                            const i = this._dateAdapter.getYear(this.activeDate);
                            if (null == e || this._isYearAndMonthAfterMaxDate(i, e) || this._isYearAndMonthBeforeMinDate(i, e)) return !1;
                            if (!this.dateFilter) return !0;
                            for (let s = this._dateAdapter.createDate(i, e, 1); this._dateAdapter.getMonth(s) == e; s = this._dateAdapter.addCalendarDays(s, 1))
                                if (this.dateFilter(s)) return !0;
                            return !1
                        }
                        _isYearAndMonthAfterMaxDate(e, i) {
                            if (this.maxDate) {
                                const r = this._dateAdapter.getYear(this.maxDate),
                                    s = this._dateAdapter.getMonth(this.maxDate);
                                return e > r || e === r && i > s
                            }
                            return !1
                        }
                        _isYearAndMonthBeforeMinDate(e, i) {
                            if (this.minDate) {
                                const r = this._dateAdapter.getYear(this.minDate),
                                    s = this._dateAdapter.getMonth(this.minDate);
                                return e < r || e === r && i < s
                            }
                            return !1
                        }
                        _isRtl() {
                            return this._dir && "rtl" === this._dir.value
                        }
                        _setSelectedMonth(e) {
                            this._selectedMonth = e instanceof hi ? this._getMonthInCurrentYear(e.start) || this._getMonthInCurrentYear(e.end) : this._getMonthInCurrentYear(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge), u(ra, 8), u(kn, 8), u(Mt, 8))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-year-view"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(uc, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._matCalendarBody = r.first)
                            }
                        },
                        inputs: {
                            activeDate: "activeDate",
                            selected: "selected",
                            minDate: "minDate",
                            maxDate: "maxDate",
                            dateFilter: "dateFilter",
                            dateClass: "dateClass"
                        },
                        outputs: {
                            selectedChange: "selectedChange",
                            monthSelected: "monthSelected",
                            activeDateChange: "activeDateChange"
                        },
                        exportAs: ["matYearView"],
                        decls: 5,
                        vars: 9,
                        consts: [
                            ["role", "grid", 1, "mat-calendar-table"],
                            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
                            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
                            ["mat-calendar-body", "", 3, "label", "rows", "todayValue", "startValue", "endValue", "labelMinRequiredCells", "numCols", "cellAspectRatio", "activeCell", "selectedValueChange", "activeDateChange", "keyup", "keydown"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "table", 0)(1, "thead", 1)(2, "tr"), E(3, "th", 2), g()(), f(4, "tbody", 3), T("selectedValueChange", function(s) {
                                return i._monthSelected(s)
                            })("activeDateChange", function(s) {
                                return i._updateActiveDate(s)
                            })("keyup", function(s) {
                                return i._handleCalendarBodyKeyup(s)
                            })("keydown", function(s) {
                                return i._handleCalendarBodyKeydown(s)
                            }), g()()), 2 & e && (p(4), y("label", i._yearLabel)("rows", i._months)("todayValue", i._todayMonth)("startValue", i._selectedMonth)("endValue", i._selectedMonth)("labelMinRequiredCells", 2)("numCols", 4)("cellAspectRatio", 4 / 7)("activeCell", i._dateAdapter.getMonth(i.activeDate)))
                        },
                        dependencies: [uc],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Nae = 0,
                Bae = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._intl = e, this.calendar = i, this._dateAdapter = r, this._dateFormats = s, this._buttonDescriptionId = "mat-calendar-button-" + Nae++, this.calendar.stateChanges.subscribe(() => o.markForCheck())
                        }
                        get periodButtonText() {
                            if ("month" == this.calendar.currentView) return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();
                            if ("year" == this.calendar.currentView) return this._dateAdapter.getYearName(this.calendar.activeDate);
                            const i = this._dateAdapter.getYear(this.calendar.activeDate) - xu(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate),
                                r = i + 24 - 1,
                                s = this._dateAdapter.getYearName(this._dateAdapter.createDate(i, 0, 1)),
                                o = this._dateAdapter.getYearName(this._dateAdapter.createDate(r, 0, 1));
                            return this._intl.formatYearRange(s, o)
                        }
                        get periodButtonLabel() {
                            return "month" == this.calendar.currentView ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel
                        }
                        get prevButtonLabel() {
                            return {
                                month: this._intl.prevMonthLabel,
                                year: this._intl.prevYearLabel,
                                "multi-year": this._intl.prevMultiYearLabel
                            }[this.calendar.currentView]
                        }
                        get nextButtonLabel() {
                            return {
                                month: this._intl.nextMonthLabel,
                                year: this._intl.nextYearLabel,
                                "multi-year": this._intl.nextMultiYearLabel
                            }[this.calendar.currentView]
                        }
                        currentPeriodClicked() {
                            this.calendar.currentView = "month" == this.calendar.currentView ? "multi-year" : "month"
                        }
                        previousClicked() {
                            this.calendar.activeDate = "month" == this.calendar.currentView ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, "year" == this.calendar.currentView ? -1 : -24)
                        }
                        nextClicked() {
                            this.calendar.activeDate = "month" == this.calendar.currentView ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, "year" == this.calendar.currentView ? 1 : 24)
                        }
                        previousEnabled() {
                            return !this.calendar.minDate || !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
                        }
                        nextEnabled() {
                            return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
                        }
                        _isSameView(e, i) {
                            return "month" == this.calendar.currentView ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i) && this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(i) : "year" == this.calendar.currentView ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i) : QO(this._dateAdapter, e, i, this.calendar.minDate, this.calendar.maxDate)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Cu), u(Ve(() => tC)), u(kn, 8), u(ra, 8), u(ge))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-calendar-header"]
                        ],
                        exportAs: ["matCalendarHeader"],
                        ngContentSelectors: vae,
                        decls: 11,
                        vars: 10,
                        consts: [
                            [1, "mat-calendar-header"],
                            [1, "mat-calendar-controls"],
                            ["mat-button", "", "type", "button", "aria-live", "polite", 1, "mat-calendar-period-button", 3, "click"],
                            ["viewBox", "0 0 10 5", "focusable", "false", 1, "mat-calendar-arrow"],
                            ["points", "0,0 5,5 10,0"],
                            [1, "mat-calendar-spacer"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-calendar-previous-button", 3, "disabled", "click"],
                            ["mat-icon-button", "", "type", "button", 1, "mat-calendar-next-button", 3, "disabled", "click"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(), f(0, "div", 0)(1, "div", 1)(2, "button", 2), T("click", function() {
                                return i.currentPeriodClicked()
                            }), f(3, "span"), w(4), g(), ni(), f(5, "svg", 3), E(6, "polygon", 4), g()(), Oa(), E(7, "div", 5), me(8), f(9, "button", 6), T("click", function() {
                                return i.previousClicked()
                            }), g(), f(10, "button", 7), T("click", function() {
                                return i.nextClicked()
                            }), g()()()), 2 & e && (p(2), q("aria-label", i.periodButtonLabel)("aria-describedby", i._buttonDescriptionId), p(1), q("id", i._buttonDescriptionId), p(1), ve(i.periodButtonText), p(1), re("mat-calendar-invert", "month" !== i.calendar.currentView), p(4), y("disabled", !i.previousEnabled()), q("aria-label", i.prevButtonLabel), p(1), y("disabled", !i.nextEnabled()), q("aria-label", i.nextButtonLabel))
                        },
                        dependencies: [Xt],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                tC = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this._dateAdapter = i, this._dateFormats = r, this._changeDetectorRef = s, this._moveFocusOnNextTick = !1, this.startView = "month", this.selectedChange = new V, this.yearSelected = new V, this.monthSelected = new V, this.viewChanged = new V(!0), this._userSelection = new V, this.stateChanges = new H, this._intlChanges = e.changes.subscribe(() => {
                                s.markForCheck(), this.stateChanges.next()
                            })
                        }
                        get startAt() {
                            return this._startAt
                        }
                        set startAt(e) {
                            this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e instanceof hi ? e : this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get minDate() {
                            return this._minDate
                        }
                        set minDate(e) {
                            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get maxDate() {
                            return this._maxDate
                        }
                        set maxDate(e) {
                            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get activeDate() {
                            return this._clampedActiveDate
                        }
                        set activeDate(e) {
                            this._clampedActiveDate = this._dateAdapter.clampDate(e, this.minDate, this.maxDate), this.stateChanges.next(), this._changeDetectorRef.markForCheck()
                        }
                        get currentView() {
                            return this._currentView
                        }
                        set currentView(e) {
                            const i = this._currentView !== e ? e : null;
                            this._currentView = e, this._moveFocusOnNextTick = !0, this._changeDetectorRef.markForCheck(), i && this.viewChanged.emit(i)
                        }
                        ngAfterContentInit() {
                            this._calendarHeaderPortal = new eo(this.headerComponent || Bae), this.activeDate = this.startAt || this._dateAdapter.today(), this._currentView = this.startView
                        }
                        ngAfterViewChecked() {
                            this._moveFocusOnNextTick && (this._moveFocusOnNextTick = !1, this.focusActiveCell())
                        }
                        ngOnDestroy() {
                            this._intlChanges.unsubscribe(), this.stateChanges.complete()
                        }
                        ngOnChanges(e) {
                            const i = e.minDate && !this._dateAdapter.sameDate(e.minDate.previousValue, e.minDate.currentValue) ? e.minDate : void 0,
                                r = e.maxDate && !this._dateAdapter.sameDate(e.maxDate.previousValue, e.maxDate.currentValue) ? e.maxDate : void 0,
                                s = i || r || e.dateFilter;
                            if (s && !s.firstChange) {
                                const o = this._getCurrentViewComponent();
                                o && (this._changeDetectorRef.detectChanges(), o._init())
                            }
                            this.stateChanges.next()
                        }
                        focusActiveCell() {
                            this._getCurrentViewComponent()._focusActiveCell(!1)
                        }
                        updateTodaysDate() {
                            this._getCurrentViewComponent()._init()
                        }
                        _dateSelected(e) {
                            const i = e.value;
                            (this.selected instanceof hi || i && !this._dateAdapter.sameDate(i, this.selected)) && this.selectedChange.emit(i), this._userSelection.emit(e)
                        }
                        _yearSelectedInMultiYearView(e) {
                            this.yearSelected.emit(e)
                        }
                        _monthSelectedInYearView(e) {
                            this.monthSelected.emit(e)
                        }
                        _goToDateInView(e, i) {
                            this.activeDate = e, this.currentView = i
                        }
                        _getCurrentViewComponent() {
                            return this.monthView || this.yearView || this.multiYearView
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Cu), u(kn, 8), u(ra, 8), u(ge))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-calendar"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && (J(qO, 5), J(ZO, 5), J(YO, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i.monthView = r.first), O(r = P()) && (i.yearView = r.first), O(r = P()) && (i.multiYearView = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-calendar"],
                        inputs: {
                            headerComponent: "headerComponent",
                            startAt: "startAt",
                            startView: "startView",
                            selected: "selected",
                            minDate: "minDate",
                            maxDate: "maxDate",
                            dateFilter: "dateFilter",
                            dateClass: "dateClass",
                            comparisonStart: "comparisonStart",
                            comparisonEnd: "comparisonEnd"
                        },
                        outputs: {
                            selectedChange: "selectedChange",
                            yearSelected: "yearSelected",
                            monthSelected: "monthSelected",
                            viewChanged: "viewChanged",
                            _userSelection: "_userSelection"
                        },
                        exportAs: ["matCalendar"],
                        features: [Q([WO]), ze],
                        decls: 5,
                        vars: 5,
                        consts: [
                            [3, "cdkPortalOutlet"],
                            ["cdkMonitorSubtreeFocus", "", "tabindex", "-1", 1, "mat-calendar-content", 3, "ngSwitch"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "comparisonStart", "comparisonEnd", "activeDateChange", "_userSelection", 4, "ngSwitchCase"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "monthSelected", "selectedChange", 4, "ngSwitchCase"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "yearSelected", "selectedChange", 4, "ngSwitchCase"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "comparisonStart", "comparisonEnd", "activeDateChange", "_userSelection"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "monthSelected", "selectedChange"],
                            [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "yearSelected", "selectedChange"]
                        ],
                        template: function(e, i) {
                            1 & e && (b(0, wae, 0, 0, "ng-template", 0), f(1, "div", 1), b(2, Cae, 1, 8, "mat-month-view", 2), b(3, xae, 1, 6, "mat-year-view", 3), b(4, Dae, 1, 6, "mat-multi-year-view", 4), g()), 2 & e && (y("cdkPortalOutlet", i._calendarHeaderPortal), p(1), y("ngSwitch", i.currentView), p(1), y("ngSwitchCase", "month"), p(1), y("ngSwitchCase", "year"), p(1), y("ngSwitchCase", "multi-year"))
                        },
                        dependencies: [ps, Yo, LE, Ki, qO, ZO, YO],
                        styles: ['.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();
            const XO = {
                transformPanel: Nt("transformPanel", [Ue("void => enter-dropdown", Ye("120ms cubic-bezier(0, 0, 0.2, 1)", oa([ee({
                    opacity: 0,
                    transform: "scale(1, 0.8)"
                }), ee({
                    opacity: 1,
                    transform: "scale(1, 1)"
                })]))), Ue("void => enter-dialog", Ye("150ms cubic-bezier(0, 0, 0.2, 1)", oa([ee({
                    opacity: 0,
                    transform: "scale(0.7)"
                }), ee({
                    transform: "none",
                    opacity: 1
                })]))), Ue("* => void", Ye("100ms linear", ee({
                    opacity: 0
                })))]),
                fadeInCalendar: Nt("fadeInCalendar", [Oe("void", ee({
                    opacity: 0
                })), Oe("enter", ee({
                    opacity: 1
                })), Ue("void => *", Ye("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)"))])
            };
            let Vae = 0;
            const JO = new R("mat-datepicker-scroll-strategy"),
                $ae = {
                    provide: JO,
                    deps: [vn],
                    useFactory: function Hae(t) {
                        return () => t.scrollStrategies.reposition()
                    }
                },
                jae = Zi(class {
                    constructor(t) {
                        this._elementRef = t
                    }
                });
            let zae = (() => {
                    class t extends jae {
                        constructor(e, i, r, s, o, a) {
                            super(e), this._changeDetectorRef = i, this._globalModel = r, this._dateAdapter = s, this._rangeSelectionStrategy = o, this._subscriptions = new Re, this._animationDone = new H, this._actionsPortal = null, this._closeButtonText = a.closeCalendarLabel
                        }
                        ngOnInit() {
                            this._animationState = this.datepicker.touchUi ? "enter-dialog" : "enter-dropdown"
                        }
                        ngAfterViewInit() {
                            this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {
                                this._changeDetectorRef.markForCheck()
                            })), this._calendar.focusActiveCell()
                        }
                        ngOnDestroy() {
                            this._subscriptions.unsubscribe(), this._animationDone.complete()
                        }
                        _handleUserSelection(e) {
                            const i = this._model.selection,
                                r = e.value,
                                s = i instanceof hi;
                            if (s && this._rangeSelectionStrategy) {
                                const o = this._rangeSelectionStrategy.selectionFinished(r, i, e.event);
                                this._model.updateSelection(o, this)
                            } else r && (s || !this._dateAdapter.sameDate(r, i)) && this._model.add(r);
                            (!this._model || this._model.isComplete()) && !this._actionsPortal && this.datepicker.close()
                        }
                        _startExitAnimation() {
                            this._animationState = "void", this._changeDetectorRef.markForCheck()
                        }
                        _getSelected() {
                            return this._model.selection
                        }
                        _applyPendingSelection() {
                            this._model !== this._globalModel && this._globalModel.updateSelection(this._model.selection, this)
                        }
                        _assignActions(e, i) {
                            this._model = e ? this._globalModel.clone() : this._globalModel, this._actionsPortal = e, i && this._changeDetectorRef.detectChanges()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(ge), u(Do), u(kn), u(vm, 8), u(Cu))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-datepicker-content"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(tC, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._calendar = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-datepicker-content"],
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            1 & e && qc("@transformPanel.done", function() {
                                return i._animationDone.next()
                            }), 2 & e && (ll("@transformPanel", i._animationState), re("mat-datepicker-content-touch", i.datepicker.touchUi))
                        },
                        inputs: {
                            color: "color"
                        },
                        exportAs: ["matDatepickerContent"],
                        features: [A],
                        decls: 5,
                        vars: 24,
                        consts: [
                            ["cdkTrapFocus", "", "role", "dialog", 1, "mat-datepicker-content-container"],
                            [3, "id", "ngClass", "startAt", "startView", "minDate", "maxDate", "dateFilter", "headerComponent", "selected", "dateClass", "comparisonStart", "comparisonEnd", "yearSelected", "monthSelected", "viewChanged", "_userSelection"],
                            [3, "cdkPortalOutlet"],
                            ["type", "button", "mat-raised-button", "", 1, "mat-datepicker-close-button", 3, "color", "focus", "blur", "click"]
                        ],
                        template: function(e, i) {
                            if (1 & e && (f(0, "div", 0)(1, "mat-calendar", 1), T("yearSelected", function(s) {
                                    return i.datepicker._selectYear(s)
                                })("monthSelected", function(s) {
                                    return i.datepicker._selectMonth(s)
                                })("viewChanged", function(s) {
                                    return i.datepicker._viewChanged(s)
                                })("_userSelection", function(s) {
                                    return i._handleUserSelection(s)
                                }), g(), b(2, Mae, 0, 0, "ng-template", 2), f(3, "button", 3), T("focus", function() {
                                    return i._closeButtonFocused = !0
                                })("blur", function() {
                                    return i._closeButtonFocused = !1
                                })("click", function() {
                                    return i.datepicker.close()
                                }), w(4), g()()), 2 & e) {
                                let r;
                                re("mat-datepicker-content-container-with-custom-header", i.datepicker.calendarHeaderComponent)("mat-datepicker-content-container-with-actions", i._actionsPortal), q("aria-modal", !0)("aria-labelledby", null !== (r = i._dialogLabelId) && void 0 !== r ? r : void 0), p(1), y("id", i.datepicker.id)("ngClass", i.datepicker.panelClass)("startAt", i.datepicker.startAt)("startView", i.datepicker.startView)("minDate", i.datepicker._getMinDate())("maxDate", i.datepicker._getMaxDate())("dateFilter", i.datepicker._getDateFilter())("headerComponent", i.datepicker.calendarHeaderComponent)("selected", i._getSelected())("dateClass", i.datepicker.dateClass)("comparisonStart", i.comparisonStart)("comparisonEnd", i.comparisonEnd)("@fadeInCalendar", "enter"), p(1), y("cdkPortalOutlet", i._actionsPortal), p(1), re("cdk-visually-hidden", !i._closeButtonFocused), y("color", i.color || "primary"), p(1), ve(i._closeButtonText)
                            }
                        },
                        dependencies: [gr, Xt, AG, Ki, tC],
                        styles: [".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}"],
                        encapsulation: 2,
                        data: {
                            animation: [XO.transformPanel, XO.fadeInCalendar]
                        },
                        changeDetection: 0
                    }), t
                })(),
                eP = (() => {
                    class t {
                        constructor(e, i, r, s, o, a, l) {
                            this._overlay = e, this._ngZone = i, this._viewContainerRef = r, this._dateAdapter = o, this._dir = a, this._model = l, this._inputStateChanges = Re.EMPTY, this._document = st(pe), this.startView = "month", this._touchUi = !1, this.xPosition = "start", this.yPosition = "below", this._restoreFocus = !0, this.yearSelected = new V, this.monthSelected = new V, this.viewChanged = new V(!0), this.openedStream = new V, this.closedStream = new V, this._opened = !1, this.id = "mat-datepicker-" + Vae++, this._focusedElementBeforeOpen = null, this._backdropHarnessClass = `${this.id}-backdrop`, this.stateChanges = new H, this._scrollStrategy = s
                        }
                        get startAt() {
                            return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null)
                        }
                        set startAt(e) {
                            this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))
                        }
                        get color() {
                            return this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : void 0)
                        }
                        set color(e) {
                            this._color = e
                        }
                        get touchUi() {
                            return this._touchUi
                        }
                        set touchUi(e) {
                            this._touchUi = G(e)
                        }
                        get disabled() {
                            return void 0 === this._disabled && this.datepickerInput ? this.datepickerInput.disabled : !!this._disabled
                        }
                        set disabled(e) {
                            const i = G(e);
                            i !== this._disabled && (this._disabled = i, this.stateChanges.next(void 0))
                        }
                        get restoreFocus() {
                            return this._restoreFocus
                        }
                        set restoreFocus(e) {
                            this._restoreFocus = G(e)
                        }
                        get panelClass() {
                            return this._panelClass
                        }
                        set panelClass(e) {
                            this._panelClass = function cG(t, n = /\s+/) {
                                const e = [];
                                if (null != t) {
                                    const i = Array.isArray(t) ? t : `${t}`.split(n);
                                    for (const r of i) {
                                        const s = `${r}`.trim();
                                        s && e.push(s)
                                    }
                                }
                                return e
                            }(e)
                        }
                        get opened() {
                            return this._opened
                        }
                        set opened(e) {
                            G(e) ? this.open() : this.close()
                        }
                        _getMinDate() {
                            return this.datepickerInput && this.datepickerInput.min
                        }
                        _getMaxDate() {
                            return this.datepickerInput && this.datepickerInput.max
                        }
                        _getDateFilter() {
                            return this.datepickerInput && this.datepickerInput.dateFilter
                        }
                        ngOnChanges(e) {
                            const i = e.xPosition || e.yPosition;
                            if (i && !i.firstChange && this._overlayRef) {
                                const r = this._overlayRef.getConfig().positionStrategy;
                                r instanceof YE && (this._setConnectedPositions(r), this.opened && this._overlayRef.updatePosition())
                            }
                            this.stateChanges.next(void 0)
                        }
                        ngOnDestroy() {
                            this._destroyOverlay(), this.close(), this._inputStateChanges.unsubscribe(), this.stateChanges.complete()
                        }
                        select(e) {
                            this._model.add(e)
                        }
                        _selectYear(e) {
                            this.yearSelected.emit(e)
                        }
                        _selectMonth(e) {
                            this.monthSelected.emit(e)
                        }
                        _viewChanged(e) {
                            this.viewChanged.emit(e)
                        }
                        registerInput(e) {
                            return this._inputStateChanges.unsubscribe(), this.datepickerInput = e, this._inputStateChanges = e.stateChanges.subscribe(() => this.stateChanges.next(void 0)), this._model
                        }
                        registerActions(e) {
                            this._actionsPortal = e, this._componentRef ? .instance._assignActions(e, !0)
                        }
                        removeActions(e) {
                            e === this._actionsPortal && (this._actionsPortal = null, this._componentRef ? .instance._assignActions(null, !0))
                        }
                        open() {
                            this._opened || this.disabled || (this._focusedElementBeforeOpen = Al(), this._openOverlay(), this._opened = !0, this.openedStream.emit())
                        }
                        close() {
                            if (!this._opened) return;
                            const e = this._restoreFocus && this._focusedElementBeforeOpen && "function" == typeof this._focusedElementBeforeOpen.focus,
                                i = () => {
                                    this._opened && (this._opened = !1, this.closedStream.emit())
                                };
                            if (this._componentRef) {
                                const {
                                    instance: r,
                                    location: s
                                } = this._componentRef;
                                r._startExitAnimation(), r._animationDone.pipe(Fe(1)).subscribe(() => {
                                    const o = this._document.activeElement;
                                    e && (!o || o === this._document.activeElement || s.nativeElement.contains(o)) && this._focusedElementBeforeOpen.focus(), this._focusedElementBeforeOpen = null, this._destroyOverlay()
                                })
                            }
                            e ? setTimeout(i) : i()
                        }
                        _applyPendingSelection() {
                            this._componentRef ? .instance ? ._applyPendingSelection()
                        }
                        _forwardContentValues(e) {
                            e.datepicker = this, e.color = this.color, e._dialogLabelId = this.datepickerInput.getOverlayLabelId(), e._assignActions(this._actionsPortal, !1)
                        }
                        _openOverlay() {
                            this._destroyOverlay();
                            const e = this.touchUi,
                                i = new eo(zae, this._viewContainerRef),
                                r = this._overlayRef = this._overlay.create(new na({
                                    positionStrategy: e ? this._getDialogStrategy() : this._getDropdownStrategy(),
                                    hasBackdrop: !0,
                                    backdropClass: [e ? "cdk-overlay-dark-backdrop" : "mat-overlay-transparent-backdrop", this._backdropHarnessClass],
                                    direction: this._dir,
                                    scrollStrategy: e ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),
                                    panelClass: "mat-datepicker-" + (e ? "dialog" : "popup")
                                }));
                            this._getCloseStream(r).subscribe(s => {
                                s && s.preventDefault(), this.close()
                            }), r.keydownEvents().subscribe(s => {
                                const o = s.keyCode;
                                (38 === o || 40 === o || 37 === o || 39 === o || 33 === o || 34 === o) && s.preventDefault()
                            }), this._componentRef = r.attach(i), this._forwardContentValues(this._componentRef.instance), e || this._ngZone.onStable.pipe(Fe(1)).subscribe(() => r.updatePosition())
                        }
                        _destroyOverlay() {
                            this._overlayRef && (this._overlayRef.dispose(), this._overlayRef = this._componentRef = null)
                        }
                        _getDialogStrategy() {
                            return this._overlay.position().global().centerHorizontally().centerVertically()
                        }
                        _getDropdownStrategy() {
                            const e = this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn(".mat-datepicker-content").withFlexibleDimensions(!1).withViewportMargin(8).withLockedPosition();
                            return this._setConnectedPositions(e)
                        }
                        _setConnectedPositions(e) {
                            const i = "end" === this.xPosition ? "end" : "start",
                                r = "start" === i ? "end" : "start",
                                s = "above" === this.yPosition ? "bottom" : "top",
                                o = "top" === s ? "bottom" : "top";
                            return e.withPositions([{
                                originX: i,
                                originY: o,
                                overlayX: i,
                                overlayY: s
                            }, {
                                originX: i,
                                originY: s,
                                overlayX: i,
                                overlayY: o
                            }, {
                                originX: r,
                                originY: o,
                                overlayX: r,
                                overlayY: s
                            }, {
                                originX: r,
                                originY: s,
                                overlayX: r,
                                overlayY: o
                            }])
                        }
                        _getCloseStream(e) {
                            return tt(e.backdropClick(), e.detachments(), e.keydownEvents().pipe(Ie(i => 27 === i.keyCode && !$t(i) || this.datepickerInput && $t(i, "altKey") && 38 === i.keyCode)))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(vn), u(ce), u(Je), u(JO), u(kn, 8), u(Mt, 8), u(Do))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            calendarHeaderComponent: "calendarHeaderComponent",
                            startAt: "startAt",
                            startView: "startView",
                            color: "color",
                            touchUi: "touchUi",
                            disabled: "disabled",
                            xPosition: "xPosition",
                            yPosition: "yPosition",
                            restoreFocus: "restoreFocus",
                            dateClass: "dateClass",
                            panelClass: "panelClass",
                            opened: "opened"
                        },
                        outputs: {
                            yearSelected: "yearSelected",
                            monthSelected: "monthSelected",
                            viewChanged: "viewChanged",
                            openedStream: "opened",
                            closedStream: "closed"
                        },
                        features: [ze]
                    }), t
                })(),
                Uae = (() => {
                    class t extends eP {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-datepicker"]
                        ],
                        exportAs: ["matDatepicker"],
                        features: [Q([WO, {
                            provide: eP,
                            useExisting: t
                        }]), A],
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();
            class wm {
                constructor(n, e) {
                    this.target = n, this.targetElement = e, this.value = this.target.value
                }
            }
            let Gae = (() => {
                class t {
                    constructor(e, i, r) {
                        this._elementRef = e, this._dateAdapter = i, this._dateFormats = r, this.dateChange = new V, this.dateInput = new V, this.stateChanges = new H, this._onTouched = () => {}, this._validatorOnChange = () => {}, this._cvaOnChange = () => {}, this._valueChangesSubscription = Re.EMPTY, this._localeSubscription = Re.EMPTY, this._parseValidator = () => this._lastValueValid ? null : {
                            matDatepickerParse: {
                                text: this._elementRef.nativeElement.value
                            }
                        }, this._filterValidator = s => {
                            const o = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(s.value));
                            return !o || this._matchesFilter(o) ? null : {
                                matDatepickerFilter: !0
                            }
                        }, this._minValidator = s => {
                            const o = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(s.value)),
                                a = this._getMinDate();
                            return !a || !o || this._dateAdapter.compareDate(a, o) <= 0 ? null : {
                                matDatepickerMin: {
                                    min: a,
                                    actual: o
                                }
                            }
                        }, this._maxValidator = s => {
                            const o = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(s.value)),
                                a = this._getMaxDate();
                            return !a || !o || this._dateAdapter.compareDate(a, o) >= 0 ? null : {
                                matDatepickerMax: {
                                    max: a,
                                    actual: o
                                }
                            }
                        }, this._lastValueValid = !1, this._localeSubscription = i.localeChanges.subscribe(() => {
                            this._assignValueProgrammatically(this.value)
                        })
                    }
                    get value() {
                        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue
                    }
                    set value(e) {
                        this._assignValueProgrammatically(e)
                    }
                    get disabled() {
                        return !!this._disabled || this._parentDisabled()
                    }
                    set disabled(e) {
                        const i = G(e),
                            r = this._elementRef.nativeElement;
                        this._disabled !== i && (this._disabled = i, this.stateChanges.next(void 0)), i && this._isInitialized && r.blur && r.blur()
                    }
                    _getValidators() {
                        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]
                    }
                    _registerModel(e) {
                        this._model = e, this._valueChangesSubscription.unsubscribe(), this._pendingValue && this._assignValue(this._pendingValue), this._valueChangesSubscription = this._model.selectionChanged.subscribe(i => {
                            if (this._shouldHandleChangeEvent(i)) {
                                const r = this._getValueFromModel(i.selection);
                                this._lastValueValid = this._isValidValue(r), this._cvaOnChange(r), this._onTouched(), this._formatValue(r), this.dateInput.emit(new wm(this, this._elementRef.nativeElement)), this.dateChange.emit(new wm(this, this._elementRef.nativeElement))
                            }
                        })
                    }
                    ngAfterViewInit() {
                        this._isInitialized = !0
                    }
                    ngOnChanges(e) {
                        (function Wae(t, n) {
                            const e = Object.keys(t);
                            for (let i of e) {
                                const {
                                    previousValue: r,
                                    currentValue: s
                                } = t[i];
                                if (!n.isDateInstance(r) || !n.isDateInstance(s)) return !0;
                                if (!n.sameDate(r, s)) return !0
                            }
                            return !1
                        })(e, this._dateAdapter) && this.stateChanges.next(void 0)
                    }
                    ngOnDestroy() {
                        this._valueChangesSubscription.unsubscribe(), this._localeSubscription.unsubscribe(), this.stateChanges.complete()
                    }
                    registerOnValidatorChange(e) {
                        this._validatorOnChange = e
                    }
                    validate(e) {
                        return this._validator ? this._validator(e) : null
                    }
                    writeValue(e) {
                        this._assignValueProgrammatically(e)
                    }
                    registerOnChange(e) {
                        this._cvaOnChange = e
                    }
                    registerOnTouched(e) {
                        this._onTouched = e
                    }
                    setDisabledState(e) {
                        this.disabled = e
                    }
                    _onKeydown(e) {
                        e.altKey && 40 === e.keyCode && !this._elementRef.nativeElement.readOnly && (this._openPopup(), e.preventDefault())
                    }
                    _onInput(e) {
                        const i = this._lastValueValid;
                        let r = this._dateAdapter.parse(e, this._dateFormats.parse.dateInput);
                        this._lastValueValid = this._isValidValue(r), r = this._dateAdapter.getValidDateOrNull(r);
                        const s = !this._dateAdapter.sameDate(r, this.value);
                        !r || s ? this._cvaOnChange(r) : (e && !this.value && this._cvaOnChange(r), i !== this._lastValueValid && this._validatorOnChange()), s && (this._assignValue(r), this.dateInput.emit(new wm(this, this._elementRef.nativeElement)))
                    }
                    _onChange() {
                        this.dateChange.emit(new wm(this, this._elementRef.nativeElement))
                    }
                    _onBlur() {
                        this.value && this._formatValue(this.value), this._onTouched()
                    }
                    _formatValue(e) {
                        this._elementRef.nativeElement.value = null != e ? this._dateAdapter.format(e, this._dateFormats.display.dateInput) : ""
                    }
                    _assignValue(e) {
                        this._model ? (this._assignValueToModel(e), this._pendingValue = null) : this._pendingValue = e
                    }
                    _isValidValue(e) {
                        return !e || this._dateAdapter.isValid(e)
                    }
                    _parentDisabled() {
                        return !1
                    }
                    _assignValueProgrammatically(e) {
                        e = this._dateAdapter.deserialize(e), this._lastValueValid = this._isValidValue(e), e = this._dateAdapter.getValidDateOrNull(e), this._assignValue(e), this._formatValue(e)
                    }
                    _matchesFilter(e) {
                        const i = this._getDateFilter();
                        return !i || i(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(u(N), u(kn, 8), u(ra, 8))
                }, t.\u0275dir = M({
                    type: t,
                    inputs: {
                        value: "value",
                        disabled: "disabled"
                    },
                    outputs: {
                        dateChange: "dateChange",
                        dateInput: "dateInput"
                    },
                    features: [ze]
                }), t
            })();
            const qae = {
                    provide: hn,
                    useExisting: Ve(() => Cm),
                    multi: !0
                },
                Yae = {
                    provide: fn,
                    useExisting: Ve(() => Cm),
                    multi: !0
                };
            let Cm = (() => {
                    class t extends Gae {
                        constructor(e, i, r, s) {
                            super(e, i, r), this._formField = s, this._closedSubscription = Re.EMPTY, this._validator = jt.compose(super._getValidators())
                        }
                        set matDatepicker(e) {
                            e && (this._datepicker = e, this._closedSubscription = e.closedStream.subscribe(() => this._onTouched()), this._registerModel(e.registerInput(this)))
                        }
                        get min() {
                            return this._min
                        }
                        set min(e) {
                            const i = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e));
                            this._dateAdapter.sameDate(i, this._min) || (this._min = i, this._validatorOnChange())
                        }
                        get max() {
                            return this._max
                        }
                        set max(e) {
                            const i = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e));
                            this._dateAdapter.sameDate(i, this._max) || (this._max = i, this._validatorOnChange())
                        }
                        get dateFilter() {
                            return this._dateFilter
                        }
                        set dateFilter(e) {
                            const i = this._matchesFilter(this.value);
                            this._dateFilter = e, this._matchesFilter(this.value) !== i && this._validatorOnChange()
                        }
                        getConnectedOverlayOrigin() {
                            return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef
                        }
                        getOverlayLabelId() {
                            return this._formField ? this._formField.getLabelId() : this._elementRef.nativeElement.getAttribute("aria-labelledby")
                        }
                        getThemePalette() {
                            return this._formField ? this._formField.color : void 0
                        }
                        getStartValue() {
                            return this.value
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(), this._closedSubscription.unsubscribe()
                        }
                        _openPopup() {
                            this._datepicker && this._datepicker.open()
                        }
                        _getValueFromModel(e) {
                            return e
                        }
                        _assignValueToModel(e) {
                            this._model && this._model.updateSelection(e, this)
                        }
                        _getMinDate() {
                            return this._min
                        }
                        _getMaxDate() {
                            return this._max
                        }
                        _getDateFilter() {
                            return this._dateFilter
                        }
                        _shouldHandleChangeEvent(e) {
                            return e.source !== this
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(N), u(kn, 8), u(ra, 8), u(Hd, 8))
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["input", "matDatepicker", ""]
                        ],
                        hostAttrs: [1, "mat-datepicker-input"],
                        hostVars: 6,
                        hostBindings: function(e, i) {
                            1 & e && T("input", function(s) {
                                return i._onInput(s.target.value)
                            })("change", function() {
                                return i._onChange()
                            })("blur", function() {
                                return i._onBlur()
                            })("keydown", function(s) {
                                return i._onKeydown(s)
                            }), 2 & e && (xn("disabled", i.disabled), q("aria-haspopup", i._datepicker ? "dialog" : null)("aria-owns", (null == i._datepicker ? null : i._datepicker.opened) && i._datepicker.id || null)("min", i.min ? i._dateAdapter.toIso8601(i.min) : null)("max", i.max ? i._dateAdapter.toIso8601(i.max) : null)("data-mat-calendar", i._datepicker ? i._datepicker.id : null))
                        },
                        inputs: {
                            matDatepicker: "matDatepicker",
                            min: "min",
                            max: "max",
                            dateFilter: ["matDatepickerFilter", "dateFilter"]
                        },
                        exportAs: ["matDatepickerInput"],
                        features: [Q([qae, Yae, {
                            provide: hv,
                            useExisting: t
                        }]), A]
                    }), t
                })(),
                Qae = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["", "matDatepickerToggleIcon", ""]
                        ]
                    }), t
                })(),
                Kae = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._intl = e, this._changeDetectorRef = i, this._stateChanges = Re.EMPTY;
                            const s = Number(r);
                            this.tabIndex = s || 0 === s ? s : null
                        }
                        get disabled() {
                            return void 0 === this._disabled && this.datepicker ? this.datepicker.disabled : !!this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e)
                        }
                        ngOnChanges(e) {
                            e.datepicker && this._watchStateChanges()
                        }
                        ngOnDestroy() {
                            this._stateChanges.unsubscribe()
                        }
                        ngAfterContentInit() {
                            this._watchStateChanges()
                        }
                        _open(e) {
                            this.datepicker && !this.disabled && (this.datepicker.open(), e.stopPropagation())
                        }
                        _watchStateChanges() {
                            const e = this.datepicker ? this.datepicker.stateChanges : z(),
                                i = this.datepicker && this.datepicker.datepickerInput ? this.datepicker.datepickerInput.stateChanges : z(),
                                r = this.datepicker ? tt(this.datepicker.openedStream, this.datepicker.closedStream) : z();
                            this._stateChanges.unsubscribe(), this._stateChanges = tt(this._intl.changes, e, i, r).subscribe(() => this._changeDetectorRef.markForCheck())
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(Cu), u(ge), Qt("tabindex"))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-datepicker-toggle"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, Qae, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i._customIcon = s.first)
                            }
                        },
                        viewQuery: function(e, i) {
                            if (1 & e && J(Sae, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._button = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-datepicker-toggle"],
                        hostVars: 8,
                        hostBindings: function(e, i) {
                            1 & e && T("click", function(s) {
                                return i._open(s)
                            }), 2 & e && (q("tabindex", null)("data-mat-calendar", i.datepicker ? i.datepicker.id : null), re("mat-datepicker-toggle-active", i.datepicker && i.datepicker.opened)("mat-accent", i.datepicker && "accent" === i.datepicker.color)("mat-warn", i.datepicker && "warn" === i.datepicker.color))
                        },
                        inputs: {
                            datepicker: ["for", "datepicker"],
                            tabIndex: "tabIndex",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            disabled: "disabled",
                            disableRipple: "disableRipple"
                        },
                        exportAs: ["matDatepickerToggle"],
                        features: [ze],
                        ngContentSelectors: Eae,
                        decls: 4,
                        vars: 6,
                        consts: [
                            ["mat-icon-button", "", "type", "button", 3, "disabled", "disableRipple"],
                            ["button", ""],
                            ["class", "mat-datepicker-toggle-default-icon", "viewBox", "0 0 24 24", "width", "24px", "height", "24px", "fill", "currentColor", "focusable", "false", 4, "ngIf"],
                            ["viewBox", "0 0 24 24", "width", "24px", "height", "24px", "fill", "currentColor", "focusable", "false", 1, "mat-datepicker-toggle-default-icon"],
                            ["d", "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"]
                        ],
                        template: function(e, i) {
                            1 & e && (Xe(Aae), f(0, "button", 0, 1), b(2, kae, 2, 0, "svg", 2), me(3), g()), 2 & e && (y("disabled", i.disabled)("disableRipple", i.disableRipple), q("aria-haspopup", i.datepicker ? "dialog" : null)("aria-label", i.ariaLabel || i._intl.openCalendarLabel)("tabindex", i.disabled ? -1 : i.tabIndex), p(2), y("ngIf", !i._customIcon))
                        },
                        dependencies: [at, Xt],
                        styles: [".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                nC = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        providers: [Cu, $ae],
                        imports: [ut, Cs, to, Fd, $r, de, vs]
                    }), t
                })(),
                dle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [qf, ki, de, Yf, ut, qf, de, Yf, cR]
                    }), t
                })();
            const ule = ["input"],
                hle = function(t) {
                    return {
                        enterDuration: t
                    }
                },
                fle = ["*"],
                ple = new R("mat-radio-default-options", {
                    providedIn: "root",
                    factory: function mle() {
                        return {
                            color: "accent"
                        }
                    }
                });
            let nP = 0;
            const gle = {
                provide: hn,
                useExisting: Ve(() => iC),
                multi: !0
            };
            class iP {
                constructor(n, e) {
                    this.source = n, this.value = e
                }
            }
            const rP = new R("MatRadioGroup");
            let _le = (() => {
                    class t {
                        constructor(e) {
                            this._changeDetector = e, this._value = null, this._name = "mat-radio-group-" + nP++, this._selected = null, this._isInitialized = !1, this._labelPosition = "after", this._disabled = !1, this._required = !1, this._controlValueAccessorChangeFn = () => {}, this.onTouched = () => {}, this.change = new V
                        }
                        get name() {
                            return this._name
                        }
                        set name(e) {
                            this._name = e, this._updateRadioButtonNames()
                        }
                        get labelPosition() {
                            return this._labelPosition
                        }
                        set labelPosition(e) {
                            this._labelPosition = "before" === e ? "before" : "after", this._markRadiosForCheck()
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._value !== e && (this._value = e, this._updateSelectedRadioFromValue(), this._checkSelectedRadioButton())
                        }
                        _checkSelectedRadioButton() {
                            this._selected && !this._selected.checked && (this._selected.checked = !0)
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e, this.value = e ? e.value : null, this._checkSelectedRadioButton()
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = G(e), this._markRadiosForCheck()
                        }
                        get required() {
                            return this._required
                        }
                        set required(e) {
                            this._required = G(e), this._markRadiosForCheck()
                        }
                        ngAfterContentInit() {
                            this._isInitialized = !0
                        }
                        _touch() {
                            this.onTouched && this.onTouched()
                        }
                        _updateRadioButtonNames() {
                            this._radios && this._radios.forEach(e => {
                                e.name = this.name, e._markForCheck()
                            })
                        }
                        _updateSelectedRadioFromValue() {
                            this._radios && (null === this._selected || this._selected.value !== this._value) && (this._selected = null, this._radios.forEach(i => {
                                i.checked = this.value === i.value, i.checked && (this._selected = i)
                            }))
                        }
                        _emitChangeEvent() {
                            this._isInitialized && this.change.emit(new iP(this._selected, this._value))
                        }
                        _markRadiosForCheck() {
                            this._radios && this._radios.forEach(e => e._markForCheck())
                        }
                        writeValue(e) {
                            this.value = e, this._changeDetector.markForCheck()
                        }
                        registerOnChange(e) {
                            this._controlValueAccessorChangeFn = e
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        setDisabledState(e) {
                            this.disabled = e, this._changeDetector.markForCheck()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(ge))
                    }, t.\u0275dir = M({
                        type: t,
                        inputs: {
                            color: "color",
                            name: "name",
                            labelPosition: "labelPosition",
                            value: "value",
                            selected: "selected",
                            disabled: "disabled",
                            required: "required"
                        },
                        outputs: {
                            change: "change"
                        }
                    }), t
                })(),
                iC = (() => {
                    class t extends _le {}
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        selectors: [
                            ["mat-radio-group"]
                        ],
                        contentQueries: function(e, i, r) {
                            if (1 & e && _e(r, sP, 5), 2 & e) {
                                let s;
                                O(s = P()) && (i._radios = s)
                            }
                        },
                        hostAttrs: ["role", "radiogroup", 1, "mat-radio-group"],
                        exportAs: ["matRadioGroup"],
                        features: [Q([gle, {
                            provide: rP,
                            useExisting: t
                        }]), A]
                    }), t
                })();
            class yle {
                constructor(n) {
                    this._elementRef = n
                }
            }
            const ble = br(no(yle));
            let vle = (() => {
                    class t extends ble {
                        constructor(e, i, r, s, o, a, l, c) {
                            super(i), this._changeDetector = r, this._focusMonitor = s, this._radioDispatcher = o, this._providerOverride = l, this._uniqueId = "mat-radio-" + ++nP, this.id = this._uniqueId, this.change = new V, this._checked = !1, this._value = null, this._removeUniqueSelectionListener = () => {}, this.radioGroup = e, this._noopAnimations = "NoopAnimations" === a, c && (this.tabIndex = ht(c, 0)), this._removeUniqueSelectionListener = o.listen((d, h) => {
                                d !== this.id && h === this.name && (this.checked = !1)
                            })
                        }
                        get checked() {
                            return this._checked
                        }
                        set checked(e) {
                            const i = G(e);
                            this._checked !== i && (this._checked = i, i && this.radioGroup && this.radioGroup.value !== this.value ? this.radioGroup.selected = this : !i && this.radioGroup && this.radioGroup.value === this.value && (this.radioGroup.selected = null), i && this._radioDispatcher.notify(this.id, this.name), this._changeDetector.markForCheck())
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._value !== e && (this._value = e, null !== this.radioGroup && (this.checked || (this.checked = this.radioGroup.value === e), this.checked && (this.radioGroup.selected = this)))
                        }
                        get labelPosition() {
                            return this._labelPosition || this.radioGroup && this.radioGroup.labelPosition || "after"
                        }
                        set labelPosition(e) {
                            this._labelPosition = e
                        }
                        get disabled() {
                            return this._disabled || null !== this.radioGroup && this.radioGroup.disabled
                        }
                        set disabled(e) {
                            this._setDisabled(G(e))
                        }
                        get required() {
                            return this._required || this.radioGroup && this.radioGroup.required
                        }
                        set required(e) {
                            this._required = G(e)
                        }
                        get color() {
                            return this._color || this.radioGroup && this.radioGroup.color || this._providerOverride && this._providerOverride.color || "accent"
                        }
                        set color(e) {
                            this._color = e
                        }
                        get inputId() {
                            return `${this.id||this._uniqueId}-input`
                        }
                        focus(e, i) {
                            i ? this._focusMonitor.focusVia(this._inputElement, i, e) : this._inputElement.nativeElement.focus(e)
                        }
                        _markForCheck() {
                            this._changeDetector.markForCheck()
                        }
                        ngOnInit() {
                            this.radioGroup && (this.checked = this.radioGroup.value === this._value, this.checked && (this.radioGroup.selected = this), this.name = this.radioGroup.name)
                        }
                        ngDoCheck() {
                            this._updateTabIndex()
                        }
                        ngAfterViewInit() {
                            this._updateTabIndex(), this._focusMonitor.monitor(this._elementRef, !0).subscribe(e => {
                                !e && this.radioGroup && this.radioGroup._touch()
                            })
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef), this._removeUniqueSelectionListener()
                        }
                        _emitChangeEvent() {
                            this.change.emit(new iP(this, this._value))
                        }
                        _isRippleDisabled() {
                            return this.disableRipple || this.disabled
                        }
                        _onInputClick(e) {
                            e.stopPropagation()
                        }
                        _onInputInteraction(e) {
                            if (e.stopPropagation(), !this.checked && !this.disabled) {
                                const i = this.radioGroup && this.value !== this.radioGroup.value;
                                this.checked = !0, this._emitChangeEvent(), this.radioGroup && (this.radioGroup._controlValueAccessorChangeFn(this.value), i && this.radioGroup._emitChangeEvent())
                            }
                        }
                        _setDisabled(e) {
                            this._disabled !== e && (this._disabled = e, this._changeDetector.markForCheck())
                        }
                        _updateTabIndex() {
                            const e = this.radioGroup;
                            let i;
                            if (i = e && e.selected && !this.disabled ? e.selected === this ? this.tabIndex : -1 : this.tabIndex, i !== this._previousTabIndex) {
                                const r = this._inputElement ? .nativeElement;
                                r && (r.setAttribute("tabindex", i + ""), this._previousTabIndex = i)
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        dr()
                    }, t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && J(ule, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i._inputElement = r.first)
                            }
                        },
                        inputs: {
                            id: "id",
                            name: "name",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
                            checked: "checked",
                            value: "value",
                            labelPosition: "labelPosition",
                            disabled: "disabled",
                            required: "required",
                            color: "color"
                        },
                        outputs: {
                            change: "change"
                        },
                        features: [A]
                    }), t
                })(),
                sP = (() => {
                    class t extends vle {
                        constructor(e, i, r, s, o, a, l, c) {
                            super(e, i, r, s, o, a, l, c)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(rP, 8), u(N), u(ge), u(dn), u(Wv), u(Tt, 8), u(ple, 8), Qt("tabindex"))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["mat-radio-button"]
                        ],
                        hostAttrs: [1, "mat-radio-button"],
                        hostVars: 17,
                        hostBindings: function(e, i) {
                            1 & e && T("focus", function() {
                                return i._inputElement.nativeElement.focus()
                            }), 2 & e && (q("tabindex", null)("id", i.id)("aria-label", null)("aria-labelledby", null)("aria-describedby", null), re("mat-radio-checked", i.checked)("mat-radio-disabled", i.disabled)("_mat-animation-noopable", i._noopAnimations)("mat-primary", "primary" === i.color)("mat-accent", "accent" === i.color)("mat-warn", "warn" === i.color))
                        },
                        inputs: {
                            disableRipple: "disableRipple",
                            tabIndex: "tabIndex"
                        },
                        exportAs: ["matRadioButton"],
                        features: [A],
                        ngContentSelectors: fle,
                        decls: 13,
                        vars: 19,
                        consts: [
                            [1, "mat-radio-label"],
                            ["label", ""],
                            [1, "mat-radio-container"],
                            [1, "mat-radio-outer-circle"],
                            [1, "mat-radio-inner-circle"],
                            ["type", "radio", 1, "mat-radio-input", 3, "id", "checked", "disabled", "required", "change", "click"],
                            ["input", ""],
                            ["mat-ripple", "", 1, "mat-radio-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleCentered", "matRippleRadius", "matRippleAnimation"],
                            [1, "mat-ripple-element", "mat-radio-persistent-ripple"],
                            [1, "mat-radio-label-content"],
                            [2, "display", "none"]
                        ],
                        template: function(e, i) {
                            if (1 & e && (Xe(), f(0, "label", 0, 1)(2, "span", 2), E(3, "span", 3)(4, "span", 4), f(5, "input", 5, 6), T("change", function(s) {
                                    return i._onInputInteraction(s)
                                })("click", function(s) {
                                    return i._onInputClick(s)
                                }), g(), f(7, "span", 7), E(8, "span", 8), g()(), f(9, "span", 9)(10, "span", 10), w(11, "\xa0"), g(), me(12), g()()), 2 & e) {
                                const r = bt(1);
                                q("for", i.inputId), p(5), y("id", i.inputId)("checked", i.checked)("disabled", i.disabled)("required", i.required), q("name", i.name)("value", i.value)("aria-label", i.ariaLabel)("aria-labelledby", i.ariaLabelledby)("aria-describedby", i.ariaDescribedby), p(2), y("matRippleTrigger", r)("matRippleDisabled", i._isRippleDisabled())("matRippleCentered", !0)("matRippleRadius", 20)("matRippleAnimation", gn(17, hle, i._noopAnimations ? 0 : 150)), p(2), re("mat-radio-label-before", "before" == i.labelPosition)
                            }
                        },
                        dependencies: [li],
                        styles: ['.mat-radio-button{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.mat-radio-input:focus~.mat-focus-indicator::before{content:""}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                oP = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ki, de, de]
                    }), t
                })(),
                Cle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, de, vs, vs, de]
                    }), t
                })(),
                Fle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, de, de]
                    }), t
                })(),
                cP = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })(),
                Wle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [cP, ki, de, Id, cP, de]
                    }), t
                })(),
                Zle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })(),
                sce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [Zle, de, de]
                    }), t
                })(),
                dP = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [de, de]
                    }), t
                })();
            const oce = ["matPrefix"],
                ace = ["matSuffix"],
                lce = ["fieldComponent"];

            function cce(t, n) {
                1 & t && (f(0, "span", 8), w(1, "*"), g())
            }

            function dce(t, n) {
                if (1 & t && (f(0, "mat-label"), w(1), b(2, cce, 2, 0, "span", 7), g()), 2 & t) {
                    const e = x();
                    p(1), X(" ", e.to.label, " "), p(1), y("ngIf", e.to.required && !0 !== e.to.hideRequiredMarker)
                }
            }

            function uce(t, n) {
                1 & t && Wt(0)
            }

            function hce(t, n) {
                if (1 & t && (oe(0, 9), b(1, uce, 1, 0, "ng-container", 10), ae()), 2 & t) {
                    const e = x();
                    p(1), y("ngTemplateOutlet", e.to.prefix ? e.to.prefix : e.to._matPrefix)
                }
            }

            function fce(t, n) {
                1 & t && Wt(0)
            }

            function pce(t, n) {
                if (1 & t && (oe(0, 11), b(1, fce, 1, 0, "ng-container", 10), ae()), 2 & t) {
                    const e = x();
                    p(1), y("ngTemplateOutlet", e.to.suffix ? e.to.suffix : e.to._matSuffix)
                }
            }

            function mce(t, n) {
                if (1 & t && (f(0, "mat-hint", 12), w(1), g()), 2 & t) {
                    const e = x();
                    y("id", null), p(1), ve(e.to.description)
                }
            }
            class gce {
                constructor(n) {
                    this.field = n
                }
                isErrorState(n, e) {
                    return this.field && this.field.showError
                }
            }
            let Mo = (() => {
                    class t extends gu {
                        constructor() {
                            super(...arguments), this.errorStateMatcher = new gce(this), this.stateChanges = new H, this._errorState = !1
                        }
                        get formFieldControl() {
                            return this._control || this
                        }
                        set formFieldControl(e) {
                            this._control = e, this.formField && e !== this.formField._control && (this.formField._control = e)
                        }
                        ngOnInit() {
                            this.formField && (this.formField._control = this.formFieldControl)
                        }
                        ngAfterViewInit() {
                            (this.matPrefix || this.matSuffix) && setTimeout(() => {
                                sn(this.to, "_matPrefix", this.matPrefix), sn(this.to, "_matSuffix", this.matSuffix), this.options._markForCheck(this.field)
                            })
                        }
                        ngOnDestroy() {
                            this.formField && delete this.formField._control, this.stateChanges.complete()
                        }
                        setDescribedByIds(e) {}
                        onContainerClick(e) {
                            this.field.focus = !0, this.stateChanges.next()
                        }
                        get errorState() {
                            const e = this.options.showError(this);
                            return e !== this._errorState && (this._errorState = e, this.stateChanges.next()), e
                        }
                        get controlType() {
                            return this.to.type ? this.to.type : this.field.type instanceof Xu ? this.field.type.constructor.name : this.field.type
                        }
                        get focused() {
                            return !!this.field.focus && !this.disabled
                        }
                        get disabled() {
                            return !!this.to.disabled
                        }
                        get required() {
                            return !!this.to.required
                        }
                        get placeholder() {
                            return this.to.placeholder || ""
                        }
                        get shouldPlaceholderFloat() {
                            return this.shouldLabelFloat
                        }
                        get value() {
                            return this.formControl.value
                        }
                        set value(e) {
                            this.formControl.patchValue(e)
                        }
                        get ngControl() {
                            return this.formControl
                        }
                        get empty() {
                            return null == this.value || "" === this.value
                        }
                        get shouldLabelFloat() {
                            return this.focused || !this.empty
                        }
                        get formField() {
                            return this.field ? this.field.__formField__ : null
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275dir = M({
                        type: t,
                        viewQuery: function(e, i) {
                            if (1 & e && (J(oce, 5), J(ace, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i.matPrefix = r.first), O(r = P()) && (i.matSuffix = r.first)
                            }
                        },
                        features: [A]
                    }), t
                })(),
                _ce = (() => {
                    class t extends ste {
                        constructor(e, i, r, s) {
                            super(), this.config = e, this.renderer = i, this.elementRef = r, this.focusMonitor = s, this.stateChanges = new H, this._errorState = !1, this.initialGapCalculated = !1
                        }
                        ngOnInit() {
                            this.formField._control = this, sn(this.field, "__formField__", this.formField);
                            const e = this.config.resolveFieldTypeRef(this.formlyField);
                            e && !(e.instance instanceof Mo) && console.warn(`Component '${e.componentType.name}' must extend 'FieldType' from '@ngx-formly/material/form-field'.`), this.formlyField.hide && "outline" === this.formlyField.templateOptions.appearance && (this.initialGapCalculated = !0), this.focusMonitor.monitor(this.elementRef, !0).subscribe(i => {
                                !i && this.field.focus && (this.field.focus = !1), this.stateChanges.next()
                            })
                        }
                        ngAfterContentChecked() {
                            !this.initialGapCalculated || this.formlyField.hide || (this.formField.updateOutlineGap(), this.initialGapCalculated = !0)
                        }
                        ngAfterViewInit() {
                            if ("outline" !== this.formField.appearance && !0 === this.to.hideFieldUnderline) {
                                const e = this.formField._elementRef.nativeElement.querySelector(".mat-form-field-underline");
                                e && this.renderer.removeChild(e.parentNode, e)
                            }
                        }
                        ngOnDestroy() {
                            delete this.formlyField.__formField__, this.stateChanges.complete(), this.focusMonitor.stopMonitoring(this.elementRef)
                        }
                        setDescribedByIds(e) {}
                        onContainerClick(e) {
                            this.formlyField.focus = !0, this.stateChanges.next()
                        }
                        get errorState() {
                            const e = this.options.showError(this);
                            return e !== this._errorState && (this._errorState = e, this.stateChanges.next()), e
                        }
                        get controlType() {
                            return this.to.type
                        }
                        get focused() {
                            return !!this.formlyField.focus && !this.disabled
                        }
                        get disabled() {
                            return !!this.to.disabled
                        }
                        get required() {
                            return !!this.to.required
                        }
                        get placeholder() {
                            return this.to.placeholder || ""
                        }
                        get shouldPlaceholderFloat() {
                            return this.shouldLabelFloat
                        }
                        get value() {
                            return this.formControl.value
                        }
                        get ngControl() {
                            return this.formControl
                        }
                        get empty() {
                            return !this.formControl.value
                        }
                        get shouldLabelFloat() {
                            return this.focused || !this.empty
                        }
                        get formlyField() {
                            return this.field
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(pn), u(qn), u(N), u(dn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-wrapper-mat-form-field"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && (J(lce, 7, Je), J(ci, 7)), 2 & e) {
                                let r;
                                O(r = P()) && (i.fieldComponent = r.first), O(r = P()) && (i.formField = r.first)
                            }
                        },
                        features: [Q([{
                            provide: Vl,
                            useExisting: t
                        }]), A],
                        decls: 9,
                        vars: 9,
                        consts: [
                            [3, "hideRequiredMarker", "floatLabel", "appearance", "color"],
                            ["fieldComponent", ""],
                            [4, "ngIf"],
                            ["matPrefix", "", 4, "ngIf"],
                            ["matSuffix", "", 4, "ngIf"],
                            [3, "field"],
                            [3, "id", 4, "ngIf"],
                            ["aria-hidden", "true", "class", "mat-form-field-required-marker", 4, "ngIf"],
                            ["aria-hidden", "true", 1, "mat-form-field-required-marker"],
                            ["matPrefix", ""],
                            [4, "ngTemplateOutlet"],
                            ["matSuffix", ""],
                            [3, "id"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "mat-form-field", 0), Wt(1, null, 1), b(3, dce, 3, 2, "mat-label", 2), b(4, hce, 2, 1, "ng-container", 3), b(5, pce, 2, 1, "ng-container", 4), f(6, "mat-error"), E(7, "formly-validation-message", 5), g(), b(8, mce, 2, 2, "mat-hint", 6), g()), 2 & e && (y("hideRequiredMarker", !0)("floatLabel", i.to.floatLabel)("appearance", i.to.appearance)("color", i.to.color), p(3), y("ngIf", i.to.label && !0 !== i.to.hideLabel), p(1), y("ngIf", i.to.prefix || i.to._matPrefix), p(1), y("ngIf", i.to.suffix || i.to._matSuffix), p(2), y("field", i.field), p(1), y("ngIf", i.to.description))
                        },
                        dependencies: [at, cd, ep, ci, R6, aa, O6, P6, ate],
                        styles: ["formly-wrapper-mat-form-field .mat-form-field{width:100%}"],
                        encapsulation: 2
                    }), t
                })(),
                So = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, $d, Is.forChild({
                            wrappers: [{
                                name: "form-field",
                                component: _ce
                            }]
                        })]
                    }), t
                })();

            function yce(t, n) {
                if (1 & t && E(0, "input", 2), 2 & t) {
                    const e = x();
                    y("id", e.id)("type", e.type || "text")("readonly", e.to.readonly)("required", e.to.required)("errorStateMatcher", e.errorStateMatcher)("formControl", e.formControl)("formlyAttributes", e.field)("tabindex", e.to.tabindex)("placeholder", e.to.placeholder)
                }
            }

            function bce(t, n) {
                if (1 & t && E(0, "input", 3), 2 & t) {
                    const e = x();
                    y("id", e.id)("readonly", e.to.readonly)("required", e.to.required)("errorStateMatcher", e.errorStateMatcher)("formControl", e.formControl)("formlyAttributes", e.field)("tabIndex", e.to.tabindex)("placeholder", e.to.placeholder)
                }
            }
            let vce = (() => {
                    class t extends Mo {
                        get type() {
                            return this.to.type || "text"
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-input"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Nn, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.formFieldControl = r.first)
                            }
                        },
                        features: [A],
                        decls: 3,
                        vars: 2,
                        consts: [
                            ["matInput", "", 3, "id", "type", "readonly", "required", "errorStateMatcher", "formControl", "formlyAttributes", "tabindex", "placeholder", 4, "ngIf", "ngIfElse"],
                            ["numberTmp", ""],
                            ["matInput", "", 3, "id", "type", "readonly", "required", "errorStateMatcher", "formControl", "formlyAttributes", "tabindex", "placeholder"],
                            ["matInput", "", "type", "number", 3, "id", "readonly", "required", "errorStateMatcher", "formControl", "formlyAttributes", "tabIndex", "placeholder"]
                        ],
                        template: function(e, i) {
                            if (1 & e && (b(0, yce, 1, 9, "input", 0), b(1, bce, 1, 8, "ng-template", null, 1, Ui)), 2 & e) {
                                const r = bt(2);
                                y("ngIf", "number" !== i.type)("ngIfElse", r)
                            }
                        },
                        dependencies: [at, di, dp, Xn, zr, xs, Nn, va],
                        encapsulation: 2
                    }), t
                })(),
                wce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, fp, So, Is.forChild({
                            types: [{
                                name: "input",
                                component: vce,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })(),
                Cce = (() => {
                    class t extends Mo {
                        constructor() {
                            super(...arguments), this.defaultOptions = {
                                templateOptions: {
                                    cols: 1,
                                    rows: 1
                                }
                            }
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-textarea"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Nn, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i.formFieldControl = r.first)
                            }
                        },
                        features: [Q([{
                            provide: hv,
                            useExisting: t
                        }]), A],
                        decls: 2,
                        vars: 15,
                        consts: [
                            ["matInput", "", 3, "id", "readonly", "required", "formControl", "errorStateMatcher", "cols", "rows", "formlyAttributes", "placeholder", "tabindex", "cdkTextareaAutosize", "cdkAutosizeMinRows", "cdkAutosizeMaxRows"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "textarea", 0), w(1, "    "), g()), 2 & e && (re("cdk-textarea-autosize", i.to.autosize), y("id", i.id)("readonly", i.to.readonly)("required", i.to.required)("formControl", i.formControl)("errorStateMatcher", i.errorStateMatcher)("cols", i.to.cols)("rows", i.to.rows)("formlyAttributes", i.field)("placeholder", i.to.placeholder)("tabindex", i.to.tabindex)("cdkTextareaAutosize", i.to.autosize)("cdkAutosizeMinRows", i.to.autosizeMinRows)("cdkAutosizeMaxRows", i.to.autosizeMaxRows))
                        },
                        dependencies: [di, Xn, zr, xs, F1, Nn, va],
                        encapsulation: 2
                    }), t
                })(),
                xce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, fp, So, Is.forChild({
                            types: [{
                                name: "textarea",
                                component: Cce,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })(),
                cC = (() => {
                    class t {
                        transform(e, i) {
                            return e instanceof Ze || (e = z(e)), e.pipe(Z(r => this.toOptions(r, i || {})))
                        }
                        toOptions(e, i) {
                            const r = [],
                                s = {},
                                o = i.templateOptions || {};
                            return o._flatOptions = !0, e.map(a => {
                                this.getGroupProp(a, o) ? (o._flatOptions = !1, s[this.getGroupProp(a, o)] || (s[this.getGroupProp(a, o)] = [], r.push({
                                    label: this.getGroupProp(a, o),
                                    group: s[this.getGroupProp(a, o)]
                                })), s[this.getGroupProp(a, o)].push(this.toOption(a, o))) : r.push(this.toOption(a, o))
                            }), r
                        }
                        toOption(e, i) {
                            return {
                                label: this.getLabelProp(e, i),
                                value: this.getValueProp(e, i),
                                disabled: this.getDisabledProp(e, i) || !1
                            }
                        }
                        getLabelProp(e, i) {
                            return "function" == typeof i.labelProp ? i.labelProp(e) : this.shouldUseLegacyOption(e, i) ? (console.warn("NgxFormly: legacy select option '{key, value}' is deprecated since v5.5, use '{value, label}' instead."), e.value) : e[i.labelProp || "label"]
                        }
                        getValueProp(e, i) {
                            return "function" == typeof i.valueProp ? i.valueProp(e) : this.shouldUseLegacyOption(e, i) ? e.key : e[i.valueProp || "value"]
                        }
                        getDisabledProp(e, i) {
                            return "function" == typeof i.disabledProp ? i.disabledProp(e) : e[i.disabledProp || "disabled"]
                        }
                        getGroupProp(e, i) {
                            return "function" == typeof i.groupProp ? i.groupProp(e) : e[i.groupProp || "group"]
                        }
                        shouldUseLegacyOption(e, i) {
                            return !i.valueProp && !i.labelProp && null != e && "object" == typeof e && "key" in e && "value" in e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275pipe = Cn({
                        name: "formlySelectOptions",
                        type: t,
                        pure: !0
                    }), t
                })(),
                dC = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({}), t
                })();

            function Dce(t, n) {
                if (1 & t && (f(0, "mat-radio-button", 2), w(1), g()), 2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x();
                    y("id", r.id + "_" + i)("color", r.to.color)("labelPosition", r.to.labelPosition)("disabled", e.disabled)("value", e.value), p(1), X(" ", e.label, " ")
                }
            }
            let Mce = (() => {
                    class t extends Mo {
                        constructor() {
                            super(...arguments), this.defaultOptions = {
                                templateOptions: {
                                    hideFieldUnderline: !0,
                                    floatLabel: "always",
                                    options: [],
                                    tabindex: -1
                                }
                            }
                        }
                        ngAfterViewInit() {
                            this.focusObserver = Sr(this.field, "focus", ({
                                currentValue: e
                            }) => {
                                -1 === this.to.tabindex && e && this.radioGroup._radios.length > 0 && setTimeout(() => {
                                    (this.radioGroup.selected ? this.radioGroup.selected : this.radioGroup._radios.first)._elementRef.nativeElement.focus({
                                        preventScroll: !0
                                    })
                                })
                            })
                        }
                        onContainerClick() {}
                        ngOnDestroy() {
                            this.focusObserver && this.focusObserver()
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-radio"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(iC, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i.radioGroup = r.first)
                            }
                        },
                        features: [A],
                        decls: 4,
                        vars: 10,
                        consts: [
                            [3, "formControl", "formlyAttributes", "required", "tabindex"],
                            [3, "id", "color", "labelPosition", "disabled", "value", 4, "ngFor", "ngForOf"],
                            [3, "id", "color", "labelPosition", "disabled", "value"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "mat-radio-group", 0), b(1, Dce, 2, 6, "mat-radio-button", 1), ue(2, "async"), ue(3, "formlySelectOptions"), g()), 2 & e && (y("formControl", i.formControl)("formlyAttributes", i.field)("required", i.to.required)("tabindex", i.to.tabindex), p(1), y("ngForOf", De(2, 5, ul(3, 7, i.to.options, i.field))))
                        },
                        dependencies: [Dn, Xn, zr, xs, iC, sP, va, Kn, cC],
                        encapsulation: 2
                    }), t
                })(),
                Sce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, oP, So, dC, Is.forChild({
                            types: [{
                                name: "radio",
                                component: Mce,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })();

            function kce(t, n) {
                1 & t && (f(0, "span", 2), w(1, "*"), g())
            }
            let Ace = (() => {
                    class t extends Mo {
                        constructor(e, i) {
                            super(), this.renderer = e, this.focusMonitor = i, this.defaultOptions = {
                                templateOptions: {
                                    hideFieldUnderline: !0,
                                    indeterminate: !0,
                                    floatLabel: "always",
                                    hideLabel: !0,
                                    align: "start",
                                    color: "accent"
                                }
                            }
                        }
                        onContainerClick(e) {
                            this.checkbox.focus(), super.onContainerClick(e)
                        }
                        ngAfterViewInit() {
                            this.checkbox && this.focusMonitor.monitor(this.checkbox._inputElement, !0).subscribe(e => {
                                e ? this.to.focus && this.to.focus(this.field) : this.to.blur && this.to.blur(this.field)
                            })
                        }
                        ngAfterViewChecked() {
                            if (this.required !== this._required && this.checkbox && this.checkbox._inputElement) {
                                this._required = this.required;
                                const e = this.checkbox._inputElement.nativeElement;
                                this.required ? this.renderer.setAttribute(e, "required", "required") : this.renderer.removeAttribute(e, "required")
                            }
                        }
                        ngOnDestroy() {
                            this.checkbox && this.focusMonitor.stopMonitoring(this.checkbox._inputElement)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(qn), u(dn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-checkbox"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Wr, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i.checkbox = r.first)
                            }
                        },
                        features: [A],
                        decls: 3,
                        vars: 9,
                        consts: [
                            [3, "formControl", "id", "formlyAttributes", "tabIndex", "indeterminate", "color", "labelPosition"],
                            ["aria-hidden", "true", "class", "mat-form-field-required-marker", 4, "ngIf"],
                            ["aria-hidden", "true", 1, "mat-form-field-required-marker"]
                        ],
                        template: function(e, i) {
                            1 & e && (f(0, "mat-checkbox", 0), w(1), b(2, kce, 2, 0, "span", 1), g()), 2 & e && (y("formControl", i.formControl)("id", i.id)("formlyAttributes", i.field)("tabIndex", i.to.tabindex)("indeterminate", i.to.indeterminate && null === i.formControl.value)("color", i.to.color)("labelPosition", i.to.align || i.to.labelPosition), p(1), X(" ", i.to.label, " "), p(1), y("ngIf", i.to.required && !0 !== i.to.hideRequiredMarker))
                        },
                        dependencies: [at, Xn, xs, Wr, va],
                        encapsulation: 2
                    }), t
                })(),
                Ece = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, Zp, So, Is.forChild({
                            types: [{
                                name: "checkbox",
                                component: Ace,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })();

            function Tce(t, n) {
                if (1 & t) {
                    const e = ye();
                    oe(0), f(1, "mat-checkbox", 1), T("change", function(r) {
                        const o = ne(e).$implicit;
                        return ie(x().onChange(o.value, r.checked))
                    }), w(2), g(), ae()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = n.index,
                        r = x();
                    p(1), y("id", r.id + "_" + i)("formlyAttributes", r.field)("tabIndex", r.to.tabindex)("color", r.to.color)("labelPosition", r.to.labelPosition)("checked", r.isChecked(e))("disabled", r.formControl.disabled || e.disabled), p(1), X(" ", e.label, " ")
                }
            }
            let Ice = (() => {
                    class t extends Mo {
                        constructor() {
                            super(...arguments), this.defaultOptions = {
                                templateOptions: {
                                    hideFieldUnderline: !0,
                                    floatLabel: "always",
                                    options: [],
                                    color: "accent"
                                }
                            }
                        }
                        onChange(e, i) {
                            this.formControl.patchValue("array" === this.to.type ? i ? [...this.formControl.value || [], e] : [...this.formControl.value || []].filter(r => r !== e) : Object.assign({}, this.formControl.value, {
                                [e]: i
                            })), this.formControl.markAsTouched()
                        }
                        onContainerClick() {}
                        isChecked(e) {
                            const i = this.formControl.value;
                            return i && ("array" === this.to.type ? -1 !== i.indexOf(e.value) : i[e.value])
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-multicheckbox"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(Wr, 5), 2 & e) {
                                let r;
                                O(r = P()) && (i.checkboxes = r)
                            }
                        },
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && xn("id", i.id)
                        },
                        features: [A],
                        decls: 3,
                        vars: 6,
                        consts: [
                            [4, "ngFor", "ngForOf"],
                            [3, "id", "formlyAttributes", "tabIndex", "color", "labelPosition", "checked", "disabled", "change"]
                        ],
                        template: function(e, i) {
                            1 & e && (b(0, Tce, 3, 8, "ng-container", 0), ue(1, "async"), ue(2, "formlySelectOptions")), 2 & e && y("ngForOf", De(1, 1, ul(2, 3, i.to.options, i.field)))
                        },
                        dependencies: [Dn, Wr, va, Kn, cC],
                        encapsulation: 2
                    }), t
                })(),
                Rce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, Zp, So, dC, Is.forChild({
                            types: [{
                                name: "multicheckbox",
                                component: Ice,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })();

            function Fce(t, n) {
                if (1 & t) {
                    const e = ye();
                    f(0, "mat-option", 3), T("click", function() {
                        const s = ne(e).selectOptions;
                        return ie(x().toggleSelectAll(s))
                    }), E(1, "mat-pseudo-checkbox", 4), w(2), g()
                }
                if (2 & t) {
                    const e = n.selectOptions,
                        i = x();
                    p(1), y("state", i.getSelectAllState(e)), p(1), X(" ", i.to.selectAllOption, " ")
                }
            }
            const Oce = function(t) {
                return {
                    selectOptions: t
                }
            };

            function Pce(t, n) {
                if (1 & t && Wt(0, 7), 2 & t) {
                    const e = x().ngIf;
                    x(), y("ngTemplateOutlet", bt(1))("ngTemplateOutletContext", gn(2, Oce, e))
                }
            }

            function Lce(t, n) {
                if (1 & t && (f(0, "mat-option", 12), w(1), g()), 2 & t) {
                    const e = n.$implicit;
                    y("value", e.value)("disabled", e.disabled), p(1), X(" ", e.label, " ")
                }
            }

            function Nce(t, n) {
                if (1 & t && (f(0, "mat-optgroup", 10), b(1, Lce, 2, 3, "mat-option", 11), g()), 2 & t) {
                    const e = x().$implicit;
                    y("label", e.label), p(1), y("ngForOf", e.group)
                }
            }

            function Bce(t, n) {
                if (1 & t && (f(0, "mat-option", 12), w(1), g()), 2 & t) {
                    const e = x().$implicit;
                    y("value", e.value)("disabled", e.disabled), p(1), ve(e.label)
                }
            }

            function Vce(t, n) {
                if (1 & t && (oe(0), b(1, Nce, 2, 2, "mat-optgroup", 8), b(2, Bce, 2, 3, "mat-option", 9), ae()), 2 & t) {
                    const e = n.$implicit;
                    p(1), y("ngIf", e.group), p(1), y("ngIf", !e.group)
                }
            }

            function Hce(t, n) {
                if (1 & t && (oe(0), b(1, Pce, 1, 4, "ng-container", 5), b(2, Vce, 3, 2, "ng-container", 6), ae()), 2 & t) {
                    const e = n.ngIf,
                        i = x();
                    p(1), y("ngIf", i.to.multiple && i.to.selectAllOption), p(1), y("ngForOf", e)
                }
            }
            let $ce = (() => {
                    class t extends Mo {
                        constructor() {
                            super(...arguments), this.defaultOptions = {
                                templateOptions: {
                                    options: [],
                                    compareWith: (e, i) => e === i
                                }
                            }
                        }
                        getSelectAllState(e) {
                            return this.empty || 0 === this.value.length ? "" : this.value.length !== this.getSelectAllValue(e).length ? "indeterminate" : "checked"
                        }
                        toggleSelectAll(e) {
                            const i = this.getSelectAllValue(e);
                            this.formControl.setValue(this.value && this.value.length === i.length ? [] : i), this.formControl.markAsDirty()
                        }
                        change(e) {
                            this.to.change && this.to.change(this.field, e)
                        }
                        _getAriaLabelledby() {
                            return this.to.attributes && this.to.attributes["aria-labelledby"] ? this.to.attributes["aria-labelledby"] : this.formField && this.formField._labelId ? this.formField._labelId : void 0
                        }
                        _getAriaLabel() {
                            return this.to.attributes ? this.to.attributes["aria-label"] : void 0
                        }
                        getSelectAllValue(e) {
                            if (!this.selectAllValue || e !== this.selectAllValue.options) {
                                const i = [];
                                e.forEach(r => r.group ? i.push(...r.group) : i.push(r)), this.selectAllValue = {
                                    options: e,
                                    value: i.filter(r => !r.disabled).map(r => r.value)
                                }
                            }
                            return this.selectAllValue.value
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = U(t)))(i || t)
                        }
                    }(), t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-select"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && J(fo, 7), 2 & e) {
                                let r;
                                O(r = P()) && (i.formFieldControl = r.first)
                            }
                        },
                        features: [A],
                        decls: 6,
                        vars: 18,
                        consts: [
                            ["selectAll", ""],
                            [3, "id", "formControl", "formlyAttributes", "placeholder", "tabIndex", "required", "compareWith", "multiple", "errorStateMatcher", "aria-label", "aria-labelledby", "disableOptionCentering", "selectionChange"],
                            [4, "ngIf"],
                            [3, "click"],
                            [1, "mat-option-pseudo-checkbox", 3, "state"],
                            [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"],
                            [4, "ngFor", "ngForOf"],
                            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                            [3, "label", 4, "ngIf"],
                            [3, "value", "disabled", 4, "ngIf"],
                            [3, "label"],
                            [3, "value", "disabled", 4, "ngFor", "ngForOf"],
                            [3, "value", "disabled"]
                        ],
                        template: function(e, i) {
                            1 & e && (b(0, Fce, 3, 2, "ng-template", null, 0, Ui), f(2, "mat-select", 1), T("selectionChange", function(s) {
                                return i.change(s)
                            }), b(3, Hce, 3, 2, "ng-container", 2), ue(4, "async"), ue(5, "formlySelectOptions"), g()), 2 & e && (p(2), y("id", i.id)("formControl", i.formControl)("formlyAttributes", i.field)("placeholder", i.to.placeholder)("tabIndex", i.to.tabindex)("required", i.to.required)("compareWith", i.to.compareWith)("multiple", i.to.multiple)("errorStateMatcher", i.errorStateMatcher)("aria-label", i._getAriaLabel())("aria-labelledby", i._getAriaLabelledby())("disableOptionCentering", i.to.disableOptionCentering), p(1), y("ngIf", De(4, 13, ul(5, 15, i.to.options, i.field))))
                        },
                        dependencies: [Dn, at, cd, Xn, zr, xs, fo, sa, W8, zb, va, Kn, cC],
                        encapsulation: 2
                    }), t
                })(),
                jce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, qv, Yf, So, dC, Is.forChild({
                            types: [{
                                name: "select",
                                component: $ce,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })(),
                zce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [So, wce, xce, Sce, Ece, Rce, jce]
                    }), t
                })();
            const Uce = ["datepickerToggle"];

            function Gce(t, n) {
                if (1 & t && E(0, "mat-datepicker-toggle", 4), 2 & t) {
                    const e = x(),
                        i = bt(4);
                    y("disabled", e.to.disabled)("for", i)
                }
            }
            let Wce = (() => {
                    class t extends Mo {
                        constructor(e) {
                            super(), this.config = e, this.defaultOptions = {
                                templateOptions: {
                                    datepickerOptions: {
                                        startView: "month",
                                        datepickerTogglePosition: "suffix",
                                        dateInput: () => {},
                                        dateChange: () => {},
                                        monthSelected: () => {},
                                        yearSelected: () => {}
                                    }
                                }
                            }
                        }
                        ngAfterViewInit() {
                            super.ngAfterViewInit(), this.config.getValidatorMessage("matDatepickerParse") && Sr(this.field.formControl, "errors", ({
                                currentValue: e
                            }) => {
                                if (e.required && e.matDatepickerParse) {
                                    const i = Object.keys(e).sort(r => "matDatepickerParse" === r ? -1 : 0).reduce((r, s) => Object.assign({}, r, {
                                        [s]: e[s]
                                    }), {});
                                    this.field.formControl.___$errors = i
                                }
                            }), this.datepickerInput._formField = this.formField, setTimeout(() => {
                                switch (this.to.datepickerOptions.datepickerTogglePosition) {
                                    case "suffix":
                                        this.to._matSuffix = this.datepickerToggle;
                                        break;
                                    case "prefix":
                                        this.to._matPrefix = this.datepickerToggle
                                }
                                this.options._markForCheck(this.field)
                            })
                        }
                        ngOnDestroy() {
                            this.fieldErrorsObserver && this.fieldErrorsObserver()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(u(pn))
                    }, t.\u0275cmp = j({
                        type: t,
                        selectors: [
                            ["formly-field-mat-datepicker"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && (J(Nn, 7), J(Cm, 7), J(Uce, 5)), 2 & e) {
                                let r;
                                O(r = P()) && (i.formFieldControl = r.first), O(r = P()) && (i.datepickerInput = r.first), O(r = P()) && (i.datepickerToggle = r.first)
                            }
                        },
                        features: [A],
                        decls: 5,
                        vars: 20,
                        consts: [
                            ["matInput", "", 3, "id", "errorStateMatcher", "formControl", "matDatepicker", "matDatepickerFilter", "max", "min", "formlyAttributes", "placeholder", "tabindex", "readonly", "required", "dateInput", "dateChange"],
                            ["datepickerToggle", ""],
                            [3, "color", "dateClass", "disabled", "opened", "panelClass", "startAt", "startView", "touchUi", "monthSelected", "yearSelected"],
                            ["picker", ""],
                            [3, "disabled", "for"]
                        ],
                        template: function(e, i) {
                            if (1 & e) {
                                const r = ye();
                                f(0, "input", 0), T("dateInput", function(o) {
                                    return i.to.datepickerOptions.dateInput(i.field, o)
                                })("dateChange", function(o) {
                                    return i.to.datepickerOptions.dateChange(i.field, o)
                                }), g(), b(1, Gce, 1, 2, "ng-template", null, 1, Ui), f(3, "mat-datepicker", 2, 3), T("monthSelected", function(o) {
                                    ne(r);
                                    const a = bt(4);
                                    return ie(i.to.datepickerOptions.monthSelected(i.field, o, a))
                                })("yearSelected", function(o) {
                                    ne(r);
                                    const a = bt(4);
                                    return ie(i.to.datepickerOptions.yearSelected(i.field, o, a))
                                }), g()
                            }
                            if (2 & e) {
                                const r = bt(4);
                                y("id", i.id)("errorStateMatcher", i.errorStateMatcher)("formControl", i.formControl)("matDatepicker", r)("matDatepickerFilter", i.to.datepickerOptions.filter)("max", i.to.datepickerOptions.max)("min", i.to.datepickerOptions.min)("formlyAttributes", i.field)("placeholder", i.to.placeholder)("tabindex", i.to.tabindex)("readonly", i.to.readonly)("required", i.to.required), p(3), y("color", i.to.color)("dateClass", i.to.datepickerOptions.dateClass)("disabled", i.to.datepickerOptions.disabled)("opened", i.to.datepickerOptions.opened)("panelClass", i.to.datepickerOptions.panelClass)("startAt", i.to.datepickerOptions.startAt)("startView", i.to.datepickerOptions.startView)("touchUi", i.to.datepickerOptions.touchUi)
                            }
                        },
                        dependencies: [di, Xn, zr, xs, Nn, Uae, Cm, Kae, va],
                        encapsulation: 2
                    }), t
                })(),
                qce = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [ut, Ji, fp, nC, So, Is.forChild({
                            types: [{
                                name: "datepicker",
                                component: Wce,
                                wrappers: ["form-field"]
                            }]
                        })]
                    }), t
                })(),
                Yce = (() => {
                    class t {
                        constructor(e, i) {
                            ml(i) && !e && console.warn("Warning: Flex Layout loaded on the server without FlexLayoutServerModule")
                        }
                        static withConfig(e, i = []) {
                            return {
                                ngModule: t,
                                providers: e.serverLoaded ? [{
                                    provide: xr,
                                    useValue: { ...Sv,
                                        ...e
                                    }
                                }, {
                                    provide: wp,
                                    useValue: i,
                                    multi: !0
                                }, {
                                    provide: Gl,
                                    useValue: !0
                                }] : [{
                                    provide: xr,
                                    useValue: { ...Sv,
                                        ...e
                                    }
                                }, {
                                    provide: wp,
                                    useValue: i,
                                    multi: !0
                                }]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(C(Gl), C(On))
                    }, t.\u0275mod = Y({
                        type: t
                    }), t.\u0275inj = W({
                        imports: [$I, YI, iR, $I, YI, iR]
                    }), t
                })();
            const Kr = void 0,
                Zce = {
                    provide: wp,
                    useValue: [{
                        alias: "navbar",
                        suffix: "Navbar",
                        mediaQuery: "screen and ((max-width: 959px) or (max-height: 599px))",
                        overlapping: !0,
                        priority: 1001
                    }, {
                        alias: "gt-navbar",
                        suffix: "gt-Navbar",
                        mediaQuery: "screen and ((min-width: 960px) and (min-height: 600px))",
                        overlapping: !0,
                        priority: 1001
                    }],
                    multi: !0
                };
            ! function J4(t, n, e) {
                (function M3(t, n, e) {
                    "string" != typeof n && (e = n, n = t[se.LocaleId]), n = n.toLowerCase().replace(/_/g, "-"), cl[n] = t, e && (cl[n][se.ExtraData] = e)
                })(t, n, e)
            }(["nl", [
                    ["a.m.", "p.m."], Kr, Kr
                ], Kr, [
                    ["Z", "M", "D", "W", "D", "V", "Z"],
                    ["zo", "ma", "di", "wo", "do", "vr", "za"],
                    ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
                    ["zo", "ma", "di", "wo", "do", "vr", "za"]
                ], Kr, [
                    ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    ["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."],
                    ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"]
                ], Kr, [
                    ["v.C.", "n.C."],
                    ["v.Chr.", "n.Chr."],
                    ["voor Christus", "na Christus"]
                ], 1, [6, 0],
                ["dd-MM-y", "d MMM y", "d MMMM y", "EEEE d MMMM y"],
                ["HH:mm", "HH:mm:ss", "HH:mm:ss z", "HH:mm:ss zzzz"],
                ["{1} {0}", Kr, "{1} 'om' {0}", Kr],
                [",", ".", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"],
                ["#,##0.###", "#,##0%", "\xa4\xa0#,##0.00;\xa4\xa0-#,##0.00", "#E0"], "EUR", "\u20ac", "Euro", {
                    AUD: ["AU$", "$"],
                    BYN: [Kr, "\u0440."],
                    CAD: ["C$", "$"],
                    FJD: ["FJ$", "$"],
                    JPY: ["JP\xa5", "\xa5"],
                    PHP: [Kr, "\u20b1"],
                    RUR: [Kr, "\u0440."],
                    SBD: ["SI$", "$"],
                    THB: ["\u0e3f"],
                    TWD: ["NT$"],
                    USD: ["US$", "$"],
                    XPF: [],
                    XXX: []
                }, "ltr",
                function Qce(t) {
                    const e = Math.floor(Math.abs(t)),
                        i = t.toString().replace(/^[^.]*\.?/, "").length;
                    return 1 === e && 0 === i ? 1 : 5
                }
            ], "nl-NL");
            let Xce = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = Y({
                    type: t,
                    bootstrap: [jre]
                }), t.\u0275inj = W({
                    providers: [{
                        provide: _v,
                        useClass: Xoe,
                        multi: !0
                    }, {
                        provide: Gi,
                        useValue: "nl-NL"
                    }, Zce],
                    imports: [eA, $re, Xre.register("ngsw-worker.js", {
                        enabled: true
                    }), qT, Zoe, lR, Ql, Xv, dP, Cs, UR, Yb, uR, Ql, Cs, qT, Yb, Xv, nC, c1, Zd, VO, ki, HO, Cs, ki, oae, VO, HO, Cs, fae, Lq, Zp, RX, wK, nC, Yb, cR, mre, lR, Ql, fp, dle, Xv, c1, fZ, VX, Gv, oP, ki, qv, Cle, Fle, Wle, CZ, UR, tie, dP, Zd, sce, $d, Gv, Ji, Ql, Zd, OW, R9.forRoot(), UJ, zce, Is.forRoot({
                        validators: [{
                            name: "mustMatch",
                            validation: IQ
                        }],
                        validationMessages: [{
                            name: "mustMatch",
                            message: "Wachtwoorden komen niet overeen!"
                        }, {
                            name: "required",
                            message: "Dit veld is vereist"
                        }],
                        extras: {
                            lazyRender: !0
                        }
                    }), qce, Yce, Gee.forRoot()]
                }), t
            })();
            (function U$() {
                tk = !1
            })(), f5().bootstrapModule(Xce, {
                providers: [{
                    provide: Gi,
                    useValue: "nl-NL"
                }]
            }).catch(t => console.error(t))
        }
    },
    Qe => {
        Qe(Qe.s = 259)
    }
]);